#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Синхронизация регл.сумм в учетных регистрах по данным СуммыДокументовВВалютеРегл
// Параметры:
// 	РегистраторыСумм - ДокументСсылка, Массив - одиночный ДокументСсылка или массив типов ДокументСсылка.
Процедура ОбновитьДвиженияДокументов(РегистраторыСумм) Экспорт
	
	СоставОбновления = Новый Структура();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СоставОбновления, УчетНДСУП.РегистрыУчетаНДС());
	
	// регистры партий к синхронизации регл.сумм
	СоставОбновления.Вставить("ПартииТоваровОрганизаций", РегистрыНакопления.ПартииТоваровОрганизаций.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ПартииПроизводственныхЗатрат", РегистрыНакопления.ПартииПроизводственныхЗатрат.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ПрочиеДоходы", РегистрыНакопления.ПрочиеДоходы.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ПрочиеРасходы", РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ПартииПрочихРасходов", РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей());
	// регистры себестоимости к синхронизации регл.сумм
	СоставОбновления.Вставить("СебестоимостьТоваров", РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ВыручкаИСебестоимостьПродаж", РегистрыНакопления.ВыручкаИСебестоимостьПродаж.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("Закупки", РегистрыНакопления.Закупки.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ДвиженияКонтрагентДоходыРасходы", РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы.СоздатьНаборЗаписей());
	СоставОбновления.Вставить("ДвиженияКонтрагентКонтрагент", РегистрыНакопления.ДвиженияКонтрагентКонтрагент.СоздатьНаборЗаписей());
	
	Регистраторы = ОбщегоНазначенияУТКлиентСервер.Массив(РегистраторыСумм);
	Для Каждого Ссылка Из Регистраторы Цикл
		ОбновитьДвиженияДокумента(Ссылка, СоставОбновления);
	КонецЦикла;
	
	СоставОбновления.Удалить("ПартииТоваровОрганизаций");
	СоставОбновления.Удалить("ПартииПроизводственныхЗатрат");
	СоставОбновления.Удалить("ПрочиеДоходы");
	СоставОбновления.Удалить("ПрочиеРасходы");
	СоставОбновления.Удалить("ПартииПрочихРасходов");
	СоставОбновления.Удалить("СебестоимостьТоваров");
	СоставОбновления.Удалить("ВыручкаИСебестоимостьПродаж");
	СоставОбновления.Удалить("Закупки");
	СоставОбновления.Удалить("ДвиженияКонтрагентДоходыРасходы");
	СоставОбновления.Удалить("ДвиженияКонтрагентКонтрагент");
	
	СФ = УчетНДСУП.СчетаФактурыВыданныеПоДокументамОснованиям(Регистраторы, Истина);
	Для Каждого Документ Из СФ Цикл
		Если Не Документ.РучнаяКорректировкаСуммДокумента
			И (Документ.Корректировочный Или Документ.Исправление) Тогда
			// Для корректировочных и исправлений СФ перепроводим документ,
			// при этом дополнительно перезаполняется табличная часть Товары.
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроверкаДокументов_Отключить", Истина);
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбновитьДвиженияДокумента(Документ.Ссылка, СоставОбновления);
		КонецЕсли;
	КонецЦикла;
	
	СФ = УчетНДСУП.СчетаФактурыПолученныеПоДокументамОснованиям(Регистраторы, Истина);
	Для Каждого Документ Из СФ Цикл
		Если Не Документ.РучнаяКорректировкаСуммДокумента Тогда
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроверкаДокументов_Отключить", Истина);
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбновитьДвиженияДокумента(Документ.Ссылка, СоставОбновления);
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		
		Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(Регистраторы);
		
	КонецЕсли;// Необходимо формировать упр. баланс
	
КонецПроцедуры

// Запускает распределение сумм документов валютах регламентированного и управленческого учета, если это нужно.
// Условия пересчета:
// 1. В регистре СуммыДокументовВВалютеРегл для пересчитываемого регистратора должен быть заполнен реквизит ТипРасчетов.
// 2. Сумма строк в валюте регламентированного или управленческого учета должна отличаться от суммы движений по регистрам расчетов.
// Параметры:
//		МассивДокументов - Массив - Массив документов, по которым нужно проверить и запустить пересчет сумм.
Процедура РассчитатьСуммыДокументовВВалютеРегл(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Менеджер = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = Менеджер;

	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ЭтоПроверка", Ложь);
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.УстановитьПараметр("ПоВсемДокументам", Ложь);
	
	МассивТекстовЗапроса = Новый Массив();
	// Запрос документов, по которым суммы в валютах учета не совпадают с данными взаиморасчетов.
	МассивТекстовЗапроса.Добавить(ТекстЗапросаДокументовДляПересчета());
	// Запрос документов, по которым суммы в валютах учета вообще еще не рассчитаны.
	МассивТекстовЗапроса.Добавить(ТекстЗапросаНерасчитанныхДокументов());
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	МассивРезультатов = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = МассивРезультатов.Количество();
	
	ТаблицаДокументовДляПересчета = МассивРезультатов[КоличествоРезультатов-2].Выгрузить();
	МассивДокументовСКлиентами = ТаблицаДокументовДляПересчета.Скопировать(
		Новый Структура("ТипРасчетов",Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом)).ВыгрузитьКолонку("РасчетныйДокумент");
	МассивДокументовСПоставщиками = ТаблицаДокументовДляПересчета.Скопировать(
		Новый Структура("ТипРасчетов",Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)).ВыгрузитьКолонку("РасчетныйДокумент");
		
	ТаблицаНерасчитанныхДокументов = МассивРезультатов[КоличествоРезультатов-1].Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		МассивДокументовСКлиентами,
		ТаблицаНерасчитанныхДокументов.Скопировать(
			Новый Структура("ТипРасчетов", Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом)).ВыгрузитьКолонку("Регистратор"));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		МассивДокументовСПоставщиками,
		ТаблицаНерасчитанныхДокументов.Скопировать(
			Новый Структура("ТипРасчетов", Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)).ВыгрузитьКолонку("Регистратор"));
			
	Если МассивДокументовСКлиентами.Количество() > 0 Тогда
		РассчитатьПоДаннымВзаиморасчетов("РасчетыСКлиентами", МассивДокументовСКлиентами);
	КонецЕсли;
	Если МассивДокументовСПоставщиками.Количество() > 0 Тогда
		РассчитатьПоДаннымВзаиморасчетов("РасчетыСПоставщиками", МассивДокументовСПоставщиками);
	КонецЕсли;
	
	ОбновитьДвиженияПоОборотнымРегистрам(МассивДокументовСКлиентами, МассивДокументовСПоставщиками);
	
КонецПроцедуры

// Обновление движений по регистрам "Движения Контрагент - Доходы/Расходы", 
// "Движения Денежные средства - Контрагент" по клиентам и по поставщикам" и "Активы и пассивы" 
//
// Параметры:
// 	МассивДокументов - Неопределено, Массив - Документы, по которым нужно обновить движения.
Процедура ОбновитьДвиженияПоОборотнымРегистрамНепересчитываемыхДокументов(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СуммыДокументовВВалютеРегл.Регистратор КАК РасчетныйДокумент
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|ГДЕ
	|	СуммыДокументовВВалютеРегл.Регистратор В (&МассивДокументов)
	|	И СуммыДокументовВВалютеРегл.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.ПустаяСсылка)";
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	МассивДокументовКПересчету =  Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РасчетныйДокумент");
	
	ОбновитьДвиженияПоОборотнымРегистрам(МассивДокументовКПересчету, МассивДокументовКПересчету);
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		
		Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(МассивДокументовКПересчету);
		
	КонецЕсли;// Необходимо формировать упр. баланс
	
КонецПроцедуры

// Выполняет распределение сумм документов валютах регламентированного и управленческого учета по данным взаиморасчетов.
// 
// Параметры:
// 	ТипРасчетов - Строка - Тип расчетов, по данным которых необходимо рассчитать суммы.
// 	                       Может принимать значения "РасчетыСКлиентами" или "РасчетыСПоставшиками".
// 	МассивДокументов - Неопределено, Массив - Документы, по которым нужно рассчитать суммы.
// 	                                          Если Неопределено, то расчет выполняется по всем документам.
//
Процедура РассчитатьПоДаннымВзаиморасчетов(ТипРасчетов, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|
	|ГДЕ
	|	ДанныеРегистра.ТипРасчетов = &ТипРасчетов
	|	И (ДанныеРегистра.Валюта <> &ВалютаРегламентированногоУчета 
	|		ИЛИ ДанныеРегистра.Валюта <> &ВалютаУправленческогоУчета
	|		ИЛИ ДанныеРегистра.Валюта <> ДанныеРегистра.ВалютаВзаиморасчетов)
	|	И ДанныеРегистра.Регистратор В (&МассивДокументов)
	|;
	|
	|///////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	ДанныеРегистра.СуммаБезНДС          КАК СуммаБезНДС,
	|	ДанныеРегистра.СуммаНДС             КАК СуммаНДС,
	|	ДанныеРегистра.СуммаБезНДСРегл      КАК СуммаБезНДСРегл,
	|	ДанныеРегистра.СуммаНДСРегл         КАК СуммаНДСРегл,
	|	ДанныеРегистра.БазаНДСРегл          КАК БазаНДСРегл,
	|	ДанныеРегистра.СуммаБезНДСУпр       КАК СуммаБезНДСУпр,
	|	ДанныеРегистра.СуммаНДСУпр          КАК СуммаНДСУпр,
	|	ДанныеРегистра.БазаНДСУпр           КАК БазаНДСУпр,
	|	ДанныеРегистра.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|
	|	ДанныеРегистра.Валюта                    КАК Валюта,
	|	ДанныеРегистра.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СтавкаНДС                 КАК СтавкаНДС,
	|	ДанныеРегистра.ТипРасчетов               КАК ТипРасчетов,
	|	ДанныеРегистра.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ДанныеРегистра.ПериодБазыНДС             КАК ПериодБазыНДС,
	|
	|	ВЫБОР
	|		КОГДА ДанныеРегистра.ТипРасчетов = &ТипРасчетов
	|			И (ДанныеРегистра.СуммаБезНДС + ДанныеРегистра.СуммаНДС) <> 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПересчитатьСуммы,
	|
	|	ВЫБОР КОГДА ДанныеРегистра.ТипРасчетов = &ТипРасчетов
	|		ТОГДА ДанныеРегистра.СуммаБезНДС + ДанныеРегистра.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСНДС,
	|
	|	ВЫБОР КОГДА ДанныеРегистра.ТипРасчетов = &ТипРасчетов
	|		ТОГДА ДанныеРегистра.СуммаВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзаиморасчетовДляПересчета,
	|
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаБезНДС + ДанныеРегистра.СуммаНДС < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно
	|
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДокументов КАК ТаблицаДокументов
	|	ПО
	|		ДанныеРегистра.Регистратор = ТаблицаДокументов.Регистратор
	|	
	|ИТОГИ
	|	МАКСИМУМ(Период),
	|	СУММА(СуммаСНДС),
	|	СУММА(СуммаБезНДСРегл),
	|	СУММА(СуммаНДСРегл),
	|	СУММА(СуммаБезНДСУпр),
	|	СУММА(СуммаНДСУпр),
	|	СУММА(СуммаВзаиморасчетовДляПересчета),
	|	МАКСИМУМ(ВалютаВзаиморасчетов),
	|	МАКСИМУМ(Валюта),
	|	МАКСИМУМ(ТипРасчетов),
	|	МАКСИМУМ(ПериодБазыНДС)
	|ПО
	|	ДанныеРегистра.Регистратор КАК Ссылка,
	|	ДанныеРегистра.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаБезНДС + ДанныеРегистра.СуммаНДС < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно
	|;
	|
	|///////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Регистратор КАК Регистратор
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|";
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Валюты = Новый Структура("ВалютаРегламентированногоУчета, ВалютаУправленческогоУчета, КэшКурсовВалют",
		Константы.ВалютаРегламентированногоУчета.Получить(),
		Константы.ВалютаУправленческогоУчета.Получить(),
		РаботаСКурсамиВалютУТ.ИнициализироватьКэшКурсовВалют());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Валюты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Валюты.ВалютаУправленческогоУчета);
	
	Запрос.УстановитьПараметр("ТипРасчетов", 
		?(ТипРасчетов = "РасчетыСКлиентами",
		Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом,
		Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоДокументам = МассивРезультатов[1];
	ДокументыКПересчету   = МассивРезультатов[2].Выгрузить().ВыгрузитьКолонку("Регистратор");
	ТаблицаСуммДляРаспределения = СуммыДокументовДляПострочногоРаспределения(ДокументыКПересчету);
	ТаблицаСуммДляРаспределения.Индексы.Добавить("Регистратор, АналитикаУчетаПоПартнерам, ТипРасчетов");
	
	ТаблицаСуммыДокумента = РегистрыСведений.СуммыДокументовВВалютеРегл.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаСуммыДокумента.Колонки.Добавить("СуммаСНДСРегл", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТаблицаСуммыДокумента.Колонки.Добавить("СуммаСНДСУпр", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТаблицаСуммыДокумента.Колонки.Добавить("СуммаДляБазыНДС", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	ВыборкаПоДокументу = РезультатПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		Период = НачалоДня(ВыборкаПоДокументу.Период);
		ПериодБазыНДС = ?(ЗначениеЗаполнено(ВыборкаПоДокументу.ПериодБазыНДС), ВыборкаПоДокументу.ПериодБазыНДС, Период);
		
		КурсВалютыДокумента = 
			РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыИзКэша(
				ВыборкаПоДокументу.Валюта, 
				Период, 
				Валюты.КэшКурсовВалют);
				
		КурсВалютыВзаиморасчетов = 
			РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыИзКэша(
				ВыборкаПоДокументу.ВалютаВзаиморасчетов, 
				Период,
				Валюты.КэшКурсовВалют);
				
		КурсВалютыУпр = 
			РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыИзКэша(
				Валюты.ВалютаУправленческогоУчета,
				Период,
				Валюты.КэшКурсовВалют);
		
		КурсВалютыДокументаДляБазыНДС = 
			РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыИзКэша(
				ВыборкаПоДокументу.Валюта,
				ПериодБазыНДС,
				Валюты.КэшКурсовВалют);
				
		КурсВалютыВзаиморасчетовДляБазыНДС = 
			РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыИзКэша(
				ВыборкаПоДокументу.ВалютаВзаиморасчетов,
				ПериодБазыНДС,
				Валюты.КэшКурсовВалют);
		
		ВыборкаПоАналитике = ВыборкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоАналитике.Следующий() Цикл
				
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Регистратор",  ВыборкаПоДокументу.Ссылка);
			СтруктураПоиска.Вставить("ТипРасчетов",  ВыборкаПоАналитике.ТипРасчетов);
			Если ЗначениеЗаполнено(ВыборкаПоАналитике.АналитикаУчетаПоПартнерам) Тогда
				СтруктураПоиска.Вставить("АналитикаУчетаПоПартнерам", ВыборкаПоАналитике.АналитикаУчетаПоПартнерам);
			КонецЕсли;
			СуммыПоДокументу = ТаблицаСуммДляРаспределения.НайтиСтроки(СтруктураПоиска);
			
			ВыборкаПоТипуЗаписи = ВыборкаПоАналитике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоТипуЗаписи.Следующий() Цикл
				
				СуммаДокумента      = ВыборкаПоТипуЗаписи.СуммаСНДС;
				СуммаВзаиморасчетов = ВыборкаПоТипуЗаписи.СуммаВзаиморасчетовДляПересчета;
				
				СуммаДокументаРегл  = 0;
				СуммаДокументаУпр   = 0;
				
				Предоплата         = 0;
				ПредоплатаРегл     = 0; 
				ПредоплатаУпр      = 0;
				Долг               = 0;
				ДолгРегл           = 0;
				ДолгУпр            = 0;
				
				ПорядокОплаты      = Неопределено;
				НалогообложениеНДС = Неопределено;
				
				Если СуммыПоДокументу.Количество() = 1 Тогда
					Если ВыборкаПоТипуЗаписи.ЭтоСторно Тогда
						ПредоплатаРегл = ?(СуммыПоДокументу[0].Предоплата <= 0, СуммыПоДокументу[0].ПредоплатаРегл, 0);
						ПредоплатаУпр  = ?(СуммыПоДокументу[0].Предоплата <= 0, СуммыПоДокументу[0].ПредоплатаУпр, 0);
						ДолгРегл       = ?(СуммыПоДокументу[0].Долг <= 0, СуммыПоДокументу[0].ДолгРегл, 0);
						ДолгУпр        = ?(СуммыПоДокументу[0].Долг <= 0, СуммыПоДокументу[0].ДолгУпр, 0);
						Предоплата     = ?(СуммыПоДокументу[0].Предоплата <= 0, СуммыПоДокументу[0].Предоплата, 0);
						Долг            = ?(СуммыПоДокументу[0].Долг <= 0, СуммыПоДокументу[0].Долг, 0);
					Иначе
						ПредоплатаРегл = ?(СуммыПоДокументу[0].Предоплата >= 0, СуммыПоДокументу[0].ПредоплатаРегл, 0);
						ПредоплатаУпр  = ?(СуммыПоДокументу[0].Предоплата >= 0, СуммыПоДокументу[0].ПредоплатаУпр, 0);
						ДолгРегл       = ?(СуммыПоДокументу[0].Долг >= 0, СуммыПоДокументу[0].ДолгРегл, 0);
						ДолгУпр        = ?(СуммыПоДокументу[0].Долг >= 0, СуммыПоДокументу[0].ДолгУпр, 0);
						Предоплата     = ?(СуммыПоДокументу[0].Предоплата >= 0, СуммыПоДокументу[0].Предоплата, 0);
						Долг           = ?(СуммыПоДокументу[0].Долг >= 0, СуммыПоДокументу[0].Долг, 0);
					КонецЕсли;
					ПорядокОплаты  = СуммыПоДокументу[0].ПорядокОплаты;
					НалогообложениеНДС = СуммыПоДокументу[0].НалогообложениеНДС;
				КонецЕсли;
				
				Если Предоплата + Долг <> СуммаВзаиморасчетов Тогда
					СуммаДокументаРегл = ПредоплатаРегл
						+ (СуммаВзаиморасчетов - Предоплата) * КурсВалютыВзаиморасчетов;
					СуммаДокументаУпр = ПредоплатаУпр 
						+ (СуммаВзаиморасчетов - Предоплата) * КурсВалютыВзаиморасчетов / КурсВалютыУпр;
				Иначе
					СуммаДокументаРегл = ПредоплатаРегл + ДолгРегл;
					СуммаДокументаУпр = ПредоплатаУпр + ДолгУпр;
				КонецЕсли;
				
				Если ВыборкаПоТипуЗаписи.ЭтоСторно Тогда
					БазаСНДСРеглПоДокументу = ПредоплатаРегл + ДолгРегл;
				Иначе
					БазаСНДСРеглПоДокументу = 
						ПредоплатаРегл + Окр(СуммаВзаиморасчетов * КурсВалютыВзаиморасчетовДляБазыНДС, 2) - Окр(Предоплата * КурсВалютыВзаиморасчетовДляБазыНДС, 2);
				КонецЕсли;
				
				УчтеноБазыРаспределения = 0;
				УжеРаспределеноРегл = 0;
				УжеРаспределеноУпр = 0;
				УжеРаспределеноСуммаДляБазыНДС = 0;
				
				КурсВалютыУпрСУчетомЗачтенныхАвансов = КурсВалютыУпр;
				Если СуммаДокументаУпр <> 0 Тогда
					КурсВалютыУпрСУчетомЗачтенныхАвансов = СуммаДокументаРегл / СуммаДокументаУпр;
				КонецЕсли;
				
				Выборка = ВыборкаПоТипуЗаписи.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Запись = ТаблицаСуммыДокумента.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Если НЕ Выборка.ПересчитатьСуммы Тогда
						Продолжить;
					КонецЕсли;
					
					СуммаСНДС = Выборка.СуммаБезНДС + Выборка.СуммаНДС;
					
					Запись.СуммаСНДСРегл = Окр(СуммаДокументаРегл * (УчтеноБазыРаспределения + СуммаСНДС) / СуммаДокумента, 2) - УжеРаспределеноРегл;
					Запись.СуммаСНДСУпр  = Окр(СуммаДокументаУпр * (УчтеноБазыРаспределения + СуммаСНДС) / СуммаДокумента, 2) - УжеРаспределеноУпр;
					Запись.СуммаДляБазыНДС  = Окр(БазаСНДСРеглПоДокументу * (УчтеноБазыРаспределения + СуммаСНДС) / СуммаДокумента, 2) - УжеРаспределеноСуммаДляБазыНДС;
					
					УчтеноБазыРаспределения = УчтеноБазыРаспределения + СуммаСНДС;
					УжеРаспределеноРегл     = УжеРаспределеноРегл + Запись.СуммаСНДСРегл;
					УжеРаспределеноУпр      = УжеРаспределеноУпр + Запись.СуммаСНДСУпр;
					УжеРаспределеноСуммаДляБазыНДС = УжеРаспределеноСуммаДляБазыНДС + Запись.СуммаДляБазыНДС; 
					
					Если (ВыборкаПоДокументу.ВалютаВзаиморасчетов = Валюты.ВалютаРегламентированногоУчета
						 ИЛИ ВыборкаПоДокументу.Валюта = Валюты.ВалютаРегламентированногоУчета)
						 И ((ВыборкаПоТипуЗаписи.СуммаБезНДСРегл + ВыборкаПоТипуЗаписи.СуммаНДСРегл) = СуммаДокументаРегл) Тогда
						ПересчитыватьРегл = Ложь;
					Иначе
						ПересчитыватьРегл = Истина;
					КонецЕсли;
					
					Если (ВыборкаПоДокументу.ВалютаВзаиморасчетов = Валюты.ВалютаУправленческогоУчета
						 ИЛИ ВыборкаПоДокументу.Валюта = Валюты.ВалютаУправленческогоУчета)
						 И ((ВыборкаПоТипуЗаписи.СуммаБезНДСУпр + ВыборкаПоТипуЗаписи.СуммаНДСУпр) = СуммаДокументаУпр) Тогда
						ПересчитыватьУпр = Ложь;
					Иначе
						ПересчитыватьУпр = Истина;
					КонецЕсли;
					
					Если ПересчитыватьРегл Тогда
						Если ЗначениеЗаполнено(Запись.СтавкаНДС) Тогда
							Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги Тогда
								
								Запись.БазаНДСРегл = (Запись.СуммаБезНДС + Запись.СуммаНДС) * КурсВалютыДокумента;
								Если Запись.СуммаНДС = 0 Тогда 
									Запись.СуммаНДСРегл = 0;
								Иначе
									Запись.СуммаНДСРегл = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(Запись.БазаНДСРегл, Выборка.СтавкаНДС, Истина);
								КонецЕсли;
								
							ИначеЕсли ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте Тогда
								// База НДС рассчитывается по курсу на дату документа
								Запись.БазаНДСРегл = Запись.СуммаБезНДС * КурсВалютыДокументаДляБазыНДС;
								Если Запись.СуммаНДС = 0 Тогда 
									Запись.СуммаНДСРегл = 0;
								Иначе
									Запись.СуммаНДСРегл = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(Запись.БазаНДСРегл, Выборка.СтавкаНДС, Ложь);
								КонецЕсли;
							Иначе
								// Расчет базы НДС по данным взаиморасчетов (с учетом зачтенных предоплат)
								Если Запись.СуммаНДС = 0 Тогда 
									Запись.СуммаНДСРегл = 0;
								Иначе
									Запись.СуммаНДСРегл = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(Запись.СуммаДляБазыНДС, Запись.СтавкаНДС);
								КонецЕсли;
								Запись.БазаНДСРегл = Запись.СуммаДляБазыНДС - Запись.СуммаНДСРегл;
							КонецЕсли;
						КонецЕсли;
						Запись.СуммаБезНДСРегл = Запись.СуммаСНДСРегл - Запись.СуммаНДСРегл;
					КонецЕсли;
					
					Если ПересчитыватьУпр Тогда
						Запись.БазаНДСУпр = ?(КурсВалютыУпрСУчетомЗачтенныхАвансов = 0, 0, Запись.БазаНДСРегл / КурсВалютыУпрСУчетомЗачтенныхАвансов);
						Запись.СуммаНДСУпр = ?(КурсВалютыУпрСУчетомЗачтенныхАвансов = 0, 0, Запись.СуммаНДСРегл / КурсВалютыУпрСУчетомЗачтенныхАвансов);
						Запись.СуммаБезНДСУпр  = Запись.СуммаСНДСУпр - Запись.СуммаНДСУпр;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		НаборЗаписей = РегистрыСведений.СуммыДокументовВВалютеРегл.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоДокументу.Ссылка);
		НаборЗаписей.Загрузить(ТаблицаСуммыДокумента);
		НаборЗаписей.Записать();
		
		ТаблицаСуммыДокумента.Очистить();
		
	КонецЦикла;
	
	ОбновитьДвиженияДокументов(ДокументыКПересчету);
	
	Если ТипРасчетов = "РасчетыСКлиентами" Тогда
		СформироватьЗаданияКРаспределениюНДС(ДокументыКПересчету);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаНерасчитанныхДокументов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ТипРасчетов КАК ТипРасчетов,
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|
	|ГДЕ
	|	(ДанныеРегистра.Валюта <> &ВалютаРеглУчета ИЛИ ДанныеРегистра.Валюта <> &ВалютаУпрУчета)
	|	И (ДанныеРегистра.Регистратор В (&МассивДокументов) ИЛИ &ПоВсемДокументам)
	|	И ((ДанныеРегистра.СуммаБезНДС <> 0 И (ДанныеРегистра.СуммаБезНДСРегл = 0 ИЛИ ДанныеРегистра.СуммаБезНДСУпр = 0))
	|			ИЛИ (ДанныеРегистра.СуммаНДС <> 0 И (ДанныеРегистра.СуммаНДСРегл = 0 ИЛИ ДанныеРегистра.СуммаНДСУпр = 0)))
	|";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДокументовДляПересчета() Экспорт
	
	ТекстСуммыВзаиморасчетов = ТекстЗапросаСуммВзаиморасчетов("ВтСуммыВзаиморасчетов");
	
	ТекстСравнения = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДокументРегистратор               КАК РасчетныйДокумент,
	|	ВложенныйЗапрос.ТипРасчетов                       КАК ТипРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам         КАК АналитикаУчетаПоПартнерам,
	|	СУММА(ВложенныйЗапрос.СуммаУвеличенияРеглРасчеты) КАК СуммаУвеличенияРеглРасчеты,
	|	СУММА(ВложенныйЗапрос.СуммаУвеличенияУпрРасчеты)  КАК СуммаУвеличенияУпрРасчеты,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияРеглРасчеты) КАК СуммаУменьшенияРеглРасчеты,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияУпрРасчеты)  КАК СуммаУменьшенияУпрРасчеты,
	|	СУММА(ВложенныйЗапрос.СуммаУвеличенияРегл)        КАК СуммаУвеличенияРегл,
	|	СУММА(ВложенныйЗапрос.СуммаУвеличенияУпр)         КАК СуммаУвеличенияУпр,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияРегл)        КАК СуммаУменьшенияРегл,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияУпр)         КАК СуммаУменьшенияУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		СуммыВзаиморасчетов.ТипРасчетов                    КАК ТипРасчетов,
	|		СуммыВзаиморасчетов.Регистратор                    КАК ДокументРегистратор,
	|		СуммыВзаиморасчетов.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
	|		ВЫБОР 
	|			КОГДА НЕ СуммыВзаиморасчетов.ВозможныРазвернутыеДвижения И СуммыВзаиморасчетов.ПредоплатаРегл + СуммыВзаиморасчетов.ДолгРегл > 0
	|				ТОГДА ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаРегл + СуммыВзаиморасчетов.ДолгРегл > 0
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаРегл + СуммыВзаиморасчетов.ДолгРегл
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаРегл > 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаРегл 
	|						ИНАЧЕ 0 
	|					КОНЕЦ 
	|				+ ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ДолгРегл > 0
	|							ТОГДА СуммыВзаиморасчетов.ДолгРегл 
	|						ИНАЧЕ 0 
	|					КОНЕЦ
	|		КОНЕЦ                                             КАК СуммаУвеличенияРеглРасчеты,
	|		ВЫБОР 
	|			КОГДА НЕ СуммыВзаиморасчетов.ВозможныРазвернутыеДвижения
	|				ТОГДА ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаУпр + СуммыВзаиморасчетов.ДолгУпр > 0
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаУпр + СуммыВзаиморасчетов.ДолгУпр
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаУпр > 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаУпр 
	|						ИНАЧЕ 0 
	|					КОНЕЦ 
	|				+ ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ДолгУпр > 0
	|							ТОГДА СуммыВзаиморасчетов.ДолгУпр 
	|						ИНАЧЕ 0 
	|					КОНЕЦ
	|		КОНЕЦ                                             КАК СуммаУвеличенияУпрРасчеты,
	|		ВЫБОР 
	|			КОГДА НЕ СуммыВзаиморасчетов.ВозможныРазвернутыеДвижения
	|				ТОГДА ВЫБОР 
	|						КОГДА  СуммыВзаиморасчетов.ПредоплатаРегл + СуммыВзаиморасчетов.ДолгРегл < 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаРегл + СуммыВзаиморасчетов.ДолгРегл
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаРегл < 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаРегл 
	|						ИНАЧЕ 0 
	|					КОНЕЦ 
	|				+ ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ДолгРегл < 0
	|							ТОГДА СуммыВзаиморасчетов.ДолгРегл 
	|						ИНАЧЕ 0 
	|					КОНЕЦ
	|		КОНЕЦ                                             КАК СуммаУменьшенияРеглРасчеты,
	|		ВЫБОР 
	|			КОГДА НЕ СуммыВзаиморасчетов.ВозможныРазвернутыеДвижения 
	|				ТОГДА ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаУпр + СуммыВзаиморасчетов.ДолгУпр < 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаУпр + СуммыВзаиморасчетов.ДолгУпр
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА СуммыВзаиморасчетов.ПредоплатаУпр < 0 
	|							ТОГДА СуммыВзаиморасчетов.ПредоплатаУпр 
	|						ИНАЧЕ 0 
	|					КОНЕЦ 
	|				+ ВЫБОР 
	|						КОГДА СуммыВзаиморасчетов.ДолгУпр < 0
	|							ТОГДА СуммыВзаиморасчетов.ДолгУпр 
	|						ИНАЧЕ 0 
	|					КОНЕЦ
	|		КОНЕЦ                                             КАК СуммаУменьшенияУпрРасчеты,
	|		ЕСТЬNULL(СуммыДокументов.СуммаУвеличенияРегл,0)   КАК СуммаУвеличенияРегл,
	|		ЕСТЬNULL(СуммыДокументов.СуммаУвеличенияУпр,0)    КАК СуммаУвеличенияУпр,
	|		ЕСТЬNULL(СуммыДокументов.СуммаУменьшенияРегл,0)   КАК СуммаУменьшенияРегл,
	|		ЕСТЬNULL(СуммыДокументов.СуммаУменьшенияУпр,0)    КАК СуммаУменьшенияУпр
	|	ИЗ
	|		ВтСуммыВзаиморасчетов КАК СуммыВзаиморасчетов
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыВзаиморасчетов.Регистратор = СуммыДокументов.Регистратор
	|					И СуммыВзаиморасчетов.ТипРасчетов = СуммыДокументов.ТипРасчетов
	|					И (СуммыВзаиморасчетов.АналитикаУчетаПоПартнерам = СуммыДокументов.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ &ЭтоПроверка 
	|	ИЛИ ВЫБОР 
	|			КОГДА ВложенныйЗапрос.ДокументРегистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.ДокументРегистратор КАК Документ.РеализацияТоваровУслуг).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|				КОГДА ВложенныйЗапрос.ДокументРегистратор ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|				ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.ДокументРегистратор КАК Документ.РеализацияУслугПрочихАктивов).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ТипРасчетов,
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.ДокументРегистратор
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВложенныйЗапрос.СуммаУвеличенияРеглРасчеты) - СУММА(ВложенныйЗапрос.СуммаУвеличенияРегл) >= 0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУвеличенияУпрРасчеты) - СУММА(ВложенныйЗапрос.СуммаУвеличенияУпр) >= 0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУвеличенияРеглРасчеты) - СУММА(ВложенныйЗапрос.СуммаУвеличенияРегл) <= -0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУвеличенияУпрРасчеты) - СУММА(ВложенныйЗапрос.СуммаУвеличенияУпр) <= -0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУменьшенияРеглРасчеты) - СУММА(ВложенныйЗапрос.СуммаУменьшенияРегл) >= 0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУменьшенияУпрРасчеты) - СУММА(ВложенныйЗапрос.СуммаУменьшенияУпр) >= 0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУменьшенияРеглРасчеты) - СУММА(ВложенныйЗапрос.СуммаУменьшенияРегл) <= -0.01
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаУменьшенияУпрРасчеты) - СУММА(ВложенныйЗапрос.СуммаУменьшенияУпр) <= -0.01)
	|";
		
	Возврат ТекстСуммыВзаиморасчетов + ТекстСравнения;
	
КонецФункции

Процедура СформироватьЗаданияКРаспределениюНДС(Регистраторы)
	
	Если Регистраторы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Период КАК Период,
	|	Движения.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	Движения.СуммаРегл КАК СуммаРегл
	|ПОМЕСТИТЬ ВтИзменениеВыручки
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|		Аналитика.Организация КАК Организация,
	|		ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл КАК СуммаРегл
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|	ГДЕ
	|		ВыручкаИСебестоимостьПродаж.Регистратор В (&Регистраторы)
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КонтрагентДоходыРасходы.Период КАК Период,
	|		КонтрагентДоходыРасходы.Организация КАК Организация,
	|		КонтрагентДоходыРасходы.СуммаРеглБезНДС КАК СуммаРегл
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК КонтрагентДоходыРасходы
	|	ГДЕ
	|		КонтрагентДоходыРасходы.Регистратор В (&Регистраторы)) Движения
	|";
	ТекстЗапроса = ТекстЗапроса 
		+ ОбщегоНазначения.РазделительПакетаЗапросов() 
		+ УчетНДСУП.ТекстЗапросаФормированияЗаданийПриИзмененииВыручки("ВтИзменениеВыручки");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Запись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.НомерЗадания = Константы.НомерЗаданияКЗакрытиюМесяца.Получить();
			Запись.Записать();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось сформировать задание к распределению НДС за %1 в организации %2 по причине: %3'"),
				Выборка.Месяц,
				Выборка.Организация,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Взаиморасчеты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбновитьДвиженияДокумента(Ссылка, СоставОбновления)
	Перем Таблица;
	ДопСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	
	НачатьТранзакцию();
	Попытка
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДопСвойства, РежимПроведенияДокумента.Неоперативный);
		Документы[ДопСвойства.ДляПроведения.МетаданныеДокумента.Имя].ИнициализироватьДанныеДокумента(Ссылка, ДопСвойства, СоставОбновления);
		Таблицы = ДопСвойства.ТаблицыДляДвижений;
		
		СтруктураОбъект = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Ссылка,Дата,Организация");
		ДопСвойства.Вставить("ДатаРегистратора", СтруктураОбъект.Дата);
		ДопСвойства.Вставить("ПартионныйУчетВключен",
			РасчетСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(СтруктураОбъект.Дата)));
		СтруктураОбъект.Вставить("ДополнительныеСвойства", ДопСвойства);
		
		Для Каждого ОписаниеОбновления Из СоставОбновления Цикл
			Если Таблицы.Свойство("Таблица" + ОписаниеОбновления.Ключ, Таблица) Тогда
				ЗаписатьДвиженияВБазу(ОписаниеОбновления.Значение, Таблица, Ссылка, ДопСвойства);
			КонецЕсли;
		КонецЦикла;
		
		ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(СтруктураОбъект);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru = 'Не удалось записать движения %Обновление% по причине %Причина%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Обновление%", ОписаниеОбновления.Ключ);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Частичное обновление движений документа'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, 
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки
КонецПроцедуры

Процедура ОбновитьДвиженияПоОборотнымРегистрам(МассивДокументовСКлиентами, МассивДокументовСПоставщиками)
	
	ВсеДокументы = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеДокументы, МассивДокументовСКлиентами, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеДокументы, МассивДокументовСПоставщиками, Истина);
		
	Если МассивДокументовСКлиентами.Количество() > 0 Тогда
		УправленческийУчетПроведениеСервер.СформироватьДвиженияДенежныеСредстваКонтрагентПоКлиентам(МассивДокументовСКлиентами);
	КонецЕсли;
	Если МассивДокументовСПоставщиками.Количество() > 0 Тогда
		УправленческийУчетПроведениеСервер.СформироватьДвиженияДенежныеСредстваКонтрагентПоПоставщикам(МассивДокументовСПоставщиками);
	КонецЕсли;
	
	Если ВсеДокументы.Количество() > 0 Тогда
		УправленческийУчетПроведениеСервер.СформироватьДвиженияКонтрагентКонтрагент(ВсеДокументы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьДвиженияВБазу(Набор, Таблица, Ссылка, ДопСвойства)
	
	Набор.Отбор.Регистратор.Установить(Ссылка);
	
	Набор.ДополнительныеСвойства.Вставить("ЭтоНовый", ДопСвойства.ЭтоНовый);
	Набор.ДополнительныеСвойства.Вставить("РежимЗаписи", ДопСвойства.РежимЗаписи);
	Набор.ДополнительныеСвойства.Вставить("ДатаРегистратора", ДопСвойства.ДатаРегистратора);
	Набор.ДополнительныеСвойства.Вставить("ДляПроведения", 
		Новый Структура("СтруктураВременныеТаблицы, ПартионныйУчетВключен",
			// Структура для передачи данных в модули наборов записей.
			ДопСвойства.ДляПроведения.СтруктураВременныеТаблицы,
			ДопСвойства.ПартионныйУчетВключен));
	
	Если Таблица.Количество() > 0 Тогда
		Набор.Загрузить(Таблица);
		Набор.УстановитьАктивность(Истина);
		Набор.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаСуммВзаиморасчетов(ИмяВТ = "")
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СуммыДокументовВВалютеРегл.ТипРасчетов               КАК ТипРасчетов,
	|	СуммыДокументовВВалютеРегл.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	СуммыДокументовВВалютеРегл.Регистратор               КАК Регистратор,
	|	СУММА(ВЫБОР КОГДА (СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл) >= 0 
	|			ТОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ)                                               КАК СуммаУвеличенияРегл,
	|	СУММА(ВЫБОР КОГДА (СуммыДокументовВВалютеРегл.СуммаБезНДСУпр  + СуммыДокументовВВалютеРегл.СуммаНДСУпр) >= 0 
	|			ТОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСУпр + СуммыДокументовВВалютеРегл.СуммаНДСУпр
	|		ИНАЧЕ 0 
	|	КОНЕЦ)                                               КАК СуммаУвеличенияУпр,
	|	СУММА(ВЫБОР КОГДА (СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл) < 0 
	|			ТОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ)                                               КАК СуммаУменьшенияРегл,
	|	СУММА(ВЫБОР КОГДА (СуммыДокументовВВалютеРегл.СуммаБезНДСУпр + СуммыДокументовВВалютеРегл.СуммаНДСУпр) < 0 
	|			ТОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСУпр + СуммыДокументовВВалютеРегл.СуммаНДСУпр
	|		ИНАЧЕ 0 
	|	КОНЕЦ)                                               КАК СуммаУменьшенияУпр
	|ПОМЕСТИТЬ ВТСуммыДокументов
	|ИЗ
	|	РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|ГДЕ
	|	(СуммыДокументовВВалютеРегл.Регистратор В (&МассивДокументов) ИЛИ &ПоВсемДокументам)
	|	И СуммыДокументовВВалютеРегл.ТипРасчетов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.ПустаяСсылка)
	|	И (СуммыДокументовВВалютеРегл.Валюта <> &ВалютаРеглУчета 
	|		ИЛИ СуммыДокументовВВалютеРегл.Валюта <> &ВалютаУпрУчета
	|		ИЛИ СуммыДокументовВВалютеРегл.Валюта <> СуммыДокументовВВалютеРегл.ВалютаВзаиморасчетов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыДокументовВВалютеРегл.Регистратор,
	|	СуммыДокументовВВалютеРегл.АналитикаУчетаПоПартнерам,
	|	СуммыДокументовВВалютеРегл.ТипРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентами.Регистратор                                   КАК Регистратор,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам                     КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентами.Валюта                                        КАК Валюта,
	|	РасчетыСКлиентами.СвязанныйДокумент                             КАК СвязанныйДокумент,
	|	ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентами.СвязанныйДокумент.ДатаПереходаПраваСобственности,ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|		ТОГДА РасчетыСКлиентами.СвязанныйДокумент.Дата
	|		ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентами.СвязанныйДокумент.ДатаПереходаПраваСобственности,ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ                                                           КАК Дата,
	|	РасчетыСКлиентами.ЗаказКлиента.ПорядокОплаты                    КАК ПорядокОплаты,
	|	РасчетыСКлиентами.ЗаказКлиента.НалогообложениеНДС               КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|		ТОГДА РасчетыСКлиентами.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                          КАК СуммаУвеличение,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА РасчетыСКлиентами.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                          КАК СуммаУменьшение
	|ПОМЕСТИТЬ ВтСвязанныеДокументыКорректировок
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|			ПО СуммыДокументов.Регистратор = РасчетыСКлиентами.Регистратор
	|ГДЕ
	|	РасчетыСКлиентами.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Регистратор,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентами.Валюта,
	|	РасчетыСКлиентами.СвязанныйДокумент,
	|	ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентами.СвязанныйДокумент.ДатаПереходаПраваСобственности,ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|		ТОГДА РасчетыСКлиентами.СвязанныйДокумент.Дата
	|		ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентами.СвязанныйДокумент.ДатаПереходаПраваСобственности,ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ,
	|	РасчетыСКлиентами.ЗаказКлиента.ПорядокОплаты,
	|	РасчетыСКлиентами.ЗаказКлиента.НалогообложениеНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПоставщиками.Регистратор                                   КАК Регистратор,
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам                     КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщиками.Валюта                                        КАК Валюта,
	|	РасчетыСПоставщиками.СвязанныйДокумент                             КАК СвязанныйДокумент,
	|	РасчетыСПоставщиками.СвязанныйДокумент.Дата                        КАК Дата,
	|	РасчетыСПоставщиками.ЗаказПоставщику.ПорядокОплаты                 КАК ПорядокОплаты,
	|	РасчетыСПоставщиками.ЗаказПоставщику.НалогообложениеНДС            КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов,
	|	СУММА(ВЫБОР КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ТОГДА РасчетыСПоставщиками.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                             КАК СуммаУвеличение,
	|	СУММА(ВЫБОР КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА РасчетыСПоставщиками.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                             КАК СуммаУменьшение
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|			ПО СуммыДокументов.Регистратор = РасчетыСПоставщиками.Регистратор
	|ГДЕ
	|	РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.КорректировкаПриобретения
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор,
	|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам,
	|	РасчетыСПоставщиками.Валюта,
	|	РасчетыСПоставщиками.СвязанныйДокумент,
	|	РасчетыСПоставщиками.ЗаказПоставщику.ПорядокОплаты,
	|	РасчетыСПоставщиками.ЗаказПоставщику.НалогообложениеНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДокументы.СвязанныйДокумент              КАК СвязанныйДокумент,
	|	ТабДокументы.Валюта                         КАК Валюта,
	|	МАКСИМУМ(ТабДокументы.ПериодВалютыРасчетов) КАК ПериодВалютыРасчетов,
	|	МАКСИМУМ(ТабДокументы.ПериодВалютыУпр)      КАК ПериодВалютыУпр
	|ПОМЕСТИТЬ ВтПериодыКурсовСвязанныхДокументов
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТабДокументы.СвязанныйДокумент       КАК СвязанныйДокумент,
	|		ТабДокументы.Валюта                  КАК Валюта,
	|		КурсыВалютыРасчетов.Период           КАК ПериодВалютыРасчетов,
	|		ДАТАВРЕМЯ(1,1,1)                     КАК ПериодВалютыУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК ТабДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыРасчетов
	|				ПО КурсыВалютыРасчетов.Валюта = ТабДокументы.Валюта
	|					И ТабДокументы.Дата >= КурсыВалютыРасчетов.Период
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ТабДокументы.СвязанныйДокумент       КАК СвязанныйДокумент,
	|		ТабДокументы.Валюта                  КАК Валюта,
	|		ДАТАВРЕМЯ(1,1,1)                     КАК ПериодВалютыРасчетов,
	|		КурсыВалютыУпр.Период                КАК ПериодВалютыУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК ТабДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыУпр
	|			ПО КурсыВалютыУпр.Валюта = &ВалютаУпрУчета
	|				И ТабДокументы.Дата >= КурсыВалютыУпр.Период) КАК ТабДокументы
	|СГРУППИРОВАТЬ ПО
	|		ТабДокументы.СвязанныйДокумент,
	|		ТабДокументы.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсов.СвязанныйДокумент                          КАК СвязанныйДокумент,
	|	КурсыВалютРасчетов.Курс / КурсыВалютРасчетов.Кратность   КАК КоэффициентРегл,
	|	(КурсыВалютРасчетов.Курс / КурсыВалютРасчетов.Кратность)
	|		/ (КурсыВалютУпр.Курс / КурсыВалютУпр.Кратность)     КАК КоэффициентУпр
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	ВтПериодыКурсовСвязанныхДокументов КАК ПериодыКурсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютРасчетов
	|			ПО ПериодыКурсов.ПериодВалютыРасчетов = КурсыВалютРасчетов.Период
	|				И ПериодыКурсов.Валюта = КурсыВалютРасчетов.Валюта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютУпр
	|			ПО ПериодыКурсов.ПериодВалютыУпр = КурсыВалютУпр.Период
	|				И &ВалютаУпрУчета = КурсыВалютУпр.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Регистратор                    КАК Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ПорядокОплаты                  КАК ПорядокОплаты,
	|	Расчеты.НалогообложениеНДС             КАК НалогообложениеНДС,
	|	Расчеты.СвязанныйДокумент              КАК СвязанныйДокумент,
	|	Расчеты.ТипРасчетов                    КАК ТипРасчетов,
	|	Расчеты.СуммаУменьшение                КАК СуммаУменьшение,
	|	Расчеты.СуммаУвеличение                КАК СуммаУвеличение,
	|	ВЫБОР КОГДА Расчеты.СуммаУвеличение > Расчеты.СуммаУменьшение
	|			ТОГДА Расчеты.СуммаУменьшение
	|		ИНАЧЕ Расчеты.СуммаУвеличение
	|	КОНЕЦ                                  КАК СуммаОбщая,
	|	ВЫБОР КОГДА Расчеты.СуммаУменьшение > Расчеты.СуммаУвеличение Тогда
	|		Расчеты.СуммаУвеличение
	|	ИНАЧЕ
	|		-Расчеты.СуммаУменьшение
	|	КОНЕЦ                              КАК СуммаОбщаяПредоплата,
	|	ВЫБОР КОГДА Расчеты.СуммаУменьшение > Расчеты.СуммаУвеличение Тогда
	|		-Расчеты.СуммаУвеличение
	|	ИНАЧЕ
	|		Расчеты.СуммаУменьшение
	|	КОНЕЦ                              КАК СуммаОбщаяДолг,
	|	СУММА(Расчеты.СуммаВзаиморасчетов)     КАК СуммаВзаиморасчетов,
	|	СУММА(Расчеты.СуммаВзаиморасчетовРегл) КАК СуммаВзаиморасчетовРегл,
	|	СУММА(Расчеты.СуммаВзаиморасчетовУпр)  КАК СуммаВзаиморасчетовУпр
	|ПОМЕСТИТЬ ВтСуммыВзаиморасчетовКорректировок
	|ИЗ (
	|	ВЫБРАТЬ
	|		СвязанныеДокументы.Регистратор                 КАК Регистратор,
	|		СвязанныеДокументы.АналитикаУчетаПоПартнерам   КАК АналитикаУчетаПоПартнерам,
	|		СвязанныеДокументы.ПорядокОплаты               КАК ПорядокОплаты,
	|		СвязанныеДокументы.НалогообложениеНДС          КАК НалогообложениеНДС,
	|		СвязанныеДокументы.СвязанныйДокумент           КАК СвязанныйДокумент,
	|		СвязанныеДокументы.ТипРасчетов                 КАК ТипРасчетов,
	|		СвязанныеДокументы.СуммаУменьшение             КАК СуммаУменьшение,
	|		СвязанныеДокументы.СуммаУвеличение             КАК СуммаУвеличение,
	|		ЕСТЬNULL(РасчетыСКлиентамиПоСрокам.Долг,0)     КАК СуммаВзаиморасчетов,
	|		ЕСТЬNULL(РасчетыСКлиентамиПоСрокам.ДолгРегл,0) КАК СуммаВзаиморасчетовРегл,
	|		ЕСТЬNULL(РасчетыСКлиентамиПоСрокам.ДолгУпр,0)  КАК СуммаВзаиморасчетовУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК СвязанныеДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентамиПоСрокам
	|				ПО СвязанныеДокументы.СвязанныйДокумент = РасчетыСКлиентамиПоСрокам.ДокументРегистратор
	|					И СвязанныеДокументы.АналитикаУчетаПоПартнерам = РасчетыСКлиентамиПоСрокам.АналитикаУчетаПоПартнерам
	|					И РасчетыСКлиентамиПоСрокам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И РасчетыСКлиентамиПоСрокам.Долг > 0 
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|		И СвязанныеДокументы.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СвязанныеДокументы.Регистратор                    КАК Регистратор,
	|		СвязанныеДокументы.АналитикаУчетаПоПартнерам      КАК АналитикаУчетаПоПартнерам,
	|		СвязанныеДокументы.ПорядокОплаты                  КАК ПорядокОплаты,
	|		СвязанныеДокументы.НалогообложениеНДС             КАК НалогообложениеНДС,
	|		СвязанныеДокументы.СвязанныйДокумент              КАК СвязанныйДокумент,
	|		СвязанныеДокументы.ТипРасчетов                    КАК ТипРасчетов,
	|		СвязанныеДокументы.СуммаУменьшение                КАК СуммаУменьшение,
	|		СвязанныеДокументы.СуммаУвеличение                КАК СуммаУвеличение,
	|		ЕСТЬNULL(РасчетыСПоставщикамиПоСрокам.Долг,0)     КАК СуммаВзаиморасчетов,
	|		ЕСТЬNULL(РасчетыСПоставщикамиПоСрокам.ДолгРегл,0) КАК СуммаВзаиморасчетовРегл,
	|		ЕСТЬNULL(РасчетыСПоставщикамиПоСрокам.ДолгУпр,0)  КАК СуммаВзаиморасчетовУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК СвязанныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщикамиПоСрокам
	|			ПО СвязанныеДокументы.СвязанныйДокумент = РасчетыСПоставщикамиПоСрокам.ДокументРегистратор
	|				И СвязанныеДокументы.АналитикаУчетаПоПартнерам = РасчетыСПоставщикамиПоСрокам.АналитикаУчетаПоПартнерам
	|				И РасчетыСПоставщикамиПоСрокам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоСрокам.Долг > 0
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|		И СвязанныеДокументы.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СвязанныеДокументы.Регистратор                                                   КАК Регистратор,
	|		СвязанныеДокументы.АналитикаУчетаПоПартнерам                                     КАК АналитикаУчетаПоПартнерам,
	|		СвязанныеДокументы.ПорядокОплаты                                                 КАК ПорядокОплаты,
	|		СвязанныеДокументы.НалогообложениеНДС                                            КАК НалогообложениеНДС,
	|		СвязанныеДокументы.СвязанныйДокумент                                             КАК СвязанныйДокумент,
	|		СвязанныеДокументы.ТипРасчетов                                                   КАК ТипРасчетов,
	|		СвязанныеДокументы.СуммаУменьшение                                               КАК СуммаУменьшение,
	|		СвязанныеДокументы.СуммаУвеличение                                               КАК СуммаУвеличение,
	|		ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентами.ВидДвижения,Неопределено) = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЕСТЬNULL(РасчетыСКлиентами.Долг,0) + ЕСТЬNULL(РасчетыСКлиентами.Предоплата,0)
	|			ИНАЧЕ -ЕСТЬNULL(РасчетыСКлиентами.Долг,0) - ЕСТЬNULL(РасчетыСКлиентами.Предоплата,0)
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетов,
	|		ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентами.ВидДвижения,Неопределено) = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЕСТЬNULL(РасчетыСКлиентами.ДолгРегл,0) + ЕСТЬNULL(РасчетыСКлиентами.ПредоплатаРегл,0)
	|			ИНАЧЕ -ЕСТЬNULL(РасчетыСКлиентами.ДолгРегл,0) - ЕСТЬNULL(РасчетыСКлиентами.ПредоплатаРегл,0)
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетовРегл,
	|		ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентами.ВидДвижения,Неопределено) = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЕСТЬNULL(РасчетыСКлиентами.ДолгУпр,0) + ЕСТЬNULL(РасчетыСКлиентами.ПредоплатаУпр,0)
	|			ИНАЧЕ -ЕСТЬNULL(РасчетыСКлиентами.ДолгУпр,0) - ЕСТЬNULL(РасчетыСКлиентами.ПредоплатаУпр,0)
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетовУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК СвязанныеДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|				ПО СвязанныеДокументы.СвязанныйДокумент = РасчетыСКлиентами.Регистратор
	|					И СвязанныеДокументы.АналитикаУчетаПоПартнерам = РасчетыСКлиентами.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|		И СвязанныеДокументы.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СвязанныеДокументы.Регистратор                                                   КАК Регистратор,
	|		СвязанныеДокументы.АналитикаУчетаПоПартнерам                                     КАК АналитикаУчетаПоПартнерам,
	|		СвязанныеДокументы.ПорядокОплаты                                                 КАК ПорядокОплаты,
	|		СвязанныеДокументы.НалогообложениеНДС                                            КАК НалогообложениеНДС,
	|		СвязанныеДокументы.СвязанныйДокумент                                             КАК СвязанныйДокумент,
	|		СвязанныеДокументы.ТипРасчетов                                                   КАК ТипРасчетов,
	|		СвязанныеДокументы.СуммаУменьшение                                               КАК СуммаУменьшение,
	|		СвязанныеДокументы.СуммаУвеличение                                               КАК СуммаУвеличение,
	|		ВЫБОР КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА РасчетыСПоставщиками.Долг + РасчетыСПоставщиками.Предоплата
	|			ИНАЧЕ -РасчетыСПоставщиками.Долг - РасчетыСПоставщиками.Предоплата
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетов,
	|		ВЫБОР КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА РасчетыСПоставщиками.ДолгРегл + РасчетыСПоставщиками.ПредоплатаРегл
	|			ИНАЧЕ -РасчетыСПоставщиками.ДолгРегл - РасчетыСПоставщиками.ПредоплатаРегл
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетовРегл,
	|		ВЫБОР КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА РасчетыСПоставщиками.ДолгУпр + РасчетыСПоставщиками.ПредоплатаУпр
	|			ИНАЧЕ -РасчетыСПоставщиками.ДолгУпр - РасчетыСПоставщиками.ПредоплатаУпр
	|		КОНЕЦ                                                                            КАК СуммаВзаиморасчетовУпр
	|	ИЗ
	|		ВтСвязанныеДокументыКорректировок КАК СвязанныеДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|				ПО СвязанныеДокументы.СвязанныйДокумент = РасчетыСПоставщиками.Регистратор
	|					И СвязанныеДокументы.АналитикаУчетаПоПартнерам = РасчетыСПоставщиками.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|		И СвязанныеДокументы.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)) КАК Расчеты
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.ТипРасчетов,
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ПорядокОплаты,
	|	Расчеты.НалогообложениеНДС,
	|	Расчеты.СвязанныйДокумент,
	|	ВЫБОР КОГДА Расчеты.СуммаУвеличение > Расчеты.СуммаУменьшение 
	|			ТОГДА Расчеты.СуммаУменьшение
	|		ИНАЧЕ Расчеты.СуммаУвеличение
	|	КОНЕЦ,
	|	Расчеты.СуммаУменьшение,
	|	Расчеты.СуммаУвеличение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистра.ТипРасчетов                  КАК ТипРасчетов,
	|	ДанныеРегистра.Регистратор                  КАК Регистратор,
	|	ДанныеРегистра.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	ДанныеРегистра.ВозможныРазвернутыеДвижения КАК ВозможныРазвернутыеДвижения,
	|	МАКСИМУМ(ДанныеРегистра.ПорядокОплаты)      КАК ПорядокОплаты,
	|	МАКСИМУМ(ДанныеРегистра.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	СУММА(ДанныеРегистра.СуммаПредоплата)       КАК Предоплата,
	|	СУММА(ДанныеРегистра.СуммаДолг)             КАК Долг,
	|	СУММА(ДанныеРегистра.ПредоплатаРегл)        КАК ПредоплатаРегл,
	|	СУММА(ДанныеРегистра.ПредоплатаУпр)         КАК ПредоплатаУпр,
	|	СУММА(ДанныеРегистра.ДолгРегл)              КАК ДолгРегл,
	|	СУММА(ДанныеРегистра.ДолгУпр)               КАК ДолгУпр,
	|	МАКСИМУМ(ДанныеРегистра.КоэффициентРегл)    КАК КоэффициентРегл,
	|	МАКСИМУМ(ДанныеРегистра.КоэффициентУпр)     КАК КоэффициентУпр
	|//ТекстПоместить
	|ИЗ
	|	(
	|	//Суммы корректировок для распределения
	|	ВЫБРАТЬ
	|		СуммыРасчетов.ТипРасчетов                                              КАК ТипРасчетов,
	|		СуммыРасчетов.Регистратор                                              КАК Регистратор,
	|		СуммыРасчетов.АналитикаУчетаПоПартнерам                                КАК АналитикаУчетаПоПартнерам,
	|		СуммыРасчетов.ПорядокОплаты                                            КАК ПорядокОплаты,
	|		СуммыРасчетов.НалогообложениеНДС                                       КАК НалогообложениеНДС,
	|		СуммыРасчетов.СуммаОбщаяПредоплата                                     КАК СуммаПредоплата,
	|		СуммыРасчетов.СуммаОбщаяДолг                                           КАК СуммаДолг,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0
	|			ТОГДА КурсыВалют.КоэффициентРегл
	|			ИНАЧЕ СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов
	|		КОНЕЦ * СуммыРасчетов.СуммаОбщаяПредоплата                             КАК ПредоплатаРегл,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0 ИЛИ СуммыРасчетов.СуммаВзаиморасчетовУпр = 0
	|			ТОГДА КурсыВалют.КоэффициентУпр
	|			ИНАЧЕ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов)
	|					/ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетовУпр)
	|		КОНЕЦ * СуммыРасчетов.СуммаОбщаяПредоплата                              КАК ПредоплатаУпр,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0
	|			ТОГДА КурсыВалют.КоэффициентРегл
	|			ИНАЧЕ СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов
	|		КОНЕЦ * СуммыРасчетов.СуммаОбщаяДолг                              КАК ДолгРегл,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0 ИЛИ СуммыРасчетов.СуммаВзаиморасчетовУпр = 0
	|			ТОГДА КурсыВалют.КоэффициентУпр
	|			ИНАЧЕ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов)
	|					/ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетовУпр)
	|		КОНЕЦ * СуммыРасчетов.СуммаОбщаяДолг                              КАК ДолгУпр,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0
	|			ТОГДА КурсыВалют.КоэффициентРегл
	|			ИНАЧЕ СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов
	|		КОНЕЦ                                                             КАК КоэффициентРегл,
	|		ВЫБОР КОГДА СуммыРасчетов.СуммаВзаиморасчетов = 0 ИЛИ СуммыРасчетов.СуммаВзаиморасчетовУпр = 0
	|			ТОГДА КурсыВалют.КоэффициентУпр
	|			ИНАЧЕ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетов)
	|					/ (СуммыРасчетов.СуммаВзаиморасчетовРегл / СуммыРасчетов.СуммаВзаиморасчетовУпр)
	|		КОНЕЦ                                                             КАК КоэффициентУпр,
	|		ИСТИНА                                                            КАК ВозможныРазвернутыеДвижения
	|	ИЗ
	|		ВтСуммыВзаиморасчетовКорректировок КАК СуммыРасчетов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|				ПО КурсыВалют.СвязанныйДокумент = СуммыРасчетов.СвязанныйДокумент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	//Суммы остальных документов с клиентами
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|		ДанныеРегистра.Регистратор                                      КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                        КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.ЗаказКлиента.ПорядокОплаты                       КАК ПорядокОплаты,
	|		ДанныеРегистра.ЗаказКлиента.НалогообложениеНДС                  КАК НалогообложениеНДС,
	|	
	|		ВЫБОР
	|				КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА -ДанныеРегистра.Предоплата
	|				ИНАЧЕ ДанныеРегистра.Предоплата
	|		КОНЕЦ                                                           КАК СуммаПредоплата,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДанныеРегистра.Долг
	|			КОГДА ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА -ДанныеРегистра.Долг
	|				ИНАЧЕ 0
	|		КОНЕЦ                                                           КАК СуммаДолг,
	|		ВЫБОР
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ДанныеРегистра.ПредоплатаРегл
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДанныеРегистра.ПредоплатаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                           КАК ПредоплатаРегл,
	|		
	|		ВЫБОР 
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ДанныеРегистра.ПредоплатаУпр
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДанныеРегистра.ПредоплатаУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                           КАК ПредоплатаУпр,
	|	
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДанныеРегистра.ДолгРегл
	|			КОГДА ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА -ДанныеРегистра.ДолгРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                           КАК ДолгРегл,
	|	
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДанныеРегистра.ДолгУпр
	|			КОГДА ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА -ДанныеРегистра.ДолгУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                           КАК ДолгУпр,
	|		0                                                               КАК КоэффициентРегл,
	|		0                                                               КАК КоэффициентУпр,
	|		ДанныеРегистра.Регистратор ССЫЛКА Документ.КорректировкаРеализации КАК ВозможныРазвернутыеДвижения
	|	
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.Регистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|				ПО Ключи.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|		И ДанныеРегистра.Регистратор В (&МассивДокументов)
	|		И НЕ ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента)
	|		И НЕ (ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|				И Ключи.Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	//Реализации в статусе ""В пути""
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|		ДанныеРегистра.Регистратор                                      КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                        КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.Регистратор.ПорядокОплаты                        КАК ПорядокОплаты,
	|		ДанныеРегистра.Регистратор.НалогообложениеНДС                   КАК НалогообложениеНДС,
	|
	|		ДанныеРегистра.Предоплата                                       КАК СуммаПредоплата,
	|		0                                                               КАК СуммаДолг,
	|		ДанныеРегистра.ПредоплатаРегл                                   КАК ПредоплатаРегл,
	|		ДанныеРегистра.ПредоплатаУпр                                    КАК ПредоплатаУпр,
	|		0                                                               КАК ДолгРегл,
	|		0                                                               КАК ДолгУпр,
	|		0                                                               КАК КоэффициентРегл,
	|		0                                                               КАК КоэффициентУпр,
	|		ДанныеРегистра.Регистратор ССЫЛКА Документ.КорректировкаРеализации КАК ВозможныРазвернутыеДвижения
	|	
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.Регистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|		И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента)
	|		И ВЫБОР 
	|			КОГДА ДанныеРегистра.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ДанныеРегистра.Регистратор КАК Документ.РеализацияТоваровУслуг).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|				КОГДА ДанныеРегистра.Регистратор ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|				ТОГДА ВЫРАЗИТЬ(ДанныеРегистра.Регистратор КАК Документ.РеализацияУслугПрочихАктивов).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|		ДанныеРегистра.ДокументРегистратор                              КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                        КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.ОбъектРасчетов.ПорядокОплаты                     КАК ПорядокОплаты,
	|		ДанныеРегистра.ОбъектРасчетов.НалогообложениеНДС                КАК НалогообложениеНДС,
	|		ВЫБОР
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.Предоплата
	|			ИНАЧЕ -ДанныеРегистра.Предоплата
	|		КОНЕЦ                                                          КАК СуммаПредоплата,
	|		ВЫБОР 
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ДанныеРегистра.Долг
	|			ИНАЧЕ ДанныеРегистра.Долг
	|		КОНЕЦ                                                           КАК СуммаДолг,
	|		ВЫБОР
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.ПредоплатаРегл
	|			ИНАЧЕ -ДанныеРегистра.ПредоплатаРегл
	|		КОНЕЦ                                                           КАК ПредоплатаРегл,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА ДанныеРегистра.ПредоплатаУпр
	|			ИНАЧЕ -ДанныеРегистра.ПредоплатаУпр
	|		КОНЕЦ                                                           КАК ПредоплатаУпр,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -ДанныеРегистра.ДолгРегл
	|			ИНАЧЕ ДанныеРегистра.ДолгРегл
	|		КОНЕЦ                                                           КАК ДолгРегл,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -ДанныеРегистра.ДолгУпр
	|			ИНАЧЕ ДанныеРегистра.ДолгУпр
	|		КОНЕЦ                                                           КАК ДолгУпр,
	|		0                                                               КАК КоэффициентРегл,
	|		0                                                               КАК КоэффициентУпр,
	|		ДанныеРегистра.ДокументРегистратор ССЫЛКА Документ.КорректировкаРеализации КАК ВозможныРазвернутыеДвижения
	|	
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.ДокументРегистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|				ПО Ключи.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|		И НЕ ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента)
	|		И НЕ (ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|				И Ключи.Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	//Реализации в статусе ""В пути""
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|		ДанныеРегистра.ДокументРегистратор                              КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                        КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.ДокументРегистратор.ПорядокОплаты                КАК ПорядокОплаты,
	|		ДанныеРегистра.ДокументРегистратор.НалогообложениеНДС           КАК НалогообложениеНДС,
	|		ДанныеРегистра.Предоплата                                       КАК СуммаПредоплата,
	|		0                                                               КАК СуммаДолг,
	|		ДанныеРегистра.ПредоплатаРегл                                   КАК ПредоплатаРегл,
	|		ДанныеРегистра.ПредоплатаУпр                                    КАК ПредоплатаУпр,
	|		0                                                               КАК ДолгРегл,
	|		0                                                               КАК ДолгУпр,
	|		0                                                               КАК КоэффициентРегл,
	|		0                                                               КАК КоэффициентУпр,
	|		ДанныеРегистра.ДокументРегистратор ССЫЛКА Документ.КорректировкаРеализации КАК ВозможныРазвернутыеДвижения
	|	
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.ДокументРегистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|				ПО Ключи.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|		И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента)
	|		И ВЫБОР 
	|			КОГДА ДанныеРегистра.ДокументРегистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ДанныеРегистра.ДокументРегистратор КАК Документ.РеализацияТоваровУслуг).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|				КОГДА ДанныеРегистра.ДокументРегистратор ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|				ТОГДА ВЫРАЗИТЬ(ДанныеРегистра.ДокументРегистратор КАК Документ.РеализацияУслугПрочихАктивов).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	//Суммы остальных документов с поставщиками
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов,
	|		ДанныеРегистра.Регистратор                                         КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                           КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.ЗаказПоставщику.ПорядокОплаты                       КАК ПорядокОплаты,
	|		ДанныеРегистра.ЗаказПоставщику.НалогообложениеНДС                  КАК НалогообложениеНДС,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.Предоплата
	|			ИНАЧЕ -ДанныеРегистра.Предоплата
	|		КОНЕЦ                                                              КАК СуммаПредоплата,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.Долг
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				ТОГДА -ДанныеРегистра.Долг
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                              КАК СуммаДолг,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.ПредоплатаРегл
	|			ИНАЧЕ -ДанныеРегистра.ПредоплатаРегл
	|		КОНЕЦ                                                              КАК ПредоплатаРегл,
	|		
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.ПредоплатаУпр
	|			ИНАЧЕ -ДанныеРегистра.ПредоплатаУпр
	|		КОНЕЦ                                                              КАК ПредоплатаУпр,
	|		
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.ДолгРегл
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|				И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				ТОГДА -ДанныеРегистра.ДолгРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                              КАК ДолгРегл,
	|		
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ДанныеРегистра.ДолгУпр
	|			КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|				ТОГДА -ДанныеРегистра.ДолгУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                                              КАК ДолгУпр,
	|		0                                                                  КАК КоэффициентРегл,
	|		0                                                                  КАК КоэффициентУпр,
	|		ДанныеРегистра.Регистратор ССЫЛКА Документ.КорректировкаПриобретения КАК ВозможныРазвернутыеДвижения
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.Регистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|				ПО Ключи.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|		И НЕ (ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|				И Ключи.Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов,
	|		ДанныеРегистра.ДокументРегистратор                                 КАК Регистратор,
	|		ДанныеРегистра.АналитикаУчетаПоПартнерам                           КАК АналитикаУчетаПоПартнерам,
	|		ДанныеРегистра.ОбъектРасчетов.ПорядокОплаты                        КАК ПорядокОплаты,
	|		ДанныеРегистра.ОбъектРасчетов.НалогообложениеНДС                   КАК НалогообложениеНДС,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ДанныеРегистра.Предоплата
	|			ИНАЧЕ ДанныеРегистра.Предоплата
	|		КОНЕЦ                                                              КАК СуммаПредоплата,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|			ТОГДА -ДанныеРегистра.Долг
	|			ИНАЧЕ ДанныеРегистра.Долг
	|		КОНЕЦ                                                              КАК СуммаДолг,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ДанныеРегистра.ПредоплатаРегл
	|			ИНАЧЕ ДанныеРегистра.ПредоплатаРегл
	|		КОНЕЦ                                                              КАК ПредоплатаРегл,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|			ТОГДА -ДанныеРегистра.ПредоплатаУпр
	|			ИНАЧЕ ДанныеРегистра.ПредоплатаУпр
	|		КОНЕЦ                                                              КАК ПредоплатаУпр,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|			ТОГДА -ДанныеРегистра.ДолгРегл
	|			ИНАЧЕ ДанныеРегистра.ДолгРегл
	|		КОНЕЦ                                                              КАК ДолгРегл,
	|		ВЫБОР КОГДА ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|			ТОГДА -ДанныеРегистра.ДолгУпр
	|			ИНАЧЕ ДанныеРегистра.ДолгУпр
	|		КОНЕЦ                                                              КАК ДолгУпр,
	|		0                                                                  КАК КоэффициентРегл,
	|		0                                                                  КАК КоэффициентУпр,
	|		ДанныеРегистра.ДокументРегистратор ССЫЛКА Документ.КорректировкаПриобретения КАК ВозможныРазвернутыеДвижения
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК ДанныеРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммыДокументов КАК СуммыДокументов
	|				ПО СуммыДокументов.Регистратор = ДанныеРегистра.ДокументРегистратор
	|					И СуммыДокументов.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|					И (СуммыДокументов.АналитикаУчетаПоПартнерам = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|						ИЛИ СуммыДокументов.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|				ПО Ключи.Ссылка = ДанныеРегистра.АналитикаУчетаПоПартнерам
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|		И НЕ (ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|				И Ключи.Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))) КАК ДанныеРегистра
	|СГРУППИРОВАТЬ ПО 
	|	ДанныеРегистра.ТипРасчетов,
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.АналитикаУчетаПоПартнерам,
	|	ДанныеРегистра.ВозможныРазвернутыеДвижения
	|";
	
	Если ИмяВТ <> "" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстПоместить","ПОМЕСТИТЬ " + ИмяВТ);
		ТекстЗапроса = ТекстЗапроса + "
		|;";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает для каждого регистратора суммы расчетов в валютах регламентированного и управленческого учета для распределения.
// Параметры:
//		МассивРегистраторов - Массив - Массив документов, по которым нужно расчитать суммы.
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица сумм и коэффициентов.
//	 *	ТипРасчетов - ПеречислениеСсылка.ТипыРасчетовСПартнерами - тип расчетов регистратора.
//	 *	Регистратор - ДокументСсылка - Документ, для которого произведен расчет.
//	 *	АналитикаУчетаПоПартнерам - СправочникСсылка.КлючиАналитикиУчетаПоПартнерам - Аналитика учета расчетов по партнерам.
//	 *	ПорядокОплаты - ПеречислениеСсылка.ПорядокОплатыПоСоглашениям - Порядок оплаты объекта расчетов, для распределения базы НДС.
//	 *	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа.
//	 *	СуммаВзаиморасчетов - Число - Сумма взаиморасчетов документа, всегда положительная.
//	 *	ПредоплатаРегл - Число - Сумма зачтенной/возвращенной предоплаты в валюте регламентированного учета.
//	 *	ПредоплатаУпр - Число - Сумма зачтенной/возвращенной предоплаты в валюте управленческого учета.
//	 *	ДолгРегл - Число - Сумма погашенного/возникшего долга в валюте регламентированного учета.
//	 *	ДолгУпр - Число - Сумма погашенного/возникшего долга в валюте управленческого учета.
//	 *	КоэффициентРегл - Число - Коэффициент пересчета суммы расчетов в валюту регламентированного учета оснований корректировок.
//	 *	КоэффициентУпр - Число - Коэффициент пересчета суммы расчетов в валюту управленческого учета оснований корректировок.
//
Функция СуммыДокументовДляПострочногоРаспределения(МассивРегистраторов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСуммВзаиморасчетов();
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивРегистраторов);
	Запрос.УстановитьПараметр("ПоВсемДокументам", НЕ ЗначениеЗаполнено(МассивРегистраторов));
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", Константы.НоваяАрхитектураВзаиморасчетов.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

#Область ОбработчикОбновления_2_4_1

//Взвести обработчик при заливке

Функция ТекстЗапросаРегистрацииДанныхКОбработке() Экспорт
	
	МассивТекстов = Новый Массив;
	
	#Область АвансовыйОтчет
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка КАК Регистратор,
	|	ТаблицаПрочиеРасходы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ПрочиеРасходы КАК ТаблицаПрочиеРасходы
	|			ПО ТаблицаПрочиеРасходы.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ВЫБОР КОГДА ТаблицаДокумента.Мультивалютный
	|		ТОГДА ТаблицаПрочиеРасходы.Валюта = &ВалютаРегламентированногоУчета
	|		ИНАЧЕ ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	  КОНЕЦ
	|	И ТаблицаДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаКонвертацияВалюты.ИдентификаторСтроки
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.КонвертацияВалюты КАК ТаблицаКонвертацияВалюты
	|			ПО ТаблицаКонвертацияВалюты.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Мультивалютный
	|	И (ТаблицаКонвертацияВалюты.Валюта = &ВалютаРегламентированногоУчета
	|		ИЛИ ТаблицаКонвертацияВалюты.ВалютаКонвертации = &ВалютаРегламентированногоУчета)
	|	И ТаблицаДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область АктВыполненныхРабот
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.Услуги КАК ТаблицаУслуги
	|			ПО ТаблицаУслуги.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВзаимозачетЗадолженности
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДебиторскаяЗадолженность.ИдентификаторСтроки
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК ТаблицаДебиторскаяЗадолженность
	|			ПО ТаблицаДебиторскаяЗадолженность.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДебиторскаяЗадолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаКредиторскаяЗадолженность.ИдентификаторСтроки
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК ТаблицаКредиторскаяЗадолженность
	|			ПО ТаблицаКредиторскаяЗадолженность.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаКредиторскаяЗадолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВозвратТоваровМеждуОрганизациями
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И НЕ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|	И ТаблицаДокумента.Проведен");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВозвратТоваровОтКлиента
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И НЕ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВозвратТоваровПоставщику
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВыкупВозвратнойТарыКлиентом
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыКлиентом КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыКлиентом.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ВыкупВозвратнойТарыУПоставщика
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыУПоставщика КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыУПоставщика.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ЗаписьКнигиПокупок
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|			ПО ТаблицаЦенности.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ЗаписьКнигиПродаж
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|			ПО ТаблицаЦенности.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж.Расхождения КАК ТаблицаРасхождения
	|			ПО ТаблицаРасхождения.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти

	#Область НачисленияКредитовИДепозитов
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаНачисления.ИдентификаторСтроки
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачисления
	|			ПО ТаблицаНачисления.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаНачисления.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОперацияПоПлатежнойКарте
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОперацияПоПлатежнойКарте КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОперацияПоЯндексКассе
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОперации.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОперацияПоЯндексКассе КАК ТаблицаОперации
	|ГДЕ
	|	ТаблицаОперации.Проведен
	|	И ТаблицаОперации.ВалютаКомиссии = &ВалютаРегламентированногоУчета
	|	И ТаблицаОперации.СуммаКомиссии <> 0");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОприходованиеИзлишковТоваров
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОприходованиеИзлишковТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И &ВалютаУправленческогоУчета = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетБанкаПоОперациямЭквайринга
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетБанкаПоОперациямЭквайринга КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетКомиссионера
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Товары КАК ТЧТовары
	|			ПО ТЧТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТЧТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета
	|	И Документ.СуммаВознаграждения <> 0");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетКомиссионераОСписании
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетКомитенту
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомитенту КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетКомитентуОСписании
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетКомитентуОСписании КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетОРозничныхПродажах
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТЧОплата
	|			ПО ТЧОплата.Ссылка = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры НЕ В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ТаблицаПодарочныеСертификаты
	|			ПО ТаблицаПодарочныеСертификаты.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетПоКомиссииМеждуОрганизациями
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ТаблицаВидыЗапасов.ВидЗапасов.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Услуги
	|			ПО Услуги.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Услуги.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета
	|	И Документ.СуммаВознаграждения <> 0");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ОтчетПоКомиссииМеждуОрганизациямиОСписании
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПередачаТоваровМеждуОрганизациями
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПересортицаТоваров
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И &ВалютаУправленческогоУчета = &ВалютаРегламентированногоУчета
	|	И НЕ ТаблицаДокумента.ПриходоватьТоварыПоСебестоимостиСписания");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПорчаТоваров
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПорчаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ПО ТаблицаВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	&ВалютаУправленческогоУчета = &ВалютаРегламентированногоУчета
	|	И НЕ ТаблицаДокумента.ПриходоватьТоварыПоСебестоимостиСписания
	|	И ТаблицаДокумента.Проведен");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПоступлениеБезналичныхДенежныхСредств
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета
	|	И Документ.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТаблицаДокумента.ХозяйственнаяОперация НЕ В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета))");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПриобретениеТоваровУслуг
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	)");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПриобретениеУслугПрочихАктивов
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПриходныйКассовыйОрдер
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область ПрочееОприходованиеТоваров
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И &ВалютаУправленческогоУчета = &ВалютаРегламентированногоУчета
	|	И ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область РасходныйКассовыйОрдер
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область РеализацияТоваровУслуг
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТЧВидыЗапасов
	|			ПО ТЧВидыЗапасов.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область РеализацияУслугПрочихАктивов
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДоходы
	|			ПО ТаблицаДоходы.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	#Область СписаниеБезналичныхДенежныхСредств
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК Документ
	|ГДЕ
	|	Документ.Проведен
	|	И Документ.Валюта = &ВалютаРегламентированногоУчета
	|	И Документ.ХозяйственнаяОперация НЕ В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	NULL
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТЧРасшифровкаПлатежа
	|			ПО ТЧРасшифровкаПлатежа.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.Валюта = &ВалютаРегламентированногоУчета
	|	И ТаблицаДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))");
	МассивТекстов.Добавить(ТекстОбъединить());
	
	#КонецОбласти
	
	
	
	#Область СписаниеЗадолженности
	
	МассивТекстов.Добавить("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка,
	|	ДанныеТЧ.ИдентификаторСтроки
	|ИЗ
	|	Документ.СписаниеЗадолженности КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности.Задолженность КАК ДанныеТЧ
	|			ПО ДанныеТЧ.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Проведен
	|	И ДанныеТЧ.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета");
	
	#КонецОбласти
	
	МассивТекстов.Добавить("
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокументов.Регистратор КАК Регистратор
	|ИЗ 
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО	
	|		ТаблицаДокументов.Регистратор = Суммы.Регистратор
	|		И (ТаблицаДокументов.ИдентификаторСтроки ЕСТЬ NULL ИЛИ ЕСТЬNULL(ТаблицаДокументов.ИдентификаторСтроки,0) = Суммы.ИдентификаторСтроки)
	|ГДЕ
	|	Суммы.Регистратор ЕСТЬ NULL");
	
	Возврат СтрСоединить(МассивТекстов,"");
	
КонецФункции

Функция ТекстОбъединить()
	Возврат "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|";
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
