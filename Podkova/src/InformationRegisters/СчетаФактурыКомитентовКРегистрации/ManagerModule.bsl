#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Переформировывает распоряжения на регистрацию счетов-фактур от комитентов.
//
// Параметры:
// 	 ОтчетКомитенту - ДокументСсылка - Ссылка Отчет комитенту, при записи которого необходимо обновить состояние.
//
Процедура ОбновитьСостояние(СчетаФактурыВыданные) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Неопределено);
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Документы.СчетФактураВыданный.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Документы.СчетФактураКомиссионеру.ПустаяСсылка());
	
	СчетаФактурыВыданные = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СчетаФактурыВыданные);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.Комитент,
	|	ВложеннаяТаблица.Дата,
	|	ВложеннаяТаблица.Покупатель,
	|	ВложеннаяТаблица.СчетФактураВыданный,
	|	ВложеннаяТаблица.Валюта,
	|	СУММА(ВложеннаяТаблица.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ВложеннаяТаблица.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснованийСчетовФактур.Организация КАК Организация,
	|		ДанныеОснованийСчетовФактур.Контрагент КАК Комитент,
	|		ДанныеОснованийСчетовФактур.ДатаСчетаФактурыКомиссионера КАК Дата,
	|		ДанныеОснованийСчетовФактур.ПокупательКомиссионногоТовара КАК Покупатель,
	|		ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером КАК СчетФактураВыданный,
	|		ДанныеОснованийСчетовФактур.Валюта КАК Валюта,
	|		ДанныеОснованийСчетовФактур.СуммаБезНДС + ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаСНДС,
	|		ДанныеОснованийСчетовФактур.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторТипСчетаФактурыКомитенту
	|		И ДанныеОснованийСчетовФактур.СчетФактураВыданныйКомиссионером В (&СчетаФактурыВыданные)
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетФактураКомитента.Организация КАК Организация,
	|		СчетФактураКомитента.Комитент КАК Комитент,
	|		НАЧАЛОПЕРИОДА(СчетФактураКомитента.ДатаСоставления, ДЕНЬ) КАК Дата,
	|		ТаблицаПокупатели.Покупатель КАК Покупатель,
	|		ТаблицаПокупатели.СчетФактураВыданный КАК СчетФактураВыданный,
	|		СчетФактураКомитента.Валюта КАК Валюта,
	|		-ТаблицаПокупатели.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаПокупатели.СуммаНДС  КАК СуммаНДС
	|	ИЗ
	|		Документ.СчетФактураКомитента.Покупатели КАК ТаблицаПокупатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|		ПО
	|			ТаблицаПокупатели.Ссылка = СчетФактураКомитента.Ссылка
	|	ГДЕ
	|		ТаблицаПокупатели.СчетФактураВыданный В (&СчетаФактурыВыданные)
	|		И СчетФактураКомитента.Проведен) ВложеннаяТаблица
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.Комитент,
	|	ВложеннаяТаблица.Дата,
	|	ВложеннаяТаблица.Покупатель,
	|	ВложеннаяТаблица.СчетФактураВыданный,
	|	ВложеннаяТаблица.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложеннаяТаблица.СуммаСНДС) > 0 И СУММА(ВложеннаяТаблица.СуммаНДС) > 0
	|";
	
	Запрос.УстановитьПараметр("СчетаФактурыВыданные", СчетаФактурыВыданные);
	Запрос.УстановитьПараметр("ИдентификаторТипСчетаФактурыКомитенту", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомитента"));
	
	СчетаФактурыКомитентовКРегистрации = Запрос.Выполнить().Выгрузить();
	СчетаФактурыКомитентовКРегистрации.Индексы.Добавить("СчетФактураВыданный");
	
	Для каждого СчетФактураВыданный Из СчетаФактурыВыданные Цикл
		
		НаборЗаписей = РегистрыСведений.СчетаФактурыКомитентовКРегистрации.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.СчетФактураВыданный.Установить(СчетФактураВыданный);
		
		Отбор = Новый Структура("СчетФактураВыданный", СчетФактураВыданный);
		Строки = СчетаФактурыКомитентовКРегистрации.НайтиСтроки(Отбор);
		Для каждого Строка Из Строки Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(СчетФактураВыданный.Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли