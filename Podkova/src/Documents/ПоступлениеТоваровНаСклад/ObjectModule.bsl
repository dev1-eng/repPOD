#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет условия закупок
//
// Параметры:
//	УсловияЗакупок - Структура - Структура для заполнения.
//
Процедура ЗаполнитьУсловияЗакупок(Знач УсловияЗакупок) Экспорт
	
	Если УсловияЗакупок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Валюта = УсловияЗакупок.Валюта;
	
	Если ЗначениеЗаполнено(УсловияЗакупок.Организация) И УсловияЗакупок.Организация <> Организация Тогда
		Организация = УсловияЗакупок.Организация;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловияЗакупок.Склад) Тогда
		Склад = УсловияЗакупок.Склад;
	КонецЕсли;
	
	НаправлениеДеятельности = УсловияЗакупок.НаправлениеДеятельности;
	
	Если ЗначениеЗаполнено(УсловияЗакупок.Контрагент) И УсловияЗакупок.Контрагент <> Контрагент Тогда
		Контрагент = УсловияЗакупок.Контрагент;
	КонецЕсли;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если УсловияЗакупок.ИспользуютсяДоговорыКонтрагентов <> Неопределено
		И УсловияЗакупок.ИспользуютсяДоговорыКонтрагентов Тогда
		
		ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки();
		ХозяйственнаяОперацияДоговора = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперация);
		
		ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
		ДопПараметры.ВалютаВзаиморасчетов = Валюта;
		ДопПараметры.ВариантОформленияЗакупок = ВариантыОформленияЗакупок();
		
		Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперацияДоговора, ДопПараметры);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности") Тогда
			НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Соглашение, Договор);
		КонецЕсли;
		
		ЗаполнитьНалогообложениеНДС();
		
	КонецЕсли;
	
	ЦенаВключаетНДС   = УсловияЗакупок.ЦенаВключаетНДС;
	ВидЦеныПоставщика = УсловияЗакупок.ВидЦеныПоставщика;
	
	ЗаполнитьВидДеятельностиНДС();
	
КонецПроцедуры

// Заполняет условия закупок по торговому соглашению с поставщиком
//
// Параметры:
//	ПересчитатьЦены - Булево - Истина, если необходимо пересчитать цены в табличной части документа.
//
Процедура ЗаполнитьУсловияЗакупокПоУмолчанию(ПересчитатьЦены = Истина) Экспорт
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		
		Хозяйственныеоперации = Новый Массив;
		Хозяйственныеоперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьИмпортныеЗакупки") Тогда
			Хозяйственныеоперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
			Хозяйственныеоперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
		КонецЕсли;
		
		ПараметрыОтбораСоглашения = Новый Структура;
		ПараметрыОтбораСоглашения.Вставить("ВыбранноеСоглашение",                     Соглашение);
		ПараметрыОтбораСоглашения.Вставить("ХозяйственныеОперации",                   Хозяйственныеоперации);
		ПараметрыОтбораСоглашения.Вставить("УчитыватьГруппыСкладов",                  Ложь);
		ПараметрыОтбораСоглашения.Вставить("ИсключитьГруппыСкладовДоступныеВЗаказах", Истина);
		
		УсловияЗакупокПоУмолчанию = ЗакупкиСервер.ПолучитьУсловияЗакупокПоУмолчанию(Партнер, ПараметрыОтбораСоглашения);
		
		ЦеныЗаполнены = Ложь;
		
		Если УсловияЗакупокПоУмолчанию <> Неопределено Тогда
			
			Если Соглашение <> УсловияЗакупокПоУмолчанию.Соглашение
				И ЗначениеЗаполнено(УсловияЗакупокПоУмолчанию.Соглашение) Тогда
				
				Соглашение = УсловияЗакупокПоУмолчанию.Соглашение;
				ЗаполнитьУсловияЗакупок(УсловияЗакупокПоУмолчанию);
				
				Если ПересчитатьЦены И ЗначениеЗаполнено(Соглашение) Тогда
					
					СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
					
					ПараметрыЗаполнения = Новый Структура;
					ПараметрыЗаполнения.Вставить("ПоляЗаполнения",     "Цена, СтавкаНДС");
					ПараметрыЗаполнения.Вставить("Дата",               Дата);
					ПараметрыЗаполнения.Вставить("Валюта",             Валюта);
					ПараметрыЗаполнения.Вставить("Соглашение",         Соглашение);
					ПараметрыЗаполнения.Вставить("ВидЦеныПоставщика",  ВидЦеныПоставщика);
					ПараметрыЗаполнения.Вставить("НалогообложениеНДС", НалогообложениеНДС);
					
					ДействияСоСтроками = Новый Структура;
					ДействияСоСтроками.Вставить("ПересчитатьСумму",     "КоличествоУпаковок");
					ДействияСоСтроками.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
					ДействияСоСтроками.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
					
					ЦеныЗаполнены = ЗакупкиСервер.ЗаполнитьЦены(Товары, Неопределено, ПараметрыЗаполнения, ДействияСоСтроками);
					
				КонецЕсли;
				
			Иначе
				ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
				Соглашение = УсловияЗакупокПоУмолчанию.Соглашение;
			КонецЕсли;
			
		Иначе
			
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
			Соглашение = Неопределено;
			
			ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
			ДопПараметры.ВалютаВзаиморасчетов = Валюта;
			ДопПараметры.ВариантОформленияЗакупок = ВариантыОформленияЗакупок();
			Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперация, ДопПараметры);
			
			ХозяйственнаяОперация = ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупки("Документ.ПоступлениеТоваровНаСклад",
																						Соглашение,
																						Договор)[0];
			
			ЗаполнитьНалогообложениеНДС();
			ЗаполнитьВидДеятельностиНДС();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПоступлениеТоваровНаСклад),
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) 
		Или Не НаправленияДеятельностиСервер.УказаниеНаправленияДеятельностиОбязательно(ХозяйственнаяОперация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Валюта");
		МассивНепроверяемыхРеквизитов.Добавить("ВидЦеныПоставщика");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СтавкаНДС");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ЗакупкиСервер.ПроверитьКорректностьЗаполненияДокументаЗакупки(ЭтотОбъект, Отказ);
	
	ПоступлениеТоваровНаСкладЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Перем СкладПоступления;
	Перем ХозяйственнаяОперацияПриемки;
	Перем ЗаполнятьПоНакладной;
	Перем ЗаполнятьПоОрдеру;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			
			ДанныеЗаполнения.Свойство("СкладПоступления",             СкладПоступления);
			ДанныеЗаполнения.Свойство("ХозяйственнаяОперацияПриемки", ХозяйственнаяОперацияПриемки);
			ДанныеЗаполнения.Свойство("ЗаполнятьПоНакладной",         ЗаполнятьПоНакладной);
			ДанныеЗаполнения.Свойство("ЗаполнятьПоОрдеру",            ЗаполнятьПоОрдеру);
		
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				
				ЗаполнитьДокументНаОснованииЗаказаПоставщику(ДанныеЗаполнения.ДокументОснование,
															СкладПоступления,
															ХозяйственнаяОперацияПриемки,
															ЗаполнятьПоНакладной,
															ЗаполнятьПоОрдеру);
				
			КонецЕсли;
			
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.СоглашенияСПоставщиками") Тогда
				
				ЗаполнитьДокументНаОснованииСоглашенияСПоставщиком(ДанныеЗаполнения.ДокументОснование,
																	СкладПоступления,
																	ХозяйственнаяОперацияПриемки,
																	ЗаполнятьПоНакладной);
				
			КонецЕсли;
			
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				
				ЗаполнитьДокументНаОснованииДоговора(ДанныеЗаполнения.ДокументОснование,
													СкладПоступления,
													ХозяйственнаяОперацияПриемки,
													ЗаполнятьПоНакладной,
													ЗаполнятьПоОрдеру);
				
			КонецЕсли;
			
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
				
				ЗаполнитьДокументНаОснованииПриобретенияТоваров(ДанныеЗаполнения.ДокументОснование,
																СкладПоступления,
																ХозяйственнаяОперацияПриемки,
																ЗаполнятьПоНакладной);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ПоступлениеТоваровНаСкладЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ХозяйственныеОперацииИмпорта     = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
											Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозяйственныеОперацииВвозаИзЕАЭС = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
											Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	
	ОперацияНеОблагаетсяНДС = ХозяйственныеОперацииИмпорта.Найти(ХозяйственнаяОперация) <> Неопределено
								Или ХозяйственныеОперацииВвозаИзЕАЭС.Найти(ХозяйственнаяОперация) <> Неопределено;
	
	Если ОперацияНеОблагаетсяНДС Тогда
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути Тогда
		
		Для Каждого Строка Из Товары Цикл
			Строка.Цена      = 0;
			Строка.Сумма     = 0;
			Строка.СуммаНДС  = 0;
			Строка.СуммаСНДС = 0;
		КонецЦикла;
		
		ВидЦеныПоставщика = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
		Валюта = Справочники.Валюты.ПустаяСсылка();
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
		Документы.ПоступлениеТоваровНаСклад);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	СуммаДокумента = Товары.Итог("СуммаСНДС");
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ОсновнаяХозОперация = ЗакупкиСервер.ОсновнаяХозяйственнаяОперацияРаздельнойЗакупки(ХозяйственнаяОперация);
		
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
			ОсновнаяХозОперация,
			Склад,
			Подразделение,
			Партнер,
			Договор);
			
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		ИменаПолей.СтатусУказанияСерий = "СтатусУказанияСерий";
		
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(
			Товары,
			МестаУчета,
			ИменаПолей);
			
		МестаУчетаУПартнеров = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
			ХозяйственнаяОперация,
			Договор,
			Подразделение,
			Партнер,
			Договор);
			
		ИменаПолей.АналитикаУчетаНоменклатуры = "АналитикаУчетаНоменклатурыТоварыУПартнеров";
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути Тогда
			ИменаПолей.СтатусУказанияСерий        = "СтатусУказанияСерийТоварыУПартнеров";
		Иначе
			// Операция неотфактуровки сообщает о сериях Приобретению двигая серии как по складу.
			ИменаПолей.СтатусУказанияСерий        = "СтатусУказанияСерий";
		КонецЕсли;
		
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(
			Товары,
			МестаУчетаУПартнеров,
			ИменаПолей);
			
		ЗаполнитьВидыЗапасов(Отказ);
		НоменклатураПартнеровСервер.ЗаполнитьПустоеСопоставлениеВНоменклатуреПартнераПоНоменклатуреИБ(Товары, Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ВидыЗапасов.Очистить();
	КонецЕсли;
	
	ПоступлениеТоваровНаСкладЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ПоступлениеТоваровНаСклад.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	Ценообразование.ОтразитьЦеныНоменклатурыПоставщика(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.Проведение);	
	
	ПоступлениеТоваровНаСкладЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	СформироватьСписокРегистровДляКонтроля();
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);	
	ПоступлениеТоваровНаСкладЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ДатаВходящегоДокумента = Дата(1,1,1);
	НомерВходящегоДокумента = "";
	
	Для Каждого ТекСтрока Из Товары Цикл
		
		ТекСтрока.АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.ПустаяСсылка();

	КонецЦикла;
	
	УчетНДСУП.СкорректироватьСтавкуНДСВТЧДокумента(ЭтотОбъект, Товары);
	
	ВидыЗапасов.Очистить();
	Серии.Очистить();
	
	ИнициализироватьДокумент();
	
	ПоступлениеТоваровНаСкладЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ
		И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
		
	КонецЕсли;
	
	ПоступлениеТоваровНаСкладЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Менеджер    = Пользователи.ТекущийПользователь();
	Валюта      = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад       = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
	Распоряжение = ДокументОснованиеПриЗаполнении(ДанныеЗаполнения);
	ВариантПриемкиТоваров = ЗакупкиСервер.ПолучитьВариантПриемкиТоваров(Распоряжение, Договор);
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		ЗаполнитьНалогообложениеНДС();
	КонецЕсли;
	
	ЗаполнитьВидДеятельностиНДС();
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииСоглашенияСПоставщиком(Знач ДокументОснование, Знач СкладПоступления = Неопределено, Знач ХозяйственнаяОперацияПриемки = Неопределено, Знач ЗаполнятьПоНакладной = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоглашениеСПоставщиком.Ссылка КАК Ссылка,
	|	СоглашениеСПоставщиком.Ссылка КАК Соглашение,
	|	СоглашениеСПоставщиком.Партнер КАК Партнер,
	|	СоглашениеСПоставщиком.Контрагент КАК Контрагент,
	|	СоглашениеСПоставщиком.Организация КАК Организация,
	|	СоглашениеСПоставщиком.Статус КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА СоглашениеСПоставщиком.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	ВЫБОР
	|		КОГДА СоглашениеСПоставщиком.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоАгентскиеУслуги,
	|	СоглашениеСПоставщиком.Валюта КАК Валюта,
	|	СоглашениеСПоставщиком.ВидЦеныПоставщика КАК ВидЦены,
	|	СоглашениеСПоставщиком.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	СоглашениеСПоставщиком.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Справочник.СоглашенияСПоставщиками КАК СоглашениеСПоставщиком
	|ГДЕ
	|	СоглашениеСПоставщиком.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоНакладной = ЛОЖЬ
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоНакладной = ИСТИНА
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборТоварыОрганизацийУПартнеров
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ТаблицаТовары
	|	ПО ТаблицаРаспоряжение.Ссылка = ТаблицаТовары.ДокументПоступления
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|	ПО АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
	|	И АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТовары.Характеристика
	|	И АналитикаУчетаНоменклатуры.Серия = ТаблицаТовары.Серия
	|	И АналитикаУчетаНоменклатуры.Назначение = ТаблицаТовары.Назначение
	|	И АналитикаУчетаНоменклатуры.Партнер = ТаблицаРаспоряжение.Партнер
	|	И АналитикаУчетаНоменклатуры.Контрагент = ТаблицаРаспоряжение.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка          КАК Ссылка,
	|	ТаблицаРаспоряжение.Соглашение      КАК Соглашение,
	|	ТаблицаРаспоряжение.Партнер         КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент      КАК Контрагент,
	|	ТаблицаРаспоряжение.Организация     КАК Организация,
	|	ТаблицаРаспоряжение.СтатусДокумента КАК СтатусДокумента,
	|	ТаблицаРаспоряжение.Валюта          КАК Валюта,
	|	ТаблицаРаспоряжение.ВидЦены         КАК ВидЦены,
	|	ТаблицаРаспоряжение.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.ЭтоАгентскиеУслуги КАК ЭтоАгентскиеУслуги,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус   КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение          КАК Назначение,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок
	|ИЗ
	|	ВТТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
	|	ТоварыОрганизаций.КоличествоОстаток                         КАК Передано
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры)
	|				В (ВЫБРАТЬ
	|						ТаблицаОтбор.АналитикаУчетаНоменклатуры
	|					ИЗ
	|						ВТОтборТоварыОрганизацийУПартнеров КАК ТаблицаОтбор
	|				)) КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.КоличествоОстаток > 0";
		
	Запрос.УстановитьПараметр("ДокументОснование",    ДокументОснование);
	Запрос.УстановитьПараметр("СкладПоступления",     СкладПоступления);
	Запрос.УстановитьПараметр("СкладУказан",          ЗначениеЗаполнено(СкладПоступления));
	Запрос.УстановитьПараметр("ЗаполнятьПоНакладной", ЗаполнятьПоНакладной = Истина);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка            = РезультатЗапроса[3].Выбрать();
	ТЗТовары           = РезультатЗапроса[4].Выгрузить();
	ТЗТоварыУПартнеров = РезультатЗапроса[5].Выгрузить();
	
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыСоглашенийСПоставщиками.Действует);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(Выборка.Соглашение,
															Выборка.СтатусДокумента,
															,
															Выборка.ЕстьОшибкиСтатус,
															МассивДопустимыхСтатусов);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСоглашения(,Выборка.ЭтоАгентскиеУслуги);
	
	Распоряжение = ДокументОснование;
	
	ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки(Истина);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперацияПриемки);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ?(Не ЗначениеЗаполнено(ХозяйственнаяОперацияПриемкиФактическоеПоступление),
															ХозяйственнаяОперацияПриемки,
															ХозяйственнаяОперацияПриемкиФактическоеПоступление);
	
	ХозяйственнаяОперация = ХозяйственнаяОперацияПриемкиФактическоеПоступление;
	
	Если ЗначениеЗаполнено(СкладПоступления) Тогда
		Склад = СкладПоступления;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Товары.Загрузить(ТЗТовары);
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок",
										ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
	ЗаполнитьЦеныПоСоглашению();
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаказаПоставщику(ДокументОснование,
														СкладПоступления = Неопределено,
														ХозяйственнаяОперацияПриемки = Неопределено,
														ЗаполнятьПоНакладной = Ложь,
														ЗаполнятьПоОрдеру = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Ссылка,
	|	ЗаказПоставщику.Соглашение КАК Соглашение,
	|	ЗаказПоставщику.Партнер КАК Партнер,
	|	ЗаказПоставщику.Контрагент КАК Контрагент,
	|	ЗаказПоставщику.Организация КАК Организация,
	|	ЗаказПоставщику.Статус КАК СтатусДокумента,
	|	ЗаказПоставщику.Договор КАК Договор,
	|	ЗаказПоставщику.Сделка КАК Сделка,
	|	ЗаказПоставщику.Валюта КАК Валюта,
	|	ЕСТЬNULL(Соглашения.ВидЦеныПоставщика, ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)) КАК ВидЦеныПоставщика,
	|	ЗаказПоставщику.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЗаказПоставщику.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЗаказПоставщику.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС,
	|	ЗаказПоставщику.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕ ЗаказПоставщику.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщику.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусызаказовПоставщикам.НеСогласован),ЗНАЧЕНИЕ(Перечисление.СтатусызаказовПоставщикам.Согласован))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашения
	|		ПО ЗаказПоставщику.Соглашение = Соглашения.Ссылка
	|ГДЕ
	|	ЗаказПоставщику.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоЗаказу
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоНакладной
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоОрдеру
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборТоварыОрганизацийУПартнеров
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ТаблицаТовары
	|	ПО ТаблицаРаспоряжение.Ссылка = ТаблицаТовары.ДокументПоступления
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|	ПО АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
	|	И АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТовары.Характеристика
	|	И АналитикаУчетаНоменклатуры.Серия = ТаблицаТовары.Серия
	|	И АналитикаУчетаНоменклатуры.Назначение = ТаблицаТовары.Назначение
	|	И АналитикаУчетаНоменклатуры.Договор = ТаблицаРаспоряжение.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка          КАК Ссылка,
	|	ТаблицаРаспоряжение.Соглашение      КАК Соглашение,
	|	ТаблицаРаспоряжение.Партнер         КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент      КАК Контрагент,
	|	ТаблицаРаспоряжение.Организация     КАК Организация,
	|	ТаблицаРаспоряжение.СтатусДокумента КАК СтатусДокумента,
	|	ТаблицаРаспоряжение.Договор         КАК Договор,
	|	ТаблицаРаспоряжение.Сделка          КАК Сделка,
	|	ТаблицаРаспоряжение.Валюта          КАК Валюта,
	|	ТаблицаРаспоряжение.ВидЦеныПоставщика  КАК ВидЦеныПоставщика,
	|	ТаблицаРаспоряжение.ЦенаВключаетНДС    КАК ЦенаВключаетНДС,
	|	ТаблицаРаспоряжение.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРаспоряжение.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.ЕстьОшибкиПроведен КАК ЕстьОшибкиПроведен,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус   КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение          КАК Назначение,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок
	|ИЗ
	|	ВТТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
	|	ТоварыОрганизаций.КоличествоОстаток                         КАК Передано
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры)
	|				В (ВЫБРАТЬ
	|						ТаблицаОтбор.АналитикаУчетаНоменклатуры
	|					ИЗ
	|						ВТОтборТоварыОрганизацийУПартнеров КАК ТаблицаОтбор
	|				)) КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.КоличествоОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументОснование",    ДокументОснование);
	Запрос.УстановитьПараметр("СкладПоступления",     СкладПоступления);
	Запрос.УстановитьПараметр("СкладУказан",          ЗначениеЗаполнено(СкладПоступления));
	Запрос.УстановитьПараметр("ЗаполнятьПоЗаказу",    Не (ЗаполнятьПоНакладной = Истина Или ЗаполнятьПоОрдеру = Истина));
	Запрос.УстановитьПараметр("ЗаполнятьПоНакладной", ЗаполнятьПоНакладной = Истина);
	Запрос.УстановитьПараметр("ЗаполнятьПоОрдеру",    ЗаполнятьПоОрдеру = Истина);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка            = РезультатЗапроса[3].Выбрать();
	ТЗТовары           = РезультатЗапроса[4].Выгрузить();
	ТЗТоварыУПартнеров = РезультатЗапроса[5].Выгрузить();
	
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовПоставщикам.Закрыт);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(ДокументОснование,
															Выборка.СтатусДокумента,
															Выборка.ЕстьОшибкиПроведен,
															Выборка.ЕстьОшибкиСтатус,
															МассивДопустимыхСтатусов);
	
	Распоряжение = ДокументОснование;
	Склад        = СкладПоступления;
	
	ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки(Истина);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперацияПриемки);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ?(Не ЗначениеЗаполнено(ХозяйственнаяОперацияПриемкиФактическоеПоступление),
															ХозяйственнаяОперацияПриемки,
															ХозяйственнаяОперацияПриемкиФактическоеПоступление);
	
	ХозяйственнаяОперация = ХозяйственнаяОперацияПриемкиФактическоеПоступление;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Товары.Загрузить(ТЗТовары);
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок",
										ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
	ЗаполнитьЦеныПоСоглашению();
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииПриобретенияТоваров(Знач ДокументОснование, Знач СкладПоступления = Неопределено, Знач ХозяйственнаяОперацияПриемки = Неопределено, Знач ЗаполнятьПоНакладной = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка      КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Соглашение  КАК Соглашение,
	|	ПриобретениеТоваровУслуг.Партнер     КАК Партнер,
	|	ПриобретениеТоваровУслуг.Контрагент  КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Договор     КАК Договор,
	|	ПриобретениеТоваровУслуг.Сделка      КАК Сделка,
	|	ПриобретениеТоваровУслуг.Валюта      КАК Валюта,
	|	ЕСТЬNULL(Соглашения.ВидЦеныПоставщика, ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)) КАК ВидЦеныПоставщика,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС,
	|	ПриобретениеТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕ ПриобретениеТоваровУслуг.Проведен     КАК ЕстьОшибкиПроведен,
	|	ЛОЖЬ                                    КАК ЕстьОшибкиСтатус
	|ПОМЕСТИТЬ ВТРаспоряжение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашения
	|		ПО ПриобретениеТоваровУслуг.Соглашение = Соглашения.Ссылка
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура        КАК Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика      КАК Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение          КАК Назначение,
	|	ТоварыКПоступлениюОстатки.Серия               КАК Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			,
	|			ДокументПоступления = &ДокументОснование
	|				И ВЫБОР
	|					КОГДА &СкладУказан
	|						ТОГДА Склад = &СкладПоступления
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоНакладной = ЛОЖЬ
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлениюОстатки.ДокументПоступления,
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Назначение,
	|	ТоварыКПоступлениюОстатки.Серия,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК Количество,
	|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
	|		И ВЫБОР КОГДА &СкладУказан
	|			ТОГДА Склад = &СкладПоступления
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
	|ГДЕ
	|	&ЗаполнятьПоНакладной = ИСТИНА
	|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборТоварыОрганизацийУПартнеров
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ТаблицаТовары
	|	ПО ТаблицаРаспоряжение.Ссылка = ТаблицаТовары.ДокументПоступления
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|	ПО АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
	|	И АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТовары.Характеристика
	|	И АналитикаУчетаНоменклатуры.Серия = ТаблицаТовары.Серия
	|	И АналитикаУчетаНоменклатуры.Назначение = ТаблицаТовары.Назначение
	|	И АналитикаУчетаНоменклатуры.Договор = ТаблицаРаспоряжение.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжение.Ссылка      КАК Ссылка,
	|	ТаблицаРаспоряжение.Соглашение  КАК Соглашение,
	|	ТаблицаРаспоряжение.Партнер     КАК Партнер,
	|	ТаблицаРаспоряжение.Контрагент  КАК Контрагент,
	|	ТаблицаРаспоряжение.Организация КАК Организация,
	|	ТаблицаРаспоряжение.Договор     КАК Договор,
	|	ТаблицаРаспоряжение.Сделка      КАК Сделка,
	|	ТаблицаРаспоряжение.Валюта      КАК Валюта,
	|	ТаблицаРаспоряжение.ВидЦеныПоставщика  КАК ВидЦеныПоставщика,
	|	ТаблицаРаспоряжение.ЦенаВключаетНДС    КАК ЦенаВключаетНДС,
	|	ТаблицаРаспоряжение.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаРаспоряжение.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРаспоряжение.ЕстьОшибкиПроведен КАК ЕстьОшибкиПроведен,
	|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус   КАК ЕстьОшибкиСтатус
	|ИЗ
	|	ВТРаспоряжение КАК ТаблицаРаспоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение          КАК Назначение,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок
	|ИЗ
	|	ВТТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
	|	ТоварыОрганизаций.КоличествоОстаток                         КАК Передано
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры)
	|				В (ВЫБРАТЬ
	|						ТаблицаОтбор.АналитикаУчетаНоменклатуры
	|					ИЗ
	|						ВТОтборТоварыОрганизацийУПартнеров КАК ТаблицаОтбор
	|				)) КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.КоличествоОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументОснование",    ДокументОснование);
	Запрос.УстановитьПараметр("СкладПоступления",     СкладПоступления);
	Запрос.УстановитьПараметр("СкладУказан",          ЗначениеЗаполнено(СкладПоступления));
	Запрос.УстановитьПараметр("ЗаполнятьПоНакладной", ЗаполнятьПоНакладной = Истина);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка            = РезультатЗапроса[3].Выбрать();
	ТЗТовары           = РезультатЗапроса[4].Выгрузить();
	ТЗТоварыУПартнеров = РезультатЗапроса[5].Выгрузить();
	
	Выборка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(ДокументОснование,
															,
															Выборка.ЕстьОшибкиПроведен,
															Выборка.ЕстьОшибкиСтатус);
	
	Распоряжение = ДокументОснование;
	Склад        = СкладПоступления;
	
	ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки(Истина);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперацияПриемки);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ?(Не ЗначениеЗаполнено(ХозяйственнаяОперацияПриемкиФактическоеПоступление),
															ХозяйственнаяОперацияПриемки,
															ХозяйственнаяОперацияПриемкиФактическоеПоступление);
	
	ХозяйственнаяОперация = ХозяйственнаяОперацияПриемкиФактическоеПоступление;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Товары.Загрузить(ТЗТовары);
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок",
										ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
	ЗаполнитьЦеныПоСоглашению();
	
КонецПроцедуры

Функция ДокументОснованиеПриЗаполнении(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокументОснование")
		И (ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
			Или ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.СоглашенияСПоставщиками")
			Или ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
		
		Возврат ДанныеЗаполнения.ДокументОснование;

	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ЗаполнитьДокументНаОснованииДоговора(ДокументОснование,
												СкладПоступления = Неопределено,
												ХозяйственнаяОперацияПриемки = Неопределено,
												ЗаполнятьПоНакладной = Ложь,
												ЗаполнятьПоОрдеру = Ложь)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Договор.Ссылка КАК Ссылка,
		|	Договор.Ссылка КАК Договор,
		|	Договор.Партнер КАК Партнер,
		|	Договор.Контрагент КАК Контрагент,
		|	Договор.Организация КАК Организация,
		|	Договор.Статус КАК СтатусДокумента,
		|	ВЫБОР
		|		КОГДА Договор.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ВЫБОР
		|		КОГДА Договор.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоАгентскиеУслуги,
		|	Договор.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ВТРаспоряжение
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК Договор
		|ГДЕ
		|	Договор.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.ДокументПоступления,
		|	ТоварыКПоступлениюОстатки.Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение,
		|	ТоварыКПоступлениюОстатки.Серия,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК Количество,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
		|		И ВЫБОР КОГДА &СкладУказан
		|			ТОГДА Склад = &СкладПоступления
		|			ИНАЧЕ ИСТИНА
		|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	НЕ &ЗаполнятьПоНакладной
		|	И НЕ &ЗаполнятьПоОрдеру
		|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоРаспоряжениюОстаток > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.ДокументПоступления,
		|	ТоварыКПоступлениюОстатки.Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение,
		|	ТоварыКПоступлениюОстатки.Серия,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток КАК Количество,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток КАК КоличествоУпаковок
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
		|		И ВЫБОР КОГДА &СкладУказан
		|			ТОГДА Склад = &СкладПоступления
		|			ИНАЧЕ ИСТИНА
		|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	НЕ &ЗаполнятьПоНакладной
		|	И &ЗаполнятьПоОрдеру
		|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоОрдерамОстаток > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.ДокументПоступления,
		|	ТоварыКПоступлениюОстатки.Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение,
		|	ТоварыКПоступлениюОстатки.Серия,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК Количество,
		|	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток КАК КоличествоУпаковок
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(,ДокументПоступления = &ДокументОснование 
		|		И ВЫБОР КОГДА &СкладУказан
		|			ТОГДА Склад = &СкладПоступления
		|			ИНАЧЕ ИСТИНА
		|	КОНЕЦ) КАК ТоварыКПоступлениюОстатки
		|ГДЕ
		|	&ЗаполнятьПоНакладной
		|	И ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ ВТОтборТоварыОрганизацийУПартнеров
		|ИЗ
		|	ВТРаспоряжение КАК ТаблицаРаспоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ТаблицаТовары
		|	ПО ТаблицаРаспоряжение.Ссылка = ТаблицаТовары.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|	ПО АналитикаУчетаНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
		|	И АналитикаУчетаНоменклатуры.Характеристика = ТаблицаТовары.Характеристика
		|	И АналитикаУчетаНоменклатуры.Серия = ТаблицаТовары.Серия
		|	И АналитикаУчетаНоменклатуры.Назначение = ТаблицаТовары.Назначение
		|	И АналитикаУчетаНоменклатуры.Договор = ТаблицаРаспоряжение.Договор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРаспоряжение.Ссылка          КАК Ссылка,
		|	ТаблицаРаспоряжение.Договор         КАК Договор,
		|	ТаблицаРаспоряжение.Партнер         КАК Партнер,
		|	ТаблицаРаспоряжение.Контрагент      КАК Контрагент,
		|	ТаблицаРаспоряжение.Организация     КАК Организация,
		|	ТаблицаРаспоряжение.СтатусДокумента КАК СтатусДокумента,
		|	ТаблицаРаспоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаРаспоряжение.ЭтоАгентскиеУслуги КАК ЭтоАгентскиеУслуги,
		|	ТаблицаРаспоряжение.ЕстьОшибкиСтатус   КАК ЕстьОшибкиСтатус
		|ИЗ
		|	ВТРаспоряжение КАК ТаблицаРаспоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.ДокументПоступления КАК ДокументПоступления,
		|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
		|	ТаблицаТовары.Характеристика      КАК Характеристика,
		|	ТаблицаТовары.Назначение          КАК Назначение,
		|	ТаблицаТовары.Серия               КАК Серия,
		|	ТаблицаТовары.Количество          КАК Количество,
		|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок
		|ИЗ
		|	ВТТовары КАК ТаблицаТовары
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
		|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
		|	ТоварыОрганизаций.КоличествоОстаток                         КАК Передано
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			,
		|			(АналитикаУчетаНоменклатуры)
		|				В (ВЫБРАТЬ
		|						ТаблицаОтбор.АналитикаУчетаНоменклатуры
		|					ИЗ
		|						ВТОтборТоварыОрганизацийУПартнеров КАК ТаблицаОтбор
		|				)) КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.КоличествоОстаток > 0");
		
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("СкладПоступления",  СкладПоступления);
	Запрос.УстановитьПараметр("СкладУказан",       ЗначениеЗаполнено(СкладПоступления));
	Запрос.УстановитьПараметр("ЗаполнятьПоНакладной", ЗаполнятьПоНакладной = Истина);
	Запрос.УстановитьПараметр("ЗаполнятьПоОрдеру", ЗаполнятьПоОрдеру = Истина);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка            = РезультатЗапроса[3].Выбрать();
	ТЗТовары           = РезультатЗапроса[4].Выгрузить();
	ТЗТоварыУПартнеров = РезультатЗапроса[5].Выгрузить();
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыДоговоровКонтрагентов.Действует);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.Договор,
		Выборка.СтатусДокумента,
		,
		Выборка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ПарыОперацийРаздельнойЗакупки = ЗакупкиСервер.ПарыОперацийРаздельнойЗакупки(Истина);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ПарыОперацийРаздельнойЗакупки.Получить(ХозяйственнаяОперацияПриемки);
	ХозяйственнаяОперацияПриемкиФактическоеПоступление = ?(Не ЗначениеЗаполнено(ХозяйственнаяОперацияПриемкиФактическоеПоступление),
		ХозяйственнаяОперацияПриемки,
		ХозяйственнаяОперацияПриемкиФактическоеПоступление);
	
	Распоряжение          = ДокументОснование;
	ХозяйственнаяОперация = ХозяйственнаяОперацияПриемкиФактическоеПоступление;
	
	Если ЗначениеЗаполнено(СкладПоступления) Тогда
		Склад = СкладПоступления;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	ЗаполнитьНалогообложениеНДС();
	
	Товары.Загрузить(ТЗТовары);
	
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить(
		"ПересчитатьКоличествоУпаковок",
		ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
		
	ЗаполнитьСтавкуНДС = Новый Структура("НалогообложениеНДС, Дата", НалогообложениеНДС, Дата);
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", ЗаполнитьСтавкуНДС);
		
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
	ЗаполнитьЦеныПоСоглашению();
	
КонецПроцедуры

Процедура ЗаполнитьНалогообложениеНДС()
	
	ПараметрыЗаполнения = Документы.ПоступлениеТоваровНаСклад.ПараметрыЗаполненияНалогообложенияНДСЗакупки(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьВидДеятельностиНДС()
	
	ПараметрыЗаполнения = Документы.ПоступлениеТоваровНаСклад.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВидДеятельностиНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

// Возвращает временные таблицы с данными документа.
// Используется для заполнения видов запасов.
//
//	Параметры:
//		ДляТоваровУПартнеров	- Булево - Подменяет аналитику учета номенклатуры.
//
//	Возвращаемое значение:
//		МенеджерВременныхТаблиц - менеджер временных таблиц с данными документа.
//
Функция ВременныеТаблицыДанныхДокумента(ДляТоваровУПартнеров)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	&МестоХранения КАК МестоХранения,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК ЕстьСделкиВТабличнойЧасти,
	|	&ТипЗапасов КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	&ТаблицаТоваровАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерийТоварыУПартнеров = 18
	|			ИЛИ (ТаблицаТоваров.СтатусУказанияСерийТоварыУПартнеров = 0
	|				И ТаблицаТоваров.СтатусУказанияСерийНаСкладах = 14)
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	&ВидЦены КАК ВидЦены,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&ТаблицаВидыЗапасовАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	Аналитика.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЛОЖЬ КАК ВидыЗапасовУказаныВручную,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &Проведен
	|			ТОГДА ТаблицаТоваров.ВидЗапасов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ТекущийВидЗапасов,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	&Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК ВладелецТовара,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка) КАК ВидЦены
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТаблицаТоваров.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И (ТаблицаТоваров.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|			ИЛИ ВидыЗапасов.ТипЗапасов <> &ТипЗапасов
	|			ИЛИ ВидыЗапасов.Организация <> &Организация
	|			ИЛИ &ПерезаполнитьВидыЗапасов)";
	
	Если ДляТоваровУПартнеров Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаТоваровАналитикаУчетаНоменклатуры",
									"ТаблицаТоваров.АналитикаУчетаНоменклатурыТоварыУПартнеров");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаВидыЗапасовАналитикаУчетаНоменклатуры",
									"ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыТоварыУПартнеров");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаТоваровАналитикаУчетаНоменклатуры",
									"ТаблицаТоваров.АналитикаУчетаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"&ТаблицаВидыЗапасовАналитикаУчетаНоменклатуры",
									"ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",         Товары);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",     ВидыЗапасов);
	Запрос.УстановитьПараметр("Ссылка",                 Ссылка);
	Запрос.УстановитьПараметр("Дата",                   Дата);
	Запрос.УстановитьПараметр("Партнер",                Партнер);
	Запрос.УстановитьПараметр("Контрагент",             Контрагент);
	Запрос.УстановитьПараметр("Соглашение",             Соглашение);
	Запрос.УстановитьПараметр("Договор",                Договор);
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("Склад",                  Склад);
	Запрос.УстановитьПараметр("МестоХранения",          Склад);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", 	ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Менеджер",               Менеджер);
	Запрос.УстановитьПараметр("Валюта",                 Валюта);
	Запрос.УстановитьПараметр("ТипЗапасов",     		ТипЗапасовПоХозОперации());
	Запрос.УстановитьПараметр("ВидЦены",				ВидЦеныПоставщика);
	Запрос.УстановитьПараметр("Проведен",				Проведен);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект, Запрос);
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Процедура ЗаполнитьНоменклатуруТоварыУПартнеров() Экспорт
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Для Каждого СтрокаТоваров Из Товары Цикл
		
		КоличествоТоваров	= СтрокаТоваров.Количество;
		СуммаСНДС			= СтрокаТоваров.СуммаСНДС;
		СуммаНДС			= СтрокаТоваров.СуммаНДС;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		СтруктураПоиска.АналитикаУчетаНоменклатуры = СтрокаТоваров.АналитикаУчетаНоменклатурыТоварыУПартнеров;
		
		НайденныеСтроки = ВидыЗапасов.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаЗапасов Из НайденныеСтроки Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.АналитикаУчетаНоменклатурыТоварыУПартнеров = СтрокаТоваров.АналитикаУчетаНоменклатурыТоварыУПартнеров;
			НоваяСтрока.АналитикаУчетаНоменклатуры = СтрокаТоваров.АналитикаУчетаНоменклатуры;
			
			НоваяСтрока.ВидЗапасовНаСкладе	= СтрокаТоваров.ВидЗапасов;
			НоваяСтрока.Количество			= Количество;
			НоваяСтрока.КоличествоПоРНПТ	= Количество * СтрокаЗапасов.КоличествоПоРНПТ / СтрокаЗапасов.Количество;
			
			Если КоличествоТоваров <> 0 Тогда
				НоваяСтрока.СуммаСНДС	= Количество * СуммаСНДС / КоличествоТоваров;
				НоваяСтрока.СуммаНДС	= Количество * СуммаНДС / КоличествоТоваров;
			КонецЕсли;
			
			СтрокаЗапасов.Количество		= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.КоличествоПоРНПТ	= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			СтрокаЗапасов.СуммаСНДС			= СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
			СтрокаЗапасов.СуммаНДС			= СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
			
			КоличествоТоваров	= КоличествоТоваров - НоваяСтрока.Количество;
			СуммаСНДС			= СуммаСНДС - НоваяСтрока.СуммаСНДС;
			СуммаНДС			= СуммаНДС - НоваяСтрока.СуммаНДС;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыПоиска = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц		= ВременныеТаблицыДанныхДокумента(Ложь);
	ПерезаполнитьВидыЗапасов	= ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	
	ЗапасыСервер.ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц, Товары);
	
	// Заполнение товаров с выключенным признаком контроля по номерам ГТД.
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента(Истина);
	
	ВидыЗапасовПерезаполнены = Ложь;
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ЗапасыСервер.ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Тогда
		
		// разрешаем списывать остатки по пустым номерам ГТД.
		ДополнительныеСвойства.Вставить("КонтролироватьНомераГТД", Ложь);
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполнения);
		
		ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, СтавкаНДС, НомерГТД",
							"Количество, КоличествоПоРНПТ, СуммаСНДС, СуммаНДС");
		
		ВидыЗапасовПерезаполнены = Истина;
		
	КонецЕсли;
	
	Если ВидыЗапасовПерезаполнены Тогда
		ЗаполнитьНоменклатуруТоварыУПартнеров();
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЗаполненияВидовЗапасов()
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.ДокументДелаетИПриходИРасход = Истина;
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчанию();
	ПараметрыЗаполнения.ИмяТаблицыОстатков = "ТоварыУПартнеровПоложительныйОстаток";
	
	ПараметрыЗаполнения.БезОтбораПоНомерамГТД = Истина;
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Очистить();
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(ТипЗапасовПоХозОперации());
	ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = Организация;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ВидЦены = ВидЦеныПоставщика;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчанию()
	
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию = Товары.Выгрузить(, "НомерСтроки, АналитикаУчетаНоменклатуры");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ВладелецТовара", Новый ОписаниеТипов("СправочникСсылка.Партнеры"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ТипЗапасов", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ТипЗапасовРезервы", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Колонки.Добавить(
		"Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Партнер, "ВладелецТовара");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Договор, "Договор");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Организация, "Организация");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(ТипЗапасовПоХозОперации(), "ТипЗапасов");
	ТаблицаРеквизитовВидовЗапасовПоУмолчанию.ЗаполнитьЗначения(Контрагент, "Контрагент");
	
	Возврат ТаблицаРеквизитовВидовЗапасовПоУмолчанию;
	
КонецФункции

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, Дата, Партнер, Склад, Договор, ХозяйственнаяОперация, Контрагент";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	
	Массив.Добавить(Движения.ОбеспечениеЗаказов);
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Функция ТипЗапасовПоХозОперации()

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути Тогда
		
		Возврат Перечисления.ТипыЗапасов.СобственныйТоварВПути;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка Тогда
		
		Возврат Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке;
		
	Иначе
		Возврат Перечисления.ТипыЗапасов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ВариантыОформленияЗакупок()
	
	ВариантыОформленияЗакупок = Новый Массив;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки") Тогда
		ВариантыОформленияЗакупок.Добавить(Перечисления.ВариантыОформленияЗакупок.НеотфактурованныеПоставки);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков") Тогда
		ВариантыОформленияЗакупок.Добавить(Перечисления.ВариантыОформленияЗакупок.ТоварыВПути);
	КонецЕсли;
	
	Возврат ВариантыОформленияЗакупок;
	
КонецФункции

Процедура ЗаполнитьЦеныПоСоглашению()
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ПоляЗаполнения",     "Цена, СтавкаНДС");
	ПараметрыЗаполнения.Вставить("Дата",               Дата);
	ПараметрыЗаполнения.Вставить("Валюта",             Валюта);
	ПараметрыЗаполнения.Вставить("Соглашение",         Соглашение);
	ПараметрыЗаполнения.Вставить("ВидЦеныПоставщика",  ВидЦеныПоставщика);
	ПараметрыЗаполнения.Вставить("НалогообложениеНДС", НалогообложениеНДС);
	
	ДействияСоСтроками = Новый Структура;
	ДействияСоСтроками.Вставить("ПересчитатьСумму",     "КоличествоУпаковок");
	ДействияСоСтроками.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
	ДействияСоСтроками.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	ЗакупкиСервер.ЗаполнитьЦены(Товары, Неопределено, ПараметрыЗаполнения, ДействияСоСтроками);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
