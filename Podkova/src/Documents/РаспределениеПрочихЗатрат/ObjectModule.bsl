#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	РаспределениеПрочихЗатратЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	РаспределениеПрочихЗатратЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		КлючПравилаРаспределения = "";
		Если (УправленческийУчет И РегламентированныйУчет)
			Или УправленческийУчет Тогда
			КлючПравилаРаспределения = "ПравилоРаспределенияУпр";
		Иначе
			КлючПравилаРаспределения = "ПравилоРаспределенияРегл";
		КонецЕсли;
			
		Если ДанныеЗаполнения.Свойство(КлючПравилаРаспределения)
			И ЗначениеЗаполнено(ДанныеЗаполнения[КлючПравилаРаспределения]) Тогда
				
				ТекстЗапроса = 
					"ВЫБРАТЬ
					|	ПравилаРаспределения.НазначениеПравила КАК НазначениеНастройкиРаспределения,
					|	ПравилаРаспределения.НаправлениеРаспределения КАК НаправлениеРаспределения,
					|	ПравилаРаспределения.БазаРаспределенияПоПартиям КАК БазаРаспределенияПоПартиям,
					|	ПравилаРаспределения.ОтборПоНаправлениямДеятельности.(
					|		НаправлениеДеятельности КАК НаправлениеДеятельности
					|	) КАК ОтборПоНаправлениямДеятельности,
					|	ПравилаРаспределения.НаправленияДеятельности.(
					|		Ссылка КАК Ссылка,
					|		НомерСтроки КАК НомерСтроки,
					|		НаправлениеДеятельности КАК НаправлениеДеятельности,
					|		ДоляСтоимости КАК ДоляСтоимости
					|	) КАК НаправленияДеятельности
					|ИЗ
					|	Справочник.ПравилаРаспределенияРасходов КАК ПравилаРаспределения
					|ГДЕ
					|	ПравилаРаспределения.Ссылка = &Ссылка";
			
			Запрос = Новый Запрос;
			Запрос.Текст = ТекстЗапроса;
			
			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения[КлючПравилаРаспределения]);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, , 
					"ОтборПоНаправлениямДеятельности,
					|НаправленияДеятельности");
				
				
				ОтборПоНаправлениямДеятельности.Загрузить(Выборка.ОтборПоНаправлениямДеятельности.Выгрузить());
				НаправленияДеятельности.Загрузить(Выборка.НаправленияДеятельности.Выгрузить());
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НазначениеНастройкиРаспределения) Тогда
		
		НазначенияПоВарианту = Новый Соответствие;
		НазначенияПоВарианту.Вставить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности,
			Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат);
		ВариантыРаспределения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтатьяРасходов, 
			"ВариантРаспределенияРасходовРегл, ВариантРаспределенияРасходовУпр");
		
		Если УправленческийУчет Тогда
			НазначениеНастройкиРаспределения = 
				НазначенияПоВарианту.Получить(ВариантыРаспределения.ВариантРаспределенияРасходовУпр);
		КонецЕсли;
			
		Если РегламентированныйУчет Тогда
			НазначениеНастройкиРаспределения = 
				НазначенияПоВарианту.Получить(ВариантыРаспределения.ВариантРаспределенияРасходовРегл);			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НазначениеНастройкиРаспределения = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат
		И (ЗначениеЗаполнено(НаправлениеДеятельности)
		Или (ТипЗнч(АналитикаРасходов) = Тип("СправочникСсылка.НаправленияДеятельности")
			И ЗначениеЗаполнено(АналитикаРасходов))
		Или Не ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат")) Тогда
		НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Текущее;
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	РаспределениеПрочихЗатратЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеПрочихЗатрат.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Регистрация задания к расчету себестоимости.
	Если Не НазначениеНастройкиРаспределения = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат Тогда
		РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(Дата, Ссылка, Организация);
	КонецЕсли;
	
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	
	// Запись наборов записей
	РаспределениеПрочихЗатратЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	РаспределениеПрочихЗатратЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РаспределениеПрочихЗатрат.Ссылка
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК РаспределениеПрочихЗатрат
		|ГДЕ
		|	РаспределениеПрочихЗатрат.Проведен
		|	И РаспределениеПрочихЗатрат.Организация = &Организация
		|	И РаспределениеПрочихЗатрат.Подразделение = &Подразделение
		|	И РаспределениеПрочихЗатрат.НаправлениеДеятельности = &НаправлениеДеятельности
		|	И РаспределениеПрочихЗатрат.СтатьяРасходов = &СтатьяРасходов
		|	И РаспределениеПрочихЗатрат.АналитикаРасходов = &АналитикаРасходов
		|	И РаспределениеПрочихЗатрат.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
		|	И НЕ РаспределениеПрочихЗатрат.Ссылка = &ТекущийДокумент
		|	И (РаспределениеПрочихЗатрат.РегламентированныйУчет = &РегламентированныйУчет
		|		ИЛИ РаспределениеПрочихЗатрат.УправленческийУчет = &УправленческийУчет)";
	
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("Подразделение",		Подразделение);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ПериодНачало",		НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ПериодОкончание",	КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ТекущийДокумент",	Ссылка);
	Запрос.УстановитьПараметр("СтатьяРасходов",		СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",	АналитикаРасходов);
	Запрос.УстановитьПараметр("РегламентированныйУчет",	РегламентированныйУчет);
	Запрос.УстановитьПараметр("УправленческийУчет",	УправленческийУчет);
		
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТекстСообщения = НСтр("ru = 'В указанном периоде уже существует аналогичный документ.
								   |Операция не выполнена.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НазначениеНастройкиРаспределения = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат Тогда
		
		Если НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Указанные
			И ОтборПоНаправлениямДеятельности.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не заданы направления деятельности в отборе.'"),
				,
				"НаправлениеРаспределения",
				,
				Отказ);
				
		КонецЕсли;
		
		Если НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.ПоКоэффициентам
			И НаправленияДеятельности.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не введено ни одной строки в список ""Направления деятельности""'"),
				,
				"НаправленияДеятельности",
				,
				Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаправлениеРаспределения) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("БазаРаспределенияПоПартиям");
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	РаспределениеПрочихЗатратЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
