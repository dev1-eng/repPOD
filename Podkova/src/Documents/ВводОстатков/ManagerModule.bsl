#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ВводОстатковЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВводОстатковЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

#КонецОбласти

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт

	ИменаРеквизитов = "Склад,Помещение,Подразделение,ТипОперации,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры:
//	 Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение:
//	 Структура - Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВводОстатков";
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство Тогда
	Иначе
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	КонецЕсли; 
	
	НужнаяОперация = Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков 
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И НужнаяОперация;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям И НужнаяОперация;
														
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВводОстатков);
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков
		ИЛИ ((Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
				ИЛИ Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
				ИЛИ Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
			И СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение, Объект.Дата)) Тогда 
			
		ПараметрыУказанияСерий.ИспользоватьАдресноеХранение = Истина;
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		ПараметрыУказанияСерий.ИмяПоляКоличество = "КоличествоУпаковок";	
	КонецЕсли;
	
	ПараметрыУказанияСерий.ТолькоСерииСУчетомОстатков = 
								Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков 
							Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений;

	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Процедура заполняет статусы указания серий в строках ТЧ товары
//
// Параметры:
//  ПараметрыУказанияСерий - Структура - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки)
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов.
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение" Тогда
	Иначе
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий);
	КонецЕсли;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	
	// Потребности в товарах на складе.
	// "ПереходНаАдресноеХранениеТовары" - имя табличной части формы "ФормаТовары". Т.е. механизм настроен таким образом,
	// что ожидает в каждой форме где встраиваются назначения именно это имя табличной части.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И( ЗначениеРазрешено(Склад)
	|	ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	)И( ЗначениеРазрешено(ОрганизацияПолучатель)
	|	ИЛИ ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	) ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ИнициализацияДокументаИПараметровДокумента

// Инициализиция параметры регистрации счетов фактур полученных
//  Параметры:
//    ДанныеОбъекта - ДокументОбъект.ВводОстатков - Объект документа ввода остатков
//
//  Возвращаемое значение:
//    Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных().
Функция ИнициализироватьПараметрыРегистрацииСчетовФактурПолученных(ДанныеОбъекта) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных();
	ПараметрыРегистрации.Ссылка                        = ДанныеОбъекта.Ссылка;
	ПараметрыРегистрации.Дата                          = ДанныеОбъекта.Дата;
	ПараметрыРегистрации.Организация                   = ДанныеОбъекта.Организация;
	ПараметрыРегистрации.Контрагент                    = ДанныеОбъекта.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС            = ДанныеОбъекта.НалогообложениеНДС;
	ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Инициализиция параметры регистрации счетов фактур полученных
//  Параметры:
//    ДанныеОбъекта - ДокументОбъект.ВводОстатков - Объект документа ввода остатков
//
//  Возвращаемое значение:
//    Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
Функция ИнициализироватьПараметрыВидовДеятельностиНДС(ДанныеОбъекта) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация             = ДанныеОбъекта.Организация;
	ПараметрыЗаполнения.Дата                    = ДанныеОбъекта.Дата;
	ПараметрыЗаполнения.Склад                   = ДанныеОбъекта.Склад;
	ПараметрыЗаполнения.Договор                 = ДанныеОбъекта.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = ДанныеОбъекта.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПриобретениеТоваров     = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ИнициализироватьПараметрыНалогообложенияНДС(ДанныеОбъекта) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	ПараметрыЗаполнения.Организация             = ДанныеОбъекта.Организация;
	ПараметрыЗаполнения.Дата                    = ДанныеОбъекта.Дата;
	ПараметрыЗаполнения.Договор                 = ДанныеОбъекта.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = ДанныеОбъекта.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПередачаНаКомиссию      = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ИнициализироватьТипОперацииТовароДвижения(ДанныеОбъекта) Экспорт
	
	ТипОперацииТовароДвижения = Новый Структура();
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПринятойТары",                    (ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков));
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПереданнойТары",                  ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам);
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиСобственныхТоваров",              (ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров));
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПереданныхНаКомиссиюТоваров",     ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию);
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПринятыхНаКомиссиюТоваров",       (ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию));
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПереданныхПереработчикамТоваров", ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам);
	ТипОперацииТовароДвижения.Вставить("ЭтоОстаткиПереданныхВПроизводствоТоваров",  ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство);
	ТипОперацииТовароДвижения.Вставить("ЭтоПереходНаАдресноеХранение",              ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков);
	ТипОперацииТовароДвижения.Вставить("ЭтоПереходНаСкладскиеПомещения",            ДанныеОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений);
	
	Возврат ТипОперацииТовароДвижения;
	
КонецФункции

Процедура ЗаполнитьВидДеятельностиНДС(ДанныеОбъекта, ЗаполняемаяФорма, Перезаполнять = Ложь) Экспорт
	
	ТипыОперацийТовароДвижения          = ИнициализироватьТипОперацииТовароДвижения(ДанныеОбъекта);
	ПараметрыЗаполненияВидаДеятельности = ИнициализироватьПараметрыВидовДеятельностиНДС(ДанныеОбъекта);
	ЭлементФормыЗаполнения              = Неопределено;
	
	Если ТипыОперацийТовароДвижения.ЭтоОстаткиСобственныхТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.СобственныеТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПринятойТары Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПринятаяТараВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПереданныхВПроизводствоТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеВПроизводствоТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПереданныхПереработчикамТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеПереработчикамТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПереданныхПереработчикамТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеПереработчикамТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПринятыхНаКомиссиюТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПолученныеНаКомиссиюНалогообложениеНДС;
	ИначеЕсли ТипыОперацийТовароДвижения.ЭтоОстаткиПереданныхНаКомиссиюТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеНаКомиссиюНалогообложениеНДС;
	КонецЕсли;
	
	Если ЭлементФормыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если Перезаполнять Тогда
		УчетНДСУП.ЗаполнитьВидДеятельностиНДС(
			ДанныеОбъекта.ВидДеятельностиНДС,
			ПараметрыЗаполненияВидаДеятельности,
			ЗаполняемаяФорма.УчетНДСКэшированныеЗначенияПараметров);
	КонецЕсли;
	
	УчетНДСУП.ЗаполнитьСписокВыбораВидаДеятельностиНДС(
		ЭлементФормыЗаполнения,
		ДанныеОбъекта.ВидДеятельностиНДС,
		ПараметрыЗаполненияВидаДеятельности,
		ЗаполняемаяФорма.УчетНДСКэшированныеЗначенияПараметров);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	ВыбраннаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяОперация = Параметры.Ключ.ТипОперации;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ТипОперации", ВыбраннаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ВыбраннаяОперация = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования,"ТипОперации");
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		ВыбраннаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ТипОперации", ВыбраннаяОперация);
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
		Если Параметры.Свойство("ОтражатьВОперативномУчете") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВОперативномУчете", Параметры.ОтражатьВОперативномУчете);
		КонецЕсли;
		Если Параметры.Свойство("ОтражатьСебестоимость") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьСебестоимость", Параметры.ОтражатьСебестоимость);
		КонецЕсли;
		Если Параметры.Свойство("ОтражатьВБУиНУ") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВБУиНУ", Параметры.ОтражатьВБУиНУ);
		КонецЕсли;
		Если Параметры.Свойство("ОтражатьВУУ") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВУУ", Параметры.ОтражатьВУУ);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыбраннаяОперация) Тогда
		СтандартнаяОбработка = Ложь;
		СоответствиеТиповОперацийФормам = Новый Соответствие;
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников"), "ФормаРасчетыСПодотчетнымиЛицами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств"), "ФормаРасчетыСПодотчетнымиЛицами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах"), "ФормаБанковскиеСчета");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам"), "ФормаРасчетыМеждуОрганизациями");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям"), "ФормаРасчетыМеждуОрганизациями");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера"), "ФормаРасчетыПоЭквайрингу");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов"), "ФормаПрочиеАктивыПассивы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПодарочныеСертификаты"), "ФормаПодарочныеСертификаты");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов"), "ФормаРасчетыПоДоговорамКредитовИДепозитов");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации"), "ФормаТМЦВЭксплуатации");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов"), "ФормаПрочиеРасходы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ФинансовыйРезультатЗаПрошлыеПериоды"), "ФормаФинансовыйРезультат");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды"), "ФормаОптовыеПродажи");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды"), "ФормаРозничныеПродажи");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиНДСПоПриобретеннымЦенностям"), "ФормаНДСПредъявленный");
		ВыбраннаяФорма = СоответствиеТиповОперацийФормам[ВыбраннаяОперация];
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ТипОперации");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.Ссылка <> Неопределено Тогда
		Представление = ОбщегоНазначенияУТВызовСервера.ЗаголовокДокументаВводОстатковПоТипуОперации(Данные.Ссылка,
			Данные.Номер,
			Данные.Дата,
			Данные.ТипОперации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатков"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "ТоварыВЯчейках" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
									ТекстЗапроса,
									ПолноеИмяДокумента,
									СинонимТаблицыДокумента,
									ПереопределениеРасчетаПараметров);

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН2_4(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	
	ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
	ВводОстатковЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                     КАК Период,
	|	ДанныеДокумента.Номер                    КАК Номер,
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель    КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.Склад                    КАК Склад,
	|	ДанныеДокумента.Валюта                   КАК Валюта,
	|	ДанныеДокумента.Помещение                КАК Помещение,
	|	ДанныеДокумента.ТипОперации              КАК ТипОперации,
	|	ДанныеДокумента.НалогообложениеНДС       КАК НалогообложениеНДС,
	|	ДанныеДокумента.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|	ДанныеДокумента.Партия                   КАК Партия,
	|	ЕСТЬNULL(ДанныеДокумента.Партия.ТипПервичногоДокумента, ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ВнутренняяНакладная) КАК ВнутренняяНакладнаяВПартии,
	|	ДанныеДокумента.Партнер                  КАК Партнер,
	|	ДанныеДокумента.Контрагент               КАК Контрагент,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.СоглашениеСКомиссионером КАК СоглашениеСКомиссионером,
	|	ДанныеДокумента.СоглашениеСКомитентом    КАК СоглашениеСКомитентом,
	|	ДанныеДокумента.СоглашениеСКлиентом      КАК СоглашениеСКлиентом,
	|	ДанныеДокумента.Партнер                  КАК Поставщик,
	|	ДанныеДокумента.СоглашениеСКомитентом    КАК Соглашение,
	|	Ложь                                     КАК ОбособленныйУчетТоваровПоСделке,
	|	ДанныеДокумента.ЗаказПереработчику       КАК ЗаказПереработчику,
	|	ДанныеДокумента.ЗонаПриемки              КАК ЗонаПриемки,
	|	ДанныеДокумента.Менеджер                 КАК Менеджер,
	|	ДанныеДокумента.ЦенаВключаетНДС          КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ОтражатьВОперативномУчете КАК ОтражатьВОперативномУчете,
	|	ДанныеДокумента.ОтражатьСебестоимость     КАК ОтражатьСебестоимость,
	|	ДанныеДокумента.ОтражатьВБУиНУ            КАК ОтражатьВБУиНУ,
	|	ДанныеДокумента.ОтражатьВУУ               КАК ОтражатьВУУ,
	|	ДанныеДокумента.Комментарий               КАК Комментарий,
	|	ДанныеДокумента.Проведен                  КАК Проведен,
	|	ДанныеДокумента.ВводОстатков22            КАК ВводОстатков22
	|
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",  Реквизиты.Номер);
	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию Или
		Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам Тогда
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Партнер);
	Иначе
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Склад);
	КонецЕсли;
	
	СписокТиповЗаказов = Новый СписокЗначений;
	СписокТиповЗаказов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	СписокТиповЗаказов.Добавить(Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказКлиента"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"));
	Запрос.УстановитьПараметр("СписокТиповЗаказов", СписокТиповЗаказов);
	
	Запрос.УстановитьПараметр("Помещение",                      Реквизиты.Помещение);
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",          Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Подразделение",                  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ТипОперации",                    Реквизиты.ТипОперации);
	Запрос.УстановитьПараметр("Партнер",                        Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                     Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                        Реквизиты.Договор);
	Запрос.УстановитьПараметр("СоглашениеСКлиентом",            Реквизиты.СоглашениеСКлиентом);
	Запрос.УстановитьПараметр("СоглашениеСКомиссионером",       Реквизиты.СоглашениеСКомиссионером);
	Запрос.УстановитьПараметр("НалогообложениеНДС",             Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС",             Реквизиты.ВидДеятельностиНДС);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("Менеджер",                       Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ЗонаПриемки",                    Реквизиты.ЗонаПриемки);
	Запрос.УстановитьПараметр("ЗаказПереработчику",             Реквизиты.ЗаказПереработчику);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",        Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ОтражатьВОперативномУчете",		Реквизиты.ОтражатьВОперативномУчете);
	Запрос.УстановитьПараметр("ОтражатьВБУиНУ",					Реквизиты.ОтражатьВБУиНУ);
	Запрос.УстановитьПараметр("ОтражатьВУУ",					Реквизиты.ОтражатьВУУ);
	Запрос.УстановитьПараметр("ПустоеНазначение",               Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("Партия",					        Реквизиты.Партия);
	Запрос.УстановитьПараметр("ВнутренняяНакладнаяВПартии",     Реквизиты.ВнутренняяНакладнаяВПартии);
	Запрос.УстановитьПараметр("ВводОстатков22",					Реквизиты.ВводОстатков22);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации",     Справочники.Организации.НалогообложениеНДС(Реквизиты.Организация, Неопределено, Реквизиты.Период));
	
	// В отличии от других документов ВводОстатков может проводиться по регистрам себестоимости в месяце перед включением учета себестоимости.
	Запрос.УстановитьПараметр("ОтражатьСебестоимость",
		Реквизиты.ОтражатьСебестоимость
		И РасчетСебестоимостиПовтИсп.ФормироватьДвиженияПоРегистрамСебестоимости(НачалоМесяца(Реквизиты.Период), Истина));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	&ПустоеНазначение          КАК Назначение,
	|	Ключи.Серия                КАК Серия,
	|	Ключи.Склад                КАК Склад
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		&ПустоеНазначение                                КАК Назначение,
	|		Товары.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|		Товары.АналитикаУчетаНоменклатуры.МестоХранения  КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.Товары КАК Товары
	|	ГДЕ
	|		Не &УчитыватьСебестоимостьТоваровПоНазначениям
	|		И Товары.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|		Продажи.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		&ПустоеНазначение                                 КАК Назначение,
	|		Продажи.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|		Продажи.АналитикаУчетаНоменклатуры.МестоХранения  КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.ОптовыеПродажи КАК Продажи
	|	ГДЕ
	|		Не &УчитыватьСебестоимостьТоваровПоНазначениям
	|		И Продажи.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|		Продажи.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		&ПустоеНазначение                                 КАК Назначение,
	|		Продажи.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|		Продажи.АналитикаУчетаНоменклатуры.МестоХранения  КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.РозничныеПродажи КАК Продажи
	|	ГДЕ
	|		Не &УчитыватьСебестоимостьТоваровПоНазначениям
	|		И Продажи.Ссылка = &Ссылка
	|	) КАК Ключи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия = Аналитика.Серия
	|		И Ключи.Склад = Аналитика.МестоХранения
	|		И &ПустоеНазначение = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды)
	|		)
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение", Запрос.Параметры.ПустоеНазначение);
	ЗапросАналитик.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);
	ЗапросАналитик.УстановитьПараметр("ТипОперации", Запрос.Параметры.ТипОперации);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка"     , Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ТипОперации", Запрос.Параметры.ТипОперации);
	ЗапросАналитик.УстановитьПараметр("ОтражатьВОперативномУчете", Запрос.Параметры.ОтражатьВОперативномУчете);
	ЗапросАналитик.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Организация.ГоловнаяОрганизация = &Организация ТОГДА
	|		ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация
	|
	|ПОМЕСТИТЬ ВтТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРасчетов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасчетыСПартнерами.Партнер КАК Партнер,
	|	ТаблицаРасчетыСПартнерами.Контрагент КАК Контрагент,
	|	ВЫБОР 
	|		КОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов 
	|				ИЛИ ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|			ТОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов
	|		КОГДА ТаблицаРасчетыСПартнерами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ТОГДА ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|				
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасчетыСПартнерами.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаРасчетыСПартнерами.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТаблицаРасчетыСПартнерами.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И (
	|		ВЫБОР 
	|			КОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов
	|			КОГДА ТаблицаРасчетыСПартнерами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				ТОГДА ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) 
	|			= РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация,
	|	РасчетыПоФинансовымИнструментам.Партнер,
	|	РасчетыПоФинансовымИнструментам.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|   ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК РасчетыПоФинансовымИнструментам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО &Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|			И РасчетыПоФинансовымИнструментам.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|			И РасчетыПоФинансовымИнструментам.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Договор
	|			И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	РасчетыПоФинансовымИнструментам.Ссылка = &Ссылка 
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реквизиты.ОрганизацияПолучатель КАК Контрагент,
	|	ВЫБОР КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.ОбъектРасчетов
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(Расчеты.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Реквизиты
	|	ПО
	|		Реквизиты.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		Реквизиты.Организация = Аналитика.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И Реквизиты.ОрганизацияПолучатель = Аналитика.Контрагент
	|		И (ВЫБОР КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.ОбъектРасчетов
	|		ИНАЧЕ
	|			ЕСТЬNULL(Расчеты.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|			И ЕСТЬNULL(Расчеты.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реквизиты.Организация КАК Контрагент,
	|	ВЫБОР КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.ОбъектРасчетов
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(Расчеты.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Реквизиты
	|	ПО
	|		Реквизиты.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		Реквизиты.ОрганизацияПолучатель = Аналитика.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И Реквизиты.Организация = Аналитика.Контрагент
	|		И (ВЫБОР КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.ОбъектРасчетов
	|		ИНАЧЕ
	|			ЕСТЬNULL(Расчеты.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|			И ЕСТЬNULL(Расчеты.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям))
	|";
	
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность КАК КоэффициентПересчета
	|	
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&Период,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					&ВалютаУправленческогоУчета
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Кассы.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.Кассы КАК ВводОстатковКассы
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
	|						ПО ВводОстатковКассы.Касса = Кассы.Ссылка
	|				ГДЕ
	|					ВводОстатковКассы.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					КассыККМ.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.КассыККМ КАК ВводОстатковКассыККМ
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|						ПО ВводОстатковКассыККМ.КассаККМ = КассыККМ.Ссылка
	|				ГДЕ
	|					ВводОстатковКассыККМ.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.БанковскиеСчета КАК ВводОстатковБанковскиеСчета
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|						ПО ВводОстатковБанковскиеСчета.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|				ГДЕ
	|					ВводОстатковБанковскиеСчета.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыПоЭквайрингу КАК ВводОстатковРасчетыПоЭквайрингу
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|						ПО ВводОстатковРасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|				ГДЕ
	|					ВводОстатковРасчетыПоЭквайрингу.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПартнерами.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыСПартнерами КАК ВводОстатковРасчетыСПартнерами
	|				ГДЕ
	|					ВводОстатковРасчетыСПартнерами.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПартнерами.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ВводОстатковРасчетыСПартнерами
	|				ГДЕ
	|					ВводОстатковРасчетыСПартнерами.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПодотчетниками.Валюта
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыСПодотчетниками КАК ВводОстатковРасчетыСПодотчетниками
	|				ГДЕ
	|					ВводОстатковРасчетыСПодотчетниками.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковКредитовДепозитовЗаймов.Договор.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК ВводОстатковКредитовДепозитовЗаймов
	|				ГДЕ
	|					ВводОстатковКредитовДепозитовЗаймов.Ссылка = &Ссылка
	|				)
	|	) КАК КурсыВалютСрезПоследних";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                       КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика  КАК Характеристика,
	|	ТаблицаТовары.Серия           КАК Серия,
	|	ТаблицаТовары.Назначение      КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов      КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД        КАК НомерГТД
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО 
	|			  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов
	|			И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|			И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|			И ТаблицаТовары.Серия          = ПоступленияТоваров.Серия
	|			И ТаблицаТовары.Назначение     = ПоступленияТоваров.Назначение
	|			И ТаблицаТовары.НомерГТД       = ПоступленияТоваров.НомерГТД
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПередачиТоваровНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                           КАК ДатаПередачи,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов                 КАК ВидЗапасов,
	|	Товары.НомерГТД                   КАК НомерГТД,
	|	&СоглашениеСКомиссионером         КАК Соглашение,
	|	&Организация                      КАК Организация
	|ИЗ
	|	ВтТовары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|	ПО
	|		  Товары.ВидЗапасов                 = ДатыПередачиТоваровНаКомиссию.ВидЗапасов 
	|		И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|		И Товары.НомерГТД                   = ДатыПередачиТоваровНаКомиссию.НомерГТД 
	|		И ДатыПередачиТоваровНаКомиссию.Соглашение  = &СоглашениеСКомиссионером
	|		И ДатыПередачиТоваровНаКомиссию.Организация = &Организация
	|
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ОтражатьВОперативномУчете
	|	И (ДатыПередачиТоваровНаКомиссию.ДатаПередачи ЕСТЬ NULL
	|		ИЛИ ДатыПередачиТоваровНаКомиссию.ДатаПередачи < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Склад                                     КАК Склад,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                     КАК НомерГТД,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ             КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ИСТИНА                                     КАК Первичное
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваНаличные";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаКассы.Касса                     КАК Касса,
	|	ТаблицаКассы.Сумма                     КАК Сумма,
	|	ТаблицаКассы.СуммаРегл                 КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА Кассы.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.Кассы КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = Кассы.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.Касса = Кассы.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКассы.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВКассахККМ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаКассы.КассаККМ                  КАК КассаККМ,
	|	ТаблицаКассы.Сумма                     КАК Сумма,
	|	ТаблицаКассы.СуммаРегл                 КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА КассыККМ.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр,
	|	ТаблицаКассы.НомерСтроки               КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = КассыККМ.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.КассаККМ = КассыККМ.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ТаблицаКассы.КассаККМ,
	|	ТаблицаКассы.Сумма,
	|	ТаблицаКассы.СуммаРегл КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА КассыККМ.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ КАК СуммаУпр,
	|	ТаблицаКассы.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = КассыККМ.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.КассаККМ = КассыККМ.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаБанковскиеСчета.БанковскийСчет  КАК БанковскийСчет,
	|	ТаблицаБанковскиеСчета.Сумма           КАК Сумма,
	|	ТаблицаБанковскиеСчета.СуммаРегл       КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаБанковскиеСчета.Сумма
	|		ИНАЧЕ
	|			ТаблицаБанковскиеСчета.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.БанковскиеСчета КАК ТаблицаБанковскиеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = БанковскиеСчета.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаБанковскиеСчета.БанковскийСчет = БанковскиеСчета.Ссылка
	|ГДЕ
	|	ТаблицаБанковскиеСчета.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыСПартнерами";
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРасчетыСПартнерами.НомерСтроки           КАК НомерСтроки,
	|	ТаблицаРасчетыСПартнерами.ДатаПлатежа           КАК ДатаПлатежа,
	|	ТаблицаРасчетыСПартнерами.ОбъектРасчетов     КАК ОбъектРасчетов,
	|
	|	ТаблицаРасчетыСПартнерами.Сумма                 КАК Сумма,
	|	ТаблицаРасчетыСПартнерами.ВалютаВзаиморасчетов  КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПартнерами.СуммаРегл             КАК СуммаРегл,
	|	ТаблицаРасчетыСПартнерами.СуммаУпр              КАК СуммаУпр,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК КлючАналитики,
	|	ТаблицаРасчетыСПартнерами.ДокументРасчетов      КАК РасчетныйДокумент,
	|	ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ДокументРасчетов.Дата, &Период) КАК ДатаРасчетныйДокумент
	|
	|ПОМЕСТИТЬ ВтРасчетыСПартнерами
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасчетыСПартнерами.ОбъектРасчетов = ТаблицаОбъектовРасчетов.ОбъектРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И ТаблицаРасчетыСПартнерами.Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасчетыСПартнерами.Партнер = Аналитика.Партнер
	|		И (
	|		ВЫБОР 
	|			КОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ТаблицаРасчетыСПартнерами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСПартнерами.ОбъектРасчетов
	|			КОГДА ТаблицаРасчетыСПартнерами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				ТОГДА ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|		И ЕСТЬNULL(ТаблицаРасчетыСПартнерами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|			= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыСПартнерами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                         КАК ДатаРегистратора,
	|	&Номер                                        КАК НомерРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов    КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	0                                             КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСКлиентами.СуммаУпр
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаРасчетыСКлиентами.ОбъектРасчетов) НЕ В (&СписокТиповЗаказов)
	|				И ТаблицаРасчетыСКлиентами.ОбъектРасчетов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                         КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                        КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки                     КАК НомерСтроки,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) < &Период
	|		ТОГДА &Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День)
	|	КОНЕЦ                                                    КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                    КАК ДатаРегистратора,
	|	&Номер                                                   КАК НомерРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов                  КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов            КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики                   КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                                   КАК ИсключатьПриКонтроле,
	|	0                                                        КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                           КАК КОплате,
	|	0                                                        КАК СуммаРегл,
	|	0                                                        КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаРасчетыСКлиентами.ОбъектРасчетов) НЕ В (&СписокТиповЗаказов)
	|				И ТаблицаРасчетыСКлиентами.ОбъектРасчетов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                                    КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                          КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                         КАК ДатаРегистратора,
	|	&Номер                                        КАК НомерРегистратора,
	|	NULL                                          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов       КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСКлиентами.СуммаУпр
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                         КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальныхОстатковАвансовКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	&Номер                                        КАК НомерРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов       КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	АналитикаПартнера.КлючАналитики               КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	0                                             КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСКлиентами.СуммаУпр
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр,
	|	Неопределено                                  КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета               КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Организация = &Организация
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5                                                        КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки                     КАК НомерСтроки,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) < &Период
	|		ТОГДА &Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День)
	|	КОНЕЦ                                                    КАК Период,
	|	&Период                                                  КАК ДатаРегистратора,
	|	&Номер                                                   КАК НомерРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов                  КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов            КАК Валюта,
	|	АналитикаПартнера.КлючАналитики                          КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                                   КАК ИсключатьПриКонтроле,
	|	0                                                        КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                           КАК КОплате,
	|	0                                                        КАК СуммаРегл,
	|	0                                                        КАК СуммаУпр,
	|	Неопределено                                             КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                          КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|		И АналитикаПартнера.Организация = &Организация
	|		И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов
	|				ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			КОНЕЦ
	|		И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|			= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	&Номер                                        КАК НомерРегистратора,
	|	NULL                                          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.ОбъектРасчетов       КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	АналитикаПартнера.КлючАналитики               КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСКлиентами.СуммаУпр
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр,
	|	Неопределено                                  КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальныхОстатковАвансовКлиентов) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Организация = &Организация
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСКлиентами.ОбъектРасчетов
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрАналитикаВзаиморасчетовПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	АналитикаВзаиморасчетовПоставщик = Неопределено;
	
	Если Запрос.Параметры.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
		ИЛИ Запрос.Параметры.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
		
		СтруктураПоставщик = Новый Структура;
		СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
		СтруктураПоставщик.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
		СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Организация);
		СтруктураПоставщик.Вставить("Договор",     Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
		СтруктураПоставщик.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
		АналитикаВзаиморасчетовПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПоставщик", АналитикаВзаиморасчетовПоставщик);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыСПартнерами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрАналитикаВзаиморасчетовПоставщик(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                            КАК ДатаРегистратора,
	|	&Номер                                           КАК НомерРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов       КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	0                                                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов) НЕ В (&СписокТиповЗаказов)
	|				И ТаблицаРасчетыСПоставщиками.ОбъектРасчетов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                         КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                           КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки                     КАК НомерСтроки,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) < &Период
	|		ТОГДА &Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День)
	|	КОНЕЦ                                                    КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                       КАК ДатаРегистратора,
	|	&Номер                                                      КАК НомерРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                      КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов                  КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики                   КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов            КАК Валюта,
	|	0                                                           КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                           КАК КОплате,
	|	0                                                           КАК СуммаРегл,
	|	0                                                           КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов) НЕ В (&СписокТиповЗаказов)
	|				И ТаблицаРасчетыСПоставщиками.ОбъектРасчетов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                         КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.ДатаРасчетныйДокумент
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                            КАК ДатаРегистратора,
	|	&Номер                                           КАК НомерРегистратора,
	|	NULL                                             КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов       КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА НЕ &ВводОстатков22
	|			ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ                                         КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальныхОстатковАвансовПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	&Номер                                           КАК НомерРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов       КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	0                                                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	Неопределено                                     КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &Организация
	|			И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5                                                           КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки                     КАК НомерСтроки,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) < &Период
	|		ТОГДА &Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День)
	|	КОНЕЦ                                                    КАК Период,
	|	&Период                                                     КАК ДатаРегистратора,
	|	&Номер                                                      КАК НомерРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                      КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов                  КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                             КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов            КАК Валюта,
	|	0                                                           КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                           КАК КОплате,
	|	0                                                           КАК СуммаРегл,
	|	0                                                           КАК СуммаУпр,
	|	Неопределено                                                КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаПартнера.Контрагент = &Организация
	|		И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|		И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов
	|				ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	&Номер                                           КАК НомерРегистратора,
	|	NULL                                             КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.ОбъектРасчетов       КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр <> 0
	|			ТОГДА ТаблицаРасчетыСПоставщиками.СуммаУпр
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	Неопределено                                     КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводНачальныхОстатковАвансовПоставщикам) КАК ХозяйственнаяОперация,
	|	&ВалютаРегламентированногоУчета                 КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &Организация
	|			И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСПоставщиками.ОбъектРасчетов
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.ОбъектРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	&Партнер                                 КАК Партнер,
	|	&СоглашениеСКомиссионером                КАК Соглашение,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ОтражатьВОперативномУчете
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыСПодотчетниками.НомерСтроки                   КАК НомерСтроки,
	|	&Период                                              КАК Период,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                                КАК ВидДвижения,
	|	&Организация                                         КАК Организация,
	|	РасчетыСПодотчетниками.ПодотчетноеЛицо               КАК ПодотчетноеЛицо,
	|	РасчетыСПодотчетниками.Ссылка.Подразделение          КАК Подразделение,
	|	РасчетыСПодотчетниками.СтатьяДвиженияДенежныхСредств КАК ЦельВыдачи,
	|	РасчетыСПодотчетниками.Валюта                        КАК Валюта,
	|	РасчетыСПодотчетниками.Сумма                         КАК Сумма,
	|	РасчетыСПодотчетниками.СуммаРегл                     КАК СуммаРегл,
	|	РасчетыСПодотчетниками.Сумма                         КАК КОтчету,
	|	ВЫБОР
	|		КОГДА РасчетыСПодотчетниками.Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыСПодотчетниками.Сумма
	|		ИНАЧЕ
	|			РасчетыСПодотчетниками.Сумма * ЕСТЬNULL(КурсыВалютПодотчетников.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПодотчетниками КАК РасчетыСПодотчетниками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютПодотчетников
	|		ПО КурсыВалютПодотчетников.Валюта = РасчетыСПодотчетниками.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	РасчетыСПодотчетниками.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоЭквайрингу";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки             КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств      КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал   КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты     КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа             КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                   КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента) КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки             КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств      КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал   КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты     КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа             КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                   КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиентуНаПлатежнуюКарту) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВозвратОплатыКлиенту) КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТипДенежныхСредств,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Товары"" 																 КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											 КАК НомерСтроки,
	|	ЕСТЬNULL(ПервичныйДокумент.Партнер, ДанныеДокумента.Партнер)			 КАК Поставщик,
	|	ЕСТЬNULL(ПервичныйДокумент.Контрагент, ДанныеДокумента.Контрагент)		 КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 												 КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ТипОперации В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|		ТОГДА ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаДокумента.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ТОГДА ТаблицаДокумента.Назначение.ВидДеятельностиНДС
	|			ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС 
	|	КОНЕЦ                                                                     КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	0																		  КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|		ПО ПервичныйДокумент.Ссылка = ДанныеДокумента.Партия
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ДетализацияПартий""													КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ТаблицаДокумента.Партнер 												КАК Поставщик,
	|	ТаблицаДокумента.Контрагент 											КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 												КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ТипОперации В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС 
	|	КОНЕЦ                                                                   КАК НалогообложениеНДС,
	|	ТаблицаДокумента.ВидЦенности											КАК ВидЦенности,
	|	0																		КАК КодСтроки
	|ИЗ
	|	Документ.ВводОстатков.ДетализацияПартий КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ПрочиеРасходы""														КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ДанныеДокумента.Партнер													КАК Поставщик,
	|	ДанныеДокумента.Контрагент												КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 												КАК СтавкаНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) =
	|	  ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		КОГДА ДанныеДокумента.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		ИНАЧЕ &НалогообложениеОрганизации
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	Статьи.ВидЦенностиНДС 													КАК ВидЦенности,
	|	0																		КАК КодСтроки
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеРасходы КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 

	ТекстТовары = 
	"ВЫБРАТЬ
	|	Товары.Ссылка.Дата КАК Период,
	|	Товары.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	Товары.Ссылка.ВводОстатков22 КАК ВводОстатков22,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ВводОстатков22
	|			ТОГДА Товары.Ссылка.Контрагент
	|		ИНАЧЕ Товары.Ссылка.Партия.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ВводОстатков22
	|			ТОГДА Товары.Ссылка
	|		ИНАЧЕ Товары.Ссылка.Партия
	|	КОНЕЦ КАК ПартияПриобретенияТоваров,
	|	Товары.Ссылка.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	ВЫБОР
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВтТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО 
	|		Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|		И Товары.Ссылка = ДетализацияПартийСуммы.Ссылка
	|ГДЕ
	|	Товары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|	И Товары.Ссылка.ОтражатьСебестоимость
	|	И (Товары.Ссылка.ВводОстатков22 
	|		ИЛИ Товары.Ссылка.Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка.Дата КАК Период,
	|	Товары.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	Товары.Ссылка.ВводОстатков22 КАК ВводОстатков22,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	Товары.АналитикаУчетаПартий.Контрагент КАК Контрагент,
	|	Товары.ДокументПоступления КАК ПартияПриобретенияТоваров,
	|	Товары.Ссылка.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.НомерГТД КАК НомерГТД,
	|	Товары.СуммаРегл КАК СуммаБезНДСРегл,
	|	Товары.НДСРегл КАК СуммаНДСРегл,
	|	Товары.НДСУпр КАК СуммаНДСУпр,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВтДетализацияПартий КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ОтражатьСебестоимость
	|	И Товары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|";
	
	УчетНДСУП.ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтТовары";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                		    КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                		КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              		КАК Характеристика,
	|	ТаблицаТовары.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.Назначение						КАК Назначение,
	|	ТаблицаТовары.Серия                       		КАК Серия,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры  		КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                     		КАК АналитикаУчетаСебестоимости,
	|	
	|	ТаблицаТовары.СтавкаНДС                			КАК СтавкаНДС,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество                  		КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.КоличествоПоРНПТ
	|	КОНЕЦ											КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС
	|	КОНЕЦ 									 		КАК Сумма,
	|	ТаблицаТовары.СуммаБезНДС                 		КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаБезНДС                 		КАК СуммаУпр,
	|	ТаблицаТовары.СуммаНДС                    		КАК СуммаНДС,
	|	ТаблицаТовары.СуммаРегл                   		КАК СуммаРегл,
	|	ТаблицаТовары.НДСРегл                     		КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|		ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаБезНДС
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаБезНДС
	|	КОНЕЦ                                           КАК НДСУпр,
	|	ТаблицаТовары.СуммаПР                     		КАК СуммаПР,
	|	ТаблицаТовары.СуммаВР                     		КАК СуммаВР,
	|	ТаблицаТовары.ВидЗапасов                  		КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                    		КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару     		КАК ПредусмотренЗалогЗаТару,
	|	ТаблицаТовары.КодСтроки                   		КАК КодСтроки,
	|	ТаблицаТовары.ГруппаПродукции                   КАК ГруппаПродукции,
	|	ТаблицаТовары.ИдентификаторСтроки          		КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство))
	|	И ТаблицаТовары.Количество <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДетализацияПартий";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДетализацияПартий.Ссылка        		    	  КАК Ссылка,
	|	ТаблицаДетализацияПартий.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                          КАК Характеристика,
	|	ТаблицаТовары.Назначение.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры              КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                 КАК АналитикаУчетаСебестоимости,
	|	ТаблицаТовары.ВидЗапасов                              КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                    			  КАК НомерГТД,
	|	ТаблицаДетализацияПартий.СтавкаНДС                    КАК СтавкаНДС,
	|	ТаблицаДетализацияПартий.ДокументПоступления          КАК ДокументПоступления,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.ВидЦенности          КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.НалогообложениеНДС   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартийДокументаПоступления,
	|	ТаблицаАналитикУчетаПартийТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаДетализацияПартий.СуммаРегл                    КАК СуммаРегл,
	|	ТаблицаДетализацияПартий.СуммаУпр                     КАК СуммаУпр,
	|	ТаблицаДетализацияПартий.НДСРегл                      КАК НДСРегл,
	|	ТаблицаДетализацияПартий.НДСУпр                       КАК НДСУпр,
	|	
	|	ТаблицаТовары.ГруппаПродукции                         КАК ГруппаПродукции,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки          КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ВтДетализацияПартий
	|ИЗ
	|	Документ.ВводОстатков.ДетализацияПартий КАК ТаблицаДетализацияПартий
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|	ПО ТаблицаДетализацияПартий.Ссылка = ТаблицаТовары.Ссылка
	|		И ТаблицаДетализацияПартий.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартийДетализацияПартий
	|	ПО ТаблицаАналитикУчетаПартийДетализацияПартий.НомерСтроки 		= ТаблицаДетализацияПартий.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартийДетализацияПартий.ИмяТабличнойЧасти = ""ДетализацияПартий""
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартийТовары
	|	ПО ТаблицаАналитикУчетаПартийТовары.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартийТовары.ИмяТабличнойЧасти = ""Товары""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДетализацияПартийСуммы";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДетализацияПартий.Ссылка        		  КАК Ссылка,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	СУММА(ТаблицаДетализацияПартий.СуммаРегл)     КАК СуммаРегл,
	|	СУММА(ТаблицаДетализацияПартий.СуммаУпр)      КАК СуммаУпр,
	|	СУММА(ТаблицаДетализацияПартий.НДСРегл)       КАК НДСРегл,
	|	СУММА(ТаблицаДетализацияПартий.НДСУпр)        КАК НДСУпр
	|ПОМЕСТИТЬ ВтДетализацияПартийСуммы
	|ИЗ
	|	Документ.ВводОстатков.ДетализацияПартий КАК ТаблицаДетализацияПартий
	|
	|ГДЕ
	|	ТаблицаДетализацияПартий.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДетализацияПартий.Ссылка,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение          КАК Назначение,
	|	ТаблицаТовары.Упаковка            КАК Упаковка,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|	И ТаблицаТовары.Количество <> 0
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Упаковка,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	МАКСИМУМ(ТаблицаСерии.КоличествоУпаковок),
	|	ТаблицаСерии.Серия,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Упаковка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Помещение                             КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ГДЕ (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	-ТаблицаТовары.Количество              КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ,
	|	ТаблицаТовары.Назначение               КАК Назначение
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаСебестоимости КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР 
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ТаблицаТовары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                    КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|	КОНЕЦ                                    КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ГруппаПродукции    		 КАК ГруппаПродукции,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА 
	|			ВЫБОР КОГДА НЕ &ВводОстатков22
	|				ТОГДА &Партия
	|				ИНАЧЕ &Ссылка
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|				 И ТаблицаТовары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.ГруппаПродукции
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 						КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 				КАК ТипЗаписи,
	|
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьЗабалансоваяРегл,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК Стоимость,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|			ИНАЧЕ ТаблицаТовары.СуммаРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций И &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.Сумма
	|			ИНАЧЕ ТаблицаТовары.СуммаБезНДС
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьУпр,
	|	ВЫБОР 
	|		КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.НДСУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК ВременнаяРазница,
	|	ТаблицаТовары.Количество                 КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДетализацияПартийТоваровДляНДСиУСН";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры)
		И НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, "СебестоимостьТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос);
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	ДетализацияПартий.НомерСтроки            КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(ДетализацияПартий.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                            КАК РазделУчета,
	|	ДетализацияПартий.АналитикаУчетаСебестоимости    КАК АналитикаУчетаНоменклатуры,
	|	ДетализацияПартий.ВидЗапасов                     КАК ВидЗапасов,
	|	&Партия                                          КАК Партия,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			 И ДетализацияПартий.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА ДетализацияПартий.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ДетализацияПартий.ВидДеятельностиНДС							КАК ВидДеятельностиНДС,
	|	ДетализацияПартий.АналитикаУчетаПартийДокументаПоступления		КАК АналитикаУчетаПартий,
	|	ДетализацияПартий.ДокументПоступления							КАК ДокументПоступления,
	|	
	|	0                           									КАК Количество,
	|	ДетализацияПартий.СуммаРегл										КАК СтоимостьБезНДС,
	|	ДетализацияПартий.НДСРегл										КАК НДС,
	|	ДетализацияПартий.НДСУпр										КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы)				КАК ТипЗаписи
	|
	|ИЗ
	|	ВтДетализацияПартий КАК ДетализацияПартий
	|
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН
	|	И НЕ &ВводОстатков22
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	Товары.НомерСтроки                КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                         КАК РазделУчета,
	|	Товары.АналитикаУчетаСебестоимости            КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов                             КАК ВидЗапасов,
	|	&Партия                                       КАК Партия,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			 И Товары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												КАК АналитикаФинансовогоУчета,
	|	Товары.ВидДеятельностиНДС							КАК ВидДеятельностиНДС,
	|	Товары.АналитикаУчетаПартий							КАК АналитикаУчетаПартий,
	|	&Партия												КАК ДокументПоступления,
	|
	|	Товары.Количество						            КАК Количество,
	|	ВЫБОР 
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                               КАК СтоимостьБезНДС,
	|	ВЫБОР 
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                               КАК НДС,
	|	ВЫБОР 
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                               КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)     КАК ТипЗаписи
	|
	|ИЗ
	|	ВтТовары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|	
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН
	|	И НЕ &ВводОстатков22
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН2_4(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДетализацияПартийТоваровДляНДСиУСН2_4";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры)
		И НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, "СебестоимостьТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос);
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	ДетализацияПартий.НомерСтроки                            КАК НомерСтроки,
	|	&Период                                                  КАК Период,
	|	&Организация                                             КАК Организация,
	|	&Партия                                                  КАК Партия,
	|	ВЫБОР КОГДА ЕСТЬNULL(ДетализацияПартий.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ДетализацияПартий.АналитикаУчетаПартий
	|	КОНЕЦ 													 КАК АналитикаУчетаПартий,
	|	ДетализацияПартий.ВидДеятельностиНДС	                 КАК ВидДеятельностиНДС,
	|	ДетализацияПартий.ДокументПоступления	                 КАК ДокументПоступления,
	|	ДетализацияПартий.АналитикаУчетаПартийДокументаПоступления КАК АналитикаУчетаДокументаПоступления,
	|	ДетализацияПартий.Номенклатура                           КАК Номенклатура,
	|	ДетализацияПартий.Характеристика                         КАК Характеристика,
	|	ДетализацияПартий.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|
	|	ДетализацияПартий.СуммаРегл                              КАК СтоимостьБезНДС,
	|	ДетализацияПартий.НДСРегл                                КАК НДС,
	|	ДетализацияПартий.СуммаУпр                               КАК СтоимостьБезНДСУпр,
	|	ДетализацияПартий.НДСУпр                                 КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы)      КАК ТипЗаписи
	|
	|ИЗ
	|	ВтДетализацияПартий КАК ДетализацияПартий
	|	
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4
	|	И НЕ &ВводОстатков22
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	0                                       				 КАК НомерСтроки,
	|	&Период                                                  КАК Период,
	|	&Организация                                             КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ФИФОСкользящаяОценка
	|			ТОГДА &Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         			 КАК Партия,
	|	ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ Товары.АналитикаУчетаПартий
	|	КОНЕЦ 													 КАК АналитикаУчетаПартий,
	|	Товары.ВидДеятельностиНДС                                КАК ВидДеятельностиНДС,
	|	&Партия													 КАК ДокументПоступления,
	|	Товары.АналитикаУчетаПартий                              КАК АналитикаУчетаДокументаПоступления,
	|	НЕОПРЕДЕЛЕНО                                      		 КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                    		 КАК Характеристика,
	|	Товары.НаправлениеДеятельности                           КАК НаправлениеДеятельности,
	|
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                   КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                   КАК НДС,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.СуммаУпр - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаУпр, 0) > 0
	|		ТОГДА Товары.СуммаУпр - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                              	 КАК СтоимостьБезНДСУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                               	 КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)     	 КАК ТипЗаписи
	|
	|ИЗ
	|	ВтТовары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|	
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4
	|	И НЕ &ВводОстатков22
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА &ФИФОСкользящаяОценка
	|			ТОГДА &Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ Товары.АналитикаУчетаПартий
	|	КОНЕЦ,
	|	Товары.ВидДеятельностиНДС,
	|	Товары.АналитикаУчетаПартий,
	|	Товары.НаправлениеДеятельности
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура   КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Назначение     КАК Назначение,
	|	ТаблицаСерии.Серия          КАК Серия,
	|	ТаблицаСерии.Количество     КАК Количество,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ                       КАК Получатель,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ                       КАК ПомещениеПолучателя,
	|	ВЫБОР
	|		КОГДА &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                       КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков) КАК СкладскаяОперация,
	|	&Ссылка                     КАК Документ,
	|	&Период                     КАК Период,
	|	&Ссылка                     КАК Регистратор,
	|	ИСТИНА                      КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ        КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|		ТОГДА &Партия
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                      КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Сумма                        КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС                  КАК СтоимостьБезНДС,
	|	(ВЫБОР &ТипОперации
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ ТаблицаТовары.СуммаРегл КОНЕЦ) КАК СтоимостьРегл,
	|	ТаблицаТовары.СуммаПР                      КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР                      КАК ВременнаяРазница,
	|	ТаблицаТовары.НДСРегл                      КАК НДСРегл,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидДеятельностиНДС           КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	ИСТИНА                                     КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                               КАК ДокументИсточник
	|
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|	И &ОтражатьСебестоимость
	|	И &ПартионныйУчетВерсии21
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки                                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)               КАК ВидДвижения,
	|	&Период                                              КАК Период,
	|	&Организация                                         КАК Организация,
	|	Товары.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                              КАК ДокументПоступления,
	|	Товары.ВидЗапасов                                    КАК ВидЗапасов,
	|	Товары.АналитикаУчетаПартий                          КАК АналитикаУчетаПартий,
	|	&Ссылка                                              КАК ДокументПередачиНаКомиссию,
	|	Товары.Количество                                    КАК Количество,
	|	Товары.Сумма                                         КАК Стоимость,
	|	Товары.СуммаБезНДС                                   КАК СтоимостьБезНДС,
	|	Товары.СуммаРегл                                     КАК СтоимостьРегл,
	|	Товары.НДСРегл                                       КАК НДСРегл,
	|	Товары.СуммаПР                                       КАК ПостояннаяРазница,
	|	Товары.СуммаВР                                       КАК ВременнаяРазница,
	|	Товары.Номенклатура                                  КАК Номенклатура,
	|	Товары.Характеристика                                КАК Характеристика,
	|	Товары.ВидДеятельностиНДС                            КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК Товары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ОтражатьСебестоимость
	|	И &ПартионныйУчетВерсии21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПринятаяВозвратнаяТара";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                  КАК ВидДвижения,
	|	&Период                                                 КАК Период,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                            КАК Характеристика,
	|	ТаблицаТовары.Количество                                КАК Количество,
	|	ТаблицаТовары.Сумма                                     КАК Сумма,
	|	&Партнер                                                КАК Партнер,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК ДокументПоступления,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару                   КАК ПредусмотренЗалог
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПереданнаяВозвратнаяТара";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару  КАК ПредусмотренЗалог
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Документ.Организация                               КАК Организация,
	|	Документ.Дата                                      КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                 КАК НомерСтроки,
	|	Документ.Подразделение                             КАК Подразделение,
	|	ДанныеДокументаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ДанныеДокументаРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	ДанныеДокументаРасходы.Ссылка                      КАК ДокументПоступленияРасходов,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    КАК АналитикаУчетаПартий,
	|
	|	ДанныеДокументаРасходы.Сумма                       КАК Сумма,
	|	ДанныеДокументаРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ДанныеДокументаРасходы.СуммаРегл                   КАК СуммаРегл,
	|	ДанныеДокументаРасходы.НДСРегл                     КАК НДСРегл,
	|	ДанныеДокументаРасходы.СуммаПР                     КАК СуммаПР,
	|	ДанныеДокументаРасходы.СуммаВР                     КАК СуммаВР
	|
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Документ
	|	ПО
	|		ДанныеДокументаРасходы.Ссылка = Документ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ДанныеДокументаРасходы.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ПрочиеРасходы""
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка
	|	И &ОтражатьСебестоимость";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                    КАК Период,
	|	ВтДанныеРасходы.Организация             КАК Организация,
	|	ВтДанныеРасходы.Подразделение           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	|	ВтДанныеРасходы.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма                   КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДСУпр,
	|
	|	ВтДанныеРасходы.СуммаРегл
	|		+ ВтДанныеРасходы.НДСРегл           КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл               КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.СуммаПР                 КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                        КАК Период,
	|	ВтДанныеРасходы.Организация                 КАК Организация,
	|	ВтДанныеРасходы.Подразделение               КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	ВтДанныеРасходы.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма                       КАК Стоимость,
	|	ВтДанныеРасходы.СуммаБезНДС                 КАК СтоимостьБезНДС,
	|	ВтДанныеРасходы.Сумма
	|		- ВтДанныеРасходы.СуммаБезНДС           КАК НДСУпр,
	|	ВтДанныеРасходы.СуммаРегл                   КАК СтоимостьРегл,
	|	ВтДанныеРасходы.НДСРегл                     КАК НДСРегл,
	|	ВтДанныеРасходы.СуммаПР                     КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                     КАК ВременнаяРазница,
	|
	|	НЕОПРЕДЕЛЕНО                                КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.Статья                          КАК Статья,
	|	Строки.Аналитика                       КАК Аналитика,
	|	Строки.Сумма                           КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеАктивыПассивы КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов)
	|	И Строки.Статья.АктивПассив В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Актив),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.АктивПассив))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.Статья                          КАК Статья,
	|	Строки.Аналитика                       КАК Аналитика,
	|	Строки.Сумма                           КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеАктивыПассивы КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов)
	|	И Строки.Статья.АктивПассив = ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Пассив)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&ЗонаПриемки                           КАК Ячейка,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|				И &ЗонаПриемки <> ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка))
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИсторияПодарочныхСертификатов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации                                     КАК Период,
	|	ТабличнаяЧасть.ПодарочныйСертификат                              КАК ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован) КАК Статус
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодарочныеСертификаты";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ПодарочныйСертификат    КАК ПодарочныйСертификат,
	|	ТабличнаяЧасть.СуммаВВалютеСертификата КАК Сумма,
	|	ТабличнаяЧасть.СуммаРегл               КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса =
	// Остаток задолженности основного долга по кредитам и займам
	"ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПоступленияВыдачи
	|		ИНАЧЕ РасчетыПоКредитамДепозитам.Договор.СтатьяДДСОсновногоДолга
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК Сумма,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл,
	|	РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ОтражатьВОперативномУчете
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток задолженности основного долга по депозитам и займам выданным
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Транши)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПоступленияВыдачи
	|		ИНАЧЕ РасчетыПоКредитамДепозитам.Договор.СтатьяДДСОсновногоДолга
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                            КАК СуммаРегл,
	|	РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ОтражатьВОперативномУчете
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток по выплаченым\начисленным процентам и комиссии кредитов
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовКомиссии
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСКомиссии
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл,
	|	РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ОтражатьВОперативномУчете
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И РасчетыПоКредитамДепозитам.ТипСуммы В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток по выплаченым\начисленным процентам и комиссии депозитов
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовКомиссии
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСКомиссии
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл,
	|	РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоФинансовымИнструментам КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ОтражатьВОперативномУчете
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И РасчетыПоКредитамДепозитам.ТипСуммы В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипГрафика УБЫВ,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки            КАК НомерСтроки,
	|	
	|	&Ссылка                        КАК Регистратор,
	|	&Период                        КАК Период,
	|	
	|	&Организация                   КАК Организация,
	|	&Подразделение                 КАК Подразделение,
	|	Таблица.ФизическоеЛицо         КАК ФизическоеЛицо,
	|	Таблица.Номенклатура           КАК Номенклатура,
	|	Таблица.Характеристика         КАК Характеристика,
	|	Таблица.ПартияТМЦВЭксплуатации КАК Партия,
	|	
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.ВводОстатков.ТМЦВЭксплуатации КАК Таблица
	|	
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеПереработчику";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	ТаблицаТовары.Назначение                        КАК Назначение,
	|	&Партнер                                        КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)  КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	&ЗаказПереработчику                             КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Партнер = КлючиПроизводства.МестоХранения
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	ТаблицаТовары.Назначение                        КАК Назначение,
	|	&Подразделение                                  КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО                                    КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.МестоХранения
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.СуммаПР КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР КАК ВременнаяРазница,
	|	ТаблицаТовары.СуммаРегл КАК СтоимостьРегл,
	|	ТаблицаТовары.НДСРегл КАК НДСРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|				И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОтражатьСебестоимость
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ФинансовыеРезультаты";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДоходы.ДатаОтражения           КАК Период,
	|	&Организация                          КАК Организация,
	|	&Подразделение                        КАК Подразделение,
	|	ТаблицаДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                          КАК СтатьяРасходов,
	|	ТаблицаДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДоходы.СуммаДоходов            КАК Доходы,
	|	0                                     КАК Расходы
	|	
	|ИЗ
	|	Документ.ВводОстатков.ФинансовыйРезультатДоходы КАК ТаблицаДоходы
	|
	|ГДЕ
	|	ТаблицаДоходы.Ссылка = &Ссылка
	|	И &ОтражатьСебестоимость
	|
 	|ОБЪЕДИНИТЬ ВСЕ
 	|
	|ВЫБРАТЬ
	|	ТаблицаРасходы.ДатаОтражения           КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
	|	ТаблицаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	0                                      КАК Доходы,
	|	ТаблицаРасходы.СуммаРасходов           КАК Расходы
	|	
	|ИЗ
	|	Документ.ВводОстатков.ФинансовыйРезультатРасходы КАК ТаблицаРасходы
	|
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|	И &ОтражатьСебестоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	СтатьяДоходов,
	|	СтатьяРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Процедура УстановитьПараметрАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);

КонецПроцедуры

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрАналитикаУчетаПоПартнерам(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаТовары.ДатаОтражения                                    КАК Период,
	|	&Подразделение                                                 КАК Подразделение,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                          КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                   КАК АналитикаУчетаНаборов,
	|	&АналитикаУчетаПоПартнерам                                     КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                                   КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                                          КАК ТипЗапасов,
	|	&Менеджер                                                      КАК Менеджер,
	|	ВЫБОР
	|		КОГДА НЕ (ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка 
	|		ТОГДА &НалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)								   КАК ВидДеятельностиНДС,
	|	&Склад                                                         КАК Склад,
	|	&Договор                                                       КАК Договор,
	|	&СоглашениеСКлиентом                                           КАК Соглашение,
	|	&ВалютаУправленческогоУчета                                    КАК ВалютаВзаиморасчетов,
	|	&ВалютаУправленческогоУчета                                    КАК ВалютаДокумента,
	|	&НалогообложениеНДС                                            КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту) КАК ХозяйственнаяОперация,
	|
	|	&НаправлениеДеятельности                                       КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                                                   КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                   КАК ИсточникГФУРасчетов,
	|
	|	0                                                              КАК Стоимость,
	|	0                                                              КАК СтоимостьБезНДС,
	|	0                                                              КАК СтоимостьРегл,
	|	0                                                              КАК СуммаРучнойСкидки,
	|	0                                                              КАК СуммаАвтоматическойСкидки,
	|	0                                                              КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                              КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	0                                                              КАК СуммаВВалютеДокумента,
	|	0                                                              КАК СуммаБезНДСВВалютеДокумента,
	|	ТаблицаТовары.Количество                                       КАК Количество,
	|	ТаблицаТовары.Сумма                                            КАК СуммаВыручки,
	|	ТаблицаТовары.СуммаБезНДС                                      КАК СуммаВыручкиБезНДС,
	|	ТаблицаТовары.СуммаРегл                                        КАК СуммаВыручкиРегл,
	|	ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл                КАК СуммаВыручкиСНДСРегл
	|
	|ИЗ
	|	Документ.ВводОстатков.ОптовыеПродажи КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                       КАК НомерСтроки,
	|	ТаблицаТовары.ДатаОтражения                                     КАК Период,
	|	&Подразделение                                                  КАК Подразделение,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                           КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                    КАК АналитикаУчетаНаборов,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам                         КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                                           КАК ТипЗапасов,
	|	&Менеджер                                                       КАК Менеджер,
	|	ВЫБОР
	|		КОГДА НЕ (ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                           КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка ТОГДА &НалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)								    КАК ВидДеятельностиНДС,
	|	&Склад                                                          КАК Склад,
	|	&Договор                                                        КАК Договор,
	|	&СоглашениеСКлиентом                                            КАК Соглашение,
	|	&ВалютаУправленческогоУчета                                     КАК ВалютаВзаиморасчетов,
	|	&ВалютаУправленческогоУчета                                     КАК ВалютаДокумента,
	|	&НалогообложениеНДС                                             КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВрозницу) КАК ХозяйственнаяОперация,
	|
	|	&НаправлениеДеятельности                                       КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                                                    КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ИсточникГФУРасчетов,
	|
	|	0                                                               КАК Стоимость,
	|	0                                                               КАК СтоимостьБезНДС,
	|	0                                                               КАК СтоимостьРегл,
	|	0                                                               КАК СуммаРучнойСкидки,
	|	0                                                               КАК СуммаАвтоматическойСкидки,
	|	0                                                               КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                               КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	0                                                               КАК СуммаВВалютеДокумента,
	|	0                                                               КАК СуммаБезНДСВВалютеДокумента,
	|	ТаблицаТовары.Количество                                        КАК Количество,
	|	ТаблицаТовары.Сумма                                             КАК СуммаВыручки,
	|	ТаблицаТовары.СуммаБезНДС                                       КАК СуммаВыручкиБезНДС,
	|	ТаблицаТовары.СуммаРегл                                         КАК СуммаВыручкиРегл,
	|	ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл                 КАК СуммаВыручкиСНДСРегл
	|
	|ИЗ
	|	Документ.ВводОстатков.РозничныеПродажи КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки                                                    КАК НомерСтроки,
	|	&Период                                                                            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                             КАК ВидДвижения,
	|	&Организация                                                                       КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу) КАК ВидПереводаДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет                           КАК Получатель,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.Эквайер                                  КАК Контрагент,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств     КАК Валюта,
	|	РасчетыПоЭквайрингу.Сумма                                                          КАК Сумма,
	|	РасчетыПоЭквайрингу.СуммаРегл                                                      КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыПоЭквайрингу.Сумма
	|		ИНАЧЕ
	|			РасчетыПоЭквайрингу.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                                              КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО РасчетыПоЭквайрингу.ЭквайринговыйТерминал = ЭквайринговыеТерминалы.Ссылка
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки                                                    КАК НомерСтроки,
	|	&Период                                                                            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                             КАК ВидДвижения,
	|	&Организация                                                                       КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу) КАК ВидПереводаДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет                           КАК Получатель,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.Эквайер                                  КАК Контрагент,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств     КАК Валюта,
	|	РасчетыПоЭквайрингу.Сумма                                                          КАК Сумма,
	|	РасчетыПоЭквайрингу.СуммаРегл                                                      КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыПоЭквайрингу.Сумма
	|		ИНАЧЕ
	|			РасчетыПоЭквайрингу.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                                              КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО РасчетыПоЭквайрингу.ЭквайринговыйТерминал = ЭквайринговыеТерминалы.Ссылка
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос)
	
	Если Запрос.Параметры.Свойство("ФормироватьДетализацияПартийТоваровДляНДСиУСН")
		И Запрос.Параметры.Свойство("ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4") Тогда
		Возврат;
	КонецЕсли;
	
	ФормироватьДетализацияПартийТоваровДляНДСиУСН = Ложь;
	ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4 = Ложь;
	ИмяРегистраУчетаПартийНДС = РасчетСебестоимостиНДС.ИмяРегистраУчетаПартийНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период);
	
	Если ИмяРегистраУчетаПартийНДС = "ДетализацияПартийТоваровДляНДСиУСН" Тогда
		ФормироватьДетализацияПартийТоваровДляНДСиУСН = Истина;
	ИначеЕсли ИмяРегистраУчетаПартийНДС = "ДетализацияПартийТоваровДляНДСиУСН2_4" Тогда
		ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4 = Истина;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ФормироватьДетализацияПартийТоваровДляНДСиУСН", ФормироватьДетализацияПартийТоваровДляНДСиУСН);
	Запрос.УстановитьПараметр("ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4", ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4);
	
КонецПроцедуры


#КонецОбласти

#Область Прочее

Функция ТипДокументаРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	ОбъектРасчетов = Неопределено;
	
	Возврат ОбъектРасчетов;
	
КонецФункции

Функция ХозяйственнаяОперацияДоговораПоТипуОперации(ТипОперации) Экспорт

	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Иначе
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	КонецЕсли;
	Возврат ХозяйственнаяОперация;

КонецФункции

Функция ПорядокОплатыДоговораПоВалюте(Валюта) Экспорт
	Если Не ЗначениеЗаполнено(Валюта)
		Или Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
	КонецЕсли;
	Возврат ПорядокОплаты;
КонецФункции

Функция ИмяТабличнойЧастиРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	Если (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам) Тогда
		
		Возврат "РасчетыСПартнерами";
		
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств) Тогда
		Возврат "РасчетыСПодотчетниками";
		
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам) Тогда
		
		Возврат "РасчетыМеждуОрганизациями";
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;

КонецФункции

Процедура ПодобратьДокументРасчетов(Объект, ТекущиеДанные, Отказ = Ложь) Экспорт
	
	ИмяТЧ = ИмяТабличнойЧастиРасчетовПоТипуОперации(Объект.ТипОперации);
	
	Если ТекущиеДанные.ОбъектРасчетов = Неопределено Тогда
		
		ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
		
		Если ТекущиеДанные.ОбъектРасчетов = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	МетаданныеРасчетногоДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.ОбъектРасчетов));
	
	Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("ПеречислениеСсылка.ТипыДоговоров") Тогда
		ПредставлениеОбъекта = НСтр("ru='Договор контрагента'");
	ИначеЕсли ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями") Тогда
		ПредставлениеОбъекта = НСтр("ru='Договор между организациями'");
	Иначе
		ПредставлениеОбъекта = ?(ЗначениеЗаполнено(МетаданныеРасчетногоДокумента.ПредставлениеОбъекта),МетаданныеРасчетногоДокумента.ПредставлениеОбъекта,МетаданныеРасчетногоДокумента.Синоним);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ИмяТЧ = "РасчетыСПартнерами" Тогда
		
		Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.Партнер = &Партнер
			|	И ДокументРасчетов.Контрагент = &Контрагент
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ПорядокОплаты = &ПорядокОплаты";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("Партнер",ТекущиеДанные.Партнер);
			Запрос.УстановитьПараметр("Контрагент",ТекущиеДанные.Контрагент);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Запрос.УстановитьПараметр("ПорядокОплаты",ПорядокОплатыДоговораПоВалюте(ТекущиеДанные.ВалютаВзаиморасчетов));
		ИначеЕсли ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("ПеречислениеСсылка.ТипыДоговоров") Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.Партнер = &Партнер
			|	И ДокументРасчетов.Контрагент = &Контрагент
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ТипДоговора = &ТипДоговора";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("Партнер",ТекущиеДанные.Партнер);
			Запрос.УстановитьПараметр("Контрагент",ТекущиеДанные.Контрагент);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Запрос.УстановитьПараметр("ТипДоговора",ТекущиеДанные.ОбъектРасчетов);
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ГОД(ДокументРасчетов.Дата) = &Год";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
			Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		КонецЕсли;
		
	ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументРасчетов.Ссылка,
		|	ДокументРасчетов.ПодотчетноеЛицо,";
		Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.ХозяйственнаяОперация,";
		КонецЕсли;	
		ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.Организация,
		|	ДокументРасчетов.Валюта,
		|	ДокументРасчетов.Дата,
		|	ДокументРасчетов.Номер
		|ИЗ
		|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
		|ГДЕ
		|	ДокументРасчетов.Номер = &Номер
		|	И ГОД(ДокументРасчетов.Дата) = &Год";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
		Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		
	ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
		Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("СправочникСсылка.ДоговорыМеждуОрганизациями")
			ИЛИ ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями")
		Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.ОрганизацияПолучатель КАК Контрагент,
			|	НЕОПРЕДЕЛЕНО КАК Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыМеждуОрганизациями КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.ОрганизацияПолучатель = &ОрганизацияПолучатель
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ПорядокОплаты = &ПорядокОплаты
			|	И ДокументРасчетов.ТипДоговора = &ТипДоговора
			|";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("ОрганизацияПолучатель",Объект.ОрганизацияПолучатель);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
				Запрос.УстановитьПараметр("ТипДоговора",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ОбъектРасчетов, "ТипДоговора"));
			Иначе
				Запрос.УстановитьПараметр("ТипДоговора",ТекущиеДанные.ОбъектРасчетов);
			КонецЕсли;
			Запрос.УстановитьПараметр("ПорядокОплаты",ПорядокОплатыДоговораПоВалюте(ТекущиеДанные.ВалютаВзаиморасчетов));
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация, ";
			Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
				ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.Комиссионер КАК ОрганизацияПолучатель,";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.ОрганизацияПолучатель КАК ОрганизацияПолучатель,";
			КонецЕсли;			
			ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ГОД(ДокументРасчетов.Дата) = &Год";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
			Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		КонецЕсли;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ИмяТЧ = "РасчетыСПартнерами" Тогда
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Партнер)
				И Выборка.Партнер <> ТекущиеДанные.Партнер Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% партнер отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Партнер",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
				И Выборка.Контрагент <> ТекущиеДанные.Контрагент Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% контрагент отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Контрагент",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			ТекущиеДанные.Контрагент = Выборка.Контрагент;
			ТекущиеДанные.Партнер	 = Выборка.Партнер;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ВалютаВзаиморасчетов) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ПодотчетноеЛицо)
				И Выборка.ПодотчетноеЛицо <> ТекущиеДанные.ПодотчетноеЛицо Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% подотчетное лицо отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Валюта)
				И Выборка.Валюта <> ТекущиеДанные.Валюта Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% валюта отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ДокументСсылка.АвансовыйОтчет")
				И Выборка.ХозяйственнаяОперация <>  Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% хозяйственная операция отличается от ""%ВыдачаДенежныхСредствПодотчетнику%""'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ВыдачаДенежныхСредствПодотчетнику%",Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				Возврат;
			КонецЕсли;
			
			ТекущиеДанные.ПодотчетноеЛицо = Выборка.ПодотчетноеЛицо;
			ТекущиеДанные.Валюта = Выборка.Валюта;
			
		ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru = 'организация-продавец'"));
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru = 'организация-комитент'"));
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Выборка.Контрагент <> Объект.ОрганизацияПолучатель Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru='организация-покупатель'"));
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru='организация-комиссионер'"));
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.ОбъектРасчетов = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ВалютаВзаиморасчетов) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекущиеДанные.ОбъектРасчетов			= Выборка.Ссылка;
		ТекущиеДанные.ДатаРасчетногоДокумента	= Выборка.Дата;
		ТекущиеДанные.НомерРасчетногоДокумента	= Выборка.Номер;
		
	Иначе
		
		Если ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
			ИЛИ ТипЗнч(ТекущиеДанные.ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями")
		Тогда
			ТекущиеДанные.ОбъектРасчетов = ТекущиеДанные.ОбъектРасчетов.ТипДоговора;
		ИначеЕсли ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ПеречислениеСсылка.ТипыДоговоров")
			И ТипЗнч(ТекущиеДанные.ОбъектРасчетов) <> Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями")
		Тогда
			МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.ОбъектРасчетов));
			ТекущиеДанные.ОбъектРасчетов = Документы[МетаданныеДокумента.Имя].ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив доступных типов операций ввода начальных остатков, исходя из настройки функциональных опций.
//
// Параметры:
//  ВключатьДоступныеТолькоВ22 - Булево - Признак включения устаревших операций ввода остатков.
//
// Возвращаемое значение:
//  ДоступныеТипыОпераций - Массив - Типы операций ввода остатков доступные по функциональным опциям с учетом актуальности.
//
Функция ДоступныеТипыОпераций(ВключатьДоступныеТолькоВ22 = Ложь) Экспорт
	
	ИсключаемыеТипыОпераций = Новый Массив;
	
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиОС);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуОС);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНМА);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиАрендованныхОС);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаЗаБалансом);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаНаБалансе);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуПредметовЛизингаНаБалансе);
	ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВзаиморасчетовПоДоговорамЛизинга);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ДенежныеСредстваКПоступлениюОтЭквайера);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию);
	КонецЕсли;

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах);
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Или Не ВключатьДоступныеТолькоВ22 Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам);
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам);
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов);
	КонецЕсли;
	
	Если Не (ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтгрузке", Новый Структура)
			И ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении", Новый Структура)
			И ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Новый Структура)) Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПодарочныеСертификаты);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление")
		   Или ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей")
		   Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство")
		   Или ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды);
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходыМинусРасходы") 
			ИЛИ ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасходовУСНПоТоварам);
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасходовУСНПоМатериалам);
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходовУСН);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		ИсключаемыеТипыОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНДСПоПриобретеннымЦенностям);
	КонецЕсли;
	
	ДоступныеТипыОпераций = Новый Массив;
	
	Для Каждого ЭлементМетаданных Из Метаданные.Перечисления.ТипыОперацийВводаОстатков.ЗначенияПеречисления Цикл
		
		ТипОперации = Перечисления.ТипыОперацийВводаОстатков[ЭлементМетаданных.Имя];
		Если ИсключаемыеТипыОпераций.Найти(ТипОперации) = Неопределено Тогда
			ДоступныеТипыОпераций.Добавить(ТипОперации);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ДоступныеТипыОпераций;
	
КонецФункции

//Формирование префикса документа
//
// Параметры:
// Организация - СправочникСсылка.Организации
//
// Возвращаемое значение:
//  Строка - строковое значение префикса документа
//
Функция УстановитьПрефикс(Организация) Экспорт
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксОрганизации        = "";
	
	// устанавливаем привилегированный режим
	УстановитьПривилегированныйРежим(Истина);
	
	ПрефиксИнформационнойБазы = ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы");
	СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксИнформационнойБазы, 2, "0", "Слева");

	ПрефиксОрганизации = ПолучитьФункциональнуюОпцию("ПрефиксыОрганизаций", Новый Структура("Организация", Организация));
	
	// если задана пустая ссылка на организацию
	Если ПрефиксОрганизации = Ложь Тогда
		
		ПрефиксОрганизации = "";
		
	КонецЕсли;
	
	СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксОрганизации, 2, "0", "Слева");
	
	ОсновнойПрефикс = ПрефиксОрганизации + ПрефиксИнформационнойБазы;
	
	Разделитель = ?(ПустаяСтрока(ОсновнойПрефикс), "", "-");
	
	Префикс = ОсновнойПрефикс + Разделитель + Префикс;
	
	// если префикс не задан, то устанавливаем значение по умолчанию
	Если ПустаяСтрока(Префикс) Тогда
		
		Префикс = "0";
		
	КонецЕсли;
	
	Возврат Префикс;
	
КонецФункции

// Формирование заголовка документа.
//
// Параметры:
// Документ - ДокументСсылка.ВводОстатков
// НомерДокумента - Строка - Номер документа ВводОстатков
// ДатаДокумента - Дата - Дата документа ВводОстатков
// ТипОперации - ПеречислениеСсылка.ТипыОперацийВводаОстатков - Тип операции документа ВводОстатков
//
// Возвращаемое значение:
//  Строка - строковое значение заголовка документа.
//
Функция ЗаголовокДокументаПоТипуОперации(Документ, НомерДокумента, ДатаДокумента, ТипОперации) Экспорт
	
	Возврат ОбщегоНазначенияУТВызовСервера.ЗаголовокДокументаВводОстатковПоТипуОперации(Документ,
																														  НомерДокумента,
																														  ДатаДокумента,
																														  ТипОперации);
	
КонецФункции

// Определяет видимость группы формы, содержащей флажки видов учета.
// Используется в формах, в которых доступны все виды учета.
//
Функция ВидимостьГруппУчета(Объект) Экспорт
	
	ВидимостьГруппУчета = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет")
		ИЛИ РасчетСебестоимостиПовтИсп.ФормироватьДвиженияПоРегистрамСебестоимости(НачалоМесяца(Объект.Дата), Истина);
	
	Возврат ВидимостьГруппУчета;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на размещение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьАдресноеХранениеСправочно";
	
	ВводОстатковЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводОстатков.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Склад) КАК СкладПредставление,
	|	ВводОстатков.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Помещение) КАК ПомещениеПредставление,
	|	ВводОстатков.Дата КАК Дата,
	|	ВводОстатков.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА ВводОстатков.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатков.Дата >= ВводОстатков.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ВводОстатков.Помещение.ИспользоватьАдресноеХранениеСправочно
	|							И (НЕ ВводОстатков.Помещение.ИспользоватьАдресноеХранение
	|								ИЛИ ВводОстатков.Дата < ВводОстатков.Помещение.ДатаНачалаАдресногоХраненияОстатков)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВводОстатков.Склад.ИспользоватьАдресноеХранениеСправочно
	|						И (НЕ ВводОстатков.Склад.ИспользоватьАдресноеХранение
	|							ИЛИ ВводОстатков.Дата < ВводОстатков.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ВводОстатков.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатков.Дата >= ВводОстатков.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВводОстатков.Помещение.ИспользованиеРабочихУчастков
	|		ИНАЧЕ ВводОстатков.Склад.ИспользованиеРабочихУчастков
	|	КОНЕЦ КАК ИспользованиеРабочихУчастков,
	|	NULL КАК ВидОперации,
	|	ВводОстатков.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ВводОстатков КАК ВводОстатков
	|ГДЕ
	|	ВводОстатков.Ссылка В(&МассивОбъектов)
	|	И (ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И (ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТовары.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТовары.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТовары.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	NULL КАК ПредставлениеСерии,
	|	ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"ТаблицаТовары.Номенклатура"));
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура();
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", МассивРезультатов[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам", МассивРезультатов[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям", МассивРезультатов[4]);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий)

	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Серия,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	Серии.Упаковка КАК Упаковка,
		|	Серии.КоличествоУпаковок КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Товары.Серия,
		|	Товары.Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Серии.Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Упаковка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Упаковка,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА НЕ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 14
	|								ИНАЧЕ 13
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|							И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий)
	|                          И НЕ &ТолькоСерииСУчетомОстатков
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 2
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Упаковка = СерииДляЗапроса.Упаковка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Упаковка = ТоварыДляЗапроса.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции


#КонецОбласти


#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ВводОстатков.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.9.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("8ec10ec2-7645-430b-8400-706e9f6efe27");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВводОстатков.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Для документов ""Ввод остатков"" приводит в соответствие флаг ""Отражать в себестоимости"" флагу ""Отражать в оперативном учете"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатков.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПрочиеРасходы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ФинансовыеРезультаты.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ВводОстатков.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ВводОстатков.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПартииПрочихРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПрочиеРасходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

КонецПроцедуры

// Регистрирует данные для обработчика обновления ОбработатьДанныеДляПереходаНаНовуюВерсию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводОстатков.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатков КАК ВводОстатков
	|	//%СоединениеСРегистрамиСебестоимости%
	|ГДЕ
	|	ВводОстатков.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И ВводОстатков.ОтражатьВОперативномУчете
	|	И НЕ ВводОстатков.ОтражатьСебестоимость
	|	//%ОтборПоРегистрамСебестоимости%
	|";
	
	ДобавитьВТекстЗапросаУсловиеДляРегистровСебестоимости(Запрос.Текст);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1:
// - переносит данные о назначении из вида запасов в аналитику учета номенклатуры;
// - заполняет новый реквизит РазделУчета значением по умолчанию.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта  	= "Документ.ВводОстатков";
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	ИначеЕсли Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	КОбработке.Ссылка.Проведен
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектИзменен = Ложь;
			
			#Область ЗаполнениеПризнакаОтражатьСебестоимость
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВводОстатков.Ссылка
			|ИЗ
			|	Документ.ВводОстатков КАК ВводОстатков
			|	//%СоединениеСРегистрамиСебестоимости%
			|ГДЕ
			|	ВводОстатков.Ссылка = &Ссылка
			|	И ВводОстатков.ТипОперации В (
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
			|		)
			|	И ВводОстатков.ОтражатьВОперативномУчете
			|	И НЕ ВводОстатков.ОтражатьСебестоимость
			|	//%ОтборПоРегистрамСебестоимости%
			|";
			
			ДобавитьВТекстЗапросаУсловиеДляРегистровСебестоимости(Запрос.Текст);
			
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				Объект.ОтражатьСебестоимость = Истина;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			#КонецОбласти
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Объект);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаУсловиеДляРегистровСебестоимости(ТекстЗапроса);
	
	ПереченьРегистров = РасчетСебестоимостиПовтИсп.РегистрыНеИспользуемыеПриВыключенномУчетеСебестоимости();
	
	ТекстСоединение = "";
	ТекстОтбор = "ЛОЖЬ";
	
	Для Каждого КлючИЗначение Из ПереченьРегистров Цикл
		
		Если НЕ Метаданные.Документы.ВводОстатков.Движения.Содержит(КлючИЗначение.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСоединение = ТекстСоединение 
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("
				|	ЛЕВОЕ СОЕДИНЕНИЕ %1 КАК ДвиженияПо%2
				|		ПО ВводОстатков.Ссылка = ДвиженияПо%2.Регистратор",
				КлючИЗначение.Ключ.ПолноеИмя(),
				КлючИЗначение.Ключ.Имя);
		
		ТекстОтбор = ТекстОтбор 
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("
				|	ИЛИ НЕ ДвиженияПо%1.Регистратор ЕСТЬ NULL",
				КлючИЗначение.Ключ.Имя);
				
	КонецЦикла;
	
	ТекстОтбор = "И (" + ТекстОтбор + ")";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%СоединениеСРегистрамиСебестоимости%", ТекстСоединение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ОтборПоРегистрамСебестоимости%", ТекстОтбор);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли