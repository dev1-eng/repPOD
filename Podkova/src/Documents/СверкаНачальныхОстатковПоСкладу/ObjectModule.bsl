#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	РезультатыСверки.Очистить();
	ТребуетсяПерезаполнитьРезультаты = (ДанныеВнешнейСистемы.Количество() > 0);
	
	ИнициализироватьДокумент();
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
		
	СверкаНачальныхОстатковПоСкладуЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Документы.СверкаНачальныхОстатковПоСкладу.ЗаполнитьАналитикиУчетаНоменклатуры(ЭтотОбъект);
		Документы.СверкаНачальныхОстатковПоСкладу.ЗаполнитьВидыЗапасов(ЭтотОбъект);
		Документы.СверкаНачальныхОстатковПоСкладу.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект);
		
	КонецЕсли;
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Характеристики
	ПараметрыПроверкиХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "ДанныеВнешнейСистемы";
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(
		ЭтотОбъект,
		МассивНепроверяемыхРеквизитов,
		Отказ,
		ПараметрыПроверкиХарактеристик);
		
	МассивНепроверяемыхРеквизитов.Добавить("РезультатыСверки.Характеристика"); // поле справочное, нельзя изменять вручную
	
	// Серии
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.СверкаНачальныхОстатковПоСкладу);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	// Номера ГТД
	МассивНепроверяемыхРеквизитов.Добавить("РезультатыСверки.НомерГТД");
	Если ПолучитьФункциональнуюОпцию("ЗапретитьПоступлениеТоваровБезНомеровГТД") Тогда
		ЗапасыСервер.ПроверитьЗаполнениеНомеровГТД(ЭтотОбъект, Отказ, "РезультатыСверки");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	КонтрольКорректностиРеквизитовДокумента(Отказ);
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.СверкаНачальныхОстатковПоСкладу.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СверкаНачальныхОстатковПоСкладуЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	
	ДатаУчета = НачалоМесяца(Константы.ДатаНачалаУчетаСебестоимости.Получить());
	
	Если ЗначениеЗаполнено(ДатаУчета) Тогда
		Дата = ДатаУчета - 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрольКорректностиРеквизитовДокумента(Отказ)
	
	// Проверим дату документа.
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости") Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='Документ можно вводить только при включенной настройке ""Использовать учет себестоимости""'"),
			Ссылка,
			"Дата",
			,
			Отказ);
		
	Иначе
		
		ДатаУчета = НачалоМесяца(Константы.ДатаНачалаУчетаСебестоимости.Получить());
		
		Если НЕ ЗначениеЗаполнено(ДатаУчета) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Документ можно вводить только при установленной константе ""Дата начала учета себестоимости""'"),
				Ссылка,
				"Дата",
				,
				Отказ);
			
		ИначеЕсли КонецМесяца(Дата) + 1 <> ДатаУчета Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Документ можно вводить только в месяце, предшествующем месяцу константы ""Дата начала учета себестоимости""'"),
				Ссылка,
				"Дата",
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Проверим склад документа.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", 	 Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", 		 Склад);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СверкаНачальныхОстатковПоСкладу КАК Т
	|ГДЕ
	|	Т.Ссылка <> &Ссылка
	|	И Т.Организация = &Организация
	|	И Т.Склад = &Склад
	|	И НЕ Т.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru='По указанным организации и складу существуют другие документы сверки начальных остатков по складу'"),
			Ссылка,
			"Склад",
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
