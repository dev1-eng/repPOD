#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ВозвратТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Возврат между организациями".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВозвратТоваровМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	Отчеты.КонтрольПередачТоваровМеждуОрганизациями.ДобавитьКомандуКонтрольВозвратовТоваров(КомандыОтчетов);
	
	Отчеты.ОстаткиТоваровОрганизаций.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	ВозвратТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Выборка значений реквизитов документа по ссылке.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВозвратТоваровМеждуОрганизациями - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Реквизиты = Новый Структура();
	
	Реквизиты.Вставить("Дата", '00010101');
	Реквизиты.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	Реквизиты.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	Реквизиты.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Реквизиты.Вставить("ОрганизацияОтправитель", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("ОрганизацияПолучатель", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("ВалютаВзаиморасчетов", Справочники.Валюты.ПустаяСсылка());
	Реквизиты.Вставить("СуммаДокумента", 0);
	Реквизиты.Вставить("СуммаВзаиморасчетов", 0);
	Реквизиты.Вставить("РасчетыЧерезОтдельногоКонтрагента", Ложь);
	Реквизиты.Вставить("ДоговорПродажи", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Реквизиты.Вставить("ДоговорПокупки", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Данные.Дата                              КАК Дата,
	|	Данные.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	Данные.Организация                       КАК Организация,
	|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА Данные.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ)                                   КАК Партнер,
	|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА Данные.Контрагент
	|		ИНАЧЕ Данные.Организация
	|	КОНЕЦ)                                   КАК Контрагент,
	|	Данные.Организация                       КАК ОрганизацияОтправитель,
	|	Данные.ОрганизацияПолучатель             КАК ОрганизацияПолучатель,
	|	Данные.Валюта                            КАК ВалютаВзаиморасчетов,
	|	Данные.СуммаДокумента                    КАК СуммаДокумента,
	|	(ВЫБОР КОГДА Данные.Проведен
	|		ТОГДА Данные.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                   КАК СуммаВзаиморасчетов,
	|	Данные.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	Данные.ДоговорПродажи                    КАК ДоговорПродажи,
	|	Данные.ДоговорПокупки                    КАК ДоговорПокупки
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Данные
	|ГДЕ
	|	Данные.Ссылка = &ДокументСсылка
	|");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	Возврат Реквизиты;
КонецФункции


#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
//
// Возвращаемое значение:
//	Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры
//	Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение
//	Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратТоваровМеждуОрганизациями";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ДвижениеВФинансовомУчете);
	
	ПараметрыУказанияСерий.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - состав полей задается в функции
//		НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки         КАК НомерСтроки,
	|	Товары.Номенклатура        КАК Номенклатура,
	|	Товары.Характеристика      КАК Характеристика,
	|	Товары.Серия               КАК Серия,
	|	Товары.Количество          КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки         КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                      КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО ПолитикиУчетаСерий.Склад = &Склад
	|			И ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки         КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Ложь, "Объект.Товары.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(ОрганизацияПолучатель)
	|	) И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Склад)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает параметры для заполнения налогообложения НДС.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ВозвратТоваровМеждуОрганизациями,
//				ДокументОбъект.ВозвратТоваровМеждуОрганизациями - документ возврата товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
Функция ПараметрыЗаполненияНалогообложенияНДС(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Организация, ОрганизацияПолучатель, Контрагент, Договор, ДоговорПродажи, 
	                     |ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента, НаправлениеДеятельности");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	ПараметрыЗаполнения.Контрагент = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.Контрагент,
										РеквизитыДокумента.ОрганизацияПолучатель);
	ПараметрыЗаполнения.Договор    = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.ДоговорПродажи,
										РеквизитыДокумента.Договор);
	
	ПараметрыЗаполнения.ВозвратТоваровПоставщику = (РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	ПараметрыЗаполнения.ВозвратТоваровКомитенту = (РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями);
	
	ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает параметры для регистрации выданных счетов-фактур.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ВозвратТоваровМеждуОрганизациями,
//				ДокументОбъект.ВозвратТоваровМеждуОрганизациями - документ возврата товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Функция ПараметрыРегистрацииСчетовФактурВыданных(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Ссылка, Организация, ОрганизацияПолучатель, Контрагент, НалогообложениеНДС, 
										|Дата, ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента, ПокупательНеПлательщикНДС");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	ЗаполнитьЗначенияСвойств(ПараметрыРегистрации, РеквизитыДокумента, "Ссылка, Дата, Организация, НалогообложениеНДС");
	
	Если Не ЗначениеЗаполнено(ПараметрыРегистрации.Дата) Тогда
		ПараметрыРегистрации.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПараметрыРегистрации.Контрагент = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.Контрагент,
										РеквизитыДокумента.ОрганизацияПолучатель);
	
	ПараметрыРегистрации.ВозвратТоваровПоставщику =
		Не РеквизитыДокумента.ПокупательНеПлательщикНДС
		И РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	
	Если
		ПараметрыРегистрации.ВозвратТоваровПоставщику
		И ПараметрыРегистрации.Дата >= УчетНДСУП.НастройкиУчета().ДатаОтраженияВозвратовКорректировочнымиСФ
		И Не РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента
	Тогда
		ПараметрыРегистрации.КорректировкаПоСогласованиюСторон = Истина;
		ПараметрыРегистрации.Организация = РеквизитыДокумента.ОрганизацияПолучатель;
	КонецЕсли;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Возвращает параметры для регистрации полученных счетов-фактур.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ВозвратТоваровМеждуОрганизациями,
//				ДокументОбъект.ВозвратТоваровМеждуОрганизациями - документ возврата товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных().
//
Функция ПараметрыРегистрацииСчетовФактурПолученных(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Ссылка, Организация, ОрганизацияПолучатель, Контрагент, НалогообложениеНДС, 
										|Дата, ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента, ПокупательНеПлательщикНДС");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных();
	ЗаполнитьЗначенияСвойств(ПараметрыРегистрации, РеквизитыДокумента, "Ссылка, Дата, НалогообложениеНДС");
	
	Если Не ЗначениеЗаполнено(ПараметрыРегистрации.Дата) Тогда
		ПараметрыРегистрации.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПараметрыРегистрации.Организация = РеквизитыДокумента.ОрганизацияПолучатель;
	ПараметрыРегистрации.Контрагент  = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.Контрагент,
										РеквизитыДокумента.Организация);
	
	ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС =
		Не РеквизитыДокумента.ПокупательНеПлательщикНДС
		И РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
		И РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента;
	ПараметрыРегистрации.ВозвратТоваровОтНеплательщикаНДС =
		РеквизитыДокумента.ПокупательНеПлательщикНДС
		Или РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ВозвратТоваровМеждуОрганизациямиЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса) Экспорт
	
	ТекстДанныеДокумента =
	"ВЫБРАТЬ
	|	ТаблицаЗапасов.Ссылка              КАК Ссылка,
	|	ДанныеШапки.Дата                   КАК Дата,
	|	ДанныеШапки.Валюта                 КАК ВалютаДокумента,
	|	ДанныеШапки.Валюта                 КАК ВалютаВзаиморасчетов,
	|	ТаблицаЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаЗапасов.СуммаСНДС           КАК СуммаСНДС,
	|	ТаблицаЗапасов.СуммаНДС            КАК СуммаНДС,
	|	(ТаблицаЗапасов.СуммаСНДС - ТаблицаЗапасов.СуммаНДС) КАК СуммаБезНДС,
	|	ТаблицаЗапасов.СуммаСНДС           КАК СуммаВзаиморасчетов,
	|	ТаблицаЗапасов.СуммаНДС            КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|";
	
	ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса, ТекстДанныеДокумента);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойств)
	
	// получаем значения реквизитов документа
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.ДокументПередачи КАК ДокументПередачи,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ДоговорПродажи КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки КАК ДоговорПокупки,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|		ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ЭтоВозвратТовара,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|		ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ЭтоВозвратПоКомиссии,
	|
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументПередачи.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеДокумента.ДокументПередачи = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА ВЫБОР КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|				И ДанныеДокумента.ДоговорПродажи.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|				И ДанныеДокумента.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|
	|	ДанныеДокумента.ПокупательНеПлательщикНДС КАК ПокупательНеПлательщикНДС,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовКлиент.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовКлиент,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовПоставщик.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовПоставщик
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыМеждуОрганизациями КАК Договоры
	|	ПО ДанныеДокумента.Договор = Договоры.Ссылка
	|		И Договоры.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовКлиент
	|	ПО ДанныеДокумента.ДоговорПродажи = ДоговорыКонтрагентовКлиент.Ссылка
	|		И ДоговорыКонтрагентовКлиент.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовПоставщик
	|	ПО ДанныеДокумента.ДоговорПокупки = ДоговорыКонтрагентовПоставщик.Ссылка
	|		И ДоговорыКонтрагентовПоставщик.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ИдентификаторМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВозвратТоваровМеждуОрганизациями");
	ПересчитатьТаблицуТоваровВВалютуУпр(Реквизиты, Запрос.МенеджерВременныхТаблиц);
	
	ИнформацияПоОрганизации = НСтр("ru='Возврат из ""%Организация%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоОрганизации = СтрЗаменить(ИнформацияПоОрганизации, "%Организация%", Реквизиты.Организация);
	
	ИнформацияПоОрганизацииПолучателю = НСтр("ru='Возврат в ""%Организация%""'",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоОрганизацииПолучателю = СтрЗаменить(ИнформацияПоОрганизацииПолучателю, "%Организация%",
		Реквизиты.ОрганизацияПолучатель);
	
	НомерДокумента          = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер);
	НомерВходящегоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.НомерВходящегоДокумента);
	
	// наполнение запроса данных проведения параметрами
	Запрос.УстановитьПараметр("Ссылка",								Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Номер",								Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("НачалоМесяцаПериода",                НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоВозвратТовара",					Реквизиты.ЭтоВозвратТовара);
	Запрос.УстановитьПараметр("ЭтоВозвратПоКомиссии",				Реквизиты.ЭтоВозвратПоКомиссии);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",				Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад",								Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Валюта",								Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",		Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",			Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента",	Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("НалогообложениеНДС",					Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ДокументПередачи",					Реквизиты.ДокументПередачи);
	Запрос.УстановитьПараметр("Менеджер",							Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",							Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",							Реквизиты.Договор);
	Запрос.УстановитьПараметр("ДоговорПродажи",						Реквизиты.ДоговорПродажи);
	Запрос.УстановитьПараметр("ДоговорПокупки",						Реквизиты.ДоговорПокупки);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",			Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",				Реквизиты.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("Комментарий",						Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаДокумента",						Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Проведен",							Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",					Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",			ИдентификаторМетаданных);
	Запрос.УстановитьПараметр("ИнформацияПоОрганизации",			ИнформацияПоОрганизации);
	Запрос.УстановитьПараметр("ИнформацияПоОрганизацииПолучателю",	ИнформацияПоОрганизацииПолучателю);
	Запрос.УстановитьПараметр("НомерДокумента",						НомерДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента",			НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",					Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("ПокупательНеПлательщикНДС",			Реквизиты.ПокупательНеПлательщикНДС);
	Запрос.УстановитьПараметр("ОбъектРасчетовКлиент",				Реквизиты.ОбъектРасчетовКлиент);
	Запрос.УстановитьПараметр("ОбъектРасчетовПоставщик",			Реквизиты.ОбъектРасчетовПоставщик);
	
	Запрос.УстановитьПараметр("СебестоимостьИзДокументаПередачи",   Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи);
	
	Запрос.УстановитьПараметр("НалогообложениеОрганизации",
		Справочники.Организации.НалогообложениеНДС(Реквизиты.ОрганизацияПолучатель, Неопределено, Реквизиты.Период));
	Запрос.УстановитьПараметр("НалогообложениеОтправителя",
		Справочники.Организации.НалогообложениеНДС(Реквизиты.Организация, Неопределено, Реквизиты.Период));	
	
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСУП.НастройкиУчета().ДатаОтраженияВозвратовКорректировочнымиСФ);
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Склад           КАК Склад,
		|	Таблица.Номенклатура    КАК Номенклатура,
		|	Таблица.Характеристика  КАК Характеристика,
		|	Таблица.Назначение      КАК Назначение,
		|	Таблица.Серия           КАК Серия
		|ИЗ 
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&ОрганизацияПолучатель КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&Организация           КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Товары.АналитикаУчетаНоменклатуры.МестоХранения            КАК Склад,
		|		Товары.АналитикаУчетаНоменклатуры.Номенклатура     КАК Номенклатура,
		|		Товары.АналитикаУчетаНоменклатуры.Характеристика   КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		Товары.АналитикаУчетаНоменклатуры.Серия            КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
		|
		|	) КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО 
		|		Таблица.Номенклатура = Аналитика.Номенклатура 
		|		И Таблица.Характеристика = Аналитика.Характеристика
		|		И Таблица.Назначение = Аналитика.Назначение
		|		И Таблица.Серия = Аналитика.Серия
		|		И Таблица.Склад = Аналитика.МестоХранения
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL
		|");
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("ОрганизацияПолучатель", Запрос.Параметры.ОрганизацияПолучатель);
	ЗапросПредварительный.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросПредварительный.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросПредварительный.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	ЗапросПредварительный.УстановитьПараметр("ЭтоВозвратТовара", Запрос.Параметры.ЭтоВозвратТовара);
	ЗапросПредварительный.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);
	Выборка = ЗапросПредварительный.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта, Неопределено,
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПолучатель") Тогда
		Возврат;
	КонецЕсли;
	
	КлючКлиент = Новый Структура();
	КлючКлиент.Вставить("Организация",             Запрос.Параметры.ОрганизацияПолучатель);
	КлючКлиент.Вставить("Партнер",                 Справочники.Партнеры.НашеПредприятие);
	КлючКлиент.Вставить("Контрагент",              Запрос.Параметры.Организация);
	КлючКлиент.Вставить("Договор",                 Запрос.Параметры.Договор);
	КлючКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПолучатель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючКлиент));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовПолучатель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПолучатель") Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЧерезКонтрагента = Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента;
	
	КлючВзаиморасчетовКлиент = Новый Структура();
	КлючВзаиморасчетовКлиент.Вставить("Организация",             Запрос.Параметры.ОрганизацияПолучатель);
	КлючВзаиморасчетовКлиент.Вставить("Партнер",                 ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.Партнер,
																	Справочники.Партнеры.НашеПредприятие));
	КлючВзаиморасчетовКлиент.Вставить("Контрагент",              ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.Контрагент,
																	Запрос.Параметры.Организация));
	КлючВзаиморасчетовКлиент.Вставить("Договор",                 ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.ДоговорПродажи,
																	Запрос.Параметры.Договор));
	КлючВзаиморасчетовКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПолучатель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовКлиент));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовОтправитель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовОтправитель") Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЧерезКонтрагента = Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента;
	
	КлючВзаиморасчетовПоставщик = Новый Структура();
	КлючВзаиморасчетовПоставщик.Вставить("Организация",             Запрос.Параметры.Организация);
	КлючВзаиморасчетовПоставщик.Вставить("Партнер",                 ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.Партнер,
																		Справочники.Партнеры.НашеПредприятие));
	КлючВзаиморасчетовПоставщик.Вставить("Контрагент",              ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.Контрагент,
																		Запрос.Параметры.ОрганизацияПолучатель));
	КлючВзаиморасчетовПоставщик.Вставить("Договор",                 ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.ДоговорПокупки,
																		Запрос.Параметры.Договор));
	КлючВзаиморасчетовПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовОтправитель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовПоставщик));
	
КонецПроцедуры

Процедура ПересчитатьТаблицуТоваровВВалютуУпр(Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровВВалютеУпр
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаУправленческогоУчета
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуУпр(МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса)
	ИмяВременнойТаблицы = "ВтОбъектыРасчетов";
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
		|
		|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|		ТОГДА ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
		|			ТОГДА ВЫБОР КОГДА &ДоговорПродажи <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|				ТОГДА &ДоговорПродажи
		|				ИНАЧЕ &Ссылка
		|			КОНЕЦ
		|			ИНАЧЕ &Ссылка
		|		КОНЕЦ
		|	КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Заказ
		|	ИНАЧЕ
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
		|	КОНЕЦ КАК Договор,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА &НаправлениеДеятельности
		|		ИНАЧЕ
		|   		ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности 
		|	КОНЕЦ КАК НаправлениеДеятельности 
		|
		|ПОМЕСТИТЬ ВтОбъектыРасчетов
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЦенности =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                    КАК Период,
	|	ТаблицаЗапасов.Ссылка               КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеШапки.ОрганизацияПолучатель   КАК Организация,
	|	ДанныеШапки.Подразделение           КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.Организация
	|	КОНЕЦ                               КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПродажи
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                               КАК Договор,
	|	ДанныеШапки.Грузоотправитель        КАК Грузоотправитель,
	|	ДанныеШапки.ПокупательНеПлательщикНДС КАК ПокупательНеПлательщикНДС,
	|	ЛОЖЬ                                КАК РозничныйПокупатель,
	|	ЛОЖЬ                                КАК ДенежныеСредстваРозничномуПокупателюВозвращены,
	|	""""                                КАК НомерДокументаВозвратаДСРозничномуПокупателю,
	|	ДАТАВРЕМЯ(1, 1, 1)                  КАК ДатаДокументаВозвратаДСРозничномуПокупателю,
	|	ТаблицаЗапасов.Ссылка               КАК ДокументВозврата,
	|	ТаблицаЗапасов.ДокументПередачи     КАК ДокументРеализации,
	|	ДанныеШапки.НалогообложениеНДС      КАК НалогообложениеНДС,
	|	ДанныеШапки.НалогообложениеНДС      КАК ВидДеятельностиНДС,
	|	Аналитика.Номенклатура              КАК Номенклатура,
	|	Аналитика.Характеристика            КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаЗапасов.Количество
	|		ИНАЧЕ ТаблицаЗапасов.КоличествоУпаковок
	|	КОНЕЦ                               КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА Аналитика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ                               КАК ЕдиницаИзмерения,
	|	ТаблицаЗапасов.СтавкаНДС            КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ТаблицаЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	ТаблицаЗапасов.НомерГТД             КАК НомерГТД,
	|	ТаблицаЗапасов.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Аналитика.Назначение                КАК Назначение
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И (ДанныеШапки.Дата < &ДатаОтраженияВозвратовКорректировочнымиСФ ИЛИ НЕ ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента)
	|";
	
	ТекстЦенности = СтрЗаменить(
		ТекстЦенности,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаЗапасов.Упаковка",
			"Аналитика.Номенклатура"));
	УчетНДСУП.ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
	ТекстТовары =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                   КАК Период,
	|	ТаблицаЗапасов.Ссылка              КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеШапки.Организация            КАК Организация,
	|	ДанныеШапки.Подразделение          КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.ОрганизацияПолучатель
	|	КОНЕЦ                              КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПокупки
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                              КАК Договор,
	|	ДанныеШапки.Грузоотправитель       КАК Грузоотправитель,
	|	ДанныеШапки.Грузополучатель        КАК Грузополучатель,
	|	ДанныеШапки.ПокупательНеПлательщикНДС КАК ПокупательНеПлательщикНДС,
	|	ТаблицаЗапасов.Ссылка              КАК ДокументВозврата,
	|	ДанныеШапки.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	Аналитика.Номенклатура             КАК Номенклатура,
	|	Аналитика.Характеристика           КАК Характеристика,
	|	Аналитика.Назначение               КАК Назначение,
	|	ТаблицаЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаЗапасов.ВидЗапасов          КАК ВидЗапасов,
	|	ТаблицаЗапасов.ДокументПередачи    КАК ДокументПоступления,
	|	ТаблицаЗапасов.ДокументПередачи.ПередачаПодДеятельность КАК ВидДеятельностиНДС,
	|	ТаблицаЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И (ДанныеШапки.Дата < &ДатаОтраженияВозвратовКорректировочнымиСФ ИЛИ НЕ ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента)
	|";
	
	УчетНДСУП.ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                           КАК Документ,
	|	&Период                                                           КАК Период,
	|	&Ссылка                                                           КАК Регистратор,
	|	ТаблицаСерии.Номенклатура                                         КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                       КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                             КАК Назначение,
	|	ТаблицаСерии.Серия                                                КАК Серия,
	|	ТаблицаСерии.Количество                                           КАК Количество,
	|	&Склад                                                            КАК Отправитель,
	|	&Склад                                                            КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)              КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ДвижениеВФинансовомУчете) КАК СкладскаяОперация,
	|	ИСТИНА                                                            КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПолучатель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовПолучатель КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ВЫБОР КОГДА &ДоговорПродажи <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА &ОбъектРасчетовКлиент
	|			ИНАЧЕ &Ссылка
	|		КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР КОГДА РасшифровкаПлатежа.Заказ <> НЕОПРЕДЕЛЕНО
	|				ТОГДА РасшифровкаПлатежа.Заказ
	|				ИНАЧЕ &Ссылка
	|			КОНЕЦ 
	|	КОНЕЦ КАК ЗаказКлиента,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Период КАК ДатаРегистратора,
	|	&Номер КАК НомерРегистратора,
	|	&Организация КАК Организация,
	|	&Валюта КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовОтправитель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&Номер                                 КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	&Валюта                                КАК Валюта,
	|
	|	&СуммаДокумента                                                               КАК Сумма,
	|	&СуммаДокумента                                                               КАК КОплате,
	|	ВЫРАЗИТЬ(&СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(&СуммаДокумента * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	&Валюта КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&Номер                                 КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	&Валюта                                КАК Валюта,
	|
	|	СУММА(РасшифровкаПлатежа.Сумма) КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.Сумма) КАК КОплате,
	|	СУММА(ВЫБОР 
	|			КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета 
	|				ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ВЫБОР 
	|			КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|				ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2))
	|		КОНЕЦ) КАК СуммаУпр,
	|	&Валюта КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|	И ВЫБОР 
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &ОбъектРасчетовПоставщик
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|							ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|				ВЫБОР 
	|					КОГДА &РасчетыПоДоговорам 
	|						ТОГДА &Договор
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|			ИНАЧЕ
	|				РасшифровкаПлатежа.Заказ
	|			КОНЕЦ
	|	КОНЕЦ <> &Ссылка
	|ИМЕЮЩИЕ СУММА(РасшифровкаПлатежа.Сумма)<> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.НомерСтроки         КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&Номер                                 КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА &ОбъектРасчетовПоставщик
	|		ИНАЧЕ РасшифровкаПлатежа.Заказ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫБОР 
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	&Валюта КАК ВалютаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО РасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|	И ВЫБОР 
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &ОбъектРасчетовПоставщик
	|		ИНАЧЕ
	|			ВЫБОР КОГДА (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|							ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|				ВЫБОР 
	|					КОГДА &РасчетыПоДоговорам 
	|						ТОГДА &Договор
	|					ИНАЧЕ &Ссылка
	|				КОНЕЦ
	|			ИНАЧЕ
	|				РасшифровкаПлатежа.Заказ
	|			КОНЕЦ
	|	КОНЕЦ <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыОтправителя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =  "
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                              КАК АналитикаВозврата,
	|	АналитикаНоменклатурыБезНазначения.КлючАналитики                    КАК АналитикаВозвратаБезНазначения,
	|	Неопределено                                                        КАК АналитикаКомиссии,
	|	ВидыЗапасов.НомерСтроки                                             КАК НомерСтроки,
	|	Аналитика.Номенклатура                                              КАК Номенклатура,
	|	Аналитика.Характеристика                                            КАК Характеристика,
	|	ВидыЗапасов.ВидЗапасов                                              КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасов                                              КАК ВидЗапасовУчетный,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	ВидыЗапасов.НомерГТД                                                КАК НомерГТД,
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.КоличествоПоРНПТ                                        КАК КоличествоПоРНПТ,
	|	ВидыЗапасов.СуммаСНДС                                               КАК СуммаСНДС,
	|	ВидыЗапасов.СтавкаНДС                                               КАК СтавкаНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ВидыЗапасов.СуммаНДС                                                КАК СуммаНДС,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС                        КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(31,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(31,2)) КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(31,2)) КАК СуммаСНДСРегл,
	|	ЕстьNULL(Суммы.СуммаБезНДСРегл, 0)									КАК СуммаБезНДСРегл,	
	|	ЕстьNULL(Суммы.СуммаНДСРегл, 0)										КАК СуммаНДСРегл,	
	|	ЕстьNULL(Суммы.БазаНДСРегл, 0)										КАК БазаНДСРегл,
	|	ЕстьNULL(Суммы.БазаНДСУпр, 0)										КАК БазаНДСУпр,
	|	ВидыЗапасов.ВидЗапасовПолучателя                                    КАК ВидЗапасовПолучателя,
	|	ВидыЗапасов.ИдентификаторСтроки                                     КАК ИдентификаторСтроки,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ДокументПередачи КОНЕЦ)                       КАК ДокументРеализации,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ВидыЗапасов.ДокументПередачи.Дата КОНЕЦ)                	КАК ПериодПродажи,
	|	ВидыЗапасов.СпособОпределенияСебестоимости							КАК СпособОпределенияСебестоимости,
	|	ВидыЗапасов.ПоТоварамКОформлению                                    КАК ПоТоварамКОформлению,
	|	Аналитика.СкладскаяТерритория                                       КАК Склад,
	|	Аналитика.СкладскаяТерритория.ЦеховаяКладовая                       КАК ЦеховаяКладовая,
	|	&НалогообложениеОтправителя                                         КАК ВидДеятельностиНДС
	|ПОМЕСТИТЬ ВтЗапасыОтправителя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаНоменклатурыБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаНоменклатурыБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ВидыЗапасов.Ссылка = Суммы.Регистратор
	|		И ВидыЗапасов.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.БазаНДСРегл <> 0
	|		И (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ВидыЗапасов.СуммаНДС = Суммы.СуммаНДС
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВидыЗапасов"" 							КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 				КАК НомерСтроки,
	|	ВЫБОР КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ДанныеДокумента.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ										КАК Поставщик,
	|	ВЫБОР КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ										КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 					КАК СтавкаНДС,
	|	ДанныеДокумента.НалогообложениеНДС			КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	0											КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаДокумента.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыПолучателя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры                                               КАК АналитикаВозврата,
	|	АналитикаНоменклатурыБезНазначения.КлючАналитики                                            КАК АналитикаВозвратаБезНазначения,
	|	АналитикаКомиссии.КлючАналитики                                                             КАК АналитикаКомиссии,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Ссылка, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаОтгрузки,
	|	ЕСТЬNULL(АналитикаОтгрузкиБезНазначения.КлючАналитики, АналитикаНоменклатурыБезНазначения.КлючАналитики) КАК АналитикаОтгрузкиБезНазначения,
	|	ТаблицаВидыЗапасов.НомерСтроки                                                              КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура                                  КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика                                КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя                                                     КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                                                               КАК ВидЗапасовОтправителя,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя                                                     КАК ВидЗапасовУчетный,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                                          КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД                                                                 КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                                                               КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ                                                         КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС                                                                КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС                                                                КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                                                                 КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)                   КАК ЧИСЛО(31,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(31,2)) КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(31,2))    КАК СуммаНДСУпр,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл)                  КАК ЧИСЛО(31,2)) КАК СуммаСНДСРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(31,2)) КАК СуммаБезНДСРегл,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(31,2))   КАК СуммаНДСРегл,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.Валюта                                              КАК Валюта,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности                                                      КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС                                               КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий                                             КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки                                                      КАК ИдентификаторСтроки,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаВидыЗапасов.ДокументПередачи КОНЕЦ)                     					КАК ДокументРеализации,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ТаблицаВидыЗапасов.ДокументПередачи.Дата КОНЕЦ)                					КАК ПериодПродажи,
	|	ТаблицаВидыЗапасов.СпособОпределенияСебестоимости											КАК СпособОпределенияСебестоимости,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория                           КАК Склад,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая           КАК ЦеховаяКладовая,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение                                    КАК Назначение,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Назначение                            КАК НазначениеОтгрузки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения                         КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения.ЦеховаяКладовая         КАК ЦеховаяКладоваяОтгрузки,
	|	ТаблицаВидыЗапасов.ВидЗапасовОтгрузки														КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ДокументПередачи.Подразделение, &Подразделение) 				КАК ПодразделениеРеализации,
	|	ТаблицаВидыЗапасов.ПоТоварамКОформлению                                                     КАК ПоТоварамКОформлению,
	|	ТаблицаВидыЗапасов.Себестоимость                                           					КАК Себестоимость,
	|	(ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ТаблицаВидыЗапасов.Себестоимость
	|		ИНАЧЕ ТаблицаВидыЗапасов.СебестоимостьБезНДС КОНЕЦ)                    					КАК СебестоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СебестоимостьРегл                                       					КАК СебестоимостьРегл,
	|	ТаблицаВидыЗапасов.СебестоимостьПР                                         					КАК СебестоимостьПР,
	|	ТаблицаВидыЗапасов.СебестоимостьВР                                         					КАК СебестоимостьВР
	|ПОМЕСТИТЬ ВтЗапасыПолучателя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаНоменклатурыБезНазначения.Серия
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаНоменклатурыБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссии
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаКомиссии.Номенклатура 
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаКомиссии.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссии.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссии.Серия
	|		И &Организация = АналитикаКомиссии.МестоХранения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузкиБезНазначения
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаОтгрузкиБезНазначения.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаОтгрузкиБезНазначения.Характеристика
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаОтгрузкиБезНазначения.Серия
	|		И ЕСТЬNULL(ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения,
	|			ЕСТЬNULL(ТаблицаВидыЗапасов.ДокументПередачи.Склад, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения)) = АналитикаОтгрузкиБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаОтгрузкиБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаВидыЗапасов.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад КАК Склад,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ЛОЖЬ КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ПоТоварамКОформлению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	&Склад КАК Склад,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	-ТаблицаТовары.Количество КАК Количество,
	|	-ТаблицаТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаОтгрузки КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.ДокументРеализации  КАК ДокументРеализации,
	|	ТаблицаТовары.ВидЗапасовОтгрузки КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Первичное
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ПоТоварамКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаФИФОСкользящаяОценкаПолучателя(Запрос)
	
	Если Запрос.Параметры.Свойство("ФИФОСкользящаяОценкаПолучателя") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = ЗначениеНастроекПовтИсп.ПараметрыУчетнойПолитики(
		Запрос.Параметры.ОрганизацияПолучатель,
		НачалоМесяца(Запрос.Параметры.Период));
	
	Запрос.УстановитьПараметр("ФИФОСкользящаяОценкаПолучателя",
		(ПараметрыУчетнойПолитики.МетодОценкиСтоимостиТоваров = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаФИФОСкользящаяОценкаПолучателя(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"
	// 1. Возврат товара поставщику
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр КОНЕЦ КАК КорСтоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаБезНДСУпр КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ 
	|		ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций ТОГДА 0
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ КАК СтоимостьУпр,
	|	0 																		КАК ПостояннаяРазница,
	|	0 																		КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель                                               КАК АналитикаУчетаПоПартнерам,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаДоходов,
	|	&Подразделение                                                          КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                            КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО                                           					КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС											КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО															КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)														КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 					КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 2. Возврат без документа реализации
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 																	КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 																	КАК КорСтоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ ВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ 																	КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьРегл
	|		ИНАЧЕ ВЫБОР
	|			КОГДА &НалогообложениеОрганизации В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ВидыЗапасов.СуммаСНДСРегл
	|			ИНАЧЕ
	|				ВидыЗапасов.СуммаБезНДСРегл
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ ВЫБОР
	|			КОГДА &НалогообложениеОрганизации В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ВидыЗапасов.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ВидыЗапасов.СуммаБезНДСУпр
	|			КОНЕЦ
	|	КОНЕЦ КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату)    КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															        КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															        КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															        КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															        КАК КорАналитикаУчетаПартий,
	|	ВидыЗапасов.СуммаНДСРегл 												КАК НДСРегл,
	|	ВидыЗапасов.СуммаНДСУпр											        КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО                                          					КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО															КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)														КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)	 						КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 3. Сторнирование реализации текущего периода
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладоваяОтгрузки 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовУчетный
	|	КОНЕЦ 																	КАК ВидЗапасов,
	|	-ВидыЗапасов.Количество                                                 КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	ВЫБОР КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную) ТОГДА
	|		- ВидыЗапасов.Себестоимость
	|	ИНАЧЕ
	|		- ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 																	КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьУпр,
	|	0 																		КАК ПостояннаяРазница,
	|	0 																		КАК ВременнаяРазница,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СкладОтгрузки <> &Склад
	|		  ИЛИ ВидыЗапасов.ВидЗапасовОтгрузки <> ВидыЗапасов.ВидЗапасовУчетный
	|			И ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		  ИЛИ ВидыЗапасов.НазначениеОтгрузки <> ВидыЗапасов.Назначение
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|	КОНЕЦ																	КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовУчетный
	|	КОНЕЦ 																	КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	ВидыЗапасов.ПодразделениеРеализации                              		КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ВидыЗапасов.ПериодПродажи												КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СкладОтгрузки <> &Склад
	|		  ИЛИ ВидыЗапасов.ВидЗапасовОтгрузки <> ВидыЗапасов.ВидЗапасовУчетный
	|			И ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		  ИЛИ ВидыЗапасов.НазначениеОтгрузки <> ВидыЗапасов.Назначение
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратНаДругойСклад)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|	КОНЕЦ																	КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 4. Перемещение с реализации на возврат с изменением аналитики номенклатуры - списание
	|ВЫБРАТЬ // возврат товара от клиента
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладоваяОтгрузки 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовУчетный
	|	КОНЕЦ 																	КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьУпр,
	|	0 																		КАК ПостояннаяРазница,
	|	0 																		КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)    КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)														КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратНаДругойСклад)	 		КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И (ВидыЗапасов.СкладОтгрузки <> &Склад
	|		ИЛИ ВидыЗапасов.ВидЗапасовОтгрузки <> ВидыЗапасов.ВидЗапасовУчетный
	|			И ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИЛИ ВидыЗапасов.НазначениеОтгрузки <> ВидыЗапасов.Назначение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 5. Перемещение с реализации на возврат с изменением аналитики номенклатуры - оприходование
	|ВЫБРАТЬ // возврат товара от клиента
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	ВЫБОР КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную) ТОГДА
	|		ВидыЗапасов.Себестоимость
	|	ИНАЧЕ
	|		ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 																	КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьУпр,
	|	0 																		КАК ПостояннаяРазница,
	|	0 																		КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)    КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)														КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)	 				КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И (ВидыЗапасов.СкладОтгрузки <> &Склад
	|		ИЛИ ВидыЗапасов.ВидЗапасовОтгрузки <> ВидыЗапасов.ВидЗапасовУчетный
	|			И ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИЛИ ВидыЗапасов.НазначениеОтгрузки <> ВидыЗапасов.Назначение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 6. Возврат прошлого периода
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	ВЫБОР КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную) ТОГДА
	|		ВидыЗапасов.Себестоимость
	|	ИНАЧЕ
	|		ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ 																	КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьУпр,
	|	0 																		КАК ПостояннаяРазница,
	|	0 																		КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов) КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовУчетный
	|	КОНЕЦ 																	КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	ВидыЗапасов.ПодразделениеРеализации                                     КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ВидыЗапасов.ПериодПродажи												КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)	 		КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|	И ВидыЗапасов.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 7. Возврат товара от комиссионера, списываем товар с комиссионного учета
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                            КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                             КАК ВидДвижения,
	|	&Период                                                                            КАК Период,
	|	ВидыЗапасов.АналитикаКомиссии                                                      КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                             КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ                                                                              КАК РазделУчета,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовУчетный
	|	КОНЕЦ 																			   КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                             КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК Стоимость,
	|	0                                                                                  КАК КорСтоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																			   КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)   КАК ХозяйственнаяОперация,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                                      КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                              КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                                       КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                       КАК СтатьяРасходовСписания,
	|	Неопределено                                                                       КАК СтатьяДоходов,
	|	Неопределено                                                                       КАК АналитикаРасходов,
	|	Неопределено                                                                       КАК АналитикаДоходов,
	|	Неопределено                                                                       КАК Подразделение,
	|	Неопределено                                                                       КАК ЗаказКлиента,
	|	Неопределено                                                                       КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													                   КАК Партия,
	|	НЕОПРЕДЕЛЕНО													                   КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													                   КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													                   КАК КорАналитикаУчетаПартий,
	|	0 																                   КАК НДСРегл,
	|	0 																                   КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС													   КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО					 												   КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)																   КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 												   КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 							   КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// 8. Возврат товара от комиссионера, приходуем товар на складской учет
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.Себестоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА ВидыЗапасов.СебестоимостьВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 																	КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО													        КАК Партия,
	|	НЕОПРЕДЕЛЕНО													        КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													        КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													        КАК КорАналитикаУчетаПартий,
	|	0 																        КАК НДСРегл,
	|	0 																        КАК НДСУпр,
	|	ВидыЗапасов.ВидДеятельностиНДС											КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО					 										КАК ДокументИсточник,
	|	ДАТАВРЕМЯ(1,1,1)														КАК ПериодПродажи,
	|	ВидыЗапасов.ИдентификаторСтроки 										КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) 					КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки       КАК НомерСтроки,
	|	&Период                       КАК Период,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|		 И &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаВозврата
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|		 И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаВозвратаБезНазначения
	|		КОГДА ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|		 И &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаВозврата
	|		КОГДА ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|		 И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаВозвратаБезНазначения
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	Неопределено                  КАК ЗаказКлиента,
	|	&АналитикаУчетаПолучатель     КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ВидыЗапасов.ПодразделениеРеализации
	|	КОНЕЦ 						  КАК Подразделение,
	|	ВидыЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
	|	ВидыЗапасов.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	&Менеджер                     КАК Менеджер,
	|	-ВидыЗапасов.Количество       КАК Количество,
	|	-ВидыЗапасов.СуммаСНДСУпр     КАК СуммаВыручки,
	|	-ВидыЗапасов.СуммаБезНДСУпр   КАК СуммаВыручкиБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 ИЛИ ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ВидыЗапасов.СуммаСНДСУпр
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ВидыЗапасов.Себестоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 ИЛИ ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ВидыЗапасов.СуммаБезНДСУпр
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА НЕ &УправленческийУчетОрганизаций ТОГДА 0
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 ИЛИ ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ВидыЗапасов.СуммаБезНДСУпр
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ВидыЗапасов.СебестоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 ИЛИ ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА - ВидыЗапасов.СуммаБезНДСРегл
	|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА - ВидыЗапасов.СебестоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВидыЗапасов.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = &СебестоимостьИзДокументаПередачи
	|		И ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)
	|	КОГДА ВидыЗапасов.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	-ВидыЗапасов.СуммаБезНДСРегл КАК СуммаВыручкиРегл,
	|	-(ВидыЗапасов.СуммаБезНДСРегл + ВидыЗапасов.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	ВидыЗапасов.СкладОтгрузки КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаВозврата.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК ОрганизацияВладелец,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Возвращено,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ТаблицаТовары.ДокументРеализации КАК ДокументРеализации,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|	
	|ГДЕ
	|	ТаблицаТовары.ПоТоварамКОформлению
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют"; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|   / (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасовПолучателя.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		ИСТИНА
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(-ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК КоличествоСписано,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		-ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		-ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки,
	|
	|	(-ТаблицаВидыЗапасов.Количество) КАК КоличествоКОформлению,
	|	0 КАК КоличествоСписаноКОформлению,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		-ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		-ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручкиКОформлению,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.Валюта = КурсыВалют.Валюта
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара = Аналитика.МестоХранения
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.Параметры, Запрос.МенеджерВременныхТаблиц);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.БазаНДСРегл = 0
	|			ТОГДА ТаблицаДокументаРегл.СуммаБезНДСРегл
	|		ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСРегл
	|	КОНЕЦ КАК БазаНДСРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.БазаНДСУпр = 0
	|			ТОГДА ТаблицаДокументаРегл.СуммаБезНДСУпр
	|		ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСУпр
	|	КОНЕЦ КАК БазаНДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов,
	|	ТаблицаДокументаРегл.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	ТаблицаДокументаРегл.СуммаНДСУпр КАК СуммаНДСУпр
	|
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	(НЕ &ЭтоВозвратПоКомиссии)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПоступления, 
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	-ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА -ТаблицаТовары.Себестоимость
	|		ИНАЧЕ -ТаблицаТовары.СуммаСНДСУпр
	|	КОНЕЦ                                                КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА -ТаблицаТовары.СебестоимостьБезНДС
	|		ИНАЧЕ -ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ                                                КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА -ТаблицаТовары.СебестоимостьРегл
	|		ИНАЧЕ -ТаблицаТовары.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0                                                    КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА -ТаблицаТовары.СебестоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|			ТОГДА -ТаблицаТовары.СебестоимостьВР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                КАК ВременнаяРазница,
	|
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ИСТИНА КАК Первичное,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		&Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	&ПартионныйУчетВерсии21
	|	И ТаблицаТовары.СпособОпределенияСебестоимости <> &СебестоимостьИзДокументаПередачи
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, МенеджерВременныхТаблиц)
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПредварительная") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	
	Запрос.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Константы.ВалютаРегламентированногоУчета.Получить());
	ВалютыДляПересчета.Вставить("Упр", Константы.ВалютаУправленческогоУчета.Получить());
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(Запрос.МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|// Организация отправитель.
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ВидыЗапасов.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Склад КАК Склад,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &ОрганизацияПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|
	|	ВидыЗапасов.СуммаСНДСУпр КАК Сумма,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
	|	ВидыЗапасов.СуммаСНДСРегл КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(31,2)) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|"; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                             КАК Период,
	|	&ХозяйственнаяОперация                                              КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                                              КАК Организация,
	|	&Подразделение                                                      КАК Подразделение,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаНоменклатурыБезНазначения.КлючАналитики
	|	КОНЕЦ                                                               КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                               КАК НаправлениеДеятельности,
	|	Аналитика.МестоХранения                                                     КАК Склад,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасов												КАК ВидЗапасов,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаНоменклатурыБезНазначения.КлючАналитики
	|	КОНЕЦ                                                               КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                               КАК КорНаправлениеДеятельности,
	|	Аналитика.МестоХранения                                                     КАК КорСклад,
	|	ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                         КАК КорТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовПолучателя									КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.Количество                                              КАК КорКоличество,
	|
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(31,2)) КАК Стоимость,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(31,2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(31,2)) КАК СтоимостьРегл,
	|
	|	ВидыЗапасов.ВидЗапасов												КАК ИсточникГФУНоменклатуры,
	|	ВидыЗапасов.ВидЗапасовПолучателя									КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика 
	|		И Аналитика.Серия = АналитикаНоменклатурыБезНазначения.Серия 
	|		И Аналитика.МестоХранения = АналитикаНоменклатурыБезНазначения.МестоХранения 
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение 
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.АналитикаКомиссии КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация 
	|			= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаКомиссии,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.АналитикаВозврата,
	|	ТаблицаТовары.ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ТипСсылки                КАК ТипСсылки,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер                  КАК Партнер,
	|	ДанныеДокумента.Контрагент               КАК Контрагент,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ДополнительнаяЗапись     КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.МестоХранения            КАК МестоХранения,
	|	ДанныеДокумента.ДатаДокументаИБ          КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.НомерДокументаИБ         КАК НомерДокументаИБ,
	|	ДанныеДокумента.Ответственный            КАК Ответственный,
	|	ДанныеДокумента.Комментарий              КАК Комментарий,
	|	ДанныеДокумента.Валюта                   КАК Валюта,
	|	ДанныеДокумента.Сумма                    КАК Сумма,
	|	ДанныеДокумента.Статус                   КАК Статус,
	|	ДанныеДокумента.Проведен                 КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления          КАК ПометкаУдаления,
	|	ДанныеДокумента.Дополнительно            КАК Дополнительно,
	|	ДанныеДокумента.ДатаПервичногоДокумента  КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.ДатаДокументаИБ   КАК ДатаОтраженияВУчете
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРеестрДокументов.ТипСсылки                          КАК ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация                        КАК Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер                            КАК Партнер,
	|	ТаблицаРеестрДокументов.Контрагент                         КАК Контрагент,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Договор)                  КАК Договор,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	МИНИМУМ(ТаблицаРеестрДокументов.ДополнительнаяЗапись)      КАК ДополнительнаяЗапись,
	|	ТаблицаРеестрДокументов.Подразделение                      КАК Подразделение,
	|	ТаблицаРеестрДокументов.МестоХранения                      КАК МестоХранения,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ                    КАК ДатаДокументаИБ,
	|	ТаблицаРеестрДокументов.Ссылка                             КАК Ссылка,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерДокументаИБ)         КАК НомерДокументаИБ,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Ответственный)            КАК Ответственный,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Комментарий)              КАК Комментарий,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Валюта)                   КАК Валюта,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Сумма)                    КАК Сумма,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Статус)                   КАК Статус,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Проведен)                 КАК Проведен,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ПометкаУдаления)          КАК ПометкаУдаления,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Дополнительно)            КАК Дополнительно,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ДатаПервичногоДокумента)  КАК ДатаПервичногоДокумента,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерПервичногоДокумента) КАК НомерПервичногоДокумента
	|ПОМЕСТИТЬ ВтОснований
	|	ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка             КАК Ссылка,
	|		&Период                            КАК ДатаДокументаИБ,
	|		&Номер                             КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных           КАК ТипСсылки,
	|		&Организация                       КАК Организация,
	|		&ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|		&Партнер                           КАК Партнер,
	|		&Контрагент                        КАК Контрагент,
	|		&Договор                           КАК Договор,
	|		НЕОПРЕДЕЛЕНО                       КАК НаправлениеДеятельности,
	|		&Склад                             КАК МестоХранения,
	|		&Подразделение                     КАК Подразделение,
	|		&Менеджер                          КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|		&Валюта                            КАК Валюта,
	|		&СуммаДокумента                    КАК Сумма,
	|		НЕОПРЕДЕЛЕНО                       КАК Статус,
	|		&Проведен                          КАК Проведен,
	|		&ПометкаУдаления                   КАК ПометкаУдаления,
	|		ЛОЖЬ                               КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоОрганизацииПолучателю КАК СТРОКА(100)) КАК Дополнительно,
	|		&Период                            КАК ДатаПервичногоДокумента,
	|		&НомерДокумента                    КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка   КАК Ссылка,
	|		&Период                  КАК ДатаДокументаИБ,
	|		&Номер                   КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных КАК ТипСсылки,
	|		&ОрганизацияПолучатель   КАК Организация,
	|		&ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		&Партнер                 КАК Партнер,
	|		&Контрагент              КАК Контрагент,
	|		&Договор                 КАК Договор,
	|		НЕОПРЕДЕЛЕНО             КАК НаправлениеДеятельности,
	|		&Склад                   КАК МестоХранения,
	|		&Подразделение           КАК Подразделение,
	|		&Менеджер                КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|		&Валюта                  КАК Валюта,
	|		&СуммаДокумента          КАК Сумма,
	|		НЕОПРЕДЕЛЕНО             КАК Статус,
	|		&Проведен                КАК Проведен,
	|		&ПометкаУдаления         КАК ПометкаУдаления,
	|		ИСТИНА                   КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоОрганизации КАК СТРОКА(100)) КАК Дополнительно,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &Период
	|			ИНАЧЕ &ДатаВходящегоДокумента
	|		КОНЕЦ                    КАК ДатаПервичногоДокумента,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &НомерДокумента
	|			ИНАЧЕ &НомерВходящегоДокумента
	|		КОНЕЦ                    КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	) КАК ТаблицаРеестрДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеестрДокументов.ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер,
	|	ТаблицаРеестрДокументов.Контрагент,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности,
	|	ТаблицаРеестрДокументов.Подразделение,
	|	ТаблицаРеестрДокументов.МестоХранения,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ,
	|	ТаблицаРеестрДокументов.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.ВозвратТоваровМеждуОрганизациями";
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерДокумента",                    """""");
	ПереопределениеРасчетаПараметров.Вставить("НомерВходящегоДокумента",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоОрганизации",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоОрганизацииПолучателю", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Возврат поставщику
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВозвратПоставщику";
	КомандаПечати.Представление = НСтр("ru = 'Возврат поставщику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	ВозвратТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВозвратПоставщику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВозвратПоставщику", НСтр("ru='Возврат поставщику'"), СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	ВозвратТоваровМеждуОрганизациямиЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);

КонецПроцедуры

Функция СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка КАК Ссылка,
	|	ВозвратТоваров.Организация.Префикс КАК Префикс,
	|	ВозвратТоваров.Номер КАК Номер,
	|	ВозвратТоваров.Дата КАК Дата,
	|	ВозвратТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель КАК Получатель,
	|	ВозвратТоваров.Валюта КАК Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьНДС,
	|	ВозвратТоваров.Склад.ТекущийОтветственный КАК ОтпускПроизвел,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И (НЕ ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Организация,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВозвратТоваров.Склад.ТекущийОтветственный.Наименование,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВозвратТоваров.Склад.ТекущийОтветственный.Наименование,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВозвратТоваров.Ссылка КАК Ссылка,
	|		ВозвратТоваров.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВозвратТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки2
	|		КОНЕЦ КАК Коэффициент,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ВозвратТоваров.Характеристика КАК Характеристика,
	|		ВозвратТоваров.Упаковка КАК Упаковка,
	|		ВозвратТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ВозвратТоваров.Цена КАК Цена,
	|		ВозвратТоваров.КоличествоУпаковок КАК Количество,
	|		ВозвратТоваров.Сумма КАК Сумма,
	|		ВозвратТоваров.СуммаНДС КАК СуммаНДС,
	|		ВозвратТоваров.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВозвратТоваров
	|	ГДЕ
	|		ВозвратТоваров.Ссылка В(&МассивДокументов)
	|		И ВозвратТоваров.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровМеждуОрганизациями_Накладная";
	
	МассивРезультатов   = Запрос.ВыполнитьПакет();
	ДанныеПечати        = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически.
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровМеждуОрганизациями.ПФ_MXL_ВозвратПоставщику");
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьКолонкаТовар = Макет.Область("Товар");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		Иначе
			
			ОбластьКолонкаТовар = Макет.Область("ТоварБезСумм");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.125;
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Возврат поставщику'"));
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Получатель;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера     = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов      = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар      = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных     = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		Иначе
			
			ОбластьНомера     = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|НомерСтрокиБезСумм");
			ОбластьКодов      = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|КолонкаКодовБезСумм");
			ОбластьТовар      = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|ТоварБезСумм");
			ОбластьДанных     = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|ДанныеБезСумм");
			
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|НомерСтрокиБезСумм");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|КолонкаКодовБезСумм");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|ТоварБезСумм");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|ДанныеБезСумм");
			
		КонецЕсли;
			
		Сумма          = 0;
		СуммаНДС       = 0;
		НомерСтроки    = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
			ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаПоТоварам.ЭтоВозвратнаяТара;
			
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоТоварам.ТоварНаименованиеПолное,
				ВыборкаПоТоварам.Характеристика,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати);
				
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ДанныеПечати.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту Тогда
				
				Сумма    = Сумма    + ВыборкаПоТоварам.Сумма;
				СуммаНДС = СуммаНДС + ВыборкаПоТоварам.СуммаНДС;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Выводим подвал
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
				
			ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
			
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС И Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
			ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			// Выводим Сумму прописью
			
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
			СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
			
			ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента%'") + " ";
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

			ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
			ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыБезСумм");
			ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%'");
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
			ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		Если ЗначениеЗаполнено(ДанныеПечати.ОтпускПроизвел) Тогда
			ОбластьМакета.Параметры.ОтпускПроизвел =
				ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ОтпускПроизвел, ДанныеПечати.Дата);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции // СформироватьПечатнуюФормуВозвратПоставщику()

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияИЗаполнение

// Заполнение структуры по передаче товаров, "качество" ссылки на передачу НЕ контролируется.
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//	ИсточникСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями
//
Процедура ЗаполнитьПоПередачеТоваров(Объект, ИсточникСсылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПТО.Организация КАК Организация,
		|	ПТО.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	ПТО.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
		|	ПТО.Партнер КАК Партнер,
		|	ПТО.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПТО
		|ГДЕ
		|	ПТО.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ИсточникСсылка);
	Реквизиты = Запрос.Выполнить().Выгрузить()[0];
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Реквизиты.ОрганизацияПолучатель;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ОрганизацияПолучатель) Тогда
		Объект.ОрганизацияПолучатель = Реквизиты.Организация;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект,Реквизиты,"РасчетыЧерезОтдельногоКонтрагента,Партнер,Контрагент");
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ВозвратТоваровМеждуОрганизациями.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.8.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("c147a460-3478-42ef-a325-fb500c6b3f77");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВозвратТоваровМеждуОрганизациями.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = '1) В возвратах товаров между организациями в табличной части Товары заполняет способ определения себестоимости и документ передачи. Для строк с заполненным документом передачи устанавливается способ указания себестоимости ""Из документа передачи"", для остальных — ""Из текущего документа"". 
	|2) В возвратах товаров между организациями в табличной части Товары заполняет номер ГТД. В случае если одной строке из табличной части Товары соответствует несколько номеров ГТД из табличной части ВидыЗапасов, то разбивает строки в табличной части Товары.
	|До окончания выполнения обработчика вы не сможете редактировать возвраты между организациями.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровМеждуОрганизациямиТовары.Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВозвратТоваровМеждуОрганизациямиТовары
	|ГДЕ
	|	ВозвратТоваровМеждуОрганизациямиТовары.Ссылка.Проведен
	|	И ВозвратТоваровМеждуОрганизациямиТовары.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ПустаяСсылка)");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВозвратТоваровМеждуОрганизациями";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	КОбработке.Ссылка.Проведен
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьСпособУказанияСебестоимостиИДокументПередачи = Ложь;
			Для Каждого СтрТовары Из ДокументОбъект.Товары Цикл
				Если Не ЗначениеЗаполнено(СтрТовары.СпособОпределенияСебестоимости) Тогда
					ЗаполнитьСпособУказанияСебестоимостиИДокументПередачи = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если ЗаполнитьСпособУказанияСебестоимостиИДокументПередачи Тогда
				ЗаполнитьСпособУказанияСебестоимостиДокументПередачиНомерГТД(ДокументОбъект);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьСпособУказанияСебестоимостиДокументПередачиНомерГТД(ДокументОбъект)
	
	СписокПередач = Новый СписокЗначений;
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД");
	Для Каждого СтрВидыЗапасов Из ДокументОбъект.ВидыЗапасов Цикл
		
		Если ЗначениеЗаполнено(СтрВидыЗапасов.ДокументПередачи) Тогда
			СтрВидыЗапасов.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи;
			СписокПередач.Добавить(СтрВидыЗапасов.ДокументПередачи);
		Иначе
			СтрВидыЗапасов.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента;
		КонецЕсли;
		
		КоличествоРаспределить = СтрВидыЗапасов.Количество;
		СтруктураПоиска.АналитикаУчетаНоменклатуры = СтрВидыЗапасов.АналитикаУчетаНоменклатуры;
		СтруктураПоиска.ДокументПередачи = Документы.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка();
		СтруктураПоиска.НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
		СтрокиТоваров = ДокументОбъект.Товары.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрТовары Из СтрокиТоваров Цикл
			Если КоличествоРаспределить >= СтрТовары.Количество Тогда
				СтрТовары.НомерГТД = СтрВидыЗапасов.НомерГТД;
				СтрТовары.ДокументПередачи = СтрВидыЗапасов.ДокументПередачи;
				КоличествоРаспределить = КоличествоРаспределить - СтрТовары.Количество;
			Иначе
				НоваяСтрТовары = ДокументОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрТовары, СтрТовары);
				
				НовоеКоличество = СтрТовары.Количество - КоличествоРаспределить;
				НоваяСтрТовары.Количество = НовоеКоличество;
				НоваяСтрТовары.КоличествоУпаковок  	= Окр(СтрТовары.КоличествоУпаковок 	* НовоеКоличество / СтрТовары.Количество, 3, РежимОкругления.Окр15как20);
				НоваяСтрТовары.Сумма 				= Окр(СтрТовары.Сумма 				* НовоеКоличество / СтрТовары.Количество, 2, РежимОкругления.Окр15как20);
				НоваяСтрТовары.СуммаНДС 			= Окр(СтрТовары.СуммаНДС 			* НовоеКоличество / СтрТовары.Количество, 2, РежимОкругления.Окр15как20);
				НоваяСтрТовары.СуммаСНДС 			= Окр(СтрТовары.СуммаСНДС 			* НовоеКоличество / СтрТовары.Количество, 2, РежимОкругления.Окр15как20);
				
				СтрТовары.Количество = КоличествоРаспределить;
				СтрТовары.КоличествоУпаковок = СтрТовары.КоличествоУпаковок - НоваяСтрТовары.КоличествоУпаковок;
				СтрТовары.Сумма = СтрТовары.Сумма - НоваяСтрТовары.Сумма;
				СтрТовары.СуммаНДС = СтрТовары.СуммаНДС - НоваяСтрТовары.СуммаНДС;
				СтрТовары.СуммаСНДС = СтрТовары.СуммаСНДС - НоваяСтрТовары.СуммаСНДС;
				
				СтрТовары.НомерГТД = СтрВидыЗапасов.НомерГТД;
				СтрТовары.ДокументПередачи = СтрВидыЗапасов.ДокументПередачи;
				
				КоличествоРаспределить = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрТовары.ДокументПередачи) Тогда
				СтрТовары.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи;
			Иначе
				СтрТовары.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента;
			КонецЕсли;
			
			Если Не КоличествоРаспределить Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура("СпособОпределенияСебестоимости", Перечисления.СпособыОпределенияСебестоимости.ПустаяСсылка());
	СтрокиТоваров = ДокументОбъект.Товары.НайтиСтроки(СтруктураПоиска);
	Для Каждого Строка Из СтрокиТоваров Цикл
		Если ЗначениеЗаполнено(Строка.ДокументПередачи) Тогда
			Строка.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи;
		Иначе
			Строка.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокПередач.Количество() = 1 Тогда
		ДокументОбъект.ДокументПередачи = СписокПередач[0].Значение;
	Иначе
		ДокументОбъект.ДокументПередачи = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

#КонецОбласти

#КонецОбласти

#КонецЕсли