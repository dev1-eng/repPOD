#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетФактураВыданный.ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСРФКлиент.КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Идентификатор = "КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Корректировочный/исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура выданный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураВыданный.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураВыданный);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Функция формирует представление счет-фактуры.
//
// Параметры:
//  Номер - Строка - Номер счета-фактуры;
//  Дата - Дата - Дата счета-фактуры;
//
// Возвращаемое значение:
//	Строка - Представление счета-фактуры.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен = Истина) Экспорт
	
	СтруктураШапки = Новый Структура;
	СтруктураШапки.Вставить("Дата", Дата);
	СтруктураШапки.Вставить("Номер", Номер);
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки, НСтр("ru='Счет-фактура'")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	Представление = СтрСоединить(МассивПодстрок, " ");
	
	Возврат Представление;
	
КонецФункции

// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру
//	ПараметрыОтбора - Структура - Отбор счетов-фактуры по реквизитам. Ключ структуры является именем реквизита.
//	РеквизитыСчетаФактуры - Структура - Возвращаемый. Данные счета-фактуры (Ссылка, Номер, Дата, Организация, Валюта и т.д.).
//	Проведен - Булево - Если признак установлен в значение Истина, то будет произведен поиск только проведенных.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица найденных счетов-фактур (Ссылка, Номер, Дата, Организация, Валюта).
//
Функция СчетаФактурыПоОснованию(Основание, ПараметрыОтбора = Неопределено, РеквизитыСчетаФактуры = Неопределено, Проведен = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка                    КАК Ссылка,
	|	СчетФактура.Номер                     КАК Номер,
	|	СчетФактура.Дата                      КАК Дата,
	|	СчетФактура.Организация               КАК Организация,
	|	СчетФактура.Контрагент                КАК Контрагент,
	|	СчетФактура.КППКонтрагента            КАК КППКонтрагента,
	|	СчетФактура.Валюта                    КАК Валюта,
	|	СчетФактура.Проведен                  КАК Проведен,
	|	СчетФактура.Корректировочный          КАК Корректировочный,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """")                                               КАК НомерИсходногоДокумента,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата) КАК ДатаИсходногоДокумента,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """")                                                  КАК НомерИсправленияИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                                                                                                                     КАК ДатаИсправленияИсходногоДокумента
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|		ПО СчетФактураДокументыОснования.Ссылка = СчетФактура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураТовары
	|		ПО СчетФактураДокументыОснования.Ссылка = СчетФактураТовары.Ссылка
	|ГДЕ
	|	СчетФактураДокументыОснования.ДокументОснование = &Основание
	|	И (НЕ СчетФактура.ПометкаУдаления)
	|	//УсловияОтбора
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура.НомерИсправления УБЫВ
	|");
	
	Запрос.УстановитьПараметр("Основание",   Основание);
	
	Если ПараметрыОтбора <> Неопределено Тогда
		
		ТекстУсловий = "";
		
		Для Каждого ЭлементОтбора Из ПараметрыОтбора Цикл
			ТекстУсловий = ТекстУсловий + "
			|	И СчетФактура." + ЭлементОтбора.Ключ + " = &" + ЭлементОтбора.Ключ;
			Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловияОтбора", ТекстУсловий);
		
	КонецЕсли;
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"(НЕ СчетФактура.ПометкаУдаления)",
			"СчетФактура.Проведен");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ТаблицаСчетовФактур.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ТаблицаСчетовФактур[0]);
	КонецЕсли;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

// Определяет параметры заполнения нового счета-фактуры, вводимого на основании существующего счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданный - Счет-фактура, на основании которого вводится счет-фактура.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* Основания - Массив - Документы-основания "Корректировка реализация" нового счета-фактуры
//	* ДатаКорректировки - Дата - Дата нового корректировочного счета-фактуры
//	* Корректировочный - Булево - Истина, указывает на необходимость создания корректировочного счета-фактуры.
//	* Исправление - Булево - Истина, указывает на необходимость создания исправительного счета-фактуры.
//
Функция ПараметрыЗаполненияПоСчетуФактуре(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыЗаполнения = Новый Структура("Основания, ДатаКорректировки");
	ПараметрыЗаполнения.Вставить("Корректировочный", Ложь);
	ПараметрыЗаполнения.Вставить("Исправление", Ложь);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураВыданный.Ссылка = ОснованийКоррективочныхСФ.ПредыдущийСчетФактура
	|			И СчетФактураВыданный.Корректировочный
	|			И НЕ СчетФактураВыданный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураВыданный.СчетФактураОснование = ОснованийКоррективочныхСФ.ПредыдущийСчетФактура
	|			И СчетФактураВыданный.Корректировочный
	|			И СчетФактураВыданный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КорректировкаРеализации.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	ОснованияСчетаФактуры.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
	|			И ОснованияСчетаФактуры.Ссылка.Проведен
	|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
	|ИЗ
	|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка                КАК Ссылка,
	|	КорректировкаРеализации.Дата                  КАК Дата
	|ИЗ
	|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаРеализации.ДокументОснование
	|			И (КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
	|		ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[4].Пустой() Тогда
		
		Если РезультатЗапроса[0].Пустой() Тогда
			ПараметрыЗаполнения.Исправление = Истина;
		КонецЕсли;
		
	Иначе
		
		ТаблицаОснований = РезультатЗапроса[4].Выгрузить();
		ПараметрыЗаполнения.Основания = ТаблицаОснований.ВыгрузитьКолонку("Ссылка");
		ПараметрыЗаполнения.ДатаКорректировки = ТаблицаОснований[0].Дата;
		ПараметрыЗаполнения.Корректировочный = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Определяет необходимость ввода корректировочного счета-фактуры для документов-оснований счета-фактуры.
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданный - Счет-фактура, для которого определяется необходимость корректировки.
//	Исходный - Булево - Ложь - Исходный счет-фактура будет вычислен на основании переданного.
//
// Возвращаемое значение:
//	Булево - Истина - требуется создание корректировочного счета-фактуры.
//
// Устарела. Оставлена для совместимости.
//
Функция ТребуетсяСозданиеКорректировочного(СчетФактура, Исходный = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Исходный Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.ДокументОснование
		|			И КорректировкаРеализации.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|			ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КорректировкаРеализации.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокументыОснования
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.Ссылка
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
		|ИЗ
		|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
		|			И ОснованияСчетаФактуры.Ссылка.Проведен
		|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
		|ИЗ
		|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка                КАК Ссылка
		|ИЗ
		|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаРеализации.ДокументОснование
		|			И (КорректировкаРеализации.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|		ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой()
	
КонецФункции

// Заполняет номера и даты платежно-расчетных документов.
//
// Параметры:
//	ПлатежноРасчетныеДокументы - Табличная часть - заполняемая табличная часть документа
//	МассивОснований - Массив - Массив документов-оснований счета-фактуры.
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура.
//
Процедура ЗаполнитьПлатежноРасчетныеДокументы(ПлатежноРасчетныеДокументы, МассивОснований, Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПлатежноРасчетныеДокументы.Очистить();
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		// В подчиненном узле нет всех данных для определения авансов, 
		// поэтому не заполняем.
		Возврат;
	КонецЕсли; 
	
	ТаблицаЗаполненияПлатежноРасчетныхДокументов = Новый ТаблицаЗначений;
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("ДокументОснование", 
		Метаданные.Документы.СчетФактураВыданный.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип);
	
	Для каждого ДокументОснования Из МассивОснований Цикл
		НоваяСтрока = ТаблицаЗаполненияПлатежноРасчетныхДокументов.Добавить();
		НоваяСтрока.Ссылка = Документы.СчетФактураВыданный.ПустаяСсылка();
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.ДокументОснование = ДокументОснования;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Организация,
	|	Таблица.ДокументОснование
	|ПОМЕСТИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов
	|ИЗ
	|	&ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК Таблица";
	Запрос.УстановитьПараметр("ТаблицаЗаполненияПлатежноРасчетныхДокументов", ТаблицаЗаполненияПлатежноРасчетныхДокументов);
	Запрос.Выполнить();
	
	МассивАналитикУчетаПоПартнерам = АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(Запрос.МенеджерВременныхТаблиц);
	КонецРасчета = КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(Запрос.МенеджерВременныхТаблиц);
	
	Если МассивАналитикУчетаПоПартнерам.Количество() > 0 И Не ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда 
		АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
		АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
		Попытка
			РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(КонецРасчета, АналитикиРасчета);
		Исключение
			ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
			|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
	
	ПараметрыПоиска = ВзаиморасчетыСервер.ИнициализироватьПараметрыПоискаОснованийИДокументовОплаты();
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяПоля          = "ДокументОснование";
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяТаблицыОтбора =
		"ТаблицаЗаполненияПлатежноРасчетныхДокументов";
	ПараметрыПоиска.ТолькоАвансы                                        = Истина;
	ПараметрыПоиска.ОграничитьТипыДокументовОплаты                      = Истина;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_ОснованияИДокументыОплаты(
		Запрос.МенеджерВременныхТаблиц,
		ПараметрыПоиска);
	
	Запрос.Текст = ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов();
	Запрос.УстановитьПараметр("МассивАналитикУчетаПоПартнерам", МассивАналитикУчетаПоПартнерам);
	
	ВыборкаСчетФактур = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаСчетФактур.Следующий() Тогда
		ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ВыборкаСчетФактур);
	КонецЕсли;
	
КонецПроцедуры

// Определяет строковое представление таблицы платежно-расчетных документов счета-фактуры.
//
//	Параметры:
//		ПлатежноРасчетныеДокументы - ТаблицаЗначений - таблица платежно-расчетных документов
//			(см. ТЧ "ПлатежноРасчетныеДокументы" документа "СчетФактураВыданный";
//
//	Возвращаемое значение:
//		Строка - представление таблицы платежно-расчетных документов,
//			получившеяся перебором строк таблицы, приводимых к виду:"[Номер] от [Дата]";
//
Функция СтрокаРасчетноПлатежныхДокументов(ПлатежноРасчетныеДокументы) Экспорт
	
	СтрокаНомеровИДата = "";
	Для Каждого СтрокаТаблицы Из ПлатежноРасчетныеДокументы Цикл
		СтрокаНомеровИДата = СтрокаНомеровИДата + ?(ПустаяСтрока(СтрокаНомеровИДата), "", ", ")
			+ СтрокаТаблицы.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(СтрокаТаблицы.ДатаПлатежноРасчетногоДокумента, "ДЛФ=D");
	КонецЦикла; 
		
	Возврат СтрокаНомеровИДата;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТипСчетаФактуры", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	Запрос.Параметры.Вставить("МассивОрганизаций", Параметры.МассивОрганизаций);
	Если Параметры.Свойство("БезОграниченияПериода") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И &УсловиеОтбора";
	Иначе
		Запрос.Параметры.Вставить("КонецПериода", КонецДня(Параметры.КонецПериода));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеОснования
		|		ПО ТребуетсяОформлениеСчетаФактуры.Организация = ДанныеОснования.Организация
		|			И ТребуетсяОформлениеСчетаФактуры.Основание = ДанныеОснования.Документ
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И ВЫБОР
		|			КОГДА ЕСТЬNULL(ДанныеОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ЕСТЬNULL(ДанныеОснования.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1))
		|			ИНАЧЕ ДанныеОснования.Дата
		|		КОНЕЦ <= &КонецПериода
		|	И &УсловиеОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "ТребуетсяОформлениеСчетаФактуры.Организация В(&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Возвращает массив документов-оснований цепочки счетов-фактур. Алгоритм получения
//
// Параметры:
//  ДокументРеализации - ОпределяемыйТип.ОснованиеСчетФактураВыданный - документ реализации
//  ДатаПодтверждения - Дата - дата подтверждения экспорта
//
// Возвращаемое значение:
//   Массив - ОпределяемыйТип.ОснованиеСчетФактураВыданный - массив документов реализации и корректировок
//
Функция КорректировкиДокументаОснования(ДокументРеализации, ДатаПодтверждения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	Запрос.УстановитьПараметр("ДатаПодтверждения", ДатаПодтверждения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсходныеСФ
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование = &ДокументРеализации
	|	И СчетФактураВыданныйДокументыОснования.Ссылка.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданныйТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеСФ КАК ИсходныеСФ
	|		ПО СчетФактураВыданныйТовары.ИсходныйСчетФактура = ИсходныеСФ.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.Проведен
	|	И СчетФактураВыданныйТовары.Ссылка.Дата < &ДатаПодтверждения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДокументРеализации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции



#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ТипЗначения(Контрагент) = Тип(Справочник.Организации)
	|			ТОГДА ЗначениеРазрешено(Организация) ИЛИ ЗначениеРазрешено(Контрагент)
	|		ИНАЧЕ ЗначениеРазрешено(Организация) И ЗначениеРазрешено(Контрагент.Партнер)
	|	КОНЕЦ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Помечает на удаление счет-фактуру, если:
// - организация счета-фактуры не соответствует указанной,
// - или если документ-основание помечен на удаление.
// Обновляет реквизиты счета-фактуры, если они были изменены в основании.
// Предназначена для вызова в процедуре ПередЗаписью документа-основания.
//
// Параметры:
//	Основание               - ДокументОбъект - документ-основание счета-фактуры.
//
// Устарела. Следует использовать УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПередЗаписью()
//
Процедура ПроверитьРеквизитыСчетФактурыПередЗаписьюОснования(Основание) Экспорт
	
	Если Основание.ДополнительныеСвойства.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСчетовФактур = СчетаФактурыПоОснованию(Основание.Ссылка);
	
	Для Каждого РеквизитыСчетаФактуры Из ТаблицаСчетовФактур Цикл
		
		ПараметрыОбновления = ПараметрыОбновленияРеквизитовСчетаФактуры(Основание, РеквизитыСчетаФактуры);
		
		Если ПараметрыОбновления.ИзмененаОрганизация Или Основание.ПометкаУдаления Тогда
			
			// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление и не изменяется,
			// а только очищается ссылка на текущее основание.
			
			ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект.ДокументыОснования.Количество() > 1 Тогда
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание.Ссылка, "ДокументОснование");
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			Иначе
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
			Продолжить;
			
		ИначеЕсли ПараметрыОбновления.НеобходимоОбновить
			И Основание.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
			
			ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Номер                                                             КАК Номер,
	|	ДанныеДокумента.ПредставлениеНомера                                               КАК ПредставлениеНомера,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.СчетФактураОснование                                              КАК СчетФактураОснование,
	|	ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))             КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.Исправление                                                       КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                                                  КАК НомерИсправления,
	|	ДанныеДокумента.Корректировочный                                                  КАК Корректировочный,
	|	ДанныеДокумента.НалогообложениеНДС                                                КАК НалогообложениеНДС,
	|	ДанныеДокумента.Контрагент                                                        КАК Контрагент,
	|	ДанныеДокумента.Партнер                                                           КАК Партнер,
	|	ДанныеДокумента.Договор                                                           КАК Договор,
	|	ДанныеДокумента.Склад                                                             КАК Склад,
	|	ДанныеДокумента.Валюта                                                            КАК Валюта,
	|	ДанныеДокумента.НаправлениеДеятельности                                           КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ВыставленВЭлектронномВиде                                         КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.ДатаВыставления                                                   КАК ДатаВыставления,
	|	ДанныеДокумента.КодВидаОперации                                                   КАК КодВидаОперации,
	|	ДанныеДокумента.КодВидаОперацииНаУменьшение                                       КАК КодВидаОперацииНаУменьшение,
	|	ДанныеДокумента.КППКонтрагента                                                    КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                                    КАК ИННКонтрагента,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.КПП, """")                                   КАК ОрганизацияКПП,
	|	ДанныеДокумента.ДокументОснование                                                 КАК ДокументОснование,
	|	ДанныеДокумента.Подразделение                                                     КАК Подразделение,
	|	ДанныеДокумента.Ответственный                                                     КАК Ответственный,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ                                      КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Проведен                                                          КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                                   КАК ПометкаУдаления
	|ИЗ
	|	Документ.СчетФактураВыданный КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",								Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",						Реквизиты.ПредставлениеНомера);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыОснования",			Реквизиты.ДатаСчетаФактурыОснования);
	Запрос.УстановитьПараметр("Исправление",						Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",					Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("Корректировочный",					Реквизиты.Корректировочный);
	Запрос.УстановитьПараметр("НалогообложениеНДС",					Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Партнер",							Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",							Реквизиты.Договор);
	Запрос.УстановитьПараметр("Склад",								Реквизиты.Склад);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",					Реквизиты.Валюта);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",			Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВыставленВЭлектронномВиде",			?(Реквизиты.ВыставленВЭлектронномВиде, 2 ,1));
	Запрос.УстановитьПараметр("КодВидаОперации",					Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииНаУменьшение",		Реквизиты.КодВидаОперацииНаУменьшение);
	Запрос.УстановитьПараметр("ДокументИнтеркампани",				ТипЗнч(Реквизиты.Контрагент) = Тип("СправочникСсылка.Организации"));
	Запрос.УстановитьПараметр("СчетФактураОснование",				Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ОрганизацияКПП",						Реквизиты.ОрганизацияКПП);
	Запрос.УстановитьПараметр("ИННКонтрагента",						Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",						Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ДатаПримененияКорректировочныхСФ",	Дата('20130701'));
	Запрос.УстановитьПараметр("Проведен",							Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",					Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",						Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ",		Реквизиты.РучнаяКорректировкаЖурналаСФ);
	Запрос.УстановитьПараметр("ЗаполненДокументОснование",			ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	
	УчетНДСРФ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	Запрос.УстановитьПараметр("ВозвратПоЭкспорту",
		Реквизиты.Корректировочный 
		 И Реквизиты.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	
	ИнформацияПоИсправлению = "";
	Если ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		Если Реквизиты.Исправление Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		Если Реквизиты.Корректировочный Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления% (корректировочный)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", СокрЛП(Реквизиты.НомерИсправления));
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Формат(Реквизиты.Период,"ДЛФ=D"));
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", ?(Запрос.Параметры.Исправление,
		СчетФактураПредыдущееИсправление(Запрос.Параметры.СчетФактураОснование, Запрос.Параметры.НомерИсправления),
		Неопределено));
	
КонецПроцедуры

Процедура ИнициализироватьКурсыВалют(Запрос, ДокументСсылка)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запрос.Параметры.ВалютаСчетаФактуры <> Константы.ВалютаРегламентированногоУчета.Получить() И (Запрос.Параметры.Корректировочный ИЛИ Запрос.Параметры.Исправление) Тогда
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Запрос.Параметры.ВалютаСчетаФактуры,
			Неопределено,
			ДатаИсходногоДокументаОснования(ДокументСсылка));
		КоэффициентПересчетаВВалютуРегл	= Коэффициенты.КоэффициентПересчетаВВалютуРегл;
	Иначе
		КоэффициентПересчетаВВалютуРегл	= 1;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДокументыОснования";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.Ссылка КАК Ссылка,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВтДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтСчетаФактурыИсправления(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСчетаФактурыИсправления";
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ПОМЕСТИТЬ ВтСчетаФактурыИсправления
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка = &СчетФактураОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактураОснование
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТТаблицаТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураТовары.Ссылка КАК Ссылка,
	|	СчетФактураТовары.Ссылка.СчетФактураОснование КАК СчетФактураОснование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетФактураТовары.Номенклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	СчетФактураТовары.ПредыдущийСчетФактура КАК ПредыдущийСчетФактура,
	|	СчетФактураТовары.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	СчетФактураТовары.ТипЗапасов КАК ТипЗапасов,
	|	СчетФактураТовары.СтавкаНДС КАК СтавкаНДС,
	|	СчетФактураТовары.Сумма КАК Сумма,
	|	СчетФактураТовары.СуммаНДС КАК СуммаНДС,
	|	СчетФактураТовары.СуммаУвеличение КАК СуммаУвеличение,
	|	СчетФактураТовары.СуммаНДСУвеличение КАК СуммаНДСУвеличение,
	|	СчетФактураТовары.СуммаУменьшение КАК СуммаУменьшение,
	|	СчетФактураТовары.СуммаНДСУменьшение КАК СуммаНДСУменьшение,
	|	СчетФактураТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТТаблицаТоваров
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураТовары
	|ГДЕ
	|	СчетФактураТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхДляЖурнала";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТТаблицаТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК Ссылка,
	|	""""               КАК НомерИсходногоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаИсходногоДокумента,
	|	""""               КАК НомерИсправленияИсходногоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаИсправленияИсходногоДокумента,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаПоСчетуФактуре,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаНДС,
	|	0                  КАК СуммаПоСчетуФактуреКомиссия,
	|	0                  КАК СуммаНДСКомиссия,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                  КАК СуммаНДСРазницаУвеличение,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                  КАК СуммаНДСРазницаУменьшение,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                  КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                  КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЛОЖЬ               КАК Комиссия,
	|	0                  КАК ИндексСтроки
	|ПОМЕСТИТЬ ВтТаблицаДанныхДляЖурнала
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|			И (НЕ &Исправление)
	|			И (НЕ &Корректировочный)
	|			И ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			И ДанныеОснований.ТипСчетаФактуры  = &ИдентификаторМетаданных
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК Ссылка,
	|	""""               КАК НомерИсходногоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаИсходногоДокумента,
	|	""""               КАК НомерИсправленияИсходногоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаИсправленияИсходногоДокумента,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаПоСчетуФактуре,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)             КАК СуммаНДСКомиссия,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                  КАК СуммаНДСРазницаУвеличение,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                  КАК СуммаНДСРазницаУменьшение,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                  КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	0                  КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                  КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ИСТИНА             КАК Комиссия,
	|	0                  КАК ИндексСтроки
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|			И (НЕ &Исправление)
	|			И (НЕ &Корректировочный)
	|			И НЕ ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			И ДанныеОснований.ТипСчетаФактуры  = &ИдентификаторМетаданных
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """"),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """"),
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	СУММА(СчетФактураТовары.Сумма),
	|	СУММА(СчетФактураТовары.СуммаНДС),
	|	0,
	|	0,
	|	СУММА(СчетФактураТовары.СуммаУвеличение),
	|	СУММА(СчетФактураТовары.СуммаНДСУвеличение),
	|	СУММА(СчетФактураТовары.СуммаУменьшение),
	|	СУММА(СчетФактураТовары.СуммаНДСУменьшение),
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЛОЖЬ,
	|	МИНИМУМ(СчетФактураТовары.НомерСтроки - 1)
	|ИЗ
	|	ВТТаблицаТоваров КАК СчетФактураТовары
	|ГДЕ
	|	СчетФактураТовары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураТовары.Ссылка,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """"),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """"),
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """"),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """"),
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	СУММА(СчетФактураТовары.Сумма),
	|	СУММА(СчетФактураТовары.СуммаНДС),
	|	СУММА(СчетФактураТовары.Сумма),
	|	СУММА(СчетФактураТовары.СуммаНДС),
	|	СУММА(СчетФактураТовары.СуммаУвеличение),
	|	СУММА(СчетФактураТовары.СуммаНДСУвеличение),
	|	СУММА(СчетФактураТовары.СуммаУменьшение),
	|	СУММА(СчетФактураТовары.СуммаНДСУменьшение),
	|	СУММА(СчетФактураТовары.СуммаУвеличение),
	|	СУММА(СчетФактураТовары.СуммаНДСУвеличение),
	|	СУММА(СчетФактураТовары.СуммаУменьшение),
	|	СУММА(СчетФактураТовары.СуммаНДСУменьшение),
	|	ИСТИНА,
	|	МИНИМУМ(СчетФактураТовары.НомерСтроки - 1)
	|ИЗ
	|	ВТТаблицаТоваров КАК СчетФактураТовары
	|ГДЕ
	|	НЕ СчетФактураТовары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураТовары.Ссылка,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """"),
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """"),
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхДляЖурнала", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстРучнаяКорректировка
	ТекстЗапросаРучнаяКорректировка = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|";
#КонецОбласти
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураОснование) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализацию
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &Период
	|	КОНЕЦ КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанных.ИндексСтроки КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаДанных.СуммаНДС) КАК СуммаНДС,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	NULL КАК СуммаНДСРазницаУменьшение,
	|	NULL КАК СуммаНДСРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	&КППКонтрагента КАК КППКонтрагента,
	|	&ИННКонтрагента КАК ИННКонтрагента,
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) <> 0 
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанных
	|ГДЕ
	|	НЕ &Корректировочный
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ИндексСтроки
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуре) + СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) <> 0
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализациюКорректировочный
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Контрагент,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры),
	|	&ДатаВыставления,
	|	&ВыставленВЭлектронномВиде,
	|	&КодВидаОперации,
	|	ТаблицаДанных.НомерИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсходногоДокумента,
	|	&НомерНаПечать,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.НомерИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсправленияИсходногоДокумента,
	|	&НомерИсправления,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.ИндексСтроки,
	|	&ВалютаСчетаФактуры,
	|	NULL,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшение),
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличение),
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУменьшение),
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУвеличение),
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	&КППКонтрагента,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия) КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУменьшениеКомиссия) КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУвеличениеКомиссия) КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия) <> 0 
	|			  ИЛИ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) <> 0
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|
	|ИЗ
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанных
	|
	|ГДЕ
	|	&Корректировочный
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.НомерИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсходногоДокумента,
	|	ТаблицаДанных.НомерИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ИндексСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшение)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличение)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) <> 0
	|";
#КонецОбласти

#Область ТекстПолученныеСчетаФактуры
	ТекстЗапросаПолученныеСчетаФактуры = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Контрагент КАК Контрагент,
	|	&Организация КАК Организация,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &Период
	|	КОНЕЦ КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаДанных.СуммаНДС) КАК СуммаНДС,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	NULL КАК СуммаНДСРазницаУменьшение,
	|	NULL КАК СуммаНДСРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|		ИНАЧЕ &ОрганизацияКПП
	|	КОНЕЦ,
	|	&ИННКонтрагента КАК ИННКонтрагента,
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) <> 0 
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанных
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО ТаблицаДанных.Ссылка = СчетФактураВыданный.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = СчетФактураВыданный.Организация
	|		И ДанныеПодразделений.Подразделение = ЕСТЬNULL(СчетФактураВыданный.Склад.Подразделение, СчетФактураВыданный.Подразделение)
	|		И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|ГДЕ
	|	НЕ &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &ДокументИнтеркампани
	|	И &ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|	И &Контрагент <> &Организация 
	|	И НЕ &Корректировочный
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|		ИНАЧЕ &ОрганизацияКПП
	|	КОНЕЦ
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуре) + СУММА(ТаблицаДанных.СуммаПоСчетуФактуреКомиссия) <> 0
	|";
#КонецОбласти
	
#Область ТекстПолученныеСчетаФактурыКорректировочный
	ТекстЗапросаПолученныеСчетаФактурыКорректировочный = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Контрагент,
	|	&Организация,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры),
	|	&ДатаВыставления,
	|	&ВыставленВЭлектронномВиде,
	|	&КодВидаОперацииНаУменьшение,
	|	ТаблицаДанных.НомерИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсходногоДокумента,
	|	&НомерНаПечать,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.НомерИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсправленияИсходногоДокумента,
	|	&НомерИсправления,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.ИндексСтроки,
	|	&ВалютаСчетаФактуры,
	|	NULL,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшение),
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличение),
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУменьшение),
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУвеличение),
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|		ИНАЧЕ &ОрганизацияКПП
	|	КОНЕЦ,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия) КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУменьшениеКомиссия) КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	СУММА(ТаблицаДанных.СуммаНДСРазницаУвеличениеКомиссия) КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия) <> 0 
	|			  ИЛИ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) <> 0
	|			ТОГДА &КодВидаОперацииНаУменьшение
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|
	|ИЗ
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанных
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО ТаблицаДанных.Ссылка = СчетФактураВыданный.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = СчетФактураВыданный.Организация
	|		И ДанныеПодразделений.Подразделение = ЕСТЬNULL(СчетФактураВыданный.Склад.Подразделение, СчетФактураВыданный.Подразделение)
	|		И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|
	|ГДЕ
	|	НЕ &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &ДокументИнтеркампани
	|	И &ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|	И &Контрагент <> &Организация 
	|	И &Корректировочный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|		ИНАЧЕ &ОрганизацияКПП
	|	КОНЕЦ,
	|	ТаблицаДанных.НомерИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсходногоДокумента,
	|	ТаблицаДанных.НомерИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ИндексСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшение)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличение)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия)
	|	+ СУММА(ТаблицаДанных.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия) <> 0
	|";
#КонецОбласти

	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаРучнаяКорректировка);
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный);
	МассивТекстов.Добавить(ТекстЗапросаПолученныеСчетаФактуры);
	МассивТекстов.Добавить(ТекстЗапросаПолученныеСчетаФактурыКорректировочный);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, ПрошлыеКорректировки = Ложь)
	
	ИмяРегистра = "ВтТаблицаКорректировки";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТТаблицаТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКурсыВалют(Запрос, Запрос.Параметры.Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураТовары.ВидЦенности КАК ВидЦенности,
	|	СчетФактураТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА &Корректировочный
	|				ТОГДА &КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.СуммаУвеличение
	|			ИНАЧЕ &КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА &Корректировочный
	|				ТОГДА &КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.СуммаНДСУвеличение
	|			ИНАЧЕ &КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(&КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.СуммаУменьшение) КАК СуммаУменьшение,
	|	СУММА(&КоэффициентПересчетаВВалютуРегл * СчетФактураТовары.СуммаНДСУменьшение) КАК СуммаНДСУменьшение,
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Комиссия,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК ПериодКорректировки
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	ВТТаблицаТоваров КАК СчетФактураТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураТовары.ВидЦенности,
	|	СчетФактураТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ &Период
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаПодтвержденияСтавки0(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаПодтвержденияСтавки0";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТТаблицаТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(НДССостояниеРеализации0.ДокументРеализации) КАК ДокументРеализации,
	|	МАКСИМУМ(НДССостояниеРеализации0.Состояние) КАК Состояние,
	|	МАКСИМУМ(НДССостояниеРеализации0.ДатаПодтверждения) КАК ДатаПодтверждения
	|ПОМЕСТИТЬ ВтТаблицаПодтвержденияСтавки0
	|ИЗ
	|	ВТТаблицаТоваров КАК СчетФактураТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|	ПО
	|		СчетФактураТовары.ИсходныйСчетФактура = ДокументыОснования.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		ДокументыОснования.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	&НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтНДСЗаписиКнигиПродажДокументаОснования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтНДСЗаписиКнигиПродажДокументаОснования";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПродажДокументаОснования
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = ДокументыОснования.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования, ИмяРегистра);
	
	Возврат ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСчетаФактурыИсправления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСчетаФактурыИсправления(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация                КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик                  КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура                КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности                КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС               КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.Событие                    КАК Событие,
	|	&Период                                          КАК ДатаСобытия,
	|	&Исправление                                     КАК Исправление,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                            КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ                                            КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДСОборот         КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДСОборот                 КАК НДС,
	|	&КодВидаОперацииНаУменьшение                     КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация В (&Организация, &Контрагент)
	|			И СчетФактура В (ВЫБРАТЬ Т.СчетФактура ИЗ ВтСчетаФактурыИсправления КАК Т) 
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление) КАК НДСЗаписиКнигиПокупок
	|
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПокупок.Регистратор <> &Ссылка
	|	И НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураВыданный
	|	И (НДСЗаписиКнигиПокупок.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПокупок.НДСОборот > 0)
	|";
	
#КонецОбласти

#Область ТекстКорректировка
	ТекстЗапросаКорректировка = "
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	&Контрагент                       КАК Поставщик,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &СчетФактураОснование
	|		ИНАЧЕ
	|			&Ссылка
	|	КОНЕЦ                             КАК СчетФактура,
	|	ТаблицаДанных.ВидЦенности         КАК ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС           КАК СтавкаНДС,
	|	NULL                              КАК СчетУчетаНДС,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период                           КАК ДатаСобытия,
	|	ЛОЖЬ                              КАК ЗаписьДополнительногоЛиста,
	|	NULL                              КАК КорректируемыйПериод,
	|	&Исправление                      КАК Исправление,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ                             КАК ИсправленныйСчетФактура,
	|	СУММА(ТаблицаДанных.СуммаУменьшение - ТаблицаДанных.СуммаНДСУменьшение) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.СуммаНДСУменьшение) КАК НДС,
	|	&КодВидаОперацииНаУменьшение КАК КодВидаОперации
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаДанных
	|
	|ГДЕ
	|	&Корректировочный
	|	И (ТаблицаДанных.СуммаНДСУменьшение > 0
	|		ИЛИ &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И НЕ ТаблицаДанных.Комиссия
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС
	|";
#КонецОбласти
	
	ТекстЗапроса = 
		ТекстЗапросаСторноИсправление
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаКорректировка;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСчетаФактурыИсправления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСчетаФактурыИсправления(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтНДСЗаписиКнигиПродажДокументаОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтНДСЗаписиКнигиПродажДокументаОснования(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаПодтвержденияСтавки0", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаПодтвержденияСтавки0(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения, &Период) КАК Период,
	|	&Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения, &Период) КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,НДСЗаписиКнигиПродаж.Период),КВАРТАЛ) 
	|			< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период),КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,НДСЗаписиКнигиПродаж.Период),КВАРТАЛ) 
	|			< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период),КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,НДСЗаписиКнигиПродаж.Период),КВАРТАЛ) 
	|			< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период),КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИСТИНА КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДСОборот КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация В (&Организация, &Контрагент)
	|			И СчетФактура В (ВЫБРАТЬ Т.СчетФактура ИЗ ВтСчетаФактурыИсправления КАК Т) 
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление) КАК НДСЗаписиКнигиПродаж
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаПодтвержденияСтавки0 КАК ПодтверждениеСтавки0
	|	ПО ПодтверждениеСтавки0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПродаж.НДСОборот > 0)
	|	И (ВЫБОР 
	|			КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.ЗаписьКнигиПродаж
	|				ТОГДА ИСТИНА 
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|				ТОГДА ИСТИНА
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0)
	|				ТОГДА ИСТИНА
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА ИСТИНА
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)
	|";
#КонецОбласти
	
#Область ТекстКорректировка
	ТекстЗапросаКорректировка = "
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения, &Период),
	|	&Организация,
	|	&Контрагент,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &СчетФактураОснование
	|		КОГДА &ВозвратПоЭкспорту
	|			ТОГДА ДанныеРеализации.ДокументРеализации
	|		ИНАЧЕ
	|			&Ссылка
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		ИНАЧЕ 
	|			ТаблицаДанных.ВидЦенности
	|	КОНЕЦ КАК ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС,
	|	NULL,
	|	NULL,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|	КОГДА &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|			И ТаблицаДанных.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения, &Период),
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,ТаблицаДанных.ПериодКорректировки), КВАРТАЛ) 
	|				< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период), КВАРТАЛ)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,ТаблицаДанных.ПериодКорректировки), КВАРТАЛ) 
	|				< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период), КВАРТАЛ)
	|		ТОГДА
	|			ТаблицаДанных.ПериодКорректировки
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ,
	|	(&Исправление ИЛИ &ВозвратПоЭкспорту),
	|	NULL,
	|	СУММА(ВЫБОР
	|		КОГДА &ВозвратПоЭкспорту
	|			ТОГДА -ТаблицаДанных.СуммаУменьшение
	|		ИНАЧЕ
	|			ТаблицаДанных.Сумма - ТаблицаДанных.СуммаНДС
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.СуммаНДС) КАК НДС,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаДанных
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаПодтвержденияСтавки0 КАК ПодтверждениеСтавки0
	|	ПО ПодтверждениеСтавки0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаПодтвержденияСтавки0 КАК ДанныеРеализации
	|	ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДанных.Сумма + ТаблицаДанных.СуммаУменьшение > 0
	|	И НЕ ТаблицаДанных.Комиссия
	|	И (&Корректировочный ИЛИ &Исправление)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НЕ &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|		ИЛИ ТаблицаДанных.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		ИЛИ НЕ ПодтверждениеСтавки0.Состояние ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения, &Период),
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &СчетФактураОснование
	|		КОГДА &ВозвратПоЭкспорту
	|			ТОГДА ДанныеРеализации.ДокументРеализации
	|		ИНАЧЕ
	|			&Ссылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		ИНАЧЕ 
	|			ТаблицаДанных.ВидЦенности
	|	КОНЕЦ,
	|	ТаблицаДанных.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,ТаблицаДанных.ПериодКорректировки), КВАРТАЛ) 
	|				< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период), КВАРТАЛ)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,ТаблицаДанных.ПериодКорректировки), КВАРТАЛ) 
	|				< НАЧАЛОПЕРИОДА(ЕСТЬNULL(ПодтверждениеСтавки0.ДатаПодтверждения,&Период), КВАРТАЛ)
	|		ТОГДА
	|			ТаблицаДанных.ПериодКорректировки
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.Сумма) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.СуммаНДС) <> 0
	|		ИЛИ &ВозвратПоЭкспорту
	|";
#КонецОбласти

#Область ТекстДатаИНомерДокументаОплаты
	ТекстЗапросаДатаИНомерДокументаОплаты = "
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	ПлатежноРасчетныеДокументы.НомерПлатежноРасчетногоДокумента,
	|	ПлатежноРасчетныеДокументы.ДатаПлатежноРасчетногоДокумента
	|ИЗ
	|	ВтНДСЗаписиКнигиПродажДокументаОснования КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК ПлатежноРасчетныеДокументы
	|		ПО
	|			ПлатежноРасчетныеДокументы.Ссылка = &Ссылка";
#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаКорректировка 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаДатаИНомерДокументаОплаты;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции

Функция ДатаИсходногоДокументаОснования(СчетФактура)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, СчетФактураВыданныйТовары.Ссылка.Дата)) КАК ДатаИсходногоДокументаОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО СчетФактураВыданныйТовары.ИсходныйСчетФактура = СчетФактураВыданныйДокументыОснования.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Организация = СчетФактураВыданныйТовары.Ссылка.Организация)
	|			И (ДанныеПервичныхДокументов.Документ = СчетФактураВыданныйДокументыОснования.ДокументОснование)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДатаИсходногоДокументаОснования = Выборка.ДатаИсходногоДокументаОснования;
	КонецЦикла;
	
	Возврат ДатаИсходногоДокументаОснования
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураВыданный";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           "ДанныеДокумента.ПредставлениеНомера");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Заполнение

// Подготавливает данные для заполнения таблицы товаров.
// Сохраняет полученный результат (структуру) в переданный адрес временного хранилища.
// 
// Параметры:
// 		ПараметрыЗаполнения - Структура - структура, содержащая следующие ключи:
//			Корректировочный - Булево - Признак того, что СФ является корректировочным;
// 			Исправление - Булево - Признак того, что СФ является исправлением.
//			Валюта - СправочникСсылка.Валюты - Валюта счета-фактуры;
//			ДокументыОснования - ТаблицаЗначений - выгрузка текущей табличной части "Документы основания" счета-фактуры;
//			МоментВремени - МоментВремени, Дата - момент времени, на который производить поиск цепочек товаров счетов-фактур;
//
Процедура ПодготовитьДанныеЗаполненияТаблицыТоваров(ПараметрыЗаполнения, АдресХранилища) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Документ.СчетФактураВыданный.Форма.ФормаДокумента.Команда.ОбновитьТаблицуТоваров");
	
	Данные = ПолучитьТаблицуТоваров(ПараметрыЗаполнения);
	ПоместитьВоВременноеХранилище(Данные, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Данные.Количество() / 100);
	
КонецПроцедуры

// Заполняет таблицу товаров по переданным параметрам заполнения.
// 
// Возвращаемое значение:
// 	- Структура
// 		- СчетФактураОснование - в случае исправления автоматически определяем счет-фактуру основание.
// 		- Корректировочный - в случае исправления устанавливаем признак Корректировочный счета-фактуры основания.
// 		- Товары - таблица Товары.
//
Функция ПолучитьТаблицуТоваров(ПараметрыЗаполнения) Экспорт
	
	// Заполняем табличную часть Товары только для Корректировочных или исправленных счетов-фактур.
	// Если признаки переданы в данных заполнения, то берем оттуда, иначе из реквизитов заполняемого документа.
	
	ЭтоКорректировочный = ПараметрыЗаполнения.Корректировочный;
	ЭтоИсправление = ПараметрыЗаполнения.Исправление;
	ВалютаСчетаФактуры = ПараметрыЗаполнения.Валюта;
	
	Результат = Новый Структура("СчетФактураОснование,Корректировочный,Товары");
	Результат.СчетФактураОснование = Документы.СчетФактураВыданный.ПустаяСсылка();
	Результат.Корректировочный = ПараметрыЗаполнения.Корректировочный;
	Результат.Товары = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.Выгрузить();
	
	Если НЕ ЭтоКорректировочный И НЕ ЭтоИсправление Тогда
		Возврат Результат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", ЭтоКорректировочный);
	ДополнительныеПараметры.Вставить("ВалютаСчетаФактуры", ВалютаСчетаФактуры);
	
	// Получаем предварительную таблицу товаров по всем документам-основаниям.
	
	ТаблицаТорговыхДокументов = ПараметрыЗаполнения.ДокументыОснования.Скопировать();
	ТаблицаТорговыхДокументов.Свернуть("ДокументОснование");
	
	ПоместитьТаблицуТоваровТорговыхДокументов(ТаблицаТорговыхДокументов.ВыгрузитьКолонку("ДокументОснование"),
		МенеджерВременныхТаблиц, "вт_ТаблицаТоваровДокументовОснований", ДополнительныеПараметры);
	
	// Ищем предыдущие счета-фактуры. Если по таблице товаров счет-фактура не найден,
	// то считаем, что предыдущий счет-фактура - это исходный счет-фактура.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаТорговыхДокументов", ТаблицаТорговыхДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТорговыхДокументов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ТорговыеДокументыОснования
	|ИЗ
	|	&ТаблицаТорговыхДокументов КАК ТаблицаТорговыхДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка.Дата) КАК ПредыдущийСчетФактураДата
	|ПОМЕСТИТЬ вт_КрайниеПериоды
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_ТаблицаТоваров.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.МоментВремени < &МоментВремени
	|	И СчетФактураВыданныйТовары.Ссылка <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика,
	|	вт_ТаблицаТоваров.НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_КрайниеПериоды.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура КАК Номенклатура,
	|	вт_КрайниеПериоды.Характеристика КАК Характеристика,
	|	вт_КрайниеПериоды.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание КАК Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов КАК ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД КАК КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД КАК НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка) КАК ПредыдущийСчетФактура
	|ПОМЕСТИТЬ вт_КрайниеСчетаФактуры
	|ИЗ
	|	вт_КрайниеПериоды КАК вт_КрайниеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_КрайниеПериоды.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_КрайниеПериоды.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_КрайниеПериоды.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_КрайниеПериоды.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_КрайниеПериоды.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_КрайниеПериоды.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_КрайниеПериоды.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_КрайниеПериоды.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_КрайниеПериоды.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_КрайниеПериоды.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_КрайниеПериоды.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И вт_КрайниеПериоды.ПредыдущийСчетФактураДата = СчетФактураВыданныйТовары.Ссылка.Дата
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_КрайниеПериоды.ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура,
	|	вт_КрайниеПериоды.Характеристика,
	|	вт_КрайниеПериоды.НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура, вт_ТаблицаТоваров.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Корректировочный, ЛОЖЬ) КАК Корректировочный,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Исправление, ЛОЖЬ) КАК Исправление,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ вт_ТаблицаТоваровПредварительная
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КрайниеСчетаФактуры КАК вт_КрайниеСчетаФактуры
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = вт_КрайниеСчетаФактуры.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = вт_КрайниеСчетаФактуры.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = вт_КрайниеСчетаФактуры.Характеристика
	|			И вт_ТаблицаТоваров.НоменклатураНабора = вт_КрайниеСчетаФактуры.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = вт_КрайниеСчетаФактуры.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = вт_КрайниеСчетаФактуры.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = вт_КрайниеСчетаФактуры.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = вт_КрайниеСчетаФактуры.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = вт_КрайниеСчетаФактуры.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = вт_КрайниеСчетаФактуры.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = вт_КрайниеСчетаФактуры.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование.Корректировочный
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный
	|	КОНЕЦ КАК Корректировочный
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура КАК СчетФактура,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный КАК Корректировочный,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление КАК Исправление,
	|	МИНИМУМ(ЕСТЬNULL(ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование, ЛОЖЬ)) КАК ИсправлениеНаОснованииСФ
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТорговыеДокументыОснования КАК вт_ТорговыеДокументыОснования
	|		ПО ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|УПОРЯДОЧИТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ТаблицаТоваровПредварительная.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеСчетаФактуры
	|";
	
	Запрос.УстановитьПараметр("МоментВремени", ПараметрыЗаполнения.МоментВремени);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗаполнения.МоментВремени.Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаСчетаФактурыОснования = МассивРезультатов[4].Выгрузить();
	Если ТаблицаСчетаФактурыОснования.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ЭтоИсправление И ТаблицаСчетаФактурыОснования.Количество() > 1 Тогда
		ТекстСообщения = НСтр("ru='По выбранным документам-основаниям необходимо выставить несколько исправленных счетов-фактур.'") + Символы.ПС 
			+ НСтр("ru='Необходимо зарегистрировать по документам-основаниям отдельные счета-фактуры.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТаблицаПредыдущиеСчетаФактуры = МассивРезультатов[5].Выгрузить();
	ДокументыРеализации = МассивРезультатов[6].Выгрузить().ВыгрузитьКолонку("ДокументРеализации");
	
	ЭтоИсправлениеНаОснованииСФ = Ложь;
	
	Если ЭтоИсправление И ТаблицаПредыдущиеСчетаФактуры.Количество() > 0 Тогда
		
		// Для исправления берем данные о товарах последнего исправления или исходного счета-фактуры.
		ДанныеПредыдущегоСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры[0];
		ПредыдущиеСчетаФактуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеПредыдущегоСчетаФактуры.СчетФактура);
		
		// Если предыдущий счет-фактура - исправление или корректировка, то все товары есть в нем самом,
		// поэтому данные о товарах исходного торгового документа получать не нужно.
		Если ДанныеПредыдущегоСчетаФактуры.Корректировочный Или ДанныеПредыдущегоСчетаФактуры.Исправление Тогда
			ДокументыРеализации = Новый Массив;
		КонецЕсли;
		// Отслеживаем случай, когда исправленный счет-фактура создается по счету-фактуре, а не по корректировке.
		// В этом случае таблица товаров измениться не может и нужно просто скопировать таблицу предыдущего счета-фактуры
		Если ДанныеПредыдущегоСчетаФактуры.ИсправлениеНаОснованииСФ Тогда
			ЭтоИсправлениеНаОснованииСФ = Истина;
		КонецЕсли;
	Иначе
		// Для корректировки берем данные о товарах из каждой найденной предыдущей счет-фактуры.
		ПредыдущиеСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры.ВыгрузитьКолонку("СчетФактура");
	КонецЕсли;
	
	// Формируем вспомогательные временные таблицы для дальнейшего заполнения.
	
	ПоместитьТаблицуТоваровТорговыхДокументов(ДокументыРеализации, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровИсходныхТорговыхДокументов", ДополнительныеПараметры);
	ПоместитьТаблицуТоваровСчетовФактур(ПредыдущиеСчетаФактуры, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровПредыдущихСчетовФактур", ДополнительныеПараметры);
	СвернутьТаблицуТоваровТорговыхДокументов(МенеджерВременныхТаблиц, ЭтоИсправлениеНаОснованииСФ);
	
	Если ЭтоИсправление Тогда
		Результат.СчетФактураОснование = ТаблицаСчетаФактурыОснования[0].СчетФактура;
		Результат.Корректировочный = ТаблицаСчетаФактурыОснования[0].Корректировочный; // Меняем признак корректировочный, если изменили счет-фактуру основание
		
		ДополнительныеПараметры.Вставить("ЭтоКорректировочный", Результат.Корректировочный);
		Результат.Товары = ПолучитьТаблицуТоваровИсправление(МенеджерВременныхТаблиц, ДополнительныеПараметры);
	Иначе
		Результат.Товары = ПолучитьТаблицуТоваровКорректировка(МенеджерВременныхТаблиц);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ПоместитьТаблицуТоваровТорговыхДокументов(МассивТорговыхДокументов, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ДополнительныеПараметры)
	
	ТаблицаТоваров = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.ВыгрузитьКолонки();
	ТаблицаТоваров.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	ТаблицаТоваров.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаТоваров.Колонки.Добавить("СуммаРегл", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСРегл", Новый ОписаниеТипов("Число"));
	
	Для Каждого Основание Из МассивТорговыхДокументов Цикл
		Если НЕ ЗначениеЗаполнено(Основание) Тогда
			Продолжить;
		КонецЕсли;
		
		ДополнительныеСвойстваОснования = Новый Структура;
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Основание, ДополнительныеСвойстваОснования);
		
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Основание);
		
		// При эмулировании механизма проведения документа для заполнения таблицы товаров необходимо устанавливать привилегированный режим.
		
		УстановитьПривилегированныйРежим(Истина);
		МенеджерДокумента.ИнициализироватьДанныеДокумента(Основание, ДополнительныеСвойстваОснования, "ЗаполнениеТоваровСФВыданный");
		УстановитьПривилегированныйРежим(Ложь);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДополнительныеСвойстваОснования.ТаблицыДляДвижений.ТаблицаЗаполнениеТоваровСФВыданный,
			ТаблицаТоваров);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Содержание КАК Содержание,
	|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.Сумма
	|		ИНАЧЕ ТаблицаТоваров.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ТаблицаТоваров.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|
	|	ТаблицаТоваров.ДокументРеализации
	|//ПОМЕСТИТЬ
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, ДополнительныеПараметры, Истина);
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПоместитьТаблицуТоваровСчетовФактур(МассивСчетовФактур, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ДополнительныеПараметры)
	
	// Таблица товаров предыдущих счетов фактур с учетом данных исходных торговых документов.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СчетФактураВыданныйТовары.Ссылка КАК ТекущийСчетФактура,
	|	СчетФактураВыданныйТовары.ПредыдущийСчетФактура КАК ПредыдущийСчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйТовары.ИсходныйСчетФактура.Исправление
	|			ТОГДА СчетФактураВыданныйТовары.ИсходныйСчетФактура.СчетФактураОснование
	|		ИНАЧЕ СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|	КОНЕЦ КАК ИсходныйСчетФактура,
	|	СчетФактураВыданныйТовары.Номенклатура КАК Номенклатура,
	|	СчетФактураВыданныйТовары.Характеристика КАК Характеристика,
	|	СчетФактураВыданныйТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	СчетФактураВыданныйТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	СчетФактураВыданныйТовары.Содержание КАК Содержание,
	|	СчетФактураВыданныйТовары.ТипЗапасов КАК ТипЗапасов,
	|	СчетФактураВыданныйТовары.КодТНВЭД КАК КодТНВЭД,
	|	СчетФактураВыданныйТовары.НомерГТД КАК НомерГТД,
	|	СчетФактураВыданныйТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СчетФактураВыданныйТовары.СтавкаНДС КАК СтавкаНДС,
	|
	|	СчетФактураВыданныйТовары.Количество КАК Количество,
	|	СчетФактураВыданныйТовары.Сумма КАК Сумма,
	|	СчетФактураВыданныйТовары.СуммаНДС КАК СуммаНДС,
	|
	|	СчетФактураВыданныйТовары.КоличествоУменьшение КАК КоличествоУменьшение,
	|	СчетФактураВыданныйТовары.КоличествоУвеличение КАК КоличествоУвеличение,
	|	СчетФактураВыданныйТовары.СуммаУменьшение КАК СуммаУменьшение,
	|	СчетФактураВыданныйТовары.СуммаУвеличение КАК СуммаУвеличение,
	|	СчетФактураВыданныйТовары.СуммаНДСУменьшение КАК СуммаНДСУменьшение,
	|	СчетФактураВыданныйТовары.СуммаНДСУвеличение КАК СуммаНДСУвеличение
	|ПОМЕСТИТЬ вт_ТаблицаТоваровСчетовФактур
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровПредварительная КАК ЦепочкиТоваровСФ
	|		ПО СчетФактураВыданныйТовары.Ссылка = ЦепочкиТоваровСФ.ПредыдущийСчетФактура
	|			И СчетФактураВыданныйТовары.ИсходныйСчетФактура = ЦепочкиТоваровСФ.ИсходныйСчетФактура
	|			И СчетФактураВыданныйТовары.Номенклатура = ЦепочкиТоваровСФ.Номенклатура
	|			И СчетФактураВыданныйТовары.Характеристика = ЦепочкиТоваровСФ.Характеристика
	|			И СчетФактураВыданныйТовары.НоменклатураНабора = ЦепочкиТоваровСФ.НоменклатураНабора
	|			И СчетФактураВыданныйТовары.ХарактеристикаНабора = ЦепочкиТоваровСФ.ХарактеристикаНабора
	|			И СчетФактураВыданныйТовары.Содержание = ЦепочкиТоваровСФ.Содержание
	|			И СчетФактураВыданныйТовары.ТипЗапасов = ЦепочкиТоваровСФ.ТипЗапасов
	|			И СчетФактураВыданныйТовары.КодТНВЭД = ЦепочкиТоваровСФ.КодТНВЭД
	|			И СчетФактураВыданныйТовары.НомерГТД = ЦепочкиТоваровСФ.НомерГТД
	|			И СчетФактураВыданныйТовары.ЕдиницаИзмерения = ЦепочкиТоваровСФ.ЕдиницаИзмерения
	|			И СчетФактураВыданныйТовары.СтавкаНДС = ЦепочкиТоваровСФ.СтавкаНДС
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка В(&Ссылка)
	|
	|	// Для корректировочных счетов-фактур берем только товары ранее отобранные по цепочкам счетов-фактур.
	|	И (НЕ &ЭтоКорректировочный ИЛИ НЕ ЦепочкиТоваровСФ.ПредыдущийСчетФактура ЕСТЬ NULL)
	|;
	|
	|// Товары, присутствующие в предыдущем счете-фактуре (только корректировочные/исправительные).
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровСФ.ТекущийСчетФактура КАК ТекущийСчетФактура,
	|	ТаблицаТоваровСФ.ПредыдущийСчетФактура КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровСФ.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровСФ.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСФ.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСФ.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровСФ.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровСФ.Содержание КАК Содержание,
	|	ТаблицаТоваровСФ.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровСФ.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровСФ.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровСФ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровСФ.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваровСФ.Количество КАК Количество,
	|	ТаблицаТоваровСФ.Сумма КАК Сумма,
	|	ТаблицаТоваровСФ.СуммаНДС КАК СуммаНДС,
	|
	|	ТаблицаТоваровСФ.КоличествоУменьшение КАК КоличествоУменьшение,
	|	ТаблицаТоваровСФ.КоличествоУвеличение КАК КоличествоУвеличение,
	|	ТаблицаТоваровСФ.СуммаУменьшение КАК СуммаУменьшение,
	|	ТаблицаТоваровСФ.СуммаУвеличение КАК СуммаУвеличение,
	|	ТаблицаТоваровСФ.СуммаНДСУменьшение КАК СуммаНДСУменьшение,
	|	ТаблицаТоваровСФ.СуммаНДСУвеличение КАК СуммаНДСУвеличение
	|//ПОМЕСТИТЬ
	|ИЗ
	|	вт_ТаблицаТоваровСчетовФактур КАК ТаблицаТоваровСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Товары, не входящие в корректировочные или исправленные счета-фактуры.
	|// Берем данные из торговых документов.
	|// В качестве текущего и предыдущего счета-фактуры используем исходный счет-фактуру.
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровТД.ИсходныйСчетФактура КАК ТекущийСчетФактура,
	|	ТаблицаТоваровТД.ИсходныйСчетФактура КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровТД.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровТД.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровТД.Характеристика КАК Характеристика,
	|	ТаблицаТоваровТД.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровТД.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровТД.Содержание КАК Содержание,
	|	ТаблицаТоваровТД.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровТД.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровТД.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровТД.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровТД.СтавкаНДС КАК СтавкаНДС,
	|
	|	СУММА(ТаблицаТоваровТД.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваровТД.Сумма) КАК Сумма,
	|	СУММА(ТаблицаТоваровТД.СуммаНДС) КАК СуммаНДС,
	|
	|	0 КАК КоличествоУменьшение,
	|	0 КАК КоличествоУвеличение,
	|	0 КАК СуммаУменьшение,
	|	0 КАК СуммаУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|	0 КАК СуммаНДСУвеличение
	|ИЗ
	|	вт_ТаблицаТоваровИсходныхТорговыхДокументов КАК ТаблицаТоваровТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровСчетовФактур КАК ТаблицаТоваровСФ
	|		ПО ТаблицаТоваровТД.ИсходныйСчетФактура = ТаблицаТоваровСФ.ИсходныйСчетФактура
	|			И ТаблицаТоваровТД.Номенклатура = ТаблицаТоваровСФ.Номенклатура
	|			И ТаблицаТоваровТД.Характеристика = ТаблицаТоваровСФ.Характеристика
	|			И ТаблицаТоваровТД.НоменклатураНабора = ТаблицаТоваровСФ.НоменклатураНабора
	|			И ТаблицаТоваровТД.ХарактеристикаНабора = ТаблицаТоваровСФ.ХарактеристикаНабора
	|			И ТаблицаТоваровТД.Содержание = ТаблицаТоваровСФ.Содержание
	|			И ТаблицаТоваровТД.ТипЗапасов = ТаблицаТоваровСФ.ТипЗапасов
	|			И ТаблицаТоваровТД.КодТНВЭД = ТаблицаТоваровСФ.КодТНВЭД
	|			И ТаблицаТоваровТД.НомерГТД = ТаблицаТоваровСФ.НомерГТД
	|			И ТаблицаТоваровТД.ЕдиницаИзмерения = ТаблицаТоваровСФ.ЕдиницаИзмерения
	|			И ТаблицаТоваровТД.СтавкаНДС = ТаблицаТоваровСФ.СтавкаНДС
	|
	|			// Исключаем исправления.
	|			И НЕ ТаблицаТоваровСФ.ТекущийСчетФактура.СчетФактураОснование = ТаблицаТоваровСФ.ИсходныйСчетФактура
	|ГДЕ
	|	ТаблицаТоваровСФ.ИсходныйСчетФактура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровТД.ИсходныйСчетФактура,
	|	ТаблицаТоваровТД.Номенклатура,
	|	ТаблицаТоваровТД.Характеристика,
	|	ТаблицаТоваровТД.НоменклатураНабора,
	|	ТаблицаТоваровТД.ХарактеристикаНабора,
	|	ТаблицаТоваровТД.Содержание,
	|	ТаблицаТоваровТД.ТипЗапасов,
	|	ТаблицаТоваровТД.КодТНВЭД,
	|	ТаблицаТоваровТД.НомерГТД,
	|	ТаблицаТоваровТД.ЕдиницаИзмерения,
	|	ТаблицаТоваровТД.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ТаблицаТоваровИсходныхТорговыхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ТаблицаТоваровСчетовФактур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ТаблицаТоваровПредварительная
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, ДополнительныеПараметры, Истина);
	
	Запрос.УстановитьПараметр("Ссылка", МассивСчетовФактур);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СвернутьТаблицуТоваровТорговыхДокументов(МенеджерВременныхТаблиц, ЭтоИсправлениеНаОснованииСФ)
	
	// Сворачиваем таблицу товаров торговых документов (избавляемся от поля ДокументРеализации).
	// Исходную таблицу товаров торговых документов уничтожаем.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЭтоИсправлениеНаОснованииСФ", ЭтоИсправлениеНаОснованииСФ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваровДО.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровДО.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровДО.Характеристика КАК Характеристика,
	|	ТаблицаТоваровДО.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровДО.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровДО.Содержание КАК Содержание,
	|	ТаблицаТоваровДО.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровДО.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровДО.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровДО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровДО.СтавкаНДС КАК СтавкаНДС,
	|
	|	СУММА(ТаблицаТоваровДО.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваровДО.Сумма) КАК Сумма,
	|	СУММА(ТаблицаТоваровДО.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ вт_ТаблицаТоваровДокументовОснованийСвернуто
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК ТаблицаТоваровДО
	|
	|ГДЕ
	|	НЕ &ЭтоИсправлениеНаОснованииСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровДО.ИсходныйСчетФактура,
	|	ТаблицаТоваровДО.Номенклатура,
	|	ТаблицаТоваровДО.Характеристика,
	|	ТаблицаТоваровДО.НоменклатураНабора,
	|	ТаблицаТоваровДО.ХарактеристикаНабора,
	|	ТаблицаТоваровДО.Содержание,
	|	ТаблицаТоваровДО.ТипЗапасов,
	|	ТаблицаТоваровДО.КодТНВЭД,
	|	ТаблицаТоваровДО.НомерГТД,
	|	ТаблицаТоваровДО.ЕдиницаИзмерения,
	|	ТаблицаТоваровДО.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ТаблицаТоваровДокументовОснований";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПолучитьТаблицуТоваровИсправление(МенеджерВременныхТаблиц, ДополнительныеПараметры)
	
	// 1. Получаем таблицу товаров предыдущих счетов-фактур.
	// 2. Получаем таблицу товаров исходных торговых документов.
	// 3. Дополняем таблицу 1 данными товаров документов-оснований (новые строки и суммы уменьшение/увеличение),
	//    а так же данными товаров исходных торговых документов (не корректировочный, не исправление).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"// Товары, присутствующие в предыдущем счете-фактуре.
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровСФ.ПредыдущийСчетФактура КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровСФ.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровСФ.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСФ.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСФ.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровСФ.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровСФ.Содержание КАК Содержание,
	|	ТаблицаТоваровСФ.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровСФ.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровСФ.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровСФ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровСФ.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваровСФ.Количество + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) КАК Количество,
	|	ТаблицаТоваровСФ.Сумма + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) КАК Сумма,
	|	ТаблицаТоваровСФ.СуммаНДС + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) КАК СуммаНДС,
	|
	|	(ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК КоличествоУменьшение,
	|	(ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоУвеличение,
	|	(ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаУменьшение,
	|	(ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУвеличение,
	|	(ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаНДСУменьшение,
	|	(ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		КОГДА ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСУвеличение
	|ИЗ
	|	вт_ТаблицаТоваровПредыдущихСчетовФактур КАК ТаблицаТоваровСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровДокументовОснованийСвернуто КАК ТаблицаТоваровДО
	|		ПО ТаблицаТоваровСФ.ИсходныйСчетФактура = ТаблицаТоваровДО.ИсходныйСчетФактура
	|			И ТаблицаТоваровСФ.Номенклатура = ТаблицаТоваровДО.Номенклатура
	|			И ТаблицаТоваровСФ.Характеристика = ТаблицаТоваровДО.Характеристика
	|			И ТаблицаТоваровСФ.НоменклатураНабора = ТаблицаТоваровДО.НоменклатураНабора
	|			И ТаблицаТоваровСФ.ХарактеристикаНабора = ТаблицаТоваровДО.ХарактеристикаНабора
	|			И ТаблицаТоваровСФ.Содержание = ТаблицаТоваровДО.Содержание
	|			И ТаблицаТоваровСФ.ТипЗапасов = ТаблицаТоваровДО.ТипЗапасов
	|			И ТаблицаТоваровСФ.КодТНВЭД = ТаблицаТоваровДО.КодТНВЭД
	|			И ТаблицаТоваровСФ.НомерГТД = ТаблицаТоваровДО.НомерГТД
	|			И ТаблицаТоваровСФ.ЕдиницаИзмерения = ТаблицаТоваровДО.ЕдиницаИзмерения
	|			И ТаблицаТоваровСФ.СтавкаНДС = ТаблицаТоваровДО.СтавкаНДС
	|ГДЕ
	|	НЕ ТаблицаТоваровСФ.Количество + ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) = 0
	|	ИЛИ НЕ ТаблицаТоваровСФ.Сумма + ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) = 0
	|	ИЛИ НЕ ТаблицаТоваровСФ.СуммаНДС + ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Новые товары, добавленные торговым документом корректировки (только на увеличение).
	|// В качестве предыдущего счета-фактуры используем исходный счет-фактуру.
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровДО.ИсходныйСчетФактура КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровДО.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровДО.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровДО.Характеристика КАК Характеристика,
	|	ТаблицаТоваровДО.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровДО.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровДО.Содержание КАК Содержание,
	|	ТаблицаТоваровДО.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровДО.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровДО.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровДО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровДО.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваровДО.Количество КАК Количество,
	|	ТаблицаТоваровДО.Сумма КАК Сумма,
	|	ТаблицаТоваровДО.СуммаНДС КАК СуммаНДС,
	|
	|	0 КАК КоличествоУменьшение,
	|	ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваровДО.Количество
	|	КОНЕЦ КАК КоличествоУвеличение,
	|	0 КАК СуммаУменьшение,
	|	ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваровДО.Сумма
	|	КОНЕЦ КАК СуммаУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|	ВЫБОР
	|		КОГДА НЕ &ЭтоКорректировочный
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваровДО.СуммаНДС
	|	КОНЕЦ КАК СуммаНДСУвеличение
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснованийСвернуто КАК ТаблицаТоваровДО
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровПредыдущихСчетовФактур КАК ТаблицаТоваровСФ
	|		ПО ТаблицаТоваровДО.ИсходныйСчетФактура = ТаблицаТоваровСФ.ИсходныйСчетФактура
	|			И ТаблицаТоваровДО.Номенклатура = ТаблицаТоваровСФ.Номенклатура
	|			И ТаблицаТоваровДО.Характеристика = ТаблицаТоваровСФ.Характеристика
	|			И ТаблицаТоваровДО.НоменклатураНабора = ТаблицаТоваровСФ.НоменклатураНабора
	|			И ТаблицаТоваровДО.ХарактеристикаНабора = ТаблицаТоваровСФ.ХарактеристикаНабора
	|			И ТаблицаТоваровДО.Содержание = ТаблицаТоваровСФ.Содержание
	|			И ТаблицаТоваровДО.ТипЗапасов = ТаблицаТоваровСФ.ТипЗапасов
	|			И ТаблицаТоваровДО.КодТНВЭД = ТаблицаТоваровСФ.КодТНВЭД
	|			И ТаблицаТоваровДО.НомерГТД = ТаблицаТоваровСФ.НомерГТД
	|			И ТаблицаТоваровДО.ЕдиницаИзмерения = ТаблицаТоваровСФ.ЕдиницаИзмерения
	|			И ТаблицаТоваровДО.СтавкаНДС = ТаблицаТоваровСФ.СтавкаНДС
	|ГДЕ
	|	ТаблицаТоваровСФ.ИсходныйСчетФактура ЕСТЬ NULL";
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, ДополнительныеПараметры, Истина);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТаблицуТоваровКорректировка(МенеджерВременныхТаблиц)
	
	// 1. Получаем таблицу товаров предыдущего счета-фактуры.
	// 2. Получаем таблицу товаров исходных торговых документов.
	// 3. Дополняем таблицу товаров документов-оснований данными таблицы 1 (суммы уменьшение/увеличение),
	//    а так же суммами товаров исходных торговых документов (не корректировочный, не исправление).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"// Новые товары, добавленные торговым документом корректировки (только на увеличение).
	|// В качестве предыдущего счета-фактуры используем исходный счет-фактуру.
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаТоваровСФ.ТекущийСчетФактура, ТаблицаТоваровДО.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровДО.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровДО.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровДО.Характеристика КАК Характеристика,
	|	ТаблицаТоваровДО.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровДО.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровДО.Содержание КАК Содержание,
	|	ТаблицаТоваровДО.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровДО.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровДО.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровДО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровДО.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваровДО.Количество + ЕСТЬNULL(ТаблицаТоваровСФ.Количество, 0) КАК Количество,
	|	ТаблицаТоваровДО.Сумма + ЕСТЬNULL(ТаблицаТоваровСФ.Сумма, 0) КАК Сумма,
	|	ТаблицаТоваровДО.СуммаНДС + ЕСТЬNULL(ТаблицаТоваровСФ.СУммаНДС, 0) КАК СуммаНДС,
	|
	|	ТаблицаТоваровДО.Количество * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.Количество > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК КоличествоУменьшение,
	|	ТаблицаТоваровДО.Количество * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.Количество > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоУвеличение,
	|	ТаблицаТоваровДО.Сумма * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.Сумма > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаУменьшение,
	|	ТаблицаТоваровДО.Сумма * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.Сумма > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУвеличение,
	|	ТаблицаТоваровДО.СуммаНДС * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.СуммаНДС > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаНДСУменьшение,
	|	ТаблицаТоваровДО.СуммаНДС * ВЫБОР
	|		КОГДА ТаблицаТоваровДО.СуммаНДС > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСУвеличение
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснованийСвернуто КАК ТаблицаТоваровДО
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровПредыдущихСчетовФактур КАК ТаблицаТоваровСФ
	|		ПО ТаблицаТоваровДО.ИсходныйСчетФактура = ТаблицаТоваровСФ.ИсходныйСчетФактура
	|			И ТаблицаТоваровДО.Номенклатура = ТаблицаТоваровСФ.Номенклатура
	|			И ТаблицаТоваровДО.Характеристика = ТаблицаТоваровСФ.Характеристика
	|			И ТаблицаТоваровДО.НоменклатураНабора = ТаблицаТоваровСФ.НоменклатураНабора
	|			И ТаблицаТоваровДО.ХарактеристикаНабора = ТаблицаТоваровСФ.ХарактеристикаНабора
	|			И ТаблицаТоваровДО.Содержание = ТаблицаТоваровСФ.Содержание
	|			И ТаблицаТоваровДО.ТипЗапасов = ТаблицаТоваровСФ.ТипЗапасов
	|			И ТаблицаТоваровДО.КодТНВЭД = ТаблицаТоваровСФ.КодТНВЭД
	|			И ТаблицаТоваровДО.НомерГТД = ТаблицаТоваровСФ.НомерГТД
	|			И ТаблицаТоваровДО.ЕдиницаИзмерения = ТаблицаТоваровСФ.ЕдиницаИзмерения
	|			И ТаблицаТоваровДО.СтавкаНДС = ТаблицаТоваровСФ.СтавкаНДС
	|

	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаТоваровСФ.ТекущийСчетФактура, ТаблицаТоваровДО.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|
	|	ТаблицаТоваровСФ.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваровСФ.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСФ.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСФ.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваровСФ.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваровСФ.Содержание КАК Содержание,
	|	ТаблицаТоваровСФ.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваровСФ.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваровСФ.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваровСФ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваровСФ.СтавкаНДС КАК СтавкаНДС,
	|
	|	ТаблицаТоваровСФ.Количество КАК Количество,
	|	ТаблицаТоваровСФ.Сумма КАК Сумма,
	|	ТаблицаТоваровСФ.СуммаНДС КАК СуммаНДС,
	|
	|	(ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК КоличествоУменьшение,
	|	(ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.КоличествоУвеличение - ТаблицаТоваровСФ.КоличествоУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Количество, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоУвеличение,
	|	(ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаУменьшение,
	|	(ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.СуммаУвеличение - ТаблицаТоваровСФ.СуммаУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.Сумма, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУвеличение,
	|	(ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаНДСУменьшение,
	|	(ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ТаблицаТоваровСФ.СуммаНДСУвеличение - ТаблицаТоваровСФ.СуммаНДСУменьшение + ЕСТЬNULL(ТаблицаТоваровДО.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСУвеличение
	|ИЗ
	|	вт_ТаблицаТоваровПредыдущихСчетовФактур КАК ТаблицаТоваровСФ 
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТоваровДокументовОснованийСвернуто КАК ТаблицаТоваровДО 
	|		ПО ТаблицаТоваровДО.ИсходныйСчетФактура = ТаблицаТоваровСФ.ИсходныйСчетФактура
	|			И ТаблицаТоваровДО.Номенклатура = ТаблицаТоваровСФ.Номенклатура
	|			И ТаблицаТоваровДО.Характеристика = ТаблицаТоваровСФ.Характеристика
	|			И ТаблицаТоваровДО.НоменклатураНабора = ТаблицаТоваровСФ.НоменклатураНабора
	|			И ТаблицаТоваровДО.ХарактеристикаНабора = ТаблицаТоваровСФ.ХарактеристикаНабора
	|			И ТаблицаТоваровДО.Содержание = ТаблицаТоваровСФ.Содержание
	|			И ТаблицаТоваровДО.ТипЗапасов = ТаблицаТоваровСФ.ТипЗапасов
	|			И ТаблицаТоваровДО.КодТНВЭД = ТаблицаТоваровСФ.КодТНВЭД
	|			И ТаблицаТоваровДО.НомерГТД = ТаблицаТоваровСФ.НомерГТД
	|			И ТаблицаТоваровДО.ЕдиницаИзмерения = ТаблицаТоваровСФ.ЕдиницаИзмерения
	|			И ТаблицаТоваровДО.СтавкаНДС = ТаблицаТоваровСФ.СтавкаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТоваровСФ.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТоваровДО.ИсходныйСчетФактура ЕСТЬ NULL
	|	И &УсловиеМаркируемаяПродукция";
	
	ВидыМаркируемойПродукции = ИнтеграцияИСМП.ИспользуемыеВидыМаркируемойПродукцииИСМП();
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(Запрос.Текст, ВидыМаркируемойПродукции);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.Порядок = 1;
	
	// Счет-фактура (в валюте)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактураВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
	КомандаПечати.Порядок = 2;
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
	// Универсальный корректировочный документ (УКД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УКД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный корректировочный документ (УКД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаТаблицаОснований();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПоТорговымДокументам", Константы.ПечатьСчетовФактурПоДаннымТорговыхДокументов.Получить());
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	МассивШапокОснований = РезультатПакета[3].Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	МассивОснований = РезультатПакета[1].Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	Если МассивОснований.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоместитьВременнуюТаблицуШапокОснований(МенеджерВременныхТаблиц, МассивШапокОснований);
	ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
	
	// Передается Ссылка вместо Организации, чтобы не брать ответственных по умолчанию из организации.
	// Такие ответственные будут взяты из торгового документа-основания.
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивОбъектов, МенеджерВременныхТаблиц, "Ссылка", ,
		"ОтветственныеЛицаСФ");
	
	МассивАналитикУчетаПоПартнерам = Новый Массив;
	
	// В подчиненном узле нет всех данных для определения авансов, поэтому заполняем только если главный узел:
	ЗаполнятьПлатежноРасчетныеДокументы = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	Если ЗаполнятьПлатежноРасчетныеДокументы Тогда
		ПоместитьВременнуюТаблицуЗаполненияПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
		МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов = 
			АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАналитикУчетаПоПартнерам,
				МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов);
		ОкончаниеПериодаРасчета = КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
	КонецЕсли;
	
	// Актуализировать расчеты для получения сумм по товарам документа-основания
	Если Не ПараметрыПечати.ПечатьВВалюте Тогда
		
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаШапокДокументов КАК ДанныеДокументов
			|ГДЕ
			|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютеРегл.РассчитатьСуммыДокументовВВалютеРегл(МассивДокументов);
			
		Иначе
			
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ТаблицаШапокДокументов КАК ДанныеДокументов
			|	ПО
			|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
			|
			|ГДЕ
			|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
			|	И РасчетыСКлиентами.Активность
			|";
			
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАналитикУчетаПоПартнерам, 
				ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам"), Истина);
			
			ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
			
		КонецЕсли;
	КонецЕсли;
	
	Если (ЗаполнятьПлатежноРасчетныеДокументы ИЛИ Не ПараметрыПечати.ПечатьВВалюте)
		И МассивАналитикУчетаПоПартнерам.Количество() > 0 
		И Не ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
		АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
		Попытка
			РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
		Исключение
			ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
			|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
	
	Если ЗаполнятьПлатежноРасчетныеДокументы Тогда
		ПлатежноРасчетныеДокументы = ПоместитьВременнуюТаблицуПлатежноРасчетныхДокументов(
			МенеджерВременныхТаблиц,
			МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Ссылка,
		|	NULL КАК СтрокаПлатежноРасчетныеДокументы
		|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ВыводитьНаборы", Ложь);
	СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	Если ПечататьСчетаФактурыПолученные Тогда
		Запрос.УстановитьПараметр("МассивСчетФактураПолученный", ПараметрыПечати.МассивСчетФактураПолученный);
	КонецЕсли;
	
	ЗаполнитьДанныеШтрихкодовДляУКДДо = Ложь;
	Если ПараметрыПечати.Свойство("ЗаполнитьДанныеШтрихкодовДляУКДДо") И ПараметрыПечати.ЗаполнитьДанныеШтрихкодовДляУКДДо Тогда
		ЗаполнитьДанныеШтрихкодовДляУКДДо = Истина;
	КонецЕсли;
		
	Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
		+ ТекстЗапросаИсходныхДокументовДляПечатиСчетаФактуры()
		+ ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры(ПараметрыПечати)
		+ ТекстЗапросаДанныхМаркировки(ЗаполнитьДанныеШтрихкодовДляУКДДо);
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	Запрос.УстановитьПараметр("ВыводитьОсновнойУПД", 
		Не (ПараметрыПечати.Свойство("НеВыводитьОсновнойУПД") И ПараметрыПечати.НеВыводитьОсновнойУПД));
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСУП.НастройкиУчета().ДатаОтраженияВозвратовКорректировочнымиСФ);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	КоличествоРезультатов     = МассивРезультатов.Количество();
	
	Если ЗаполнитьДанныеШтрихкодовДляУКДДо Тогда
		РезультатПоШапке          = МассивРезультатов[КоличествоРезультатов - 5];
		РезультатПоИсходнымДанным = МассивРезультатов[КоличествоРезультатов - 4];
		РезультатПоТабличнойЧасти = МассивРезультатов[КоличествоРезультатов - 3];
		
		Маркировка                = МассивРезультатов[КоличествоРезультатов - 2].Выгрузить();
		Маркировка                = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(Маркировка);

		МаркировкаДо                = МассивРезультатов[КоличествоРезультатов - 1].Выгрузить();
		МаркировкаДо                = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(МаркировкаДо);
		СтруктураДанныхДляПечати  = Новый Структура(
			"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоИсходнымДанным, Маркировка, МаркировкаДо, НомерСформированВСчетеФактуре",
			РезультатПоШапке,
			РезультатПоТабличнойЧасти,
			РезультатПоИсходнымДанным,
			Маркировка,
			МаркировкаДо,
			Истина);
	Иначе
		РезультатПоШапке          = МассивРезультатов[КоличествоРезультатов - 4];
		РезультатПоИсходнымДанным = МассивРезультатов[КоличествоРезультатов - 3];
		РезультатПоТабличнойЧасти = МассивРезультатов[КоличествоРезультатов - 2];
		
		Маркировка                = МассивРезультатов[КоличествоРезультатов - 1].Выгрузить();
		Маркировка                = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(Маркировка);

		СтруктураДанныхДляПечати  = Новый Структура(
			"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоИсходнымДанным, Маркировка, НомерСформированВСчетеФактуре",
			РезультатПоШапке,
			РезультатПоТабличнойЧасти,
			РезультатПоИсходнымДанным,
			Маркировка,
			Истина);
	
	КонецЕсли;
		
	Если ЗаполнятьПлатежноРасчетныеДокументы Тогда
		СтруктураДанныхДляПечати.Вставить("ПлатежноРасчетныеДокументы", ПлатежноРасчетныеДокументы);
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	ПараметрыПечати.Вставить("ДополнитьДаннымиУПД", Истина);
	ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
	Возврат ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУКД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	Возврат ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

// Определяет счета-фактуры выданные для печати по переданным документам-основаниям.
// 
// Параметры:
//	МассивОбъектов - Массив - Документ-основания, для которых необходимо найти счета-фактуры
//	Корректировочный - Булево - Отбор счетов-фактуры по признаку "Корректировочный".
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив - Найденные счета-фактуры для печати.
//	* ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан.
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, Корректировочный = Ложь, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаОснований = Новый ТаблицаЗначений;
	ТаблицаОснований.Колонки.Добавить("ДокументОснование", Документы.ТипВсеСсылки());
	Для Каждого ДокументОснование Из МассивОбъектов Цикл
		СтрокаОснования = ТаблицаОснований.Добавить();
		СтрокаОснования.ДокументОснование = ДокументОснование;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	&ТаблицаОснований КАК ДокументыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОснования.ДокументОснование КАК Ссылка,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеОснованийСчетовФактур.Валюта ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеТребуетсяСчетФактура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПечатьВВалюте
	|					И ЕСТЬNULL(ДанныеОснованийСчетовФактур.Валюта, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеТребуетсяПечатьВВалюте
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	ДокументыОснования КАК ДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
	|			И (ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторМетаданных)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетаФактурыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетаФактуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсправленныйСчетФактура
	|			ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
	|				И СчетаФактуры.Исправление
	|		ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
	|			И СчетаФактуры.Проведен
	|			И НЕ СчетаФактуры.ПометкаУдаления
	|			//УсловиеКорректировочный
	|	ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
	|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НомераИсправлений КАК НомераИсправлений
	|	ПО
	|		НомераИсправлений.НомерИсправления = СчетФактураВыданный.НомерИсправления
	|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		                                         СчетФактураВыданный.СчетФактураОснование
	|		                                     ИНАЧЕ
	|		                                         СчетФактураВыданный.Ссылка
	|		                                     КОНЕЦ
	|		И СчетФактураВыданный.Проведен
	|		И НЕ СчетФактураВыданный.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	
	Если Корректировочный Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеКорректировочный",
		"И СчетаФактуры.Корректировочный");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[4].Выгрузить().ВыгрузитьКолонку("СчетФактура");
	ТаблицаОшибок        = РезультатЗапроса[5].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуШапокОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ТекстОтветственныеЛица = "";
	ПервыйТип                  = Истина;
	ПервыйТипОтветственныеЛица = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
		
		ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
		
		ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
			ОбъектыТипа, МенеджерВременныхТаблиц, , ,
			ИмяВременнойТаблицы);
			
		Если МенеджерВременныхТаблиц.Таблицы.Найти(ИмяВременнойТаблицы) <> Неопределено Тогда
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|ВЫБРАТЬ
			|	Таблица.Ссылка                       КАК Ссылка,
			|	Таблица.РуководительНаименование     КАК РуководительНаименование,
			|	Таблица.РуководительДолжность        КАК РуководительДолжность,
			|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
			|//ОператорПОМЕСТИТЬ
			|ИЗ
			|	" + ИмяВременнойТаблицы + " КАК Таблица";
			
			ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
				"//ОператорПОМЕСТИТЬ", ?(ПервыйТипОтветственныеЛица, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
			ПервыйТипОтветственныеЛица = Ложь;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаШапокДокументов", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	Если ТекстЗапроса = "" Тогда
		ТекстЗапроса = ПустойТекстЗапросаШапокОснований();
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ТекстОтветственныеЛица = "" Тогда
		ТекстОтветственныеЛица = "
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Ссылка,
		|	""""         КАК РуководительНаименование,
		|	""""         КАК РуководительДолжность,
		|	""""         КАК ГлавныйБухгалтерНаименование
		|ПОМЕСТИТЬ ТаблицаОтветственныеЛица";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ПервыйТип              = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
			
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПоместитьВременнуюТаблицуЗаполненияПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Организация КАК Организация,
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов
	|ИЗ
	|	СчетаФактурыОснования_Шапка КАК СчетФактураВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК СчетФактураВыданныйПлатежноРасчетныеДокументы
	|		ПО СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.НомерСтроки ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Организация";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПоместитьВременнуюТаблицуПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц, МассивАналитикУчетаПоПартнерам)
	
	ПараметрыПоиска = ВзаиморасчетыСервер.ИнициализироватьПараметрыПоискаОснованийИДокументовОплаты();
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяПоля          = "ДокументОснование";
	ПараметрыПоиска.ПараметрыОтбораПоТаблицеДокументов.ИмяТаблицыОтбора =
		"ТаблицаЗаполненияПлатежноРасчетныхДокументов";
	ПараметрыПоиска.ТолькоАвансы                                        = Истина;
	ПараметрыПоиска.ОграничитьТипыДокументовОплаты                      = Истина;
	
	ВзаиморасчетыСервер.ПодготовитьВТ_РасчетыСКлиентами_ОснованияИДокументыОплаты(
		МенеджерВременныхТаблиц,
		ПараметрыПоиска);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов();
	Запрос.УстановитьПараметр("МассивАналитикУчетаПоПартнерам", МассивАналитикУчетаПоПартнерам);
	
	ПлатежноРасчетныеДокументыСводно = Новый ТаблицаЗначений;
	ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("Ссылка",
		Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("СтрокаПлатежноРасчетныеДокументы",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000)));
	
	ПлатежноРасчетныеДокументы = Новый ТаблицаЗначений;
	ПлатежноРасчетныеДокументы.Колонки.Добавить("НомерПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30)));
	ПлатежноРасчетныеДокументы.Колонки.Добавить("ДатаПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	ВыборкаСчетФактур = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСчетФактур.Следующий() Цикл
		
		ПлатежноРасчетныеДокументы.Очистить();
		
		ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ВыборкаСчетФактур);
		
		НоваяСтрока = ПлатежноРасчетныеДокументыСводно.Добавить();		
		НоваяСтрока.Ссылка = ВыборкаСчетФактур.СчетФактура;
		НоваяСтрока.СтрокаПлатежноРасчетныеДокументы = СтрокаРасчетноПлатежныхДокументов(ПлатежноРасчетныеДокументы);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.СтрокаПлатежноРасчетныеДокументы
	|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы
	|ИЗ
	|	&ПлатежноРасчетныеДокументы КАК Таблица";
	
	Запрос.УстановитьПараметр("ПлатежноРасчетныеДокументы", ПлатежноРасчетныеДокументыСводно); 
	
	Запрос.Выполнить();
		
	Возврат ПлатежноРасчетныеДокументы;
		
КонецФункции

Функция ПустойТекстЗапросаШапокОснований()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                               КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)  КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                   КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)     КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                   КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузополучатель,
	|	ЛОЖЬ                                                       КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                               КАК Номенклатура,
	|	""""                                                       КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Комиссионер,
	|	""""                                                       КАК Основание,
	|	ДАТАВРЕМЯ(1,1,1)                                           КАК ОснованиеДата,
	|	""""                                                       КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО                                               КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО                                               КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                               КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО                                               КАК БанковскийСчетГрузополучателя,
	|	""""                                                       КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1)                                           КАК ДоверенностьДата,
	|	""""                                                       КАК ДоверенностьВыдана,
	|	""""                                                       КАК ДоверенностьЛицо,
	|	""""                                                       КАК Кладовщик,
	|	""""                                                       КАК ДолжностьКладовщика
	|ПОМЕСТИТЬ ТаблицаШапокДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	
КонецПроцедуры

#Область ПечатьПоДаннымТорговыхДокументов

Процедура СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстОбщейТаблицыТовары = "";
	ПервыйТип               = Истина;
	ЕстьНаборы              = Ложь;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
		ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
		ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
		
		ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
		
		Если ИмяОбъекта = "ВозвратТоваровПоставщику"
				Или ИмяОбъекта = "ВыкупВозвратнойТарыКлиентом"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж"
				Или ИмяОбъекта = "ПередачаТоваровМеждуОрганизациями"
				Или ИмяОбъекта = "РеализацияТоваровУслуг" 
				Или ИмяОбъекта = "КорректировкаРеализации" 
				Или ИмяОбъекта = "ВыкупТоваровХранителем" Тогда
			ПараметрыЗаполнения.ВключаяНомераГТД = Истина;
		КонецЕсли;
		
		Если ИмяОбъекта = "КорректировкаРеализации" Тогда
			ПараметрыЗаполнения.ВключаяДоКорректировки = Истина;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;	
		Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
			МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваровПоВознаграждению(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		Иначе
			МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		КонецЕсли;
		
		Если ИмяОбъекта = "КорректировкаРеализации"
				Или ИмяОбъекта = "ВозвратТоваровОтКлиента" 
				Или ИмяОбъекта = "ВозвратТоваровМеждуОрганизациями" 
				Тогда
			МенеджерОбъекта.ПреобразоватьВременнуюТаблицуТоваровДляСчетаФактуры(МенеджерВременныхТаблиц);
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
		|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
		|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
		|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
		|//ДанныеТНВЭД
		|	ТаблицаДокумента.Количество                                КАК Количество,
		|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
		|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
		|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
		|	%Содержание                                                КАК Содержание,
		|//ДанныеНабора
		|//ДанныеКорректировки
		|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар,
		|	ТаблицаДокумента.ВернутьМногооборотнуюТару                 КАК ВернутьМногооборотнуюТару
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
		
		Если ИмяОбъекта = "АктВыполненныхРабот"
				Или ИмяОбъекта = "КорректировкаРеализации"
				Или ИмяОбъекта = "СчетФактураВыданный"
				Или ИмяОбъекта = "РеализацияУслугПрочихАктивов"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж" Тогда
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", "ТаблицаДокумента.Содержание");
		Иначе
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", """""");
		КонецЕсли;
		
		Если ИмяОбъекта = "АктВыполненныхРабот" 
			Или ИмяОбъекта = "РеализацияТоваровУслуг" 
			Или ИмяОбъекта = "КорректировкаРеализации" 
			Или ИмяОбъекта = "СчетФактураВыданный" Тогда
			ЕстьНаборы = Истина;
			ТекстЗамены =
			"	ТаблицаДокумента.ВариантКомплектацииНоменклатуры             КАК ВариантКомплектацииНоменклатуры,
			|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
			|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
			|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
			|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,";
		Иначе
			ТекстЗамены =
			"	НЕОПРЕДЕЛЕНО                                                 КАК ВариантКомплектацииНоменклатуры,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантПредставленияНабораВПечатныхФормах,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантРасчетаЦеныНабора,
			|	&ПустаяНоменклатура                                          КАК НоменклатураНабора,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ХарактеристикаНабора,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеНабора", ТекстЗамены);
		
		Если ИмяОбъекта = "КорректировкаРеализации" Или ИмяОбъекта = "ВозвратТоваровОтКлиента" Или ИмяОбъекта = "ВозвратТоваровМеждуОрганизациями"
				Или ИмяОбъекта = "СчетФактураВыданный" Тогда
			ТекстЗамены =
			"	ТаблицаДокумента.КоличествоДо                                КАК КоличествоДо,
			|	ТаблицаДокумента.КоличествоУпаковокДо                        КАК КоличествоУпаковокДо,
			|	ТаблицаДокумента.СуммаБезНДСДо                               КАК СуммаБезНДСДо,
			|	ТаблицаДокумента.СуммаНДСДо                                  КАК СуммаНДСДо,
			|	ТаблицаДокумента.РазницаБезНДСУвеличение                     КАК РазницаБезНДСУвеличение,
			|	ТаблицаДокумента.РазницаБезНДСУменьшение                     КАК РазницаБезНДСУменьшение,
			|	ТаблицаДокумента.РазницаНДСУвеличение                        КАК РазницаНДСУвеличение,
			|	ТаблицаДокумента.РазницаНДСУменьшение                        КАК РазницаНДСУменьшение,
			|	ТаблицаДокумента.РазницаСНДСУвеличение                       КАК РазницаСНДСУвеличение,
			|	ТаблицаДокумента.РазницаСНДСУменьшение                       КАК РазницаСНДСУменьшение,";
		Иначе
			ТекстЗамены = 
			"	0                                                            КАК КоличествоДо,
			|	0                                                            КАК КоличествоУпаковокДо,
			|	0                                                            КАК СуммаБезНДСДо,
			|	0                                                            КАК СуммаНДСДо,
			|	0                                                            КАК РазницаБезНДСУвеличение,
			|	0                                                            КАК РазницаБезНДСУменьшение,
			|	0                                                            КАК РазницаНДСУвеличение,
			|	0                                                            КАК РазницаНДСУменьшение,
			|	0                                                            КАК РазницаСНДСУвеличение,
			|	0                                                            КАК РазницаСНДСУменьшение,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеКорректировки", ТекстЗамены);
		
		Если ИмяОбъекта = "ЗаписьКнигиПродаж"
			Или ИмяОбъекта = "РеализацияТоваровУслуг" 
			Или ИмяОбъекта = "РеализацияУслугПрочихАктивов" 
			Или ИмяОбъекта = "КорректировкаРеализации" Тогда
			ТекстЗамены = "	ТаблицаДокумента.КодТНВЭД             КАК КодТНВЭД,";
		Иначе
			ТекстЗамены = "	НЕОПРЕДЕЛЕНО                          КАК КодТНВЭД,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеТНВЭД", ТекстЗамены);
		
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстТаблицыНаборов =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.СтавкаНДС             КАК СтавкаНДС,
	|	МАКСИМУМ(ТаблицаТоваров.КодТНВЭД)    КАК КодТНВЭД,
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
	|	СУММА(ТаблицаТоваров.СуммаБезНДСДо)                               КАК СуммаБезНДСДо,
	|	СУММА(ТаблицаТоваров.СуммаНДСДо)                                  КАК СуммаНДСДо,
	|	СУММА(ТаблицаТоваров.РазницаБезНДСУвеличение)                     КАК РазницаБезНДСУвеличение,
	|	СУММА(ТаблицаТоваров.РазницаБезНДСУменьшение)                     КАК РазницаБезНДСУменьшение,
	|	СУММА(ТаблицаТоваров.РазницаНДСУвеличение)                        КАК РазницаНДСУвеличение,
	|	СУММА(ТаблицаТоваров.РазницаНДСУменьшение)                        КАК РазницаНДСУменьшение,
	|	СУММА(ТаблицаТоваров.РазницаСНДСУвеличение)                       КАК РазницаСНДСУвеличение,
	|	СУММА(ТаблицаТоваров.РазницаСНДСУменьшение)                       КАК РазницаСНДСУменьшение,
	|	СУММА(ТаблицаТоваров.СуммаБезНДС)    КАК СуммаБезНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ДанныеНоменклатуры.Ссылка = ТаблицаТоваров.Номенклатура
	|
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
	|	И (ДанныеНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ НЕ ТаблицаТоваров.ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора,
	|	ТаблицаТоваров.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.КоличествоДо КАК КоличествоДо,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> &ПустаяНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК КоличествоДо,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ ТаблицаТоваров КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ ТаблицаТоваров КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.КоличествоДо) КАК КоличествоДо,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.КоличествоДо / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоличествоДо,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК КоэффициентМаксимум,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоэффициентМинимум
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|
	|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
	|		&ВариантНаборИКомплектующие
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
	|				&ВариантНаборИКомплектующие
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = &ВариантНаборИКомплектующие
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПолныйНабор,
	|	Таблица.СуммаБезНДС                       КАК СуммаБезНДС,
	|	Таблица.СуммаНДС                          КАК СуммаНДС,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.КоличествоДо, 1) КАК КоличествоУпаковокДо,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.КоличествоДо, 1) КАК КоличествоДо,
	|	Таблица.СуммаБезНДСДо                     КАК СуммаБезНДСДо,
	|	Таблица.СуммаНДСДо                        КАК СуммаНДСДо,
	|	Таблица.РазницаБезНДСУвеличение           КАК РазницаБезНДСУвеличение,
	|	Таблица.РазницаБезНДСУменьшение           КАК РазницаБезНДСУменьшение,
	|	Таблица.РазницаНДСУвеличение              КАК РазницаНДСУвеличение,
	|	Таблица.РазницаНДСУменьшение              КАК РазницаНДСУменьшение,
	|	Таблица.РазницаСНДСУвеличение             КАК РазницаСНДСУвеличение,
	|	Таблица.РазницаСНДСУменьшение             КАК РазницаСНДСУменьшение,
	|	Таблица.КодТНВЭД                          КАК КодТНВЭД,
	|	Таблица.СтавкаНДС                         КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|	ПО ДанныеОснований.Ссылка = Таблица.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстРезультирующейТаблицы = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
	|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
	|		ДанныеНоменклатуры.НаименованиеПолное
	|	ИНАЧЕ 
	|		ТаблицаТоваров.Содержание
	|	КОНЕЦ                                                    КАК НоменклатураНаименование,
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ДанныеНоменклатуры.Артикул
	|	ИНАЧЕ
	|		ДанныеНоменклатуры.Код
	|	КОНЕЦ                                                    КАК НоменклатураКод,
	|	ТаблицаТоваров.КодТНВЭД                                  КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И ТаблицаТоваров.ВернутьМногооборотнуюТару
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                    КАК ЭтоВозвратнаяТара,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения И ТаблицаТоваров.Номенклатура <> Неопределено
	|			ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
	|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
	|		ТаблицаТоваров.Характеристика
	|	ИНАЧЕ 
	|		""""
	|	КОНЕЦ                                                    КАК Характеристика,
	|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
	|
	|//РеквизитыТаблицыНаборов
	|
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.Количество
	|	КОГДА ТаблицаТоваров.КоличествоУпаковок = 0 ТОГДА
	|		ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Количество,
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.КоличествоДо
	|	КОГДА ТаблицаТоваров.КоличествоУпаковокДо = 0 ТОГДА
	|		ТаблицаТоваров.КоличествоДо
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковокДо
	|	КОНЕЦ                                                    КАК КоличествоДо,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОГДА ТаблицаТоваров.КоличествоУпаковок = 0 ТОГДА
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Цена,
	|	ВЫБОР КОГДА ТаблицаТоваров.КоличествоДо = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоДо
	|	КОГДА ТаблицаТоваров.КоличествоУпаковокДо = 0 ТОГДА
	|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоДо
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоУпаковокДо
	|	КОНЕЦ                                                    КАК ЦенаДо,
	|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаБезНДСДо                             КАК СуммаБезНДСДо,
	|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаНДСДо                                КАК СуммаНДСДо,
	|	ТаблицаТоваров.РазницаБезНДСУвеличение                   КАК РазницаБезНДСУвеличение,
	|	ТаблицаТоваров.РазницаБезНДСУменьшение                   КАК РазницаБезНДСУменьшение,
	|	ТаблицаТоваров.РазницаНДСУвеличение                      КАК РазницаНДСУвеличение,
	|	ТаблицаТоваров.РазницаНДСУменьшение                      КАК РазницаНДСУменьшение,
	|	ТаблицаТоваров.РазницаСНДСУвеличение                     КАК РазницаСНДСУвеличение,
	|	ТаблицаТоваров.РазницаСНДСУменьшение                     КАК РазницаСНДСУменьшение
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|//СоединениеТаблицыНаборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
	|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора = &ПустаяНоменклатура
	|	ИЛИ (ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
	|		И ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах В (
	|		&ВариантТолькоКомплектующие, &ВариантНаборИКомплектующие))";
	
	Если ЕстьНаборы Тогда
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
		"	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.НомерСтроки
		|	ИНАЧЕ
		|		ТаблицаТоваров.НомерСтроки
		|	КОНЕЦ                                                    КАК НомерСтрокиНаборы,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
		|	ИНАЧЕ
		|		&ПустойВариантПредставленияНаборов
		|	КОНЕЦ                                                    КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
		|	ИНАЧЕ
		|		&ПустойВариантРасчетаЦенНаборов
		|	КОНЕЦ                                                    КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора                        КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                                    КАК ЭтоКомплектующие,
		|	ЛОЖЬ                                                     КАК ЭтоНабор,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ПолныйНабор
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                                    КАК ПолныйНабор,");
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//СоединениеТаблицыНаборов",
		"		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
		|			И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
		|			И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
		|			И ВременнаяТаблицаНаборы.СтавкаНДС = ТаблицаТоваров.СтавкаНДС");
		
		ТекстРезультирующейТаблицы = ТекстРезультирующейТаблицы + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		
		"ВЫБРАТЬ
		|	ВременнаяТаблицаНаборы.Ссылка КАК Ссылка,
		|	0 КАК НомерСтроки,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора КАК Номенклатура,
		|	ДанныеНоменклатуры.НаименованиеПолное КАК НоменклатураНаименование,
		|	ВЫБОР
		|		КОГДА &КолонкаКодов = ""Артикул""
		|			ТОГДА ДанныеНоменклатуры.Артикул
		|		ИНАЧЕ ДанныеНоменклатуры.Код
		|	КОНЕЦ КАК НоменклатураКод,
		|	ВременнаяТаблицаНаборы.КодТНВЭД КАК КодТНВЭД,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
		|	ДанныеНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
		|	ВременнаяТаблицаНаборы.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаНаборы.НомерСтроки КАК НомерСтрокиНаборы,
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора КАК НоменклатураНабора,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЛОЖЬ КАК ЭтоКомплектующие,
		|	ИСТИНА КАК ЭтоНабор,
		|	ВременнаяТаблицаНаборы.ПолныйНабор КАК ПолныйНабор,
		|	ВЫБОР 
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения 
		|			ТОГДА ВременнаяТаблицаНаборы.Количество
		|		КОГДА ВременнаяТаблицаНаборы.КоличествоУпаковок = 0 
		|			ТОГДА ВременнаяТаблицаНаборы.Количество
		|		ИНАЧЕ ВременнаяТаблицаНаборы.КоличествоУпаковок
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ВременнаяТаблицаНаборы.КоличествоДо
		|		КОГДА ВременнаяТаблицаНаборы.КоличествоУпаковокДо = 0 
		|			ТОГДА ВременнаяТаблицаНаборы.КоличествоДо
		|		ИНАЧЕ ВременнаяТаблицаНаборы.КоличествоУпаковокДо
		|	КОНЕЦ КАК КоличествоДо,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаНаборы.Количество = 0
		|			ТОГДА 0
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.Количество
		|		КОГДА ВременнаяТаблицаНаборы.КоличествоУпаковок = 0
		|			ТОГДА ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.Количество
		|		ИНАЧЕ ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.КоличествоУпаковок
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаНаборы.КоличествоДо = 0
		|			ТОГДА 0
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ВременнаяТаблицаНаборы.СуммаБезНДСДо / ВременнаяТаблицаНаборы.КоличествоДо
		|		КОГДА ВременнаяТаблицаНаборы.КоличествоУпаковокДо = 0
		|			ТОГДА ВременнаяТаблицаНаборы.СуммаБезНДСДо / ВременнаяТаблицаНаборы.КоличествоДо
		|		ИНАЧЕ ВременнаяТаблицаНаборы.СуммаБезНДСДо / ВременнаяТаблицаНаборы.КоличествоУпаковокДо
		|	КОНЕЦ КАК ЦенаДо,
		|	ВременнаяТаблицаНаборы.СуммаБезНДС КАК СуммаБезНДС,
		|	ВременнаяТаблицаНаборы.СуммаБезНДСДо КАК СуммаБезНДСДо,
		|	ВременнаяТаблицаНаборы.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблицаНаборы.СуммаНДСДо КАК СуммаНДСДо,
		|	ВременнаяТаблицаНаборы.РазницаБезНДСУвеличение КАК РазницаБезНДСУвеличение,
		|	ВременнаяТаблицаНаборы.РазницаБезНДСУменьшение КАК РазницаБезНДСУменьшение,
		|	ВременнаяТаблицаНаборы.РазницаНДСУвеличение КАК РазницаНДСУвеличение,
		|	ВременнаяТаблицаНаборы.РазницаНДСУменьшение КАК РазницаНДСУменьшение,
		|	ВременнаяТаблицаНаборы.РазницаСНДСУвеличение КАК РазницаСНДСУвеличение,
		|	ВременнаяТаблицаНаборы.РазницаСНДСУменьшение КАК РазницаСНДСУменьшение
		|
		|ИЗ
		|	ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ДанныеНоменклатуры.Ссылка
		|
		|ГДЕ
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (&ВариантТолькоНабор, &ВариантНаборИКомплектующие)";
		
	Иначе
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
		"	ТаблицаТоваров.НомерСтроки          КАК НомерСтрокиНаборы,
		|	&ПустойВариантПредставленияНаборов  КАК ВариантПредставленияНабораВПечатныхФормах,
		|	&ПустойВариантРасчетаЦенНаборов     КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЛОЖЬ                                КАК ЭтоКомплектующие,
		|	ЛОЖЬ                                КАК ЭтоНабор,
		|	ЛОЖЬ                                КАК ПолныйНабор,");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстОбщейТаблицыТовары +
		?(ЕстьНаборы, ТекстТаблицыНаборов, "") +
		ТекстРезультирующейТаблицы;
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТоваров.Упаковка",
			?(ИмяОбъекта = "РеализацияУслугПрочихАктивов","","ТаблицаТоваров.Номенклатура")));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("ПустаяНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.УстановитьПараметр("ВариантТолькоНабор", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор);
	Запрос.УстановитьПараметр("ВариантТолькоКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие);
	Запрос.УстановитьПараметр("ВариантНаборИКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие);
	Запрос.УстановитьПараметр("ПустойВариантПредставленияНаборов",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойВариантРасчетаЦенНаборов", Перечисления.ВариантыРасчетаЦенНаборов.ПустаяСсылка());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	Запрос.УстановитьПараметр("МассивОснований", МассивОснований);
	Запрос.Текст = Запрос.Текст + 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки
	|ПОМЕСТИТЬ ШтрихкодыУпаковок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивОснований)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивОснований)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки
	|ИЗ
	|	Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивОснований)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|		ПО ТаблицаОснований.ДокументОснование = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаОснований.Ссылка В (&МассивОснований)
	|	И (ТаблицаОснований.Ссылка.Корректировочный
	|			ИЛИ ТаблицаОснований.Ссылка.Исправление)
	|";
	
	Если ПараметрыПечати.Свойство("ЗаполнитьДанныеШтрихкодовДляУКДДо") И ПараметрыПечати.ЗаполнитьДанныеШтрихкодовДляУКДДо Тогда
		Запрос.Текст = Запрос.Текст + 
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка,
		|	ТаблицаРеализации.ШтрихкодУпаковки
		|ПОМЕСТИТЬ ШтрихкодыУпаковокДо
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ТаблицаДокумента
		|		ПО ТаблицаОснований.ДокументОснование = ТаблицаДокумента.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ТаблицаРеализации
		|		ПО ТаблицаДокумента.ДокументОснование = ТаблицаРеализации.Ссылка
		|ГДЕ
		|	ТаблицаОснований.Ссылка В (&МассивОснований)
		|	И (ТаблицаОснований.Ссылка.Корректировочный
		|			ИЛИ ТаблицаОснований.Ссылка.Исправление)";
	КонецЕсли;
	//для корректировочной и исправительной с/ф приходит документ-основание = с/ф
	//для обычной с/ф документ основание = реализация
	
	Запрос.Выполнить();
	
	ПараметрыПечати.ВыводитьНаборы = ЕстьНаборы;
	
КонецПроцедуры

Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ СчетаФактурыОснованияПервые
	|ИЗ
	|	СчетаФактурыОснования_Шапка КАК СчетаФактурыОснования
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		СчетФактураВыданный.Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПокупатель.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПокупатель.ГоловнаяОрганизация
	|	КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеКонтрагента.ГоловнойКонтрагент
	|	ИНАЧЕ
	|		СчетФактураВыданный.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеОснований.Грузоотправитель) = ТИП(Справочник.Контрагенты)
	|		И ДанныеОснований.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ДанныеОснований.Грузоотправитель
	|	КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане
	|	КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СчетФактураВыданный.Организация
	|	ИНАЧЕ
	|		ДанныеОснований.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СчетФактураВыданный.Контрагент
	|	ИНАЧЕ
	|		ДанныеОснований.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеПодразделенийДляКПП.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделенийДляКПП.РегистрацияВНалоговомОргане.КПП
	|	ИНАЧЕ
	|		ДанныеОрганизацийПоставщик.КПП
	|	КОНЕЦ КАК КПППоставщика,
	|
	|	ВЫБОР КОГДА СчетФактураВыданный.КППКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
	|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактураВыданный.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА СчетФактураВыданный.ИННКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактураВыданный.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|
	|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
	|	ДанныеОснований.Комиссионер КАК Комиссионер,
	|	ДанныеВалюты.Ссылка КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеВалюты.Код КАК ВалютаКод,
	|//РеквизитыОснованийДляУПД
	|	ВЫБОР
	|//УсловиеУПДВыданного
	|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
	|			ИЛИ СчетФактураВыданный.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ПечататьСчетФактураВыданный
	|
	|ПОМЕСТИТЬ ДанныеОснований
	|ИЗ
	|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО СчетФактураВыданный.Ссылка = СчетаФактурыОснования.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаШапокДокументов КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
	|	ПО СчетФактураВыданный.Организация = ДанныеОрганизацийПоставщик.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = СчетФактураВыданный.Организация
	|		И ДанныеПодразделений.Подразделение = ЕСТЬNULL(ДанныеОснований.Склад.Подразделение, ДанныеОснований.Подразделение)
	|		И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделенийДляКПП
	|	ПО ДанныеПодразделенийДляКПП.Организация = СчетФактураВыданный.Организация
	|		И ДанныеПодразделенийДляКПП.Подразделение = ЕСТЬNULL(СчетФактураВыданный.Склад.Подразделение, СчетФактураВыданный.Подразделение)
	|		И ДанныеПодразделенийДляКПП.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|	ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактураВыданный.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|	ПО ДанныеКонтрагента.Ссылка = СчетФактураВыданный.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
		|	ТаблицаОснований.Ссылка            КАК Ссылка
		|
		|ПОМЕСТИТЬ СчетаФактурыПолученныеОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В (&МассивСчетФактураПолученный)
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ СчетаФактурыПолученныеОснованияПервые
		|ИЗ
		|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
		|
		|	ВЫБОР КОГДА ДанныеКонтрагента.ОбособленноеПодразделение ТОГДА
		|		ДанныеКонтрагента.ГоловнойКонтрагент
		|	ИНАЧЕ
		|		ДанныеКонтрагента.Ссылка
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ДанныеОрганизации.ОбособленноеПодразделение ТОГДА
		|		ДанныеОрганизации.ГоловнаяОрганизация
		|	ИНАЧЕ
		|		ДанныеОрганизации.Ссылка
		|	КОНЕЦ КАК Контрагент,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураПолученный.Контрагент
		|	ИНАЧЕ
		|		ДанныеОснований.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураПолученный.Организация
		|	ИНАЧЕ
		|		ДанныеОснований.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|
		|	ДанныеКонтрагента.КПП КАК КПППоставщика,
		|	ДанныеОрганизации.КПП КАК КПППокупателя,
		|	ДанныеОрганизации.ИНН КАК ИННПокупателя,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Комиссионер = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
		|		ДанныеОснований.Организация.Префикс
		|	ИНАЧЕ
		|		ДанныеОснований.Комиссионер.Префикс
		|	КОНЕЦ КАК Префикс,
		|	
		|	ДанныеОснований.Комиссионер КАК Комиссионер,
		|	ДанныеВалюты.Ссылка КАК Валюта,
		|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	ДанныеВалюты.Код КАК ВалютаКод
		|
		|ПОМЕСТИТЬ ДанныеОснованийСчетФактураПолученный
		|ИЗ
		|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|	ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаШапокДокументов КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
		|	ПО СчетФактураПолученный.Организация = ДанныеОрганизации.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|	ПО СчетФактураПолученный.Контрагент = ДанныеКонтрагента.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
		|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьУслуги,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьТовары
		|ПОМЕСТИТЬ
		|	НоменклатураДокументовПолученные
		|ИЗ
		|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.ИдентификаторГосКонтракта             КАК ИдентификаторГосКонтракта,
	|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
	|	
	|	&ПредставлениеСчетФактура                             КАК ПредставлениеДокумента,
	|	ДанныеДокумента.ПредставлениеНомера                   КАК Номер,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		ДанныеДокумента.Дата
	|	КОНЕЦ                                                 КАК Дата,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК НомерИсправления,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК ДатаИсправления,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ДанныеДокумента.Корректировочный                      КАК КорректировочныйСчетФактура,
	|	ЕСТЬNULL(ТаблицаПлатежноРасчетныеДокументы.СтрокаПлатежноРасчетныеДокументы,
	|		ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы) КАК СтрокаПоДокументу,
	|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
	|	ДанныеОснований.Контрагент                            КАК Контрагент,
	|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
	|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
	|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
	|	ДанныеОснований.Организация                           КАК Организация,
	|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
	|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
	|	ДанныеОснований.Префикс                               КАК Префикс,
	|	0                                                     КАК ИндексПодразделения,
	|	ВЫБОР
	|		КОГДА ОтветственныеЛицаСФ.РуководительНаименование = """"
	|			ТОГДА ТаблицаОтветственныеЛица.РуководительНаименование
	|		ИНАЧЕ ОтветственныеЛицаСФ.РуководительНаименование
	|	КОНЕЦ                                                 КАК Руководитель,
	|	ВЫБОР
	|		КОГДА ОтветственныеЛицаСФ.РуководительДолжность = """"
	|			ТОГДА ТаблицаОтветственныеЛица.РуководительДолжность
	|		ИНАЧЕ ОтветственныеЛицаСФ.РуководительДолжность
	|	КОНЕЦ                                                 КАК ДолжностьРуководителя,
	|	ВЫБОР
	|		КОГДА ОтветственныеЛицаСФ.ГлавныйБухгалтерНаименование = """"
	|			ТОГДА ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование
	|		ИНАЧЕ ОтветственныеЛицаСФ.ГлавныйБухгалтерНаименование
	|	КОНЕЦ                                                 КАК ГлавныйБухгалтер,
	|	ДанныеОснований.Валюта                                КАК Валюта,
	|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
	|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
	|	//РеквизитыОснованийДляУПД
	|	//ДанныеУПДВыданного
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 КАК ТолькоУслуги
	|ИЗ
	|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
	|		И ДанныеОснований.ПечататьСчетФактураВыданный
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтветственныеЛицаСФ КАК ОтветственныеЛицаСФ
	|	ПО ДанныеДокумента.Ссылка = ОтветственныеЛицаСФ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПлатежноРасчетныеДокументы КАК ТаблицаПлатежноРасчетныеДокументы
	|	ПО СчетаФактурыОснования.Ссылка = ТаблицаПлатежноРасчетныеДокументы.Ссылка";
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка                                КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО                                          КАК ИдентификаторГосКонтракта,
		|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
		|	&ПредставлениеСчетФактураПосредника                   КАК ПредставлениеДокумента,
		|	ДанныеДокумента.Номер                                 КАК Номер,
		|	ДанныеДокумента.ДатаСоставления                       КАК Дата,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.НомерИсправления
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК НомерИсправления,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.ДатаИсправления
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК ДатаИсправления,
		|	ДанныеДокумента.Исправление                           КАК Исправление,
		|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
		|	""""                                                  КАК СтрокаПоДокументу,
		|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
		|	ДанныеОснований.Контрагент                            КАК Контрагент,
		|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
		|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
		|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
		|	ДанныеОснований.Организация                           КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                          КАК НалогообложениеНДС,
		|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
		|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
		|	ДанныеОснований.Префикс                               КАК Префикс,
		|	0                                                     КАК ИндексПодразделения,
		|	""""                                                  КАК Руководитель,
		|	""""                                                  КАК ДолжностьРуководителя,
		|	""""                                                  КАК ГлавныйБухгалтер,
		|	ДанныеОснований.Валюта                                КАК Валюта,
		|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
		|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
		|	//ДанныеУПДПолученного
		|	ВЫБОР
		|		КОГДА НоменклатураДокументов.ЕстьУслуги
		|				И НЕ НоменклатураДокументов.ЕстьТовары
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                 КАК ТолькоУслуги
		|
		|ИЗ
		|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДанныеДокумента
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснованийСчетФактураПолученный КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументовПолученные КАК НоменклатураДокументов
		|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
		"	ДанныеОснований.Основание           КАК Основание,
		|	ДанныеОснований.ОснованиеДата       КАК ОснованиеДата,
		|	ДанныеОснований.ОснованиеНомер      КАК ОснованиеНомер,
		|	ДанныеОснований.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
		|	ДанныеОснований.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
		|	ДанныеОснований.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
		|	ДанныеОснований.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
		|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
		|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
		|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
		|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
		|	ДанныеОснований.Кладовщик           КАК Кладовщик,
		|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
		"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
		|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
		|	НЕ ДанныеДокумента.Корректировочный КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеУПДВыданного",
		"		КОГДА ТИПЗНАЧЕНИЯ(СчетФактураВыданный.ДокументОснование) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
		|				И СчетФактураВыданный.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
		|			ТОГДА ЛОЖЬ");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДПолученного",
		"	НЕОПРЕДЕЛЕНО                        КАК Основание,
		|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеДата,
		|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеНомер,
		|	НЕОПРЕДЕЛЕНО 						КАК БанковскийСчетОрганизации,
		|	НЕОПРЕДЕЛЕНО 						КАК БанковскийСчетКонтрагента,
		|	НЕОПРЕДЕЛЕНО 						КАК БанковскийСчетГрузоотправителя,
		|	НЕОПРЕДЕЛЕНО 						КАК БанковскийСчетГрузополучателя,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьНомер,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьДата,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьВыдана,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьЛицо,
		|	НЕОПРЕДЕЛЕНО                        КАК Кладовщик,
		|	НЕОПРЕДЕЛЕНО                        КАК ДолжностьКладовщика,
		|	ЛОЖЬ                                КАК ВыводитьКодНоменклатуры,
		|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
		|	ЛОЖЬ                                КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
	|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
	
	|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
	|	ТаблицаДокумента.КодТНВЭД                                    КАК КодТНВЭД,
	|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
	|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
	|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" 
	|		ТОГДА ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ   КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
	|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
	|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
	|	ТаблицаДокумента.Цена                                        КАК Цена,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС
	|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
	|
	|	СУММА(ТаблицаДокумента.КоличествоДо)                         КАК КоличествоДо,
	|	ТаблицаДокумента.ЦенаДо                                      КАК ЦенаДо,
	|	СУММА(ТаблицаДокумента.СуммаБезНДСДо)                        КАК СуммаБезНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаБезНДСУвеличение)              КАК РазницаБезНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаБезНДСУменьшение)              КАК РазницаБезНДСУменьшение,
	|	СУММА(ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаНДСУвеличение)                 КАК РазницаНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаНДСУменьшение)                 КАК РазницаНДСУменьшение,
	|	СУММА(ТаблицаДокумента.СуммаБезНДСДо
	|		+ ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаСНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаСНДСУвеличение)                КАК РазницаСНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаСНДСУменьшение)                КАК РазницаСНДСУменьшение,
	|
	|	//ДанныеНаборов
	|
	|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара
	|
	|ИЗ ТаблицаТоваровДокументов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
	|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод,
	|	ТаблицаДокумента.КодТНВЭД,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление,
	|	ДанныеЕдиницыИзмерения.Код,
	|	ТаблицаДокумента.Характеристика,
	|	ДанныеХарактеристики.НаименованиеПолное,
	|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" ТОГДА ТаблицаДокумента.НомерГТД ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ,
	|	ДанныеСтраныПросхождения.Ссылка,
	|	ТаблицаДокумента.Цена,
	|	ТаблицаДокумента.ЦенаДо,
	|	//ГруппировкаНаборов
	|	ТаблицаДокумента.СтавкаНДС";
	
	Если ПараметрыПечати.ВыводитьНаборы Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеНаборов",
		"МИНИМУМ(ТаблицаДокумента.НомерСтрокиНаборы)                     КАК НомерСтрокиНаборы,
		|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,
		|	ТаблицаДокумента.ЭтоКомплектующие                            КАК ЭтоКомплектующие,
		|	ТаблицаДокумента.ЭтоНабор                                    КАК ЭтоНабор,
		|	ТаблицаДокумента.ПолныйНабор                                 КАК ПолныйНабор,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ГруппировкаНаборов",
		"ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах,
		|	ТаблицаДокумента.ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора,
		|	ТаблицаДокумента.ЭтоКомплектующие,
		|	ТаблицаДокумента.ЭтоНабор,
		|	ТаблицаДокумента.ПолныйНабор,");
		
	КонецЕсли;
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		СтрЗаменить(ТекстЗапроса, "СчетаФактурыОснования", "СчетаФактурыПолученныеОснования");
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	//ПорядокНаборов
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;";
	
	Если ПараметрыПечати.ВыводитьНаборы Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПорядокНаборов",
		"НомерСтрокиНаборы,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора,
		|	ЭтоНабор УБЫВ,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхМаркировки(ЗаполнитьДанныеШтрихкодовДляУКДДо = Ложь)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаШтрихкодыУпаковок.ШтрихкодУпаковки КАК Штрихкод,
	|	СчетаФактурыОснования.Ссылка              КАК Ссылка
	|ИЗ 
	|	ШтрихкодыУпаковок КАК ТаблицаШтрихкодыУпаковок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
	|		ПО СчетаФактурыОснования.ДокументОснование = ТаблицаШтрихкодыУпаковок.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровИСМП КАК ДокументыПрямогоОбмена
	|		ПО СчетаФактурыОснования.ДокументОснование = ДокументыПрямогоОбмена.ДокументОснование
	|		И НЕ ДокументыПрямогоОбмена.ПометкаУдаления
	|ГДЕ
	|	ДокументыПрямогоОбмена.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаШтрихкодыУпаковок.ШтрихкодУпаковки КАК Штрихкод,
	|	ТаблицаШтрихкодыУпаковок.Ссылка           КАК Ссылка
	|ИЗ
	|	ШтрихкодыУпаковок КАК ТаблицаШтрихкодыУпаковок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
	|		ПО СчетаФактурыОснования.Ссылка = ТаблицаШтрихкодыУпаковок.Ссылка
	|	
	|ГДЕ
	|	СчетаФактурыОснования.Корректировочный";
	
	Если ЗаполнитьДанныеШтрихкодовДляУКДДо Тогда
		ТекстЗапроса = ТекстЗапроса +
		"
		|;
		|////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ТаблицаШтрихкодыУпаковокДо.ШтрихкодУпаковки КАК Штрихкод,
		|	ТаблицаШтрихкодыУпаковокДо.Ссылка           КАК Ссылка
		|ИЗ
		|	ШтрихкодыУпаковокДо КАК ТаблицаШтрихкодыУпаковокДо
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
		|		ПО СчетаФактурыОснования.Ссылка = ТаблицаШтрихкодыУпаковокДо.Ссылка
		|	
		|ГДЕ
		|	СчетаФактурыОснования.Корректировочный";
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПечатьПоДаннымСчетовФактур

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		ХозяйственнаяОперация.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.Корректировочный
	|			ТОГДА &ПустойГТД
	|		ИНАЧЕ ТаблицаТовары.НомерГТД
	|	КОНЕЦ КАК НомерГТД,
	|	ТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Содержание КАК Содержание,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка)) КАК ВариантКомплектацииНоменклатуры,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах, ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)) КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)) КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоУвеличение + ТаблицаТовары.КоличествоУменьшение КАК КоличествоДо,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоУвеличение + ТаблицаТовары.КоличествоУменьшение КАК КоличествоУпаковокДо,
	|	ТаблицаТовары.Сумма - ТаблицаТовары.СуммаУвеличение + ТаблицаТовары.СуммаУменьшение - (ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДСУвеличение + ТаблицаТовары.СуммаНДСУменьшение) КАК СуммаБезНДСДо,
	|	ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДСУвеличение + ТаблицаТовары.СуммаНДСУменьшение КАК СуммаНДСДо,
	|	ТаблицаТовары.СуммаУвеличение - ТаблицаТовары.СуммаНДСУвеличение КАК РазницаБезНДСУвеличение,
	|	ТаблицаТовары.СуммаУменьшение - ТаблицаТовары.СуммаНДСУменьшение КАК РазницаБезНДСУменьшение,
	|	ТаблицаТовары.СуммаНДСУвеличение КАК РазницаНДСУвеличение,
	|	ТаблицаТовары.СуммаНДСУменьшение КАК РазницаНДСУменьшение,
	|	ТаблицаТовары.СуммаУвеличение КАК РазницаСНДСУвеличение,
	|	ТаблицаТовары.СуммаУменьшение КАК РазницаСНДСУменьшение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И ТаблицаТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ЛОЖЬ КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ СчетФактураВыданныйТаблицаТоваров
	|ИЗ
	|	Документ.СчетФактураВыданный.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТовары.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ТаблицаТовары.НоменклатураНабора = ВариантыКомплектацииНоменклатуры.Владелец
	|			И ТаблицаТовары.ХарактеристикаНабора = ВариантыКомплектацииНоменклатуры.Характеристика
	|			И (ВариантыКомплектацииНоменклатуры.Основной)";
	
	Запрос.УстановитьПараметр("ПустойГТД", Справочники.НомераГТД.ПустаяСсылка());
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ДанныеДокументов.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Ссылка.Валюта КАК Валюта,
	|	ДанныеДокументов.Ссылка.Организация КАК Организация,
	|	ДанныеДокументов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокументов.Ссылка.Подразделение КАК Подразделение,
	|	ДанныеДокументов.Ссылка.Склад КАК Склад,
	|
	|// Остальные поля не важны, добавлены для объединения в запросе
	|
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузополучатель,
	|	ЛОЖЬ КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Комиссионер,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	ДАТАВРЕМЯ(1,1,1) КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузополучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_СчетФактураВыданный)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Функция ТекстЗапросаИсходныхДокументовДляПечатиСчетаФактуры()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК ИсходныйДокумент,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """") КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """") КАК НомерИсправленияСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
	|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаИсправленияСчетаФактуры
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураТовары
	|		ПО СчетаФактурыОснования.Ссылка = СчетФактураТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ИсходныйДокумент
	|ИТОГИ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПараметрыОбновленияРеквизитовСчетаФактуры(Основание, РеквизитыСчетаФактуры)
	
	СтруктураОбновления = Новый Структура("НеобходимоОбновить, ИзмененаОрганизация", Ложь, Ложь);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПроверяемыеРеквизиты = Новый Структура;
	ПроверяемыеРеквизиты.Вставить("Организация");
	ПроверяемыеРеквизиты.Вставить("Контрагент");
	ПроверяемыеРеквизиты.Вставить("Валюта");
	
	ЗаполнитьЗначенияСвойств(ПроверяемыеРеквизиты, Основание);
	
	Если (ТипЗнч(Основание) = Тип("ДокументОбъект.ВозвратТоваровМеждуОрганизациями")
			Или ТипЗнч(Основание) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями"))
			И Не Основание.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		ПроверяемыеРеквизиты.Контрагент = Основание.ОрганизацияПолучатель;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			
		ПроверяемыеРеквизиты.Организация = Основание.Комиссионер;
		Если Не Основание.РасчетыЧерезОтдельногоКонтрагента Тогда
			ПроверяемыеРеквизиты.Контрагент = Основание.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьРеквизиты = Ложь;
	
	Если ПроверяемыеРеквизиты.Организация <> Неопределено
			И РеквизитыСчетаФактуры.Организация <> ПроверяемыеРеквизиты.Организация Тогда
		СтруктураОбновления.ИзмененаОрганизация = Истина;
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
		
	Если ПроверяемыеРеквизиты.Валюта <> Неопределено И РеквизитыСчетаФактуры.Валюта <> ВалютаРегламентированногоУчета
			И РеквизитыСчетаФактуры.Валюта <> ПроверяемыеРеквизиты.Валюта Тогда
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
		
	Если ПроверяемыеРеквизиты.Контрагент <> Неопределено
			И РеквизитыСчетаФактуры.Контрагент <> ПроверяемыеРеквизиты.Контрагент Тогда
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
	
	СтруктураОбновления.НеобходимоОбновить = ОбновитьРеквизиты;
	
	Возврат СтруктураОбновления;
	
КонецФункции

Функция АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
	|			И Расчеты.АналитикаУчетаПоПартнерам.Организация = ТаблицаДокументов.Организация
	|ГДЕ
	|	Расчеты.Активность";
	
	ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
	
КонецФункции

Функция КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(Расчеты.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
	|			И Расчеты.АналитикаУчетаПоПартнерам.Организация = ТаблицаДокументов.Организация
	|ГДЕ
	|	Расчеты.Активность
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Расчеты.Период) ЕСТЬ НЕ NULL";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ТаблицаПериод = Результат.Выгрузить();
		КонецРасчета = КонецМесяца(ТаблицаПериод[0].Период) + 1;
	Иначе
		КонецРасчета = КонецМесяца(ТекущаяДатаСеанса())+1;
	КонецЕсли;
	
	Возврат КонецРасчета;
	
КонецФункции

Функция ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПервичныхДокументов.Дата КАК ДатаВходящегоДокумента,
	|	ДанныеПервичныхДокументов.Номер КАК НомерВходящегоДокумента,
	|	ТаблицаДокументов.Ссылка КАК СчетФактура
	|ИЗ
	|	РасчетыСКлиентами_ОснованияИДокументыОплаты КАК ПлатежныеДокументы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|	ПО
	|		ПлатежныеДокументы.ОснованиеОплаты = ТаблицаДокументов.ДокументОснование
	|		И ПлатежныеДокументы.АналитикаУчетаПоПартнерам В (&МассивАналитикУчетаПоПартнерам)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ПлатежныеДокументы.Организация = ДанныеПервичныхДокументов.Организация
	|		И ПлатежныеДокументы.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|
	|ИТОГИ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыСКлиентами_ОснованияИДокументыОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ДанныеВыборки)
	
	Выборка = ДанныеВыборки.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ПлатежноРасчетныеДокументы.Добавить();
		НоваяСтрока.НомерПлатежноРасчетногоДокумента = Выборка.НомерВходящегоДокумента;
		НоваяСтрока.ДатаПлатежноРасчетногоДокумента = Выборка.ДатаВходящегоДокумента;
		
	КонецЦикла;
	ПлатежноРасчетныеДокументы.Свернуть("ДатаПлатежноРасчетногоДокумента, НомерПлатежноРасчетногоДокумента", "");
	ПлатежноРасчетныеДокументы.Сортировать("ДатаПлатежноРасчетногоДокумента Возр, НомерПлатежноРасчетногоДокумента Возр");
	
КонецПроцедуры

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ ДанныеДокумента.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	МИНИМУМ(ДанныеДокумента.НомерСтроки <> 1) КАК ДополнительнаяЗапись
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ ДанныеДокумента.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                  КАК Ссылка,
	|	&Период                  КАК ДатаДокументаИБ,
	|	&Номер                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация             КАК Организация,
	|	&Контрагент              КАК Контрагент,
	|	&Подразделение           КАК Подразделение,
	|	&Ответственный           КАК Ответственный,
	|	""""                     КАК Комментарий,
	|	&ВалютаСчетаФактуры      КАК Валюта,
	|	0                        КАК Сумма,
	|	&Проведен                КАК Проведен,
	|	&ПометкаУдаления         КАК ПометкаУдаления,
	|	&ИнформацияПоИсправлению КАК Дополнительно,
	|	&Период                  КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать           КАК НомерПервичногоДокумента,
	|	&Склад                   КАК МестоХранения,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Партнер                 КАК Партнер,
	|	&Договор                 КАК Договор,
	|	&Период                  КАК ДатаОтраженияВУчете,
	|	ЕСТЬNULL(ДанныеОснований.ДополнительнаяЗапись, ЛОЖЬ) КАК ДополнительнаяЗапись,
	|	ЕСТЬNULL(ДанныеОснований.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СчетФактураВыданный КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОснований КАК ДанныеОснований
	|		ПО ДанныеДокумента.Ссылка = ДанныеОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОснований()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА &ПоТорговымДокументам
	|				ИЛИ НЕ ТаблицаОснований.Ссылка.Корректировочный
	|					И НЕ ТаблицаОснований.Ссылка.Исправление
	|			ТОГДА ТаблицаОснований.ДокументОснование
	|		ИНАЧЕ ТаблицаОснований.Ссылка
	|	КОНЕЦ КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
	|	ТаблицаОснований.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
	|	ТаблицаОснований.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыОснования_Шапка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			И НЕ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		ИЛИ НЕ ТаблицаОснований.Ссылка.Корректировочный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка,
	|	ЕСТЬNULL(СчетФактураВыданныйДокументыОснования.ДокументОснование, ТаблицаОснований.Ссылка),
	|	ТаблицаОснований.Ссылка.Корректировочный,
	|	ТаблицаОснований.Ссылка.Дата
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК ТаблицаТовары
	|		ПО ТаблицаОснований.Ссылка = ТаблицаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО (ТаблицаТовары.ИсходныйСчетФактура = СчетФактураВыданныйДокументыОснования.Ссылка)
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|	И (ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ИЛИ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования_Шапка.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	СчетаФактурыОснования_Шапка КАК СчетаФактурыОснования_Шапка";
	
КонецФункции

// Возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект
// см. ОбщегоНазначения.ЗначениеРеквизитаОбъекта()
// Если полученное значение не имеет тип булево, возвращается значение Ложь.
//
Функция ЗначениеРеквизитаОбъектаТипаБулево(Ссылка, ИмяРеквизита) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	Если ТипЗнч(Результат) <> Тип("Булево") Тогда
		Результат = Ложь;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Результат
КонецФункции

// Вовзращает представление номера переданного счета-фактуры.
// Учитывается цифровой индекс обособленного подразделения.
//
// Параметры:
//  СчетФактураОбъект - ДокументОбъект.СчетФактурыВыданный - для вызова перед записью документа
//
// Возвращаемое значение:
//  Строка - представление номера переданного счета-фактуры
//
Функция ПолучитьПредставлениеНомера(СчетФактураОбъект) Экспорт
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактура", Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ТаблицаСчетовФактур.Колонки.Добавить("Номер", Новый ОписаниеТипов("Строка"));
	ТаблицаСчетовФактур.Колонки.Добавить("ДокументОснование", Документы.ТипВсеСсылки());
	ТаблицаСчетовФактур.Колонки.Добавить("Исправление", Новый ОписаниеТипов("Булево"));
	ТаблицаСчетовФактур.Колонки.Добавить("СчетФактураОснование", Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ТаблицаСчетовФактур.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	НоваяСтрока = ТаблицаСчетовФактур.Добавить();
	НоваяСтрока.СчетФактура = СчетФактураОбъект.Ссылка;
	НоваяСтрока.Номер = СчетФактураОбъект.Номер;
	НоваяСтрока.ДокументОснование = ?(СчетФактураОбъект.ДокументыОснования.Количество() = 0, Неопределено,
		СчетФактураОбъект.ДокументыОснования[0].ДокументОснование);
	НоваяСтрока.Исправление = СчетФактураОбъект.Исправление;
	НоваяСтрока.СчетФактураОснование = СчетФактураОбъект.СчетФактураОснование;
	НоваяСтрока.Организация = СчетФактураОбъект.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Т.СчетФактура КАК Документ.СчетФактураВыданный) КАК СчетФактура,
	|	Т.Номер,
	|	Т.ДокументОснование,
	|	Т.Исправление,
	|	Т.СчетФактураОснование,
	|	Т.Организация
	|ПОМЕСТИТЬ вт_ТаблицаСчетовФактур
	|ИЗ
	|	&ТаблицаСчетовФактур КАК Т";
	
	Запрос.УстановитьПараметр("ТаблицаСчетовФактур", ТаблицаСчетовФактур);
	Запрос.Выполнить();
	
	Результат = РассчитатьПредставлениеНомеров(Запрос.МенеджерВременныхТаблиц);
	
	Возврат Результат.Получить(СчетФактураОбъект.Ссылка);
	
КонецФункции

// Вовзращает соответствие представлений номеров переданным счетам-фактурам.
// Учитывается цифровой индекс обособленного подразделения.
//
// Параметры:
//  МассивСчетовФактур - Массив - массив ссылок на документы Счет-фактура выданный, для которых нужно получить представлене номера
//
// Возвращаемое значение:
//  Соответствие - соответствие ссылки СФ и представления номера
//
Функция ПолучитьПредставленияНомеров(МассивСчетовФактур) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура,
	|	СчетФактураВыданный.Номер КАК Номер,
	|	ЕСТЬNULL(СчетФактураВыданныйДокументыОснования.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование,
	|	СчетФактураВыданный.Исправление КАК Исправление,
	|	СчетФактураВыданный.СчетФактураОснование КАК СчетФактураОснование,
	|	СчетФактураВыданный.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ТаблицаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйДокументыОснования.Ссылка
	|			И (СчетФактураВыданныйДокументыОснования.НомерСтроки = 1)
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В(&МассивСчетовФактур)";
	
	Запрос.УстановитьПараметр("МассивСчетовФактур", МассивСчетовФактур);
	Запрос.Выполнить();
	
	Возврат РассчитатьПредставлениеНомеров(Запрос.МенеджерВременныхТаблиц);
	
КонецФункции

Функция РассчитатьПредставлениеНомеров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ТаблицаСчетовФактур.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	вт_ТаблицаСчетовФактур КАК вт_ТаблицаСчетовФактур
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК Регистрации
	|		ПО вт_ТаблицаСчетовФактур.Организация = Регистрации.Организация
	|			И (НЕ Регистрации.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения = 0)
	|ГДЕ
	|	НЕ Регистрации.РегистрацияВНалоговомОргане ЕСТЬ NULL
	|	И НЕ вт_ТаблицаСчетовФактур.ДокументОснование = НЕОПРЕДЕЛЕНО";
	
	УстановитьПривилегированныйРежим(Истина);
	МассивОснований = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	УстановитьПривилегированныйРежим(Ложь);
	
	Если МассивОснований.Количество() = 0 Тогда
		ТаблицаДанныхДокументов = Новый ТаблицаЗначений;
		ТаблицаДанныхДокументов.Колонки.Добавить("Ссылка", Документы.ТипВсеСсылки());
		ТаблицаДанныхДокументов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		ТаблицаДанныхДокументов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		
		Запрос.Текст = "ВЫБРАТЬ Т.* ПОМЕСТИТЬ ТаблицаДанныхДокументов ИЗ &ТаблицаДанныхДокументов КАК Т";
		Запрос.УстановитьПараметр("ТаблицаДанныхДокументов", ТаблицаДанныхДокументов);
		Запрос.Выполнить();
	Иначе
		ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Исправление
	|			ТОГДА СчетФактураВыданный.СчетФактураОснование.Номер
	|		ИНАЧЕ СчетФактураВыданный.Номер
	|	КОНЕЦ КАК Номер,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеСкладов.РегистрацияВНалоговомОргане ЕСТЬ NULL
	|			ТОГДА ДанныеСкладов.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|		КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL
	|			ТОГДА ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|		КОГДА ЕСТЬNULL(Организации.ОбособленноеПодразделение, ЛОЖЬ)
	|			ТОГДА Организации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦифровойИндекс
	|ИЗ
	|	вт_ТаблицаСчетовФактур КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|		ПО СчетФактураВыданный.ДокументОснование = ДанныеОснований.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО СчетФактураВыданный.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеСкладов
	|		ПО СчетФактураВыданный.Организация = ДанныеСкладов.Организация
	|			И (ДанныеСкладов.Подразделение = ДанныеОснований.Склад.Подразделение)
	|			И (НЕ ДанныеСкладов.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|		ПО СчетФактураВыданный.Организация = ДанныеПодразделений.Организация
	|			И (ДанныеПодразделений.Подразделение = ДанныеОснований.Подразделение)
	|			И (НЕ ДанныеПодразделений.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))";
	
	Результат = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			Выборка.Номер,
			Истина,
			ЗначениеЗаполнено(Выборка.ЦифровойИндекс),
			Выборка.ЦифровойИндекс);
		Результат.Вставить(Выборка.СчетФактура, Номер);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеПродаж 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	Параметры.Вставить("БезОграниченияПериода");
	
	ПоказыватьСчетаФактуры = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ТребуетсяОформлениеСчетаФактуры)
		И ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураВыданный);
		
	Гиперссылка = Неопределено;
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ выданные'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры выданные'");
	КонецЕсли;
	
	Если ПоказыватьСчетаФактуры Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСпискаСчетФактураВыданный());
	КонецЕсли;
	
	Если ПоказыватьСчетаФактуры И ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСпискаСчетФактураВыданный());
	КонецЕсли;
	
	Возврат Гиперссылка;
	
КонецФункции

Функция ИмяФормыСпискаСчетФактураВыданный() Экспорт
	
	Возврат "Документ.СчетФактураВыданный.Форма.ФормаСпискаДокументов";
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.СчетФактураВыданный.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.9.9";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("4409f77b-e700-4ebd-b2ec-6013aea4adab");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СчетФактураВыданный.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет служебные реквизиты документа ""Счет-фактура выданный"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.РеестрДокументов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СчетФактураВыданный.ОбработатьДанныеДляПереходаНаНовуюВерсиюТовары";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.РеестрДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.РеестрДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсиюСФиВЭД";
	НоваяСтрока.Порядок = "До";

#КонецОбласти

#Область ОбработатьДанныеДляПереходаНаНовуюВерсиюТовары

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.СчетФактураВыданный.ОбработатьДанныеДляПереходаНаНовуюВерсиюТовары";
	Обработчик.Версия = "11.4.9.9";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("b8ce4a72-3ebf-4948-90a5-7e0e03cefac6");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СчетФактураВыданный.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюТовары";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет служебные реквизиты документа ""Счет-фактура выданный"" (исправленные и корректировочные).'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.РеестрДокументов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.СчетФактураВыданный.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СчетФактураВыданный.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.РеестрДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.РеестрДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсиюСФиВЭД";
	НоваяСтрока.Порядок = "До";

#КонецОбласти

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.СчетФактураВыданный";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснованияСчетаФактуры
	|ГДЕ
	|	ДокументыОснованияСчетаФактуры.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	И НЕ ДокументыОснованияСчетаФактуры.Ссылка.Исправление
	|	И НЕ ДокументыОснованияСчетаФактуры.Ссылка.Корректировочный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ПредставлениеНомера = """"
	|	И НЕ СчетФактураВыданный.Исправление
	|	И НЕ СчетФактураВыданный.Корректировочный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И НЕ СчетФактураВыданный.Исправление
	|	И НЕ СчетФактураВыданный.Корректировочный
	|";
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СчетФактураВыданный";
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Документ.ЗаписьКнигиПродаж")
		ИЛИ ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрСведений.РеестрДокументов")
		ИЛИ ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрСведений.ДанныеОснованийСчетовФактур")
		ИЛИ ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Справочник.КлючиРеестраДокументов")
		ИЛИ ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Справочник.Контрагенты") Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	// Получим сперва представления номеров обрабатываемых объектов.
	ПредставленияНомеров = ПолучитьПредставленияНомеров(ОбновляемыеДанные.ВыгрузитьКолонку("Ссылка"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбновляемыхДанных", ОбновляемыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаДанных.Ссылка КАК Документ.СчетФактураВыданный) КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыДляОбработки
	|ИЗ &ТаблицаОбновляемыхДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.МестоХранения.Ключ, НЕОПРЕДЕЛЕНО) КАК Склад,
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|			ТОГДА ЗаписьКнигиПродаж.Контрагент.Партнер
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Партнер,
	|	ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|	МАКСИМУМ(ЕСТЬNULL(ДанныеОснованийСчетовФактур.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))) КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ
	|			ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|				КОГДА ТИП(Документ.АктВыполненныхРабот)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ОтчетКомитенту)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|				КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|					ТОГДА ЗаписьКнигиПродаж.ХозяйственнаяОперация
	|				ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация,
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
	|			КОНЕЦ
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|	ПО ОбъектыДляОбработки.Ссылка = ДокументыОснования.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО ДокументыОснования.ДокументОснование = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|	ПО ДокументыОснования.ДокументОснование = ЗаписьКнигиПродаж.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО),
	|	ДокументыОснования.ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ДанныеРеестра.МестоХранения.Ключ, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|			ТОГДА ЗаписьКнигиПродаж.Контрагент.Партнер
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|				КОГДА ТИП(Документ.АктВыполненныхРабот)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ОтчетКомитенту)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|				КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|					ТОГДА ЗаписьКнигиПродаж.ХозяйственнаяОперация
	|				ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОбъектыДляОбработки.Ссылка
	|
	|ИТОГИ ПО
	|	Ссылка
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ОбъектИзменен = Ложь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументов.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				ВыборкаДокументов.Ссылка, ВыборкаДокументов.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ПроверитьЗаполняемыеРеквизиты(ДокументОбъект, ВыборкаДокументов, ОбъектИзменен);
			ПроверитьПредставлениеНомера(ДокументОбъект, ПредставленияНомеров, ОбъектИзменен);
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.НалогообложениеНДС) Тогда
				ДокументОбъект.НалогообложениеНДС = ВыборкаДокументов.НалогообложениеНДС;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаДокументов.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаДокументов.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюТовары(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснованияСчетаФактуры
	|ГДЕ
	|	ДокументыОснованияСчетаФактуры.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	И (ДокументыОснованияСчетаФактуры.Ссылка.Исправление
	|			ИЛИ ДокументыОснованияСчетаФактуры.Ссылка.Корректировочный)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ПредставлениеНомера = """"
	|	И (СчетФактураВыданный.Исправление
	|			ИЛИ СчетФактураВыданный.Корректировочный)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданный.Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйТовары.Ссылка
	|ГДЕ
	|	СчетФактураВыданный.Проведен
	|	И СчетФактураВыданныйТовары.Ссылка ЕСТЬ NULL
	|	И (СчетФактураВыданный.Исправление
	|			ИЛИ СчетФактураВыданный.Корректировочный)"
	);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюТовары(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СчетФактураВыданный";
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
		ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	// Получим сперва представления номеров обрабатываемых объектов.
	ОбновляемыеДанные = МенеджерВременныхТаблиц.Таблицы[Результат.ИмяВременнойТаблицы].ПолучитьДанные().Выгрузить();
	ПредставленияНомеров = ПолучитьПредставленияНомеров(ОбновляемыеДанные.ВыгрузитьКолонку("Ссылка"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаДанных.Ссылка КАК Документ.СчетФактураВыданный) КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыДляОбработки
	|ИЗ &ТаблицаОбновляемыхДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.МестоХранения.Ключ, НЕОПРЕДЕЛЕНО) КАК Склад,
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|			ТОГДА ЗаписьКнигиПродаж.Контрагент.Партнер
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Партнер,
	|	ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|	МАКСИМУМ(ЕСТЬNULL(ДанныеОснованийСчетовФактур.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))) КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ
	|			ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|				КОГДА ТИП(Документ.АктВыполненныхРабот)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ОтчетКомитенту)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|				КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|					ТОГДА ЗаписьКнигиПродаж.ХозяйственнаяОперация
	|				ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация,
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
	|			КОНЕЦ
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|	ПО ОбъектыДляОбработки.Ссылка = ДокументыОснования.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО ДокументыОснования.ДокументОснование = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|	ПО ДокументыОснования.ДокументОснование = ЗаписьКнигиПродаж.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|	ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО),
	|	ДокументыОснования.ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ДанныеРеестра.МестоХранения.Ключ, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|			ТОГДА ЗаписьКнигиПродаж.Контрагент.Партнер
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОснования.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|				КОГДА ТИП(Документ.АктВыполненныхРабот)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ОтчетКомитенту)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|				КОГДА ТИП(Документ.ЗаписьКнигиПродаж)
	|					ТОГДА ЗаписьКнигиПродаж.ХозяйственнаяОперация
	|				ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОбъектыДляОбработки.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТаблицаОбновляемыхДанных", Результат.ИмяВременнойТаблицы);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ОбъектИзменен = Ложь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументов.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				ВыборкаДокументов.Ссылка, ВыборкаДокументов.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ПроверитьЗаполняемыеРеквизиты(ДокументОбъект, ВыборкаДокументов, ОбъектИзменен);
			ПроверитьПредставлениеНомера(ДокументОбъект, ПредставленияНомеров, ОбъектИзменен);
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.НалогообложениеНДС) Тогда
				ДокументОбъект.НалогообложениеНДС = ВыборкаДокументов.НалогообложениеНДС;
				ОбъектИзменен = Истина;
			КонецЕсли;
			ПроверитьЗаполнениеТабличнойЧастиТовары(ДокументОбъект, ОбъектИзменен);
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаДокументов.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаДокументов.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ПроверитьЗаполняемыеРеквизиты(СчетФактураОбъект, ВыборкаСчетовФактур, ОбъектИзменен)
	
	// Инициализация структур.
	
	ОтборОснования = Новый Структура("ДокументОснование");
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить("Партнер");
	НовыеРеквизиты.Добавить("Договор");
	НовыеРеквизиты.Добавить("Склад");
	НовыеРеквизиты.Добавить("НаправлениеДеятельности");
	
	ЗначенияРеквизитов = Новый Структура(СтрСоединить(НовыеРеквизиты, ","));
	
	// Собственно проверка.
	
	Для Каждого СтрокаТаблицы Из СчетФактураОбъект.ДокументыОснования Цикл
		
		ПерваяСтрока = Истина;
		
		ОтборОснования.ДокументОснование = СтрокаТаблицы.ДокументОснование;
		
		ВыборкаОснований = ВыборкаСчетовФактур.Выбрать();
		Если ВыборкаОснований.НайтиСледующий(ОтборОснования) Тогда
			
			СтрокаТаблицы.ХозяйственнаяОперация = ВыборкаОснований.ХозяйственнаяОперация;
			ОбъектИзменен = Истина;
			
			Если ПерваяСтрока Тогда
				ПерваяСтрока = Ложь;
				ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ВыборкаОснований);
				Продолжить;
			КонецЕсли;
			
			Для Каждого Реквизит Из НовыеРеквизиты Цикл
				
				Если ЗначенияРеквизитов.Свойство(Реквизит)
					И ЗначенияРеквизитов[Реквизит] <> ВыборкаОснований[Реквизит] Тогда
					ЗначенияРеквизитов.Удалить(Реквизит);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначенияРеквизитов.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(СчетФактураОбъект, ЗначенияРеквизитов);
		ОбъектИзменен = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПредставлениеНомера(СчетФактураОбъект, ПредставленияНомеров, ОбъектИзменен)
	
	// Заполним представление номера, если оно пустое или отличается от представления номера в счет-фактуре.
	
	ПредставлениеНомера = ПредставленияНомеров.Получить(СчетФактураОбъект.Ссылка);
	Если
		Не ПредставлениеНомера = Неопределено
		И (
			Не ЗначениеЗаполнено(СчетФактураОбъект.ПредставлениеНомера)
			Или Не СчетФактураОбъект.ПредставлениеНомера = ПредставлениеНомера
		)
	Тогда
		СчетФактураОбъект.ПредставлениеНомера = ПредставлениеНомера;
		ОбъектИзменен = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(СчетФактураОбъект, ОбъектИзменен)
	
	// Заполним табличную часть Товары.
	
	Если
		(СчетФактураОбъект.Исправление Или СчетФактураОбъект.Корректировочный)
		И СчетФактураОбъект.Проведен
		И СчетФактураОбъект.Товары.Количество() = 0
	Тогда
		Попытка
			РезультатЗаполнения = СчетФактураОбъект.ПолучитьТаблицуТоваров();
		Исключение
			// В некоторых случаях требуется выставить несколько счетов-фактур и таблицу товаров заполнить не удается.
			// При этом вызывается исключение и табличную часть Товары не заполняем.
			Возврат;
		КонецПопытки;
		
		СчетФактураОбъект.ЗаполнитьТаблицуТоваров(РезультатЗаполнения);
		ОбъектИзменен = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли