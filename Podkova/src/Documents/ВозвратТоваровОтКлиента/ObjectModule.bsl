#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область УсловияПродаж

// Заполняет условия продаж в возврате товаров от клиента
//
// Параметры:
//	УсловияПродаж - Структура - Структура для заполнения
//	ЗаполнятьРеквизитыОснования - Булево - Признак заполнения основания.
//
Процедура ЗаполнитьУсловияПродаж(Знач УсловияПродаж, Знач ЗаполнятьРеквизитыОснования = Истина) Экспорт
	
	Если УсловияПродаж = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьРеквизитыОснования Тогда
		
		Если ЗначениеЗаполнено(УсловияПродаж.Валюта) Тогда
			Валюта = УсловияПродаж.Валюта;
		КонецЕсли;
		
		ЦенаВключаетНДС      = УсловияПродаж.ЦенаВключаетНДС;
		НаправлениеДеятельности = УсловияПродаж.НаправлениеДеятельности;
		
		Если ЗначениеЗаполнено(УсловияПродаж.Склад) Тогда
			Склад = УсловияПродаж.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловияПродаж.Организация) Тогда
		Организация = УсловияПродаж.Организация;
	КонецЕсли;
		
	Если Не УсловияПродаж.Типовое Тогда
		Если ЗначениеЗаполнено(УсловияПродаж.Контрагент) Тогда
			Контрагент = УсловияПродаж.Контрагент;
		КонецЕсли;
	КонецЕсли;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(УсловияПродаж.ХозяйственнаяОперация);
		ВозвратПереданнойМногооборотнойТары = УсловияПродаж.ВозвращатьМногооборотнуюТару;
		ПредусмотренЗалогЗаТару = УсловияПродаж.ТребуетсяЗалогЗаТару;
	КонецЕсли;
	
	ХозяйственнаяОперацияДоговора = Неопределено;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Тогда
		ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию;
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперацияДоговора, Валюта);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоходовПоНаправлениямДеятельности") Тогда
			НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Соглашение, Договор);
		КонецЕсли;

	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(УсловияПродаж.ИспользуютсяДоговорыКонтрагентов) 
		ИЛИ НЕ УсловияПродаж.ИспользуютсяДоговорыКонтрагентов Тогда
		ПорядокОплаты = УсловияПродаж.ПорядокОплаты;
	Иначе
		ПорядокОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ПорядокОплаты");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет условия продаж по умолчанию в возврате товаров от клиента
//
Процедура ЗаполнитьУсловияПродажПоУмолчанию() Экспорт
	
	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	
	Если ЗначениеЗаполнено (Партнер) ИЛИ НЕ ИспользоватьСоглашенияСКлиентами Тогда
		
		УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(
			Партнер, 
			Новый Структура(
			"ВыбранноеСоглашение,
			|ПустаяСсылкаДокумента", 
			Соглашение,
			Документы.ВозвратТоваровОтКлиента.ПустаяСсылка()));
		
		Если УсловияПродажПоУмолчанию <> Неопределено Тогда
			
			Если НЕ ИспользоватьСоглашенияСКлиентами ИЛИ 
				(Соглашение <> УсловияПродажПоУмолчанию.Соглашение И ЗначениеЗаполнено(УсловияПродажПоУмолчанию.Соглашение)) Тогда
				Соглашение = УсловияПродажПоУмолчанию.Соглашение;
				ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию);
			Иначе
				Соглашение = УсловияПродажПоУмолчанию.Соглашение;
			КонецЕсли;
			
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
			Соглашение = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыЗаполнения = Документы.ВозвратТоваровОтКлиента.ПараметрыЗаполненияНалогообложенияНДСПродажи(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

// Заполняет условия продаж по соглашению в возврате товаров от клиента
//
Процедура ЗаполнитьУсловияПродажПоСоглашению() Экспорт
	
	УсловияПродаж = ПродажиСервер.ПолучитьУсловияПродаж(Соглашение);
	ЗаполнитьУсловияПродаж(УсловияПродаж);
	
	ПараметрыЗаполнения = Документы.ВозвратТоваровОтКлиента.ПараметрыЗаполненияНалогообложенияНДСПродажи(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Функция формирует временные данных документа.
//
// Возвращаемое значение:
//	МенеджерВременныхТаблиц - менеджер временных таблиц.
//
Функция ВременныеТаблицыДанныхДокумента(ОтборПоСпособуОпределенияСебестоимости = "Все") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	&Договор КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	&ДокументРеализации КАК ДокументРеализации,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЛОЖЬ КАК ЕстьСделкиВТабличнойЧасти,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваров.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &Склад
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ДокументРеализации = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	|				ИЛИ ТаблицаТоваров.ДокументРеализации = ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Сумма + (ТаблицаТоваров.СуммаНДС * &ЦенаВключаетНДС) КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Себестоимость КАК Себестоимость,
	|	ТаблицаТоваров.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|	ТаблицаТоваров.СебестоимостьРегл КАК СебестоимостьРегл,
	|	ТаблицаТоваров.СебестоимостьПР КАК СебестоимостьПР,
	|	ТаблицаТоваров.СебестоимостьВР КАК СебестоимостьВР,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.СпособОпределенияСебестоимости В (&СпособыОпределенияСебестоимости)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Себестоимость КАК Себестоимость,
	|	ТаблицаТоваров.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|	ТаблицаТоваров.СебестоимостьРегл КАК СебестоимостьРегл,
	|	ТаблицаТоваров.СебестоимостьПР КАК СебестоимостьПР,
	|	ТаблицаТоваров.СебестоимостьВР КАК СебестоимостьВР,
	|	ВЫБОР
	|		КОГДА (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И &ВозвратПереданнойМногооборотнойТары)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПодбиратьВидыЗапасов,
	|	АналитикаОприходования.КлючАналитики КАК АналитикаУчетаНоменклатурыОприходования,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОприходования
	|		ПО ТаблицаТоваров.НоменклатураОприходование = АналитикаОприходования.Номенклатура
	|			И ТаблицаТоваров.ХарактеристикаОприходование = АналитикаОприходования.Характеристика
	|			И ТаблицаТоваров.Назначение = АналитикаОприходования.Назначение
	|			И ТаблицаТоваров.Серия = АналитикаОприходования.Серия
	|			И ТаблицаТоваров.Склад = АналитикаОприходования.МестоХранения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаВидыЗапасов.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
	|				ИЛИ ТаблицаВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
	|			ТОГДА ТаблицаВидыЗапасов.СпособОпределенияСебестоимости
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи)
	|	КОНЕЦ КАК СпособОпределенияСебестоимости,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.Себестоимость КАК Себестоимость,
	|	ТаблицаВидыЗапасов.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СебестоимостьРегл КАК СебестоимостьРегл,
	|	ТаблицаВидыЗапасов.СебестоимостьПР КАК СебестоимостьПР,
	|	ТаблицаВидыЗапасов.СебестоимостьВР КАК СебестоимостьВР
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.СпособОпределенияСебестоимости В (&СпособыОпределенияСебестоимости)
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(АналитикаОтгрузки.МестоХранения, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладОтгрузки,
	|	Аналитика.МестоХранения КАК Склад,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ТаблицаВидыЗапасов.Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.Себестоимость КАК Себестоимость,
	|	ТаблицаВидыЗапасов.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СебестоимостьРегл КАК СебестоимостьРегл,
	|	ТаблицаВидыЗапасов.СебестоимостьПР КАК СебестоимостьПР,
	|	ТаблицаВидыЗапасов.СебестоимостьВР КАК СебестоимостьВР,
	|	&ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную	
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаОтгрузки
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки = АналитикаОтгрузки.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ?(ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ВидыЗапасов);
	Запрос.УстановитьПараметр("ВозвратПереданнойМногооборотнойТары", ВозвратПереданнойМногооборотнойТары);
	Запрос.УстановитьПараметр("ВидыЗапасовУказаныВручную", ВидыЗапасовУказаныВручную);
	
	Если ОтборПоСпособуОпределенияСебестоимости = "Все" Тогда
		СпособыОпределенияСебестоимости = Новый Массив;
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи);
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.Вручную);
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.ПустаяСсылка());
		Запрос.УстановитьПараметр("СпособыОпределенияСебестоимости", СпособыОпределенияСебестоимости);
	ИначеЕсли ОтборПоСпособуОпределенияСебестоимости = "ИзДокументаПродажи" Тогда
		Запрос.УстановитьПараметр("СпособыОпределенияСебестоимости", Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи);
	ИначеЕсли ОтборПоСпособуОпределенияСебестоимости = "НеИзДокументаПродажи" Тогда
		СпособыОпределенияСебестоимости = Новый Массив;
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.Вручную);
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		СпособыОпределенияСебестоимости.Добавить(Перечисления.СпособыОпределенияСебестоимости.ПустаяСсылка());
		Запрос.УстановитьПараметр("СпособыОпределенияСебестоимости", СпособыОпределенияСебестоимости);
	КонецЕсли;
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполненНаОснованииДокумента = Ложь;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ЗаполнитьПоПереданнойТаре") Тогда
			ЗаполнитьДокументНаОснованииПереданнойТары(ДанныеЗаполнения);
			ЗаполненНаОснованииДокумента = Истина;
		ИначеЕсли ДанныеЗаполнения.Свойство("АктОРасхождениях") 
			И ДанныеЗаполнения.Свойство("ОснованиеАкта") Тогда
			
			Если ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеОтгрузки(ДанныеЗаполнения);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеПриемки(ДанныеЗаполнения);
			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.Свойство("МассивЗаказов") Тогда
			ЗаполнитьПоЗаказу(ДанныеЗаполнения);
		Иначе
			ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЧекККМ") Тогда
		ЗаполнитьДокументНаОснованииЧекаККМ(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ИнтеграцияВЕТИСУТ.ЗаполнитьВозвратТоваровОтКлиентаНаОснованииВходящейТранспортнойОперацииВЕТИС(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПриемкаТоваровИСМП") Тогда
		
		ИнтеграцияИСМПУТ.ЗаполнитьВозвратТоваровОтКлиентаНаОснованииПриемкиТоваровИСМП(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ОчиститьСпособОпределенияСебестоимостиИДокументРеализации();
	
	Если Не ЗаполненНаОснованииДокумента Тогда
		ИнициализироватьУсловияПродаж();
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);
	
	ПараметрыПолученияКоэффициентаРНПТ = УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ПараметрыПолученияКоэффициентаРНПТ(ЭтотОбъект);
	УчетПрослеживаемыхТоваровЛокализация.ЗаполнитьКоличествоПоРНПТВТабличнойЧасти(ПараметрыПолученияКоэффициентаРНПТ, Товары);
	
	ВозвратТоваровОтКлиентаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ЗначениеЗаполнено(Соглашение) Или Не Документы.ВозвратТоваровОтКлиента.ЗначениеРеквизитаОбъектаТипаБулево(Соглашение, "ИспользуютсяДоговорыКонтрагентов") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НоменклатураОприходование");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("РасшифровкаПлатежа.Сумма");
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("Соглашение");
		
	КонецЕсли;
	
	СуммаУменьшенДолг = 0;
	Для Каждого СтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Заказ) Тогда
			СуммаУменьшенДолг = СуммаУменьшенДолг + СтрокаРасшифровкаПлатежа.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = ПолучитьСуммуДокумента();
	СуммаКомпенсации = СуммаДокумента - СуммаУменьшенДолг;
	
	Если СуммаКомпенсации = 0
		Или ХозяйственнаяОперация <> Перечисления.хозяйственныеОперации.ВозвратТоваровОтКлиента Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СпособКомпенсации");
		
	КонецЕсли;
	
	ДенежныеСредстваСервер.ПроверитьЗаполнениеРасшифровкиПлатежа(
		ЭтотОбъект,
		ПолучитьСуммуДокумента(),
		ХозяйственнаяОперация,
		Отказ);
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	Документы.ВозвратТоваровОтКлиента.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		ХозяйственнаяОперация, 
		МассивВсехРеквизитов, 
		МассивРеквизитовОперации);
		
	Если Не ВыданыДенежныеСредства Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерРасходногоКассовогоОрдера");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаРасходногоКассовогоОрдера");
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивВсехРеквизитов Цикл
		
		// Если реквизит не используется для хозяйственной операции, исключаем данный реквизит из проверки.
		Если МассивРеквизитовОперации.Найти(ЭлементМассива) = Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ЭлементМассива);
		ИначеЕсли ПроверяемыеРеквизиты.Найти(ЭлементМассива) = Неопределено Тогда
			ПроверяемыеРеквизиты.Добавить(ЭлементМассива);		
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.СуффиксДопРеквизита = "Оприходование";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВозвратТоваровОтКлиента);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
	                                            ПараметрыУказанияСерий,
	                                            Отказ,
	                                            МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьВидНоменклатурыОприходования(ЭтотОбъект,Отказ);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) 
		ИЛИ НЕ НаправленияДеятельностиСервер.УказаниеНаправленияДеятельностиОбязательно(ХозяйственнаяОперация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	ЭтоПрослеживаемыйДокумент = УчетПрослеживаемыхТоваровЛокализация.ЭтоПрослеживаемыйДокумент(Товары, Дата);
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НомерГТД");
	Если ПолучитьФункциональнуюОпцию("ЗапретитьПоступлениеТоваровБезНомеровГТД")
		Или ЭтоПрослеживаемыйДокумент Тогда
		ЗапасыСервер.ПроверитьЗаполнениеНомеровГТД(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Если ЭтоПрослеживаемыйДокумент Тогда
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьКорректностьНастроекТоваровРНПТ(ЭтотОбъект, Товары, Дата);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоПоРНПТ");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ДокументРеализации");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		И ВозвратПереданнойМногооборотнойТары Тогда
		СоответствиеНоменклатураТип = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Товары.ВыгрузитьКолонку("Номенклатура"), "ТипНоменклатуры");
	КонецЕсли;
		
	Для Каждого СтрТабл Из Товары Цикл
		
		АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""Товары""'");
		АдресОшибки =  СтрЗаменить(АдресОшибки, "%НомерСтроки%", СтрТабл.НомерСтроки);
		ПолеДокументПродажи = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "ДокументРеализации");
		ПолеНоменклатураОприходование = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "НоменклатураОприходование");
		
		Если Не ЗначениеЗаполнено(СтрТабл.ДокументРеализации)
			И (СтрТабл.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи
				Или (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
					И ВозвратПереданнойМногооборотнойТары
					И СоответствиеНоменклатураТип.Получить(СтрТабл.Номенклатура) = Перечисления.ТипыНоменклатуры.МногооборотнаяТара)) Тогда
			
				ТекстОшибки = НСтр("ru='Не заполнена колонка ""Документ продажи""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + АдресОшибки, ЭтотОбъект, ПолеДокументПродажи,, Отказ);
				
		КонецЕсли;
		
		Если СтрТабл.Порча Тогда
			
			Если Не ЗначениеЗаполнено(СтрТабл.НоменклатураОприходование) Тогда
				ТекстОшибки = НСтр("ru='Не заполнена колонка ""Номенклатура (оприходование)""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + АдресОшибки,ЭтотОбъект,ПолеНоменклатураОприходование,,Отказ);
			ИначеЕсли СтрТабл.Номенклатура = СтрТабл.НоменклатураОприходование Тогда
				ТекстОшибки = НСтр("ru='Товар исходного качества совпадает с товаром другого качества'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + АдресОшибки,ЭтотОбъект,ПолеНоменклатураОприходование,,Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ВозвратТоваровОтКлиентаЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	ОчиститьСпособОпределенияСебестоимостиИДокументРеализации();
	
	СформироватьСписокЗависимыхЗаказов();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров") Тогда
		ВозвратПорчи = Ложь;
		Для Каждого СтрТабл Из Товары Цикл
			Если СтрТабл.Порча Тогда
				ВозвратПорчи = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ВозвратПереданнойМногооборотнойТары
		И ПредусмотренЗалогЗаТару Тогда
		ПредусмотренЗалогЗаТару = Ложь;
	КонецЕсли;
	
	СуммаДокумента = ПолучитьСуммуДокумента();
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВозвратТоваровОтКлиента);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,ПараметрыУказанияСерий);
	
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект, Отказ);
		ПродажиСервер.ПроверитьКорректностьВозвращаемыхТоваров(ЭтотОбъект, "Товары", Отказ);
		
		Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера И СуммаДокумента > 0 Тогда
		
			Если РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Сумма = СуммаДокумента;
			КонецЕсли;
			
			ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВТабличнойЧасти(
				Валюта,
				Дата,
				РасшифровкаПлатежа);
		Иначе
			Если РасшифровкаПлатежа.Количество() <> 0 Тогда
				РасшифровкаПлатежа.Очистить();
			КонецЕсли;
		КонецЕсли;
		
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ХозяйственнаяОперация, Склад, Подразделение, Партнер);
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(Товары, МестаУчета, ИменаПолей);
		
		ЗаполнитьВидыЗапасов(Отказ);
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасов);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасов.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ЧекККМ = Неопределено;
	КонецЕсли;
	
	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);
	
	Если Не ВыданыДенежныеСредства Тогда
		НомерРасходногоКассовогоОрдера = "";
		ДатаРасходногоКассовогоОрдера = '00010101';
	КонецЕсли;
	
	ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(ЭтотОбъект);
	
	// ИнтеграцияГИСМ
	ЕстьМаркируемаяПродукцияГИСМ = ИнтеграцияГИСМ_УТ.ЕстьМаркируемаяПродукцияГИСМ(Товары);
	// Конец ИнтеграцияГИСМ
	
	ВозвратТоваровОтКлиентаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ВозвратТоваровОтКлиента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьЗаявкиНаВозвратТоваровОтКлиентов(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьРезервыТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьВыручкуИСебестоимостьПродаж(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ПартионныйУчетСервер.ОтразитьПартииТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	МногооборотнаяТараСервер.ОтразитьПереданнуюВозвратнуюТару(ДополнительныеСвойства, Движения, Отказ);
	УчетНДСУП.СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
	СкидкиНаценкиСервер.ОтразитьБонусныеБаллы(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ);
	
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.Проведение);	
	
	ВозвратТоваровОтКлиентаЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	
	ВозвратТоваровОтКлиентаЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации);
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаявкаНаВозвратТоваровОтКлиента = Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка();
	СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПустаяСсылка();
	ЕстьМаркируемаяПродукцияГИСМ = Ложь;ВидыЗапасовУказаныВручную = Ложь;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		СтрокаТЧ.КодСтроки = 0;
	КонецЦикла;
	
	ВидыЗапасов.Очистить();
	Серии.Очистить();
	
	ИнициализироватьДокумент();
	
	УчетНДСУП.СкорректироватьСтавкуНДСВТЧДокумента(ЭтотОбъект, Товары);
	
	ВозвратТоваровОтКлиентаЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ
		И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		Возврат;
	КонецЕсли;
	
	
	ВозвратТоваровОтКлиентаЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОснованию

Процедура ЗаполнитьДокументПоОтбору(Знач ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("ХозяйственнаяОперация") Тогда
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		Если ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
			Партнер = Справочники.Партнеры.РозничныйПокупатель;
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
			Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
				ЗаполнитьУсловияПродажПоУмолчанию();
			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Свойство("Партнер") Тогда
		Партнер = ДанныеЗаполнения.Партнер;
		ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
			ЗаполнитьУсловияПродажПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(Знач ДокументОснование)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Договор
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказКлиента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументРеализации,
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Соглашение КАК Соглашение,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ВЫБОР
	|		КОГДА &ЕстьДоговор
	|			ТОГДА РеализацияТоваровУслуг.ВалютаВзаиморасчетов
	|		ИНАЧЕ РеализацияТоваровУслуг.Валюта
	|	КОНЕЦ КАК Валюта,
	|	РеализацияТоваровУслуг.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РеализацияТоваровУслуг.Сделка КАК Сделка,
	|	РеализацияТоваровУслуг.Подразделение КАК Подразделение,
	|	РеализацияТоваровУслуг.Статус КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Склад.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ РеализацияТоваровУслуг.Склад
	|	КОНЕЦ КАК Склад,
	|	РеализацияТоваровУслуг.ХозяйственнаяОперация КАК ХозяйственнаяОперацияРеализация,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеализацияТоваровУслуг.НалогообложениеНДС КАК НалогообложениеНДС,
	|	РеализацияТоваровУслуг.Договор КАК Договор,
	|	РеализацияТоваровУслуг.ВернутьМногооборотнуюТару КАК ВозвратПереданнойМногооборотнойТары,
	|	РеализацияТоваровУслуг.ТребуетсяЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	НЕ РеализацияТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|				ИЛИ РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	РеализацияТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РеализацияТоваровУслуг.ПорядокОплаты КАК ПорядокОплатыи
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			,
	|			ЗаказКлиента В
	|				(ВЫБРАТЬ
	|					ОбъектыРасчетов.Ссылка
	|				ИЗ
	|					ОбъектыРасчетов)) КАК РасчетыСКлиентами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Цена * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)) КАК Цена,
	|	ТаблицаТовары.ВидЦены КАК ВидЦены,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)) КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)) КАК СуммаСНДС,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ЗаказКлиента КАК ЗаказКлиента,
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|	ТаблицаТовары.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТоварыДокументаПродажи
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ПоследняяКорректировка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Цена * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)),
	|	ТаблицаТовары.ВидЦены,
	|	ТаблицаТовары.Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)),
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуДоговора  КАК ЧИСЛО(31,2)),
	|	ВЫБОР
	|		КОГДА &ЕстьДоговор
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ТаблицаТовары.КодСтроки,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ЗаказКлиента,
	|	ТаблицаТовары.СуммаРучнойСкидки,
	|	ТаблицаТовары.СуммаАвтоматическойСкидки,
	|	ТаблицаТовары.Назначение
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ПоследняяКорректировка ЕСТЬ NULL
	|	И ТаблицаТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокументаПродажи.НоменклатураНабора КАК НоменклатураНабора,
	|	ТоварыДокументаПродажи.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТоварыДокументаПродажи.Номенклатура КАК Номенклатура,
	|	ТоварыДокументаПродажи.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТоварыДокументаПродажи.Характеристика КАК Характеристика,
	|	ТоварыДокументаПродажи.Серия КАК Серия,
	|	ТоварыДокументаПродажи.Упаковка КАК Упаковка,
	|	СУММА(ТоварыДокументаПродажи.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СРЕДНЕЕ(ТоварыДокументаПродажи.Цена) КАК Цена,
	|	СУММА(ТоварыДокументаПродажи.Количество) КАК Количество,
	|	СУММА(ТоварыДокументаПродажи.Сумма) КАК Сумма,
	|	ТоварыДокументаПродажи.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
	|	СУММА(ТоварыДокументаПродажи.СуммаАвтоматическойСкидки) КАК СуммаАвтоматическойСКидки,
	|	ТоварыДокументаПродажи.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТоварыРеализации
	|ИЗ
	|	ТоварыДокументаПродажи КАК ТоварыДокументаПродажи
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокументаПродажи.НоменклатураНабора,
	|	ТоварыДокументаПродажи.ХарактеристикаНабора,
	|	ТоварыДокументаПродажи.Номенклатура,
	|	ТоварыДокументаПродажи.ТипНоменклатуры,
	|	ТоварыДокументаПродажи.Характеристика,
	|	ТоварыДокументаПродажи.Серия,
	|	ТоварыДокументаПродажи.Упаковка,
	|	ТоварыДокументаПродажи.СтавкаНДС,
	|	ТоварыДокументаПродажи.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика КАК Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Серия КАК Серия,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка КАК Упаковка,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.Количество) КАК Количество,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.Сумма) КАК Сумма,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаСНДС) КАК СуммаСНДС,
	|	СРЕДНЕЕ(ВозвратТоваровОтКлиентаТовары.Цена) КАК Цена,
	|	ВозвратТоваровОтКлиентаТовары.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТоварыПредыдущихВозвратов
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации = &ДокументОснование
	|	И ВозвратТоваровОтКлиентаТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора,
	|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Серия,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС,
	|	ВозвратТоваровОтКлиентаТовары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыРеализации.НоменклатураНабора КАК НоменклатураНабора,
	|	ТоварыРеализации.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТоварыРеализации.Номенклатура КАК Номенклатура,
	|	ТоварыРеализации.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТоварыРеализации.Характеристика КАК Характеристика,
	|	ТоварыРеализации.Серия КАК Серия,
	|	ТоварыРеализации.Количество - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Количество, 0) КАК Количество,
	|	ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0) КАК КоличествоУпаковок,
	|	ТоварыРеализации.Упаковка КАК Упаковка,
	|	ТоварыРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0) = 0
	|			ТОГДА ТоварыРеализации.Цена
	|		ИНАЧЕ (ТоварыРеализации.Сумма - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Сумма, 0)) / (ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0))
	|	КОНЕЦ КАК Цена,
	|	ТоварыРеализации.Сумма - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Сумма, 0) КАК Сумма,
	|	ТоварыРеализации.СуммаНДС - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаНДС, 0) КАК СуммаНДС,
	|	ТоварыРеализации.СуммаСНДС - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаСНДС, 0) КАК СуммаСНДС,
	|	&ДокументОснование КАК ДокументРеализации,
	|	ТоварыРеализации.Назначение КАК Назначение
	|ИЗ
	|	ТоварыРеализации КАК ТоварыРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПредыдущихВозвратов КАК ТоварыПредыдущихВозвратов
	|		ПО ТоварыРеализации.Номенклатура = ТоварыПредыдущихВозвратов.Номенклатура
	|			И ТоварыРеализации.Характеристика = ТоварыПредыдущихВозвратов.Характеристика
	|			И ТоварыРеализации.НоменклатураНабора = ТоварыПредыдущихВозвратов.НоменклатураНабора
	|			И ТоварыРеализации.ХарактеристикаНабора = ТоварыПредыдущихВозвратов.ХарактеристикаНабора
	|			И ТоварыРеализации.Серия = ТоварыПредыдущихВозвратов.Серия
	|			И ТоварыРеализации.Назначение = ТоварыПредыдущихВозвратов.Назначение
	|ГДЕ
	|	ТоварыРеализации.Количество - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Количество, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТараОстатки.Номенклатура КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараОстатки.Характеристика КАК Характеристика,
	|	ПереданнаяВозвратнаяТараОстатки.Партнер КАК Партнер,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток КАК Количество,
	|	ВЫРАЗИТЬ(ПереданнаяВозвратнаяТараОстатки.СуммаОстаток * &КоэффициентПересчетаВВалютуДоговора КАК ЧИСЛО(31,2)) КАК Сумма
	|ПОМЕСТИТЬ втПереданнаяВозвратнаяТара
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(, ДокументПередачи = &ДокументОснование) КАК ПереданнаяВозвратнаяТараОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПереданнаяВозвратнаяТара.Номенклатура КАК Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика КАК Характеристика,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи КАК ДокументРеализации,
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК Количество,
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК КоличествоУпаковок,
	|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК Сумма,
	|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА СУММА(втПереданнаяВозвратнаяТара.Количество) = 0
	|			ТОГДА СУММА(втПереданнаяВозвратнаяТара.Сумма)
	|		ИНАЧЕ СУММА(втПереданнаяВозвратнаяТара.Сумма) / СУММА(втПереданнаяВозвратнаяТара.Количество)
	|	КОНЕЦ КАК Цена,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС
	|ИЗ
	|	втПереданнаяВозвратнаяТара КАК втПереданнаяВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	втПереданнаяВозвратнаяТара.Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи
	|
	|ИМЕЮЩИЕ
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) > 0");
	
	УстановитьПривилегированныйРежим(Истина);
	
	КоэффициентПересчетаВВалютуДоговора = 1;
	ЕстьДоговор = Ложь;
	
	ЗапросКорректировка = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КорректировкаРеализации.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Проведен
	|	И КорректировкаРеализации.ДокументОснование = &ДокументОснование
	|	И НЕ КорректировкаРеализации.ВидКорректировки В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПерепоставленногоТовара), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаРеализации.МоментВремени УБЫВ");
	
	ЗапросКорректировка.УстановитьПараметр("ДокументОснование", ДокументОснование);
	СпсиокКорректировок = ЗапросКорректировка.Выполнить().Выбрать();
	
	Если СпсиокКорректировок.Следующий() Тогда
		ПоследняяКорректировка = СпсиокКорректировок.Ссылка;
	Иначе
		ПоследняяКорректировка = NULL;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование.Договор) Тогда
		ЕстьДоговор = Истина;
		Если ЗначениеЗаполнено(ПоследняяКорректировка)
			И НЕ ПоследняяКорректировка.ВалютаВзаиморасчетов = ПоследняяКорректировка.Валюта Тогда
			
			КоэффициентыПересчета = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(ПоследняяКорректировка.Валюта,
					ПоследняяКорректировка.ВалютаВзаиморасчетов, Дата, ПоследняяКорректировка.Курс, ПоследняяКорректировка.Кратность);
			КоэффициентПересчетаВВалютуДоговора = КоэффициентыПересчета.КоэффициентПересчетаВВалютуВзаиморасчетов;
		ИначеЕсли НЕ ЗначениеЗаполнено(ПоследняяКорректировка)
			И НЕ ДокументОснование.ВалютаВзаиморасчетов = ДокументОснование.Валюта Тогда
			
			КоэффициентыПересчета = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(ДокументОснование.Валюта,
				ДокументОснование.ВалютаВзаиморасчетов, Дата, ДокументОснование.Курс, ДокументОснование.Кратность);
			КоэффициентПересчетаВВалютуДоговора = КоэффициентыПересчета.КоэффициентПересчетаВВалютуВзаиморасчетов;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуДоговора", КоэффициентПересчетаВВалютуДоговора);
	Запрос.УстановитьПараметр("ЕстьДоговор", ЕстьДоговор);
	Запрос.УстановитьПараметр("ПоследняяКорректировка", ПоследняяКорректировка);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[1].Выбрать();
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[2].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(ВыборкаШапка.ХозяйственнаяОперацияРеализация);
	
	ТаблицаТоваров = ПакетЗапросов[6].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
		
		Если ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			Или (ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара И НЕ ВыборкаШапка.ВозвратПереданнойМногооборотнойТары) Тогда
			
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
			НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
				НоваяСтрока,
				ВыборкаШапка.ЦенаВключаетНДС,
				Ложь,
				Ложь,
				Истина);
				
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаТары = ПакетЗапросов[8].Выгрузить();
	
	Для каждого ТекущаяСтрока Из ТаблицаТары Цикл
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
		НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		
		Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(НоваяСтрока, ВыборкаШапка.ЦенаВключаетНДС, Ложь, Ложь, Истина);
		
	КонецЦикла;
	
	ТоварыДо = Товары.Выгрузить();
	
	ЗаполнитьНомераГТДПоРаспоряжениям();
	
	// из-за округления при распределении номеров ГТД общая сумма НДС может не совпасть с суммой НДС построчно
	Для каждого СтрокаДо Из ТоварыДо Цикл
		
		ПоляПоиска = "Номенклатура, Характеристика, Серия, Назначение, СтавкаНДС, Цена, ДокументРеализации, Упаковка";
		СтруктураПоиска = Новый Структура(ПоляПоиска);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДо);
		
		СтрокиПосле = Товары.НайтиСтроки(СтруктураПоиска);
		
		СуммаНДСКРаспределению = СтрокаДо.СуммаНДС;
		
		Для каждого СтрокаПосле Из СтрокиПосле Цикл
		
			Если СуммаНДСКРаспределению >= СтрокаПосле.СуммаНДС Тогда
				СуммаНДСКРаспределению = СуммаНДСКРаспределению - СтрокаПосле.СуммаНДС;
			Иначе
				СтрокаПосле.СуммаНДС = СуммаНДСКРаспределению;
			КонецЕсли;
		
		КонецЦикла; 
		
	КонецЦикла;
	
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЧекаККМ(Знач ДокументОснование)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) КАК ХозяйственнаяОперация,
		|	ОтчетОРозничныхПродажах.Ссылка    КАК ДокументРеализации,
		|	ОтчетОРозничныхПродажах.Подразделение КАК Подразделение,
		|	ЧекККМ.Партнер                    КАК Партнер,
		|	ЧекККМ.Ссылка                     КАК ЧекККМ,
		|	ЧекККМ.Статус                     КАК Статус,
		|	ЧекККМ.КассоваяСмена              КАК КассоваяСмена,
		|	ЧекККМ.Организация                КАК Организация,
		|	ЧекККМ.Валюта                     КАК Валюта,
		|	ЧекККМ.Валюта                     КАК ВалютаВзаиморасчетов,
		|	ЧекККМ.Склад                      КАК Склад,
		|	ЧекККМ.ЦенаВключаетНДС            КАК ЦенаВключаетНДС,
		|	ЧекККМ.НалогообложениеНДС         КАК НалогообложениеНДС,
		|
		|	ВЫБОР КОГДА ЧекККМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК ЕстьОшибкиСтатус,
		|
		|	ЧекККМ.Серии.(
		|		Номенклатура                                 КАК Номенклатура,
		|		Характеристика                               КАК Характеристика,
		|		Серия                                        КАК Серия,
		|		Количество                                   КАК Количество
		|	) КАК Серии
		|
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|		ПО ЧекККМ.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена
		|ГДЕ
		|	ЧекККМ.Ссылка = &ДокументОснование");
		
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	ВыборкаШапка.Следующий();
		
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Пробит);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ЧекККМ,
		ВыборкаШапка.Статус,
		,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	Если РозничныеПродажи.СменаОткрыта(ВыборкаШапка.КассоваяСмена, Дата) Тогда
		ВызватьИсключение НСтр("ru='Кассовая смена открыта! Ввод на основании чека документа ""Возврат товаров от клиента"" при открытой кассовой смене запрещен.'");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ПродажиСервер.ЗаполнитьВозвращаемыеТоварыПоЧеку(ЭтотОбъект, "Товары");
	
	ДокументРеализации = РозничныеПродажи.ПолучитьОтчетОРозничныхПродажахПоЧекуККМ(ДокументОснование);
	
	Для Каждого ТекСтрока Из Товары Цикл
				
		ТекСтрока.ДокументРеализации = ДокументРеализации;
		ТекСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(ТекСтрока.ДокументРеализации),
			Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
			Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		
	КонецЦикла;
	
	Серии.Загрузить(ВыборкаШапка.Серии.Выгрузить());
	
	ЗаполнитьНомераГТДПоРаспоряжениям();
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		
		УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(Партнер);
		
		Если УсловияПродажПоУмолчанию <> Неопределено Тогда
			
			Соглашение = УсловияПродажПоУмолчанию.Соглашение;
			ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию, Ложь);
			
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(Знач ДокументОснование)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
		ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвращаемыеТовары.ДокументРеализации КАК Ссылка
	|
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ВозвращаемыеТовары
	|ГДЕ
	|	ВозвращаемыеТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвращаемыеТовары.ДокументРеализации.Договор КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ВозвращаемыеТовары
	|ГДЕ
	|	ВозвращаемыеТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказКлиента КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|	ПО
	|		ЗаявкаНаВозврат.ДокументРеализации = ТаблицаТовары.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ОбъектыРасчетовПоЗаявке
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.Договор КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|	ПО
	|		ТаблицаТовары.ЗаказКлиента = ЗаявкаНаВозврат.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка                КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Партнер               КАК Партнер,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ДокументРеализации    КАК ДокументРеализации,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЧекККМ                КАК ЧекККМ,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Контрагент            КАК Контрагент,
	|	ЗаявкаНаВозвратТоваровОтКлиента.КонтактноеЛицо        КАК КонтактноеЛицо,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Организация           КАК Организация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Соглашение            КАК Соглашение,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Валюта                КАК Валюта,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Склад                 КАК Склад,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Подразделение         КАК Подразделение,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвратПорчи          КАК ВозвратПорчи,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Сделка                КАК Сделка,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЦенаВключаетНДС       КАК ЦенаВключаетНДС,
	|	ЗаявкаНаВозвратТоваровОтКлиента.НалогообложениеНДС    КАК НалогообложениеНДС,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Статус                КАК СтатусДокумента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Договор               КАК Договор,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	
	|	ВЫБОР КОГДА ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства)
	|	ИНАЧЕ
	|		ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации
	|	КОНЕЦ КАК СпособКомпенсации,
	|	
	|	НЕ ЗаявкаНаВозвратТоваровОтКлиента.Проведен           КАК ЕстьОшибкиПроведен,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВернутьМногооборотнуюТару КАК ВозвратПереданнойМногооборотнойТары,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ТребуетсяЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	ЗаявкаНаВозвратТоваровОтКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ПорядокОплаты КАК ПорядокОплаты,
	|
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеСерии.(
	|		Номенклатура                                 КАК Номенклатура,
	|		Характеристика                               КАК Характеристика,
	|		Серия                                        КАК Серия,
	|		Назначение                                   КАК Назначение,
	|		Количество                                   КАК Количество,
	|		ДокументРеализации                           КАК ДокументРеализации
	|	) КАК Серии
	|
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|ГДЕ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента                КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                      КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток             КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0) + ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ЗаказКлиента В
	|			(ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				ОбъектыРасчетовПоЗаявке)
	|			И ЗаказКлиента <> НЕОПРЕДЕЛЕНО) КАК РасчетыСКлиентами
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента                КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                      КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток              КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0)   КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ЗаказКлиента В
	|			(ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				ОбъектыРасчетов)) КАК РасчетыСКлиентами
	|";
	
	МассивРезультатов                = Запрос.ВыполнитьПакет();
	ВыборкаШапка                     = МассивРезультатов[2].Выбрать();
	ВыборкаРасчетыПоЗаявке           = МассивРезультатов[3].Выбрать();
	ВыборкаРасчетыПоОснованиюЗаявки  = МассивРезультатов[4].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииПоОперации(ДокументОснование, "ВозвратТоваровОтКлиента",
		ВыборкаШапка.ХозяйственнаяОперация);
	
	Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		Истина);
	
	// Заполнение шапки.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	Серии.Загрузить(ВыборкаШапка.Серии.Выгрузить());
	
	// Заполнение ТЧ товары.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ ЗаявкаТовары
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.Остатки(, ЗаявкаНаВозвратТоваровОтКлиента = &ДокументОснование) КАК ЗаявкиНаВозвратТоваровОтКлиентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|		ПО (ЗаявкаТовары.Ссылка = &ДокументОснование)
	|			И ЗаявкиНаВозвратТоваровОтКлиентов.КодСтроки = ЗаявкаТовары.КодСтроки
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Номенклатура = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.НоменклатураОприходование
	|				ИНАЧЕ ЗаявкаТовары.Номенклатура
	|			КОНЕЦ)
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Характеристика = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.ХарактеристикаОприходование
	|				ИНАЧЕ ЗаявкаТовары.Характеристика
	|			КОНЕЦ)
	|ГДЕ
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток > 0 И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкаТовары.Количество КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|
	|ГДЕ
	|	ЗаявкаТовары.Ссылка = &ДокументОснование И НЕ &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК НоменклатураЕГАИС,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ ТоварыЕГАИС
	|ИЗ
	|	ЗаявкаТовары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ТоварыЕГАИС.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ЗаявкаТовары.Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкаТовары.Количество КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	ЗаявкаТовары КАК ЗаявкаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыЕГАИС КАК ТоварыЕГАИС
	|		ПО ТоварыЕГАИС.Номенклатура = ЗаявкаТовары.Номенклатура
	|		И ТоварыЕГАИС.Характеристика = ЗаявкаТовары.Характеристика
	|		И ТоварыЕГАИС.Серия = ЗаявкаТовары.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаТовары.НомерСтроки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЗаявкаТовары.Упаковка",
		"ЗаявкаТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТаб = Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "НоменклатураЕГАИС, НоменклатураНабора, ХарактеристикаНабора,
			|Номенклатура, Характеристика, Серия, Назначение, Упаковка, КодСтроки, Цена, СтавкаНДС, ДокументРеализации");
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаб.ДокументРеализации) Тогда
			СтрокаТаб.ДокументРеализации = ДокументРеализации;
		КонецЕсли;
		
		СтрокаТаб.Количество         = ВыборкаТовары.Количество;
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		Если ВыборкаТовары.КоличествоВЗаявке = СтрокаТаб.Количество Тогда
			СтрокаТаб.Сумма = ВыборкаТовары.Сумма;
		Иначе
			СтрокаТаб.Сумма = СтрокаТаб.КоличествоУпаковок * СтрокаТаб.Цена;
		КонецЕсли; 
		СтрокаТаб.СуммаНДС           = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаТаб.Сумма, СтрокаТаб.СтавкаНДС, ЦенаВключаетНДС);
		СтрокаТаб.СуммаСНДС          = ?(ЦенаВключаетНДС, СтрокаТаб.Сумма, СтрокаТаб.Сумма+СтрокаТаб.СуммаНДС);
		
		Если ВыборкаТовары.Порча
			И ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
			
			ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "Порча, НоменклатураОприходование, ХарактеристикаОприходование")
			
		КонецЕсли;
		
		СтрокаТаб.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(СтрокаТаб.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		
	КонецЦикла;
	
	ЗаполнитьНомераГТДПоРаспоряжениям();
	
	Если Товары.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по документу ""%Заявка%"" .'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заявка%", ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЗаявкаНаВозвратТоваровОтКлиента");
		
	Иначе
		
		Если ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Или
			 ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
			
			СуммаКРаспределению = ПолучитьСуммуДокумента();
			
			Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованиюЗаявки.Следующий() Цикл
				
				Если ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток > 0 Тогда
				
					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов;
					НоваяСтрока.Заказ                = ВыборкаРасчетыПоОснованиюЗаявки.ЗаказКлиента;
					
					Коэффициенты  = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Валюта, ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов, ТекущаяДатаСеанса());
					СуммаПоСтроке = ?(Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов <> 0, ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток / Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов, 0);
					
					Если СуммаКРаспределению > СуммаПоСтроке Тогда
						
						НоваяСтрока.Сумма = СуммаПоСтроке;
						
					Иначе
						
						НоваяСтрока.Сумма = СуммаКРаспределению;
						
					КонецЕсли;
						
					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если СуммаКРаспределению > 0 И ВыборкаРасчетыПоЗаявке.Следующий() Тогда
					
				Если ВыборкаРасчетыПоЗаявке.СуммаОстаток > 0 Тогда
					
					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоЗаявке.ВалютаВзаиморасчетов;
					НоваяСтрока.Заказ                = ВыборкаРасчетыПоЗаявке.ЗаказКлиента;
						
					Если СуммаКРаспределению > ВыборкаРасчетыПоЗаявке.СуммаОстаток Тогда
						
						НоваяСтрока.Сумма = ВыборкаРасчетыПоЗаявке.СуммаОстаток;
						
					Иначе
						
						НоваяСтрока.Сумма = СуммаКРаспределению;
						
					КонецЕсли;
						
					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
					
				КонецЕсли;
					
			КонецЕсли;
				
			Если СуммаКРаспределению > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				
				НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
				НоваяСтрока.Заказ                = Неопределено;
				НоваяСтрока.Сумма                = СуммаКРаспределению;
				
			КонецЕсли;
			
			РасшифровкаПлатежа.Свернуть("Заказ, ВалютаВзаиморасчетов", "Сумма"); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииПереданнойТары(Знач РеквизитыЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыЗаполнения.РеквизитыШапки);
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
		Если Не ЗначениеЗаполнено(Соглашение) Тогда
			ЗаполнитьУсловияПродажПоУмолчанию();
		КонецЕсли;
	Иначе
		
		Если РеквизитыЗаполнения.РеквизитыШапки.ЦенаВключаетНДС = Неопределено Тогда
			
			РеквизитыЦеныПоУмолчанию = Справочники.ВидыЦен.ВидЦеныИПризнакЦенаВключаетНДСПоУмолчанию(
				Новый Структура("ИспользоватьПриПродаже", Истина),
				Документы.ВозвратТоваровОтКлиента.ПустаяСсылка());
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыЦеныПоУмолчанию);
		КонецЕсли;
		
	КонецЕсли;
	
	ВозвратПереданнойМногооборотнойТары = Истина;
	ПредусмотренЗалогЗаТару = РеквизитыЗаполнения.РеквизитыШапки.ПредусмотренЗалогЗаТару;
	
	Если ЭтоАдресВременногоХранилища(РеквизитыЗаполнения.АдресТарыВоВременномХранилище) Тогда
		
		ПереданнаяТара = ПолучитьИзВременногоХранилища(РеквизитыЗаполнения.АдресТарыВоВременномХранилище);
		Товары.Загрузить(ПереданнаяТара);
		
		Для каждого ТекущаяСтрока Из Товары Цикл
			
			ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Сумма;
			ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество;
			ТекущаяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			ТекущаяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(ТекущаяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
			
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(ТекущаяСтрока, ЦенаВключаетНДС, Ложь, Ложь, Истина);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьНомераГТДПоРаспоряжениям();
	
	// Заполним взаиморасчеты.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|
		|ПОМЕСТИТЬ ОбъектыРасчетов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В (&ДокументыОснования)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Договор КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка  В (&ДокументыОснования)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТовары.ЗаказКлиента КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка  В (&ДокументыОснования)
		|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
		|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.ЗаказКлиента КАК ЗаказКлиента,
		|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
		|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки(
		|			,
		|			ЗаказКлиента В
		|				(ВЫБРАТЬ
		|					ОбъектыРасчетов.Ссылка
		|				ИЗ
		|					ОбъектыРасчетов)) КАК РасчетыСКлиентами
		|;
		|");
		
		Запрос.УстановитьПараметр("ДокументыОснования", Товары.ВыгрузитьКолонку("ДокументРеализации"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаРасчетыПоОснованию = РезультатЗапроса.Выбрать();
		
		СуммаКРаспределению = ПолучитьСуммуДокумента();
		
		Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованию.Следующий() Цикл
			
			Если ВыборкаРасчетыПоОснованию.СуммаОстаток > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованию.ВалютаВзаиморасчетов;
				НоваяСтрока.Заказ = ВыборкаРасчетыПоОснованию.ЗаказКлиента;
				
				Если СуммаКРаспределению > ВыборкаРасчетыПоОснованию.СуммаОстаток Тогда
					НоваяСтрока.Сумма = ВыборкаРасчетыПоОснованию.СуммаОстаток;
				Иначе
					НоваяСтрока.Сумма = СуммаКРаспределению;
				КонецЕсли;
				
				СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если СуммаКРаспределению > 0 Тогда
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
			НоваяСтрока.Сумма = СуммаКРаспределению;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииАктаПослеОтгрузки(Знач ДанныеЗаполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = Документы.АктОРасхожденияхПослеОтгрузки.ТекстЗапросаПерепоставленныйТовар();
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.ОснованиеАкта);
	Запрос.УстановитьПараметр("АктОРасхождениях",  ДанныеЗаполнения.АктОРасхождениях);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[1].Выбрать();
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[2].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(ВыборкаШапка.ХозяйственнаяОперацияРеализация);
	
	ТаблицаТоваров = ПакетЗапросов[12].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
			
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		Ценообразование.ПересчитатьСуммыВСтроке(
			НоваяСтрока,
			Ложь,
			Ложь,
			Ложь,
			ВыборкаШапка.ЦенаВключаетНДС);
		
	КонецЦикла;
	
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииАктаПослеПриемки(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиента.Ссылка                              КАК ДовозвратПоВозврату,
	|	АктОРасхожденияхПослеПриемки.Ссылка                         КАК АктОРасхождениях,
	|	ВозвратТоваровОтКлиента.Соглашение                          КАК Соглашение,
	|	ВозвратТоваровОтКлиента.Организация                         КАК Организация,
	|	ВозвратТоваровОтКлиента.Партнер                             КАК Партнер,
	|	ВозвратТоваровОтКлиента.Контрагент                          КАК Контрагент,
	|	ВозвратТоваровОтКлиента.Валюта                              КАК Валюта,
	|	ВозвратТоваровОтКлиента.Сделка                              КАК Сделка,
	|	ВозвратТоваровОтКлиента.Подразделение                       КАК Подразделение,
	|	ВозвратТоваровОтКлиента.ДокументРеализации                  КАК ДокументРеализации,
	|	ВозвратТоваровОтКлиента.Склад                               КАК Склад,
	|	ВозвратТоваровОтКлиента.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	ВозвратТоваровОтКлиента.ЗаявкаНаВозвратТоваровОтКлиента     КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ВозвратТоваровОтКлиента.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	ВозвратТоваровОтКлиента.НалогообложениеНДС                  КАК НалогообложениеНДС,
	|	ВозвратТоваровОтКлиента.Договор                             КАК Договор,
	|	ВозвратТоваровОтКлиента.ПричинаВозврата                     КАК ПричинаВозврата,
	|	ВозвратТоваровОтКлиента.ВозвратПереданнойМногооборотнойТары КАК ВозвратПереданнойМногооборотнойТары,
	|	ВозвратТоваровОтКлиента.ПредусмотренЗалогЗаТару             КАК ПредусмотренЗалогЗаТару,
	|	ВозвратТоваровОтКлиента.СпособКомпенсации                   КАК СпособКомпенсации,
	|	НЕ ВозвратТоваровОтКлиента.Проведен                         КАК ЕстьОшибкиПроведенОснование,
	|	НЕ АктОРасхожденияхПослеПриемки.Проведен                    КАК ЕстьОшибкиПроведенАктОРасхождениях,
	|	АктОРасхожденияхПослеПриемки.Статус                         КАК СтатусАктаОРасхождениях,
	|	НЕ АктОРасхожденияхПослеПриемки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано)) КАК ЕстьОшибкиСтатусАкт
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Номенклатура           КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемки.Характеристика         КАК Характеристика,
	|	АктОРасхожденияхПослеПриемки.Назначение             КАК Назначение,
	|	АктОРасхожденияхПослеПриемки.Серия                  КАК Серия,
	|	АктОРасхожденияхПослеПриемки.СтатусУказанияСерий    КАК СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемки.Упаковка               КАК Упаковка,
	|	АктОРасхожденияхПослеПриемки.Цена                   КАК Цена,
	|	АктОРасхожденияхПослеПриемки.СтавкаНДС              КАК СтавкаНДС,
	|	АктОРасхожденияхПослеПриемки.ДокументРеализации     КАК ДокументРеализации,
	|	АктОРасхожденияхПослеПриемки.КодСтроки              КАК КодСтроки,
	|	АктОРасхожденияхПослеПриемки.НомерГТД               КАК НомерГТД,
	|
	|	СУММА(АктОРасхожденияхПослеПриемки.КоличествоПоДокументу - АктОРасхожденияхПослеПриемки.Количество)                 КАК Количество,
	|	СУММА(АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаПоДокументу - АктОРасхожденияхПослеПриемки.Сумма)                           КАК Сумма,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаНДСПоДокументу - АктОРасхожденияхПослеПриемки.СуммаНДС)                     КАК СуммаНДС,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаСНДСПоДокументу - АктОРасхожденияхПослеПриемки.СуммаСНДС)                   КАК СуммаСНДС
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемки.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемки.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	СтатусУказанияСерий,
	|	Упаковка,
	|	Цена,
	|	СтавкаНДС,
	|	ДокументРеализации,
	|	КодСтроки,
	|	НомерГТД
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура                                                                 КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика                                                               КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия                                                                        КАК Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение                                                                   КАК Назначение,
	|	СУММА(АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество)  КАК Количество
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК АктОРасхожденияхПослеПриемкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемкиСерии.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОРасхожденияхПослеПриемкиТовары.ДокументРеализации КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ РеализацииВозврата
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемкиТовары.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|
	|ВЫБРАТЬ
	|	РеализацииВозврата.ДокументРеализации КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	РеализацииВозврата КАК РеализацииВозврата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Договор КАК Ссылка
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.ЗаказКлиента
	|ИЗ
	|Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			РеализацииВозврата.ДокументРеализации
	|		ИЗ
	|			РеализацииВозврата КАК РеализацииВозврата)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента              КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                    КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			,
	|			ЗаказКлиента В
	|				(ВЫБРАТЬ
	|					ОбъектыРасчетов.Ссылка
	|				ИЗ
	|					ОбъектыРасчетов)) КАК РасчетыСКлиентами";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.ОснованиеАкта);
	Запрос.УстановитьПараметр("АктОРасхождениях", ДанныеЗаполнения.АктОРасхождениях);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	// По документу возврата
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ДовозвратПоВозврату,
		,
		ВыборкаШапка.ЕстьОшибкиПроведенОснование,
		,
		);
		
	// По акту о расхождениях
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.АктОРасхождениях,
		ВыборкаШапка.СтатусАктаОРасхождениях,
		ВыборкаШапка.ЕстьОшибкиПроведенАктОРасхождениях,
		ВыборкаШапка.ЕстьОшибкиСтатусАкт,
		РасхожденияСервер.МассивДопустимыхСтатусовАктовОРасхожденияхПриСозданииНаОсновании());
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ТаблицаТоваров = ПакетЗапросов[1].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
			
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		Ценообразование.ПересчитатьСуммыВСтроке(
			НоваяСтрока,
			Ложь,
			Ложь,
			Ложь,
			ВыборкаШапка.ЦенаВключаетНДС);
		
	КонецЦикла;
		
	Серии.Загрузить(ПакетЗапросов[2].Выгрузить());
	
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[5].Выбрать();
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказу(СтруктураЗаполнения)
	
	МассивЗаказов = СтруктураЗаполнения.МассивЗаказов;
	
	Если СтруктураЗаполнения.Свойство("Склад") И ЗначениеЗаполнено(СтруктураЗаполнения.Склад) Тогда
		СтруктураЗаполнения.РеквизитыШапки.Склад = СтруктураЗаполнения.Склад;
	КонецЕсли;
	
	ПараметрыЗаполнения = Документы.ВозвратТоваровОтКлиента.ПараметрыЗаполненияДокумента();
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, СтруктураЗаполнения);
	Документы.ВозвратТоваровОтКлиента.ИнициализироватьПараметрыЗаполнения(ПараметрыЗаполнения,
		СтруктураЗаполнения.РеквизитыШапки, МассивЗаказов);
	
	Если СтруктураЗаполнения.Свойство("ЗаполнятьПоОрдеру") Тогда
		ПараметрыЗаполнения.ЗаполнятьПоОрдеру = СтруктураЗаполнения.ЗаполнятьПоОрдеру;
	Иначе
		СкладОтгрузки = СтруктураЗаполнения.РеквизитыШапки.Склад;
		ИспользоватьОрдернуюСхему = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтгрузки, ТекущаяДатаСеанса());
		
		ПорядокОформления = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить();
		СначалаОрдера = (ПорядокОформления = Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаОрдера);
		
		ПараметрыЗаполнения.ЗаполнятьПоОрдеру = ИспользоватьОрдернуюСхему И СначалаОрдера;
	КонецЕсли;
	
	ТаблицаНакладная = Документы.ВозвратТоваровОтКлиента.ДанныеТаблицыТоварыДокумента(Ссылка);
	
	Документы.ВозвратТоваровОтКлиента.ЗаполнитьПоЗаказамОрдерам(ТаблицаНакладная, Ссылка, ПараметрыЗаполнения);
	
	Если ПараметрыЗаполнения.ЗаполнятьПоОрдеру Тогда
		ТаблицаНакладная.Колонки.Количество.Имя        = "КоличествоДоИзменения";
		ТаблицаНакладная.Колонки.КоличествоВОрдере.Имя = "Количество";
	Иначе
		ТаблицаНакладная.Колонки.Количество.Имя        = "КоличествоДоИзменения";
		ТаблицаНакладная.Колонки.КоличествоВЗаказе.Имя = "Количество";
	КонецЕсли;
	
	НакладныеСервер.УдалитьПустыеСтроки(ТаблицаНакладная, "Количество");
	
	Товары.Загрузить(ТаблицаНакладная);
	
	ЗаполнитьНомераГТДПоРаспоряжениям(Ложь);
	
	Документы.ВозвратТоваровОтКлиента.ЗаполнитьШапкуДокументаПоЗаказу(ЭтотОбъект, ПараметрыЗаполнения, СтруктураЗаполнения.МассивЗаказов);
	
	Документы.ВозвратТоваровОтКлиента.ОбновитьЗависимыеРеквизитыТабличнойЧасти(Товары, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Менеджер             = Пользователи.ТекущийПользователь();
	Валюта               = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	ВалютаВзаиморасчетов = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(ВалютаВзаиморасчетов);
	Организация          = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад                = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Подразделение        = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Менеджер, Подразделение);
	
	ПорядокОплаты        = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(Валюта,,Валюта);
	
	ВариантПриемкиТоваров = ЗакупкиСервер.ПолучитьВариантПриемкиТоваров(ЗаявкаНаВозвратТоваровОтКлиента);
	
	ПараметрыЗаполнения = Документы.ВозвратТоваровОтКлиента.ПараметрыЗаполненияНалогообложенияНДСПродажи(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения);
	
КонецПроцедуры

Процедура ИнициализироватьУсловияПродаж()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
		ЗаполнитьУсловияПродажПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидыЗапасовПерезаполнены = Ложь;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		
		МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента("Все");
		
		Если Не Проведен
			Или ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект)
			Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
			Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
			
			ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
			ПараметрыЗаполнения.ПодбиратьВидыЗапасовПоИнтеркампани = Ложь;
			ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Истина;
			ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
			Отборы = ПараметрыЗаполнения.ОтборыВидовЗапасов;
			Отборы.Организация = Организация;
			Отборы.НалогообложениеНДС = НалогообложениеНДС;
			УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ПараметрыЗаполнения.ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС);
			
			ПараметрыЗаполнения.ИмяТаблицыОстатков = "ТоварыПереданныеНаКомиссию";
			
			ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																	МенеджерВременныхТаблиц,
																	Отказ,
																	ПараметрыЗаполнения);
			
			Если Не Отказ Тогда
				ВидыЗапасовПерезаполнены = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ОтборСтрок = Новый Структура("СпособОпределенияСебестоимости",
									Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи);
		ПоДокументамПродажи = Товары.НайтиСтроки(ОтборСтрок);
		
		ЕстьПоДокументамПродажи		= ПоДокументамПродажи.Количество() > 0;
		ЕстьБезДокументовПродажи	= ПоДокументамПродажи.Количество() <> Товары.Количество();
		
		Если ЕстьПоДокументамПродажи Тогда
			
			МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента("ИзДокументаПродажи");
			
			Если Не Проведен
				Или ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект)
				Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
				Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
				
				Если ЕстьБезДокументовПродажи Тогда
					ОтборСтрок = Новый Структура("СпособОпределенияСебестоимости",
									Перечисления.СпособыОпределенияСебестоимости.Вручную);
					ВидыЗапасовБезДокументовПродажи = ВидыЗапасов.Выгрузить(ОтборСтрок);
					
					ОтборСтрок = Новый Структура("СпособОпределенияСебестоимости",
									Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
					
					ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ВидыЗапасовБезДокументовПродажи,
																ВидыЗапасов.Выгрузить(ОтборСтрок));
					ВидыЗапасов.Очистить();
				КонецЕсли;
				
				ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
				ПараметрыЗаполнения.ПодбиратьВидыЗапасовПоИнтеркампани = Ложь;
				ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Истина;
				ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Ложь;
				Отборы = ПараметрыЗаполнения.ОтборыВидовЗапасов;
				Отборы.Организация = Организация;
				Отборы.НалогообложениеНДС = НалогообложениеНДС;
				УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ПараметрыЗаполнения.ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС);
				
				ПараметрыЗаполнения.ИмяТаблицыОстатков = "РеализованныеТовары";
				
				ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполнения);
				
				Если Не Отказ Тогда
					ВидыЗапасовПерезаполнены = Истина;
				КонецЕсли;
				
				Для Каждого СтрТабл Из ВидыЗапасов Цикл
					СтрТабл.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи;
				КонецЦикла;
				
				Если ЕстьБезДокументовПродажи Тогда
					ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ВидыЗапасов, ВидыЗапасовБезДокументовПродажи);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьБезДокументовПродажи Тогда
			
			МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента("НеИзДокументаПродажи");
			
			Если Не Проведен
				Или ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект)
				Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
				Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
				
				Если ЕстьПоДокументамПродажи Тогда
					ОтборСтрок = Новый Структура("СпособОпределенияСебестоимости",
												Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи);
					ВидыЗапасовПоДокументамПродажи = ВидыЗапасов.Выгрузить(ОтборСтрок);
					
					ВидыЗапасов.Очистить();
				КонецЕсли;
				
				ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
				ПараметрыЗаполнения.ПодбиратьВидыЗапасовПоИнтеркампани = Ложь;
				ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Ложь;
				ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
				Отборы = ПараметрыЗаполнения.ОтборыВидовЗапасов;
				Отборы.Организация = Организация;
				Отборы.НалогообложениеНДС = НалогообложениеНДС;
				УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ПараметрыЗаполнения.ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС);
				
				ПараметрыЗаполнения.ИмяТаблицыОстатков = "ТаблицаВидыЗапасов";
				
				ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполнения);
				
				Если Не Отказ Тогда
					ВидыЗапасовПерезаполнены = Истина;
				КонецЕсли;
				
				Если ЕстьПоДокументамПродажи Тогда
					ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ВидыЗапасов, ВидыЗапасовПоДокументамПродажи);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидыЗапасовПерезаполнены Тогда
		ОбщегоНазначенияУТ.СвернутьТабличнуюЧасть(ЭтотОбъект, "ВидыЗапасов");
		ЗаполнитьСебестоимостьВидовЗапасов();
		ЗаполнитьНоменклатуруОприходованиеВидовЗапасов();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруОприходованиеВидовЗапасов()
	
	Если ВозвратПорчи Тогда

		СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры");
		МассивТоваров = Товары.НайтиСтроки(Новый Структура("Порча", Истина));
		Для Каждого СтрокаТоваров Из МассивТоваров Цикл

			КоличествоТоваров = СтрокаТоваров.Количество;
			СуммаСНДС = СтрокаТоваров.СуммаСНДС;
			СуммаНДС = СтрокаТоваров.СуммаНДС;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
			Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл

				Если СтрокаЗапасов.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);

				НоваяСтрока = ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				
				НоваяСтрока.НоменклатураОприходование = СтрокаТоваров.НоменклатураОприходование;
				НоваяСтрока.ХарактеристикаОприходование = СтрокаТоваров.ХарактеристикаОприходование;
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.СуммаСНДС = Мин(СуммаСНДС, ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 0));
				НоваяСтрока.СуммаНДС = Мин(СуммаНДС, ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 0));

				СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
				СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
				
				КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
				СуммаСНДС = СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СуммаНДС = СуммаНДС - НоваяСтрока.СуммаНДС;

				Если КоличествоТоваров = 0 Тогда
					Прервать;
				КонецЕсли;

			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПолучитьСуммуДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Товары.СуммаСНДС),0) КАК СуммаСНДС
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	ИЛИ НЕ &ВернутьМногооборотнуюТару
	|	ИЛИ &ПредусмотренЗалогЗаТару
	|");
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(,"Номенклатура,СуммаСНДС"));
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", ВозвратПереданнойМногооборотнойТары);
	Запрос.УстановитьПараметр("ПредусмотренЗалогЗаТару", ПредусмотренЗалогЗаТару);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	СуммаИтого = Выгрузка[0].СуммаСНДС;
	Возврат СуммаИтого;
	
КонецФункции

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, ДокументРеализации, НалогообложениеНДС, Дата";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Проверим соответствие табличных частей Товары и ВидыЗапасов
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|		ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТаблицаТоваров.ДокументРеализации
	|		КОНЕЦ КАК ДокументРеализации,
	|		ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|		ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.Себестоимость КАК Себестоимость,
	|		ТаблицаТоваров.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|		ТаблицаТоваров.СебестоимостьРегл КАК СебестоимостьРегл,
	|		ТаблицаТоваров.СебестоимостьПР КАК СебестоимостьПР,
	|		ТаблицаТоваров.СебестоимостьВР КАК СебестоимостьВР
	|	ИЗ
	|		ВТТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|		ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|		ТаблицаВидыЗапасов.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|		ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.Себестоимость КАК Себестоимость,
	|		-ТаблицаВидыЗапасов.СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|		-ТаблицаВидыЗапасов.СебестоимостьРегл КАК СебестоимостьРегл,
	|		-ТаблицаВидыЗапасов.СебестоимостьПР КАК СебестоимостьПР,
	|		-ТаблицаВидыЗапасов.СебестоимостьВР КАК СебестоимостьВР
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И ТаблицаТоваров.НоменклатураОприходование = ТаблицаВидыЗапасов.НоменклатураОприходование
	|		И ТаблицаТоваров.ХарактеристикаОприходование = ТаблицаВидыЗапасов.ХарактеристикаОприходование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости,
	|	ТаблицаТоваров.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.КоличествоПоРНПТ) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.Себестоимость) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СебестоимостьБезНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СебестоимостьРегл) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СебестоимостьПР) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СебестоимостьВР) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.СкладОтгрузки = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	
 	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда

		Массив.Добавить(Движения.РасчетыСКлиентами);
		Массив.Добавить(Движения.ЗаявкиНаВозвратТоваровОтКлиентов);
		Массив.Добавить(Движения.ПереданнаяВозвратнаяТара);

	КонецЕсли;
	
	// Приходы в регистр (сторно расхода из регистра) контролируем при перепроведении и отмене проведения.
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Массив.Добавить(Движения.ТоварыОрганизаций);
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

// Процедура формирует временную таблицу товаров с аналитикой обособленного учета
//
Процедура СформироватьВременнуюТаблицуТоваровИАналитики(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТоваров.Склад,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|
	|	ТаблицаТоваров.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ТаблицаТоваровИАналитики
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|;
	|");
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьСписокЗависимыхЗаказов()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивЗаказов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивЗаказов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В (ВЫБРАТЬ
	|			РасшифровкаПлатежа.Заказ
	|		ИЗ
	|			Документ.ВозвратТоваровОтКлиента.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ГДЕ
	|			РасшифровкаПлатежа.Ссылка = &Ссылка
	|		СГРУППИРОВАТЬ ПО
	|			РасшифровкаПлатежа.Заказ)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В (ВЫБРАТЬ
	|			РасшифровкаПлатежа.Заказ
	|		ИЗ
	|			Документ.ВозвратТоваровОтКлиента.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ГДЕ
	|			РасшифровкаПлатежа.Ссылка = &Ссылка
	|		СГРУППИРОВАТЬ ПО
	|			РасшифровкаПлатежа.Заказ)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|";
	
	Запрос.УстановитьПараметр("МассивЗаказов", ЭтотОбъект.РасшифровкаПлатежа.ВыгрузитьКолонку("Заказ"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	МассивЗависимыхЗаказов = Результат.Выгрузить().ВыгрузитьКолонку("ЗаказКлиента");
	ЭтотОбъект.ДополнительныеСвойства.Вставить("МассивЗависимыхЗаказовКлиентов", Новый ФиксированныйМассив(МассивЗависимыхЗаказов));
	
КонецПроцедуры

Процедура ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию)
	
	// Заполним взаиморасчеты.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		
		СуммаКРаспределению = ПолучитьСуммуДокумента();
		
		Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованию.Следующий() Цикл
			
			Если ВыборкаРасчетыПоОснованию.СуммаОстаток > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованию.ВалютаВзаиморасчетов;
				НоваяСтрока.Заказ = ВыборкаРасчетыПоОснованию.ЗаказКлиента;
				
				Коэффициенты  = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Валюта, ВыборкаРасчетыПоОснованию.ВалютаВзаиморасчетов, ТекущаяДатаСеанса());
				СуммаПоСтроке = ?(Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов <> 0, ВыборкаРасчетыПоОснованию.СуммаОстаток / Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов, 0);
				
				Если СуммаКРаспределению > СуммаПоСтроке Тогда
					НоваяСтрока.Сумма = ВыборкаРасчетыПоОснованию.СуммаОстаток;
				Иначе
					НоваяСтрока.Сумма = СуммаКРаспределению;
				КонецЕсли;
				
				СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если СуммаКРаспределению > 0 Тогда
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
			НоваяСтрока.Сумма = СуммаКРаспределению;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСебестоимостьВидовЗапасов()
	
	Для Каждого СтрокаТоваров Из Товары Цикл
		
		КоличествоТоваровВСтроке	= СтрокаТоваров.Количество;
		КоличествоУпаковокВСтроке	= СтрокаТоваров.КоличествоУпаковок;
		СуммаСНДСВСтроке			= СтрокаТоваров.СуммаСНДС;
		СуммаНДСВСтроке				= СтрокаТоваров.СуммаНДС;
		СебестоимостьВСтроке		= СтрокаТоваров.Себестоимость;
		СебестоимостьБезНДСВСтроке	= СтрокаТоваров.СебестоимостьБезНДС;
		СебестоимостьРеглВСтроке	= СтрокаТоваров.СебестоимостьРегл;
		СебестоимостьПРВСтроке		= СтрокаТоваров.СебестоимостьПР;
		СебестоимостьВРВСтроке		= СтрокаТоваров.СебестоимостьВР;
		
		СтруктураПоиска = ?(ЗначениеЗаполнено(СтрокаТоваров.ДокументРеализации),
							Новый Структура("АналитикаУчетаНоменклатуры, ДокументРеализации"),
							Новый Структура("АналитикаУчетаНоменклатуры"));
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваровВСтроке, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.СпособОпределенияСебестоимости	= СтрокаТоваров.СпособОпределенияСебестоимости;
			НоваяСтрока.Количество						= Количество;
			НоваяСтрока.КоличествоПоРНПТ				= Количество * СтрокаЗапасов.КоличествоПоРНПТ
															/ СтрокаЗапасов.Количество;
			НоваяСтрока.Упаковка						= СтрокаТоваров.Упаковка;
			НоваяСтрока.КоличествоУпаковок				= ?(Количество = КоличествоТоваровВСтроке,
															КоличествоУпаковокВСтроке,
															КоличествоУпаковокВСтроке * Количество / КоличествоТоваровВСтроке);
			НоваяСтрока.СуммаСНДС						= ?(Количество = КоличествоТоваровВСтроке,
															СуммаСНДСВСтроке,
															Количество * СуммаСНДСВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.СуммаНДС						= ?(Количество = КоличествоТоваровВСтроке,
															СуммаНДСВСтроке,
															Количество * СуммаНДСВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.Себестоимость					= ?(Количество = КоличествоТоваровВСтроке,
															СебестоимостьВСтроке,
															Количество * СебестоимостьВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.СебестоимостьБезНДС				= ?(Количество = КоличествоТоваровВСтроке,
															СебестоимостьБезНДСВСтроке,
															Количество * СебестоимостьБезНДСВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.СебестоимостьРегл				= ?(Количество = КоличествоТоваровВСтроке,
															СебестоимостьРеглВСтроке,
															Количество * СебестоимостьРеглВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.СебестоимостьПР					= ?(Количество = КоличествоТоваровВСтроке,
															СебестоимостьПРВСтроке,
															Количество * СебестоимостьПРВСтроке / КоличествоТоваровВСтроке);
			НоваяСтрока.СебестоимостьВР					= ?(Количество = КоличествоТоваровВСтроке,
															СебестоимостьВРВСтроке,
															Количество * СебестоимостьВРВСтроке / КоличествоТоваровВСтроке);
			
			СтрокаЗапасов.Количество			= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.КоличествоПоРНПТ		= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			СтрокаЗапасов.КоличествоУпаковок	= СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			СтрокаЗапасов.СуммаСНДС				= СтрокаЗапасов.СуммаСНДС- НоваяСтрока.СуммаСНДС;
			СтрокаЗапасов.СуммаНДС				= СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
			СтрокаЗапасов.Себестоимость			= СтрокаЗапасов.Себестоимость - НоваяСтрока.Себестоимость;
			СтрокаЗапасов.СебестоимостьБезНДС	= СтрокаЗапасов.СебестоимостьБезНДС - НоваяСтрока.СебестоимостьБезНДС;
			СтрокаЗапасов.СебестоимостьРегл		= СтрокаЗапасов.СебестоимостьРегл - НоваяСтрока.СебестоимостьРегл;
			СтрокаЗапасов.СебестоимостьПР		= СтрокаЗапасов.СебестоимостьПР - НоваяСтрока.СебестоимостьПР;
			СтрокаЗапасов.СебестоимостьВР		= СтрокаЗапасов.СебестоимостьВР - НоваяСтрока.СебестоимостьВР;
			
			КоличествоТоваровВСтроке	= КоличествоТоваровВСтроке - НоваяСтрока.Количество;
			КоличествоУпаковокВСтроке	= КоличествоУпаковокВСтроке - НоваяСтрока.КоличествоУпаковок;
			СуммаСНДСВСтроке			= СуммаСНДСВСтроке - НоваяСтрока.СуммаСНДС;
			СуммаНДСВСтроке				= СуммаНДСВСтроке - НоваяСтрока.СуммаНДС;
			СебестоимостьВСтроке		= СебестоимостьВСтроке - НоваяСтрока.Себестоимость;
			СебестоимостьБезНДСВСтроке	= СебестоимостьБезНДСВСтроке - НоваяСтрока.СебестоимостьБезНДС;
			СебестоимостьРеглВСтроке	= СебестоимостьРеглВСтроке - НоваяСтрока.СебестоимостьРегл;
			СебестоимостьПРВСтроке		= СебестоимостьПРВСтроке - НоваяСтрока.СебестоимостьПР;
			СебестоимостьВРВСтроке		= СебестоимостьВРВСтроке - НоваяСтрока.СебестоимостьВР;
			
			Если КоличествоТоваровВСтроке = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыПоиска = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьСпособОпределенияСебестоимостиИДокументРеализации()
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		СоответствиеНоменклатураТип = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Товары.ВыгрузитьКолонку("Номенклатура"), "ТипНоменклатуры");
		Для Каждого СтрТовары Из Товары Цикл
			Если СоответствиеНоменклатураТип.Получить(СтрТовары.Номенклатура) = Перечисления.ТипыНоменклатуры.МногооборотнаяТара 
				И ВозвратПереданнойМногооборотнойТары Тогда
				// Для возврата многооборотной тары нужно сохранить указанный документ реализации и способ определения себестоимости
			Иначе
				СтрТовары.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого СтрТабл Из Товары Цикл
			Если СтрТабл.СпособОпределенияСебестоимости <> Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи Тогда
				СтрТабл.ДокументРеализации = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНомераГТДПоРаспоряжениям(ПересчитатьСуммовыеПоказатели = Истина)
	
	ПараметрыЗаполнения = НоменклатураСервер.ПараметрыЗаполненияНомеровГТД();
	ПараметрыЗапроса = ПараметрыЗаполнения.ПараметрыЗапроса;
	ПараметрыЗапроса.Ссылка = Ссылка;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	Если ПересчитатьСуммовыеПоказатели Тогда
		ПараметрыЗаполнения.СтруктураДействий = СтруктураДействий;
	КонецЕсли;
	
	ПараметрыЗаполнения.ИмяПоляРаспоряжение = "ДокументРеализации";
	
	НоменклатураСервер.ЗаполнитьНомераГТД(Товары, "ПоРаспоряжениям", ПараметрыЗаполнения);
	
	Если Не ПересчитатьСуммовыеПоказатели Тогда
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
