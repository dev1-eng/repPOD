#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ВозвратТоваровМеждуОрганизациями.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ПередачаТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Передача товаров".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.КонтрольПередачТоваровМеждуОрганизациями.ДобавитьКомандуКонтрольПередачТоваров(КомандыОтчетов);
	
	Отчеты.ОстаткиТоваровОрганизаций.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	ПередачаТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация,
															МассивВсехРеквизитов,
															МассивРеквизитовОперации,
															ИспользоватьПередачуПодДеятельность = Истина) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("ФормаОплаты");
	МассивВсехРеквизитов.Добавить("УказыватьНомераГТД");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("Товары.Подразделение");
	МассивВсехРеквизитов.Добавить("Товары.СписатьНаРасходы");
	
	Если ИспользоватьПередачуПодДеятельность Тогда
		МассивВсехРеквизитов.Добавить("ПередачаПодДеятельность");
	КонецЕсли;
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("УказыватьНомераГТД");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.Подразделение");
		МассивРеквизитовОперации.Добавить("Товары.СписатьНаРасходы");
		
		Если ИспользоватьПередачуПодДеятельность Тогда
			МассивРеквизитовОперации.Добавить("ПередачаПодДеятельность");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Курс КАК Курс,
	|	ДанныеДокумента.Кратность КАК Кратность,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДанныеДокумента.ДоговорПродажи КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки КАК ДоговорПокупки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.ОрганизацияПолучатель;
		ОрганизацияОтправитель = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		РасчетыЧерезОтдельногоКонтрагента = Выборка.РасчетыЧерезОтдельногоКонтрагента;
		Партнер = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Партнер, Справочники.Партнеры.НашеПредприятие);
		Контрагент = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Контрагент, Выборка.Организация);
		Договор = Выборка.Договор;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
		Курс = Выборка.Курс;
		Кратность = Выборка.Кратность;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ДоговорПродажи = Выборка.ДоговорПродажи;
		ДоговорПокупки = Выборка.ДоговорПокупки;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияОтправитель = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		РасчетыЧерезОтдельногоКонтрагента = Ложь;
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Договор = Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
		Курс = 1;
		Кратность = 1;
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ДоговорПродажи = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ДоговорПокупки = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	СтруктураРеквизитов.Вставить("СуммаДокумента", СуммаДокумента);
	СтруктураРеквизитов.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ОрганизацияОтправитель", ОрганизацияОтправитель);
	СтруктураРеквизитов.Вставить("ОрганизацияПолучатель", ОрганизацияПолучатель);
	СтруктураРеквизитов.Вставить("РасчетыЧерезОтдельногоКонтрагента", РасчетыЧерезОтдельногоКонтрагента);
	СтруктураРеквизитов.Вставить("Партнер", Партнер);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("Курс", Курс);
	СтруктураРеквизитов.Вставить("Кратность", Кратность);
	СтруктураРеквизитов.Вставить("ДоговорПродажи", ДоговорПродажи);
	СтруктураРеквизитов.Вставить("ДоговорПокупки", ДоговорПокупки);
	Если Не РасчетыЧерезОтдельногоКонтрагента Тогда
		СтруктураРеквизитов.Вставить("Договор", Договор);
	КонецЕсли;
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	СтруктураРеквизитов.Вставить("ПорядокРасчетов", ПорядокРасчетов);
	
	Возврат СтруктураРеквизитов;
КонецФункции

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
//
// Возвращаемое значение:
//	Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры
//	Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение
//	Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаТоваровМеждуОрганизациями";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ДвижениеВФинансовомУчете);
	
	ПараметрыУказанияСерий.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - состав полей задается в функции
//		НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки         КАК НомерСтроки,
	|	Товары.Номенклатура        КАК Номенклатура,
	|	Товары.Характеристика      КАК Характеристика,
	|	Товары.Серия               КАК Серия,
	|	Товары.Количество          КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки         КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                      КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО ПолитикиУчетаСерий.Склад = &Склад
	|			И ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки         КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти


// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Ложь, "Объект.Товары.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(ОрганизацияПолучатель)
	|	) И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Склад)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает параметры для заполнения налогообложения НДС.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ПередачаТоваровМеждуОрганизациями,
//				ДокументОбъект.ПередачаТоваровМеждуОрганизациями - документ передачи товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
Функция ПараметрыЗаполненияНалогообложенияНДС(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Дата, Организация, Договор, ДоговорПродажи, Склад,
										|ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента, НаправлениеДеятельности");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ЗаполняемыеПоля = "Дата, Организация, Склад, НаправлениеДеятельности";
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, РеквизитыДокумента, ЗаполняемыеПоля);
	
	ПараметрыЗаполнения.Договор    = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.ДоговорПродажи,
										РеквизитыДокумента.Договор);
	
	РеализацияТоваров = РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	ПараметрыЗаполнения.РеализацияТоваров    = РеализацияТоваров;
	ПараметрыЗаполнения.РеализацияРаботУслуг = РеализацияТоваров;
	ПараметрыЗаполнения.ПередачаНаКомиссию   = Не РеализацияТоваров;
	
	ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает параметры для заполнения вида деятельности НДС.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ПередачаТоваровМеждуОрганизациями,
//				ДокументОбъект.ПередачаТоваровМеждуОрганизациями - документ передачи товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Дата, ОрганизацияПолучатель, Договор, ДоговорПокупки, Склад, 
										|ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента, НаправлениеДеятельности");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, РеквизитыДокумента, "Дата, Склад, НаправлениеДеятельности");
	
	ПараметрыЗаполнения.Организация = РеквизитыДокумента.ОрганизацияПолучатель;
	ПараметрыЗаполнения.Договор     = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.ДоговорПокупки,
										РеквизитыДокумента.Договор);
	
	ПриобретениеТоваров = РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	ПараметрыЗаполнения.ПриобретениеТоваров = ПриобретениеТоваров;
	ПараметрыЗаполнения.ПриобретениеРабот   = ПриобретениеТоваров;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает параметры для регистрации выданных счетов-фактур.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ПередачаТоваровМеждуОрганизациями,
//				ДокументОбъект.ПередачаТоваровМеждуОрганизациями - документ передачи товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Функция ПараметрыРегистрацииСчетовФактурВыданных(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Ссылка, Дата, Организация, ОрганизацияПолучатель, Контрагент, НалогообложениеНДС, 
										|ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	ЗаполнитьЗначенияСвойств(ПараметрыРегистрации, РеквизитыДокумента, "Ссылка, Дата, Организация, НалогообложениеНДС");
	
	ПараметрыРегистрации.Контрагент = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.Контрагент,
										РеквизитыДокумента.ОрганизацияПолучатель);
	
	РеализацияТоваров = РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	ПараметрыРегистрации.РеализацияТоваров    = РеализацияТоваров;
	ПараметрыРегистрации.РеализацияРаботУслуг = РеализацияТоваров;
	ПараметрыРегистрации.ПередачаНаКомиссию   = Не РеализацияТоваров;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Возвращает параметры для регистрации полученных счетов-фактур.
//
// Параметры:
//	Документ - ДанныеФормыСтруктура, ДокументСсылка.ПередачаТоваровМеждуОрганизациями,
//				ДокументОбъект.ПередачаТоваровМеждуОрганизациями - документ передачи товаров между организациями.
//
// Возвращаемое значение:
//	Структура - состав полей задается в функции УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных().
//
Функция ПараметрыРегистрацииСчетовФактурПолученных(Документ) Экспорт
	
	РеквизитыДокумента = Новый Структура("Ссылка, Дата, Организация, ОрганизацияПолучатель, Контрагент, НалогообложениеНДС, 
										|ХозяйственнаяОперация, РасчетыЧерезОтдельногоКонтрагента");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, РеквизитыДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Документ);
	КонецЕсли;
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных();
	ЗаполнитьЗначенияСвойств(ПараметрыРегистрации, РеквизитыДокумента, "Ссылка, Дата, НалогообложениеНДС");
	
	ПараметрыРегистрации.Организация = РеквизитыДокумента.ОрганизацияПолучатель;
	ПараметрыРегистрации.Контрагент  = ?(РеквизитыДокумента.РасчетыЧерезОтдельногоКонтрагента,
										РеквизитыДокумента.Контрагент,
										РеквизитыДокумента.Организация);
	
	ПриобретениеТоваров = РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг = ПриобретениеТоваров;
	ПараметрыРегистрации.ПриемНаКомиссию               = Не ПриобретениеТоваров;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ВариантОформленияПродажи");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Если Данные.ВариантОформленияПродажи = ПредопределенноеЗначение("Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав") Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Акт на передачу прав между организациями %1 от %2'"),
			Данные.Номер,
			Данные.Дата);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПередачаТоваровМеждуОрганизациямиЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса) Экспорт
	
	ТекстДанныеДокумента =
	"ВЫБРАТЬ
	|	ТаблицаЗапасов.Ссылка                 КАК Ссылка,
	|	ДанныеШапки.Дата                      КАК Дата,
	|	ДанныеШапки.Валюта                    КАК ВалютаДокумента,
	|	ДанныеШапки.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	ТаблицаЗапасов.ИдентификаторСтроки    КАК ИдентификаторСтроки,
	|	ТаблицаЗапасов.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаЗапасов.СуммаСНДС              КАК СуммаСНДС,
	|	ТаблицаЗапасов.СуммаНДС               КАК СуммаНДС,
	|	(ТаблицаЗапасов.СуммаСНДС - ТаблицаЗапасов.СуммаНДС) КАК СуммаБезНДС,
	|	ТаблицаЗапасов.СуммаВзаиморасчетов    КАК СуммаВзаиморасчетов,
	|	ТаблицаЗапасов.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                 КАК Ссылка,
	|	ДанныеШапки.Дата                      КАК Дата,
	|	ДанныеШапки.Валюта                    КАК ВалютаДокумента,
	|	ДанныеШапки.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	ТаблицаТоваров.ИдентификаторСтроки    КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС              КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС               КАК СуммаНДС,
	|	(ТаблицаТоваров.СуммаСНДС - ТаблицаТоваров.СуммаНДС) КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаВзаиморасчетов    КАК СуммаВзаиморасчетов,
	|	ТаблицаТоваров.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаТоваров.Ссылка = ДанныеШапки.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&Ссылка)
	|";
	
	ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса, ТекстДанныеДокумента);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Номер                             КАК Номер,
	|	ДанныеДокумента.Дата                              КАК Период,
	|	ДанныеДокумента.Ссылка                            КАК Ссылка,
	|	ДанныеДокумента.Организация                       КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель             КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Склад                             КАК Склад,
	|	ДанныеДокумента.Валюта                            КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов              КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ДатаПлатежа                       КАК ДатаПлатежа,
	|	ДанныеДокумента.Подразделение                     КАК Подразделение,
	|	ДанныеДокумента.ЦенаВключаетНДС                   КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	ДанныеДокумента.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.УказыватьНомераГТД                КАК УказыватьНомераГТД,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Контрагент                        КАК Контрагент,
	|	ДанныеДокумента.ПередачаПодДеятельность           КАК ПередачаПодДеятельность,
	|
	|	ДанныеДокумента.Организация                       КАК Поставщик,
	|	ДанныеДокумента.Менеджер                          КАК Менеджер,
	|	Неопределено                                      КАК Сделка,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров,
	|	 ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка)) КАК ВариантОбособленногоУчетаТоваров,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	ЛОЖЬ                                              КАК ОбособленныйУчетТоваровПоСделке,
	|	Неопределено                                      КАК Соглашение,
	|	ДанныеДокумента.Договор                           КАК Договор,
	|	ДанныеДокумента.ДоговорПродажи                    КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки                    КАК ДоговорПокупки,
	|	
	|	ДанныеДокумента.Партнер  КАК Партнер,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                             КАК ЭтоПередачаНаКомиссию,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|		ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата
	|	ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                             КАК КонецПериода,
	|	ДанныеДокумента.НаправлениеДеятельности 		  КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ДанныеДокумента.Договор
	|	ИНАЧЕ
	|		ДанныеДокумента.Ссылка
	|	КОНЕЦ                                             КАК ОбъектРасчетов,
	|	ДанныеДокумента.НомерВходящегоДокумента           КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента            КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Комментарий                       КАК Комментарий,
	|	ДанныеДокумента.СуммаДокумента                    КАК СуммаДокумента,
	|	ДанныеДокумента.Проведен                          КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                   КАК ПометкаУдаления,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовКлиент.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовКлиент,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовПоставщик.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовПоставщик
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыМеждуОрганизациями КАК Договоры
	|	ПО ДанныеДокумента.Договор = Договоры.Ссылка
	|		И Договоры.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовКлиент
	|	ПО ДанныеДокумента.ДоговорПродажи = ДоговорыКонтрагентовКлиент.Ссылка
	|		И ДоговорыКонтрагентовКлиент.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовПоставщик
	|	ПО ДанныеДокумента.ДоговорПокупки = ДоговорыКонтрагентовПоставщик.Ссылка
	|		И ДоговорыКонтрагентовПоставщик.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ИдентификаторМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПередачаТоваровМеждуОрганизациями");
	
	ИнформацияПоОрганизации = НСтр("ru='Передача из ""%Организация%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоОрганизации = СтрЗаменить(ИнформацияПоОрганизации, "%Организация%", Реквизиты.Организация);
	
	ИнформацияПоОрганизацииПолучателю = НСтр("ru='Передача в ""%Организация%""'",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоОрганизацииПолучателю = СтрЗаменить(ИнформацияПоОрганизацииПолучателю, "%Организация%",
		Реквизиты.ОрганизацияПолучатель);
	
	НомерДокумента          = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер);
	НомерВходящегоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.НомерВходящегоДокумента);
	
	Запрос.УстановитьПараметр("Ссылка",                            ДокументСсылка);
	Запрос.УстановитьПараметр("Номер",                             Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("КонецПериода",                      КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Склад",                             Реквизиты.Склад);
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",                           Реквизиты.Договор);
	Запрос.УстановитьПараметр("Соглашение",                        Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("Сделка",                            Реквизиты.Сделка);
	Запрос.УстановитьПараметр("ОбособленныйУчетТоваровПоСделке",   Реквизиты.ОбособленныйУчетТоваровПоСделке);
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров",  Реквизиты.ВариантОбособленногоУчетаТоваров);
	Запрос.УстановитьПараметр("ДоговорПродажи",                    Реквизиты.ДоговорПродажи);
	Запрос.УстановитьПараметр("ДоговорПокупки",                    Реквизиты.ДоговорПокупки);
	Запрос.УстановитьПараметр("ОбъектРасчетов",                    Реквизиты.ОбъектРасчетов);
	Запрос.УстановитьПараметр("ДатаПлатежа",                       Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("Организация",                       Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",             Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                   ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("УказыватьНомераГТД",                Реквизиты.УказыватьНомераГТД);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",             Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",             Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",              Реквизиты.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",    Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",        Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("НалогообложениеНДС",                Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента", Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ПередачаПодДеятельность",           Реквизиты.ПередачаПодДеятельность);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПродажуАгентскихУслуг", ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг"));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",            Реквизиты.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("Комментарий",                       Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаДокумента",                    Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Проведен",                          Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",                   Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",           ИдентификаторМетаданных);
	Запрос.УстановитьПараметр("ИнформацияПоОрганизации",           ИнформацияПоОрганизации);
	Запрос.УстановитьПараметр("ИнформацияПоОрганизацииПолучателю", ИнформацияПоОрганизацииПолучателю);
	Запрос.УстановитьПараметр("НомерДокумента",                    НомерДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента",           НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("ОбъектРасчетовКлиент",              Реквизиты.ОбъектРасчетовКлиент);
	Запрос.УстановитьПараметр("ОбъектРасчетовПоставщик",           Реквизиты.ОбъектРасчетовПоставщик);
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения",   Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка"                , Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ОрганизацияПолучатель" , Запрос.Параметры.ОрганизацияПолучатель);
	ЗапросАналитик.УстановитьПараметр("ПустаяСерия"           , Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение"      , Справочники.Назначения.ПустаяСсылка());
	ЗапросАналитик.УстановитьПараметр("Организация"           , Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ЭтоПередачаНаКомиссию" , Запрос.Параметры.ЭтоПередачаНаКомиссию);
	ЗапросАналитик.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);

	ЗапросАналитик.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Назначение КАК Назначение,
	|	ВложенныйЗапрос.Серия КАК Серия
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура     КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика   КАК Характеристика,
	|		&ПустоеНазначение      КАК Назначение,
	|		&ПустаяСерия           КАК Серия,
	|		&ОрганизацияПолучатель КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка
	|		И &ЭтоПередачаНаКомиссию
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура         КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		&ПустаяСерия               КАК Серия,
	|		Товары.ВидЗапасов.ВладелецТовара КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка
	|		И Товары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура         КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		Товары.АналитикаУчетаНоменклатуры.Серия                КАК Серия,
	|		Товары.АналитикаУчетаНоменклатуры.МестоХранения        КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Услуги.Номенклатура   КАК Номенклатура,
	|		Услуги.Характеристика КАК Характеристика,
	|		&ПустоеНазначение     КАК Назначение,
	|		&ПустаяСерия          КАК Серия,
	|		ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Услуги
	|ГДЕ
	|	Услуги.Ссылка = &Ссылка
	|	И ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) <> &Организация
	|	И Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Работы.Номенклатура КАК Номенклатура,
	|		Работы.Характеристика КАК Характеристика,
	|		Работы.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА Работы.СтатусУказанияСерий = 14
	|			ТОГДА Работы.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ КАК Серия,
	|		Работы.Подразделение КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Работы
	|	ГДЕ
	|		Работы.Ссылка = &Ссылка
	|		И Работы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Работы.Номенклатура КАК Номенклатура,
	|		Работы.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ВЫБОР
	|			КОГДА Работы.СтатусУказанияСерий = 14
	|			ТОГДА Работы.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ КАК Серия,
	|		Работы.Подразделение КАК Склад
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Работы
	|	ГДЕ
	|		Работы.Ссылка = &Ссылка
	|		И Работы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям) КАК ВложенныйЗапрос
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура
	|		И ВложенныйЗапрос.Характеристика = Аналитика.Характеристика
	|		И ВложенныйЗапрос.Серия = Аналитика.Серия
	|		И ВложенныйЗапрос.Склад = Аналитика.МестоХранения
	|		И ВложенныйЗапрос.Назначение = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Серия
	|";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВидыЗапасов"" 												КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 									КАК НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ТаблицаДокумента.Ссылка.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ															КАК Поставщик,
	|	ВЫБОР КОГДА ТаблицаДокумента.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Организация
	|	КОНЕЦ															КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 										КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|							И ТаблицаДокумента.ВидЗапасовПолучателя.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|					ИНАЧЕ ТаблицаДокумента.ВидЗапасовПолучателя.НалогообложениеНДС
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|					ТОГДА ТаблицаДокумента.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС
	|				ИНАЧЕ ТаблицаДокумента.Ссылка.ПередачаПодДеятельность
	|			КОНЕЦ
	|	КОНЕЦ 															КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               							КАК ВидЦенности,
	|	0																КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Товары"" 														КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки									КАК НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ТаблицаДокумента.Ссылка.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ															КАК Поставщик,
	|	ВЫБОР КОГДА ТаблицаДокумента.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ТаблицаДокумента.Ссылка.Контрагент
	|		ИНАЧЕ ТаблицаДокумента.Ссылка.Организация
	|	КОНЕЦ															КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 										КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	  	  И ТаблицаДокумента.Ссылка.ПередачаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(ТаблицаДокумента.СтатьяРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(ТаблицаДокумента.СтатьяРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(ТаблицаДокумента.СтатьяРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(ТаблицаДокумента.СтатьяРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ВЫБОР КОГДА ЕСТЬNULL(ТаблицаДокумента.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Назначение.ВидДеятельностиНДС
	|			ИНАЧЕ ТаблицаДокумента.Ссылка.ПередачаПодДеятельность
	|		КОНЕЦ
	|	КОНЕЦ                                    						КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И НЕ ТаблицаДокумента.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОГДА ЕСТЬNULL(ТаблицаДокумента.СтатьяРасходов.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.СтатьяРасходов.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               							КАК ВидЦенности,
	|	0																КАК КодСтроки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаПоступленияТоваров";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура                       КАК Номенклатура,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры       КАК ТипНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика                     КАК Характеристика,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия                              КАК Серия,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение                         КАК Назначение,
	|	ТаблицаТовары.ВидЗапасовПолучателя       КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|
	|	ВЫБОР КОГДА &ЭтоПередачаНаКомиссию ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	ИНАЧЕ
	|		&НалогообложениеНДС
	|	КОНЕЦ                                    КАК НалогообложениеНДС
	|
	|ПОМЕСТИТЬ ВтТаблицаПоступленияТоваров
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|			И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &УказыватьНомераГТД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры  КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Серия                         КАК Серия,
	|	ТаблицаТовары.Назначение                    КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                      КАК НомерГТД,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.КоличествоПоРНПТ
	|	КОНЕЦ                                       КАК КоличествоПоРНПТ,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	ИНАЧЕ
	|		&НалогообложениеНДС
	|	КОНЕЦ                                       КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|			И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &УказыватьНомераГТД
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",            Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",           Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаФИФОСкользящаяОценкаПолучателя(Запрос)
	
	Если Запрос.Параметры.Свойство("ФИФОСкользящаяОценкаПолучателя") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = ЗначениеНастроекПовтИсп.ПараметрыУчетнойПолитики(
		Запрос.Параметры.ОрганизацияПолучатель,
		НачалоМесяца(Запрос.Параметры.Период)); 
	
	Запрос.УстановитьПараметр("ФИФОСкользящаяОценкаПолучателя",
		(ПараметрыУчетнойПолитики.МетодОценкиСтоимостиТоваров = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка));
	
КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры    КАК ТипНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика                  КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АналитикаПоставщикБезНазначения.КлючАналитики      КАК АналитикаНоменклатурыПоставщикБезНазначения,
	|	КлючиКомитента.КлючАналитики                       КАК АналитикаНоменклатурыКомитента,
	|	АналитикаКомиссионер.КлючАналитики                 КАК АналитикаНоменклатурыКомиссионера,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаНоменклатурыКлиент,
	|	АналитикаПоставщикБезНазначения.КлючАналитики      КАК АналитикаНоменклатурыКлиентБезНазначения,
	|
	|	ТаблицаВидыЗапасов.СтавкаНДС                       КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов           КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта               КАК ВидЗапасовВалюта,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя            КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ                КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СуммаСНДС                       КАК СуммаСНДС,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаСНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр,
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))  КАК СуммаНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, ВЫБОР
	|			КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|				ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
	|			КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов ТОГДА
	|				ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ)  КАК СуммаБезНДСУпр,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ВЫБОР
	|			КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|				ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
	|			КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов ТОГДА
	|				ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ
	|				 0
	|		КОНЕЦ)                                                  КАК СуммаБезНДСРегл,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл,
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	)                                                  КАК СуммаНДСРегл,
	|	ВЫБОР
	|	КОГДА ЕСТЬNULL(Суммы.БазаНДСРегл, 0) <> 0
	|	ТОГДА Суммы.БазаНДСРегл
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)))
	|	КОНЕЦ											   КАК БазаНДСРегл,
	|	ВЫБОР
	|	КОГДА ЕСТЬNULL(Суммы.БазаНДСУпр, 0) <> 0
	|	ТОГДА Суммы.БазаНДСУпр
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))
	|	КОНЕЦ											   КАК БазаНДСУпр,
	|
	|	ТаблицаВидыЗапасов.СуммаВзаиморасчетов             КАК СуммаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов          КАК СуммаНДСВзаиморасчетов,
	|
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаНДС                        КАК СуммаНДС,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК СкладПоставщика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов КАК ТипЗапасовПолучателя,
	|	(ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ НЕ &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		КОГДА &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|		 И &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА &Менеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ) КАК АналитикаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &ЭтоПередачаНаКомиссию ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОГДА ТаблицаВидыЗапасов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	ИНАЧЕ
	|		&НалогообложениеНДС
	|	КОНЕЦ                                              КАК НалогообложениеНДС
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоставщикБезНазначения
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаПоставщикБезНазначения.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаПоставщикБезНазначения.Характеристика
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаПоставщикБезНазначения.Серия
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаПоставщикБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаПоставщикБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаВидыЗапасов.Ссылка = Суммы.Регистратор
	|		И ТаблицаВидыЗапасов.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ТаблицаВидыЗапасов.СуммаНДС = Суммы.СуммаНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионер
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаКомиссионер.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаКомиссионер.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссионер.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионер.Серия
	|		И &ОрганизацияПолучатель = АналитикаКомиссионер.МестоХранения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = КлючиКомитента.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара = КлючиКомитента.МестоХранения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаВидыЗапасов.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтАгентскиеУслуги";
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL
	|			ТОГДА Услуги.Ссылка
	|		КОГДА НЕ Соглашение.Ссылка ЕСТЬ NULL
	|			ТОГДА Соглашение.Ссылка
	|		КОГДА НЕ УслугиСоглашениеЗакрытое.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиСоглашениеЗакрытое.Ссылка
	|		ИНАЧЕ ЕСТЬNULL(СоглашениеЗакрытое.Ссылка, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Соглашение,
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL
	|				ТОГДА Услуги.Ссылка.Валюта
	|		КОГДА НЕ Соглашение.Ссылка ЕСТЬ NULL
	|				ТОГДА Соглашение.Валюта
	|		КОГДА НЕ УслугиСоглашениеЗакрытое.Ссылка ЕСТЬ NULL
	|				ТОГДА УслугиСоглашениеЗакрытое.Ссылка.Валюта
	|		ИНАЧЕ ЕСТЬNULL(СоглашениеЗакрытое.Валюта, &Валюта)
	|	КОНЕЦ КАК Валюта,
	|	КОформлению.Номенклатура     КАК Номенклатура,
	|	КОформлению.Характеристика   КАК Характеристика,
	|	ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) КАК Принципал
	|ПОМЕСТИТЬ ВтАгентскиеУслуги
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК КОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашение
	|	ПО Соглашение.Партнер = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|		И Соглашение.Организация = &Организация
	|		И Соглашение.ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|		И Соглашение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
	|		И (&Период >= Соглашение.ДатаНачалаДействия
	|			И (&Период <= Соглашение.ДатаОкончанияДействия
	|			ИЛИ Соглашение.ДатаОкончанияДействия = ДАТАВРЕМЯ(1,1,1))
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками.АгентскиеУслуги КАК Услуги
	|	ПО Соглашение.Ссылка = Услуги.Ссылка
	|		И КОформлению.Номенклатура = Услуги.Номенклатура
	|		И КОформлению.Характеристика = Услуги.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК СоглашениеЗакрытое
	|	ПО СоглашениеЗакрытое.Партнер = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|		И СоглашениеЗакрытое.Организация = &Организация
	|		И СоглашениеЗакрытое.ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|		И СоглашениеЗакрытое.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Закрыто)
	|		И (&Период >= СоглашениеЗакрытое.ДатаНачалаДействия
	|			И (&Период <= СоглашениеЗакрытое.ДатаОкончанияДействия
	|			ИЛИ СоглашениеЗакрытое.ДатаОкончанияДействия = ДАТАВРЕМЯ(1,1,1))
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками.АгентскиеУслуги КАК УслугиСоглашениеЗакрытое
	|	ПО СоглашениеЗакрытое.Ссылка = УслугиСоглашениеЗакрытое.Ссылка
	|		И КОформлению.Номенклатура = УслугиСоглашениеЗакрытое.Номенклатура
	|		И КОформлению.Характеристика = УслугиСоглашениеЗакрытое.Характеристика
	|ГДЕ
	|	КОформлению.Ссылка = &Ссылка
	|	И КОформлению.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> &Организация
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И &ИспользоватьПродажуАгентскихУслуг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтАгентскиеУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|	/ (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасовВалюта КАК Валюта
	|			ИЗ
	|				ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ГДЕ
	|				ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				АгентскиеУслуги.Валюта КАК Валюта
	|			ИЗ
	|				ВтАгентскиеУслуги КАК АгентскиеУслуги
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		ИСТИНА
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРаботыУслуги";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтАгентскиеУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры                           КАК ТипНоменклатуры,
	|	ТаблицаТовары.Номенклатура                                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                              КАК Характеристика,
	|	ТаблицаТовары.Назначение                                  КАК Назначение,
	|
	|	(ВЫБОР ТаблицаТовары.Номенклатура.ТипНоменклатуры
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаРаботы.КлючАналитики КОНЕЦ)              КАК АналитикаНоменклатурыПолучатель,
	|	(ВЫБОР ТаблицаТовары.Номенклатура.ТипНоменклатуры
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА АналитикаБезНазначения.КлючАналитики
	|		ИНАЧЕ АналитикаРаботыБезНазначения.КлючАналитики КОНЕЦ) КАК АналитикаНоменклатурыПолучательБезНазначения,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                  КАК АналитикаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики                      КАК АналитикаНоменклатурыБезНазначения,
	|
	|	ТаблицаТовары.СтавкаНДС                                   КАК СтавкаНДС,
	|	ТаблицаТовары.СтатьяРасходов                              КАК СтатьяРасходов,
	|	ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаТовары.АналитикаРасходов                           КАК АналитикаРасходов,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   		  КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   		  КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    		  КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.ВидЗапасов                                  КАК ВидЗапасов,
	|	(ВЫБОР ТаблицаТовары.Номенклатура.ТипНоменклатуры
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА &НаправлениеДеятельности
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
	|
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                                   КАК СуммаСНДС,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр,
	|		ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))   КАК СуммаСНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, ВЫБОР
	|			КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|				ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС
	|			КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов ТОГДА
	|				ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ)                                               КАК СуммаБезНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр,
	|		ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))) КАК СуммаНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,ВЫБОР
	|			КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|				ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС
	|			КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов ТОГДА
	|				ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ
	|				 0
	|		КОНЕЦ)                          КАК СуммаБезНДСРегл,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл,
	|		ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	)                                                         КАК СуммаНДСРегл,
	|	ВЫБОР
	|	КОГДА ЕСТЬNULL(Суммы.БазаНДСРегл, 0) <> 0 ТОГДА
	|		ЕСТЬNULL(Суммы.БазаНДСРегл, 0)
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)))
	|	КОНЕЦ                                                     КАК БазаНДСРегл,
	|	ВЫБОР
	|	КОГДА ЕСТЬNULL(Суммы.БазаНДСУпр, 0) <> 0 ТОГДА
	|		ЕСТЬNULL(Суммы.БазаНДСУпр, 0)
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))
	|	КОНЕЦ                                                     КАК БазаНДСУпр,
	|
	|	ТаблицаТовары.ИдентификаторСтроки                         КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаНДС                                    КАК СуммаНДС,
	|	ТаблицаТовары.СтатьяРасходов.ВариантРаздельногоУчетаНДС   КАК ВариантРаздельногоУчетаНДС,
	|	ТаблицаТовары.СуммаВзаиморасчетов                         КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов                      КАК СуммаНДСВзаиморасчетов,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения    КАК Склад,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	ИНАЧЕ
	|		&НалогообложениеНДС
	|	КОНЕЦ                                                     КАК НалогообложениеНДС,
	|	(ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ НЕ &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		КОГДА &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|		 И &Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА &Менеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ)                                                    КАК АналитикаФинансовогоУчета,
	|
	|	АгентскиеУслуги.Соглашение                                КАК Соглашение,
	|	АгентскиеУслуги.Валюта                                    КАК Валюта,
	|	ЕСТЬNULL(КлючиПринципала.КлючАналитики, НЕОПРЕДЕЛЕНО)     КАК АналитикаНоменклатурыПринципала,
	|	ЕСТЬNULL(АгентскиеУслуги.Принципал, НЕОПРЕДЕЛЕНО)         КАК Принципал,
	|	ТаблицаТовары.Подразделение                               КАК Подразделение,
	|	ТаблицаТовары.СписатьНаРасходы                            КАК СписатьНаРасходы
	|
	|ПОМЕСТИТЬ ВтРаботыУслуги
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаБезНазначения.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаБезНазначения.Серия
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ТаблицаТовары.СуммаНДС = Суммы.СуммаНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаРаботы
	|	ПО
	|		  АналитикаРаботы.Номенклатура   = ТаблицаТовары.Номенклатура
	|		И АналитикаРаботы.Характеристика = ТаблицаТовары.Характеристика
	|		И АналитикаРаботы.Назначение     = ТаблицаТовары.Назначение
	|		И АналитикаРаботы.МестоХранения  = ТаблицаТовары.Подразделение
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаРаботы.Серия
	|			ИНАЧЕ АналитикаРаботы.Серия = Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		   КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаРаботыБезНазначения
	|	ПО
	|		  АналитикаРаботы.Номенклатура = АналитикаРаботыБезНазначения.Номенклатура
	|		И АналитикаРаботы.Характеристика = АналитикаРаботыБезНазначения.Характеристика
	|		И АналитикаРаботы.Серия = АналитикаРаботыБезНазначения.Серия
	|		И АналитикаРаботы.МестоХранения = АналитикаРаботыБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаРаботыБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтАгентскиеУслуги КАК АгентскиеУслуги
	|	ПО ТаблицаТовары.Номенклатура = АгентскиеУслуги.Номенклатура
	|		И ТаблицаТовары.Характеристика = АгентскиеУслуги.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПринципала
	|	ПО КлючиПринципала.Номенклатура = АгентскиеУслуги.Номенклатура
	|		И КлючиПринципала.Характеристика = АгентскиеУслуги.Характеристика
	|		И КлючиПринципала.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И КлючиПринципала.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И КлючиПринципала.МестоХранения = АгентскиеУслуги.Принципал
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЦенности =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                    КАК Период,
	|	ТаблицаЗапасов.Ссылка               КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеШапки.ОрганизацияПолучатель   КАК Организация,
	|	ДанныеШапки.Подразделение           КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.Организация
	|	КОНЕЦ                               КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПокупки
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                               КАК Договор,
	|	ДанныеШапки.Грузоотправитель        КАК Грузоотправитель,
	|	ТаблицаЗапасов.Ссылка               КАК ДокументПриобретения,
	|	ТаблицаЗапасов.Ссылка               КАК ИсходныйТорговыйДокумент,
	|	ЛОЖЬ                                КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                        КАК ДокументКорректировкиПриобретения,
	|	ДанныеШапки.НалогообложениеНДС      КАК НалогообложениеНДС,
	|	ДанныеШапки.ПередачаПодДеятельность КАК ВидДеятельностиНДС,
	|	Аналитика.Номенклатура              КАК Номенклатура,
	|	Аналитика.Характеристика            КАК Характеристика,
	|	ТаблицаЗапасов.СтавкаНДС            КАК СтавкаНДС,
	|	ТаблицаЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	ТаблицаЗапасов.НомерГТД             КАК НомерГТД,
	|	ТаблицаЗапасов.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                        КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                        КАК СтатьяПрочихАктивов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаПрочихАктивов,
	|	Аналитика.Назначение                КАК Назначение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеУчета
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеШапки.Дата                    КАК Период,
	|	ТаблицаТоваров.Ссылка               КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	ДанныеШапки.ОрганизацияПолучатель   КАК Организация,
	|	ДанныеШапки.Подразделение           КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.Организация
	|	КОНЕЦ                               КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПокупки
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                               КАК Договор,
	|	ДанныеШапки.Грузоотправитель        КАК Грузоотправитель,
	|	ТаблицаТоваров.Ссылка               КАК ДокументПриобретения,
	|	ТаблицаТоваров.Ссылка               КАК ИсходныйТорговыйДокумент,
	|	ЛОЖЬ                                КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                        КАК ДокументКорректировкиПриобретения,
	|	ДанныеШапки.НалогообложениеНДС      КАК НалогообложениеНДС,
	|	ДанныеШапки.ПередачаПодДеятельность КАК ВидДеятельностиНДС,
	|	ТаблицаТоваров.Номенклатура         КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика       КАК Характеристика,
	|	ТаблицаТоваров.СтавкаНДС            КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТоваров.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТоваров.СтатьяРасходов       КАК СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов    КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                        КАК СтатьяПрочихАктивов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаПрочихАктивов,
	|	ТаблицаТоваров.Назначение           КАК Назначение,
	|	ТаблицаТоваров.Подразделение        КАК ПодразделениеУчета
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаТоваров.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	И ТаблицаНоменклатуры.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|";
	
	УчетНДСУП.ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
	ТекстЦенности =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                   КАК Период,
	|	ТаблицаЗапасов.Ссылка              КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеШапки.Организация            КАК Организация,
	|	ДанныеШапки.Подразделение          КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.ОрганизацияПолучатель
	|	КОНЕЦ                              КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПродажи
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                              КАК Договор,
	|	ДанныеШапки.Грузоотправитель       КАК Грузоотправитель,
	|	ДанныеШапки.Грузополучатель        КАК Грузополучатель,
	|	ЛОЖЬ                               КАК РеализацияВРозницу,
	|	ТаблицаЗапасов.Ссылка              КАК ДокументРеализации,
	|	ЛОЖЬ                               КАК ИсправлениеОшибок,
	|	ЛОЖЬ                               КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                       КАК ДокументКорректировкаРеализации,
	|	ДанныеШапки.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	Аналитика.Номенклатура             КАК Номенклатура,
	|	Аналитика.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	""""                               КАК Содержание,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаЗапасов.Количество
	|		ИНАЧЕ ТаблицаЗапасов.КоличествоУпаковок
	|	КОНЕЦ                              КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА Аналитика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмеренияЗапасы
	|	КОНЕЦ                              КАК ЕдиницаИзмерения,
	|	ТаблицаЗапасов.НомерГТД            КАК НомерГТД,
	|	ТаблицаЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ТаблицаЗапасов.ВидЗапасов          КАК ВидЗапасов,
	|	ТаблицаЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаЗапасов.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|ГДЕ
	|	ТаблицаЗапасов.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеШапки.Дата                  КАК Период,
	|	ТаблицаТоваров.Ссылка             КАК Ссылка,
	|	ДанныеШапки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеШапки.Организация           КАК Организация,
	|	ДанныеШапки.Подразделение         КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.Контрагент
	|		ИНАЧЕ ДанныеШапки.ОрганизацияПолучатель
	|	КОНЕЦ                              КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеШапки.ДоговорПродажи
	|		ИНАЧЕ ДанныеШапки.Договор
	|	КОНЕЦ                             КАК Договор,
	|	ДанныеШапки.Грузоотправитель      КАК Грузоотправитель,
	|	ДанныеШапки.Грузополучатель       КАК Грузополучатель,
	|	ЛОЖЬ                              КАК РеализацияВРозницу,
	|	ТаблицаТоваров.Ссылка             КАК ДокументРеализации,
	|	ЛОЖЬ                              КАК ИсправлениеОшибок,
	|	ЛОЖЬ                              КАК КорректировкаПоСогласованиюСторон,
	|	НЕОПРЕДЕЛЕНО                      КАК ДокументКорректировкаРеализации,
	|	ДанныеШапки.НалогообложениеНДС    КАК НалогообложениеНДС,
	|	ТаблицаТоваров.Номенклатура       КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика     КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	""""                              КАК Содержание,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Количество
	|		ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                             КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмеренияТовары
	|	КОНЕЦ                             КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.НомерГТД           КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС          КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ТаблицаТоваров.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеШапки
	|		ПО ТаблицаТоваров.Ссылка = ДанныеШапки.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&Ссылка)
	|	И ДанныеШапки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	И ТаблицаНоменклатуры.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|";
	
	ТекстЦенности = СтрЗаменить(
		ТекстЦенности,
		"&ТекстЗапросаЕдиницаИзмеренияЗапасы",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаЗапасов.Упаковка",
			"Аналитика.Номенклатура"));
	ТекстЦенности = СтрЗаменить(
		ТекстЦенности,
		"&ТекстЗапросаЕдиницаИзмеренияТовары",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	УчетНДСУП.ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                           КАК Документ,
	|	&Период                                                           КАК Период,
	|	&Ссылка                                                           КАК Регистратор,
	|	ТаблицаСерии.Номенклатура                                         КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                       КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                             КАК Назначение,
	|	ТаблицаСерии.Серия                                                КАК Серия,
	|	ТаблицаСерии.Количество                                           КАК Количество,
	|	&Склад                                                            КАК Отправитель,
	|	&Склад                                                            КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)              КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ДвижениеВФинансовомУчете) КАК СкладскаяОперация,
	|	ИСТИНА                                                            КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаПоступленияТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	&Организация                                 КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                     КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя           КАК КорВидЗапасов,
	|	ТаблицаТовары.НомерГТД                       КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)              КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоПоРНПТ)        КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалогообложениеНДС             КАК НалогообложениеНДС,
	|	ТаблицаТовары.АналитикаНоменклатурыКлиент    КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                         КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.АналитикаНоменклатурыКлиент,
	|	ТаблицаТовары.НалогообложениеНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&ОрганизацияПолучатель                   КАК Организация,
	|	&Организация                             КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК КорВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)          КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоПоРНПТ)    КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалогообложениеНДС         КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО                             КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                   КАК Первичное
	|ИЗ
	|	ВтТаблицаПоступленияТоваров КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НалогообложениеНДС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаПоступленияТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                      КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаПоступленияТоваров КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.Серия          = ПоступленияТоваров.Серия 
	|		И ТаблицаТовары.Назначение     = ПоступленияТоваров.Назначение 
	|		И ТаблицаТовары.НомерГТД       = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	НЕ ТаблицаТовары.ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерамПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоставщик = Новый Структура;
	СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
	СтруктураПоставщик.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
	СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Организация);
	СтруктураПоставщик.Вставить("Договор",     Запрос.Параметры.Договор);
	СтруктураПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаУчетаПоПартнерамПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПоставщик", АналитикаУчетаПоПартнерамПоставщик);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерамКлиент") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКлиент = Новый Структура;
	СтруктураКлиент.Вставить("Организация", Запрос.Параметры.Организация);
	СтруктураКлиент.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
	СтруктураКлиент.Вставить("Контрагент",  Запрос.Параметры.ОрганизацияПолучатель);
	СтруктураКлиент.Вставить("Договор",     Запрос.Параметры.Договор);
	СтруктураКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаУчетаПоПартнерамКлиент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКлиент);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамКлиент", АналитикаУчетаПоПартнерамКлиент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	УстановитьПараметрЗапросаФИФОСкользящаяОценкаПолучателя(Запрос);
	
	ТекстЗапроса =
	// Продажа товаров
	"ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                             КАК РазделУчета,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя           КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО									  КАК Партия,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									  КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	0									 			  КАК НДСРегл,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорПартия,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета	  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС			  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьУпр,
	|	0                                                 КАК НДСУпр,
	|	0                                                 КАК СтоимостьРегл,
	|	0 												  КАК СтоимостьЗабалансовая,
	|	0 												  КАК СтоимостьЗабалансоваяРегл,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ) КАК КорРазделУчета,
	|	&ОрганизацияПолучатель                            КАК КорОрганизация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ                                             КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент                  КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                    КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ),
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход проданного товаров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                            КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                             КАК РазделУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя           КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета					КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаНДСРегл
	|		КОНЕЦ) 														КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО									  				КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                            КАК Стоимость,
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                            КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫБОР КОГДА &УправленческийУчетОрганизаций И ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА
	|			ТаблицаВидыЗапасов.СуммаСНДСУпр
	|		КОГДА &УправленческийУчетОрганизаций ТОГДА
	|			ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|	)                                                 КАК СтоимостьУпр,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|				ТОГДА ТаблицаВидыЗапасов.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) 										  КАК НДСУпр,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|		КОНЕЦ
	|	)                                                 КАК СтоимостьРегл,
	|	0 												  КАК СтоимостьЗабалансовая,
	|	0 												  КАК СтоимостьЗабалансоваяРегл,
	|
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	""""                                              КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача на комиссию товаров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                             КАК РазделУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО									  КАК Партия,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									  КАК КорАналитикаУчетаПартий,
	|	0									 			  КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО									  КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 									  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС			  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьУпр,
	|	0                                                 КАК НДСУпр,
	|	0                                                 КАК СтоимостьРегл,
	|	0 												  КАК СтоимостьЗабалансовая,
	|	0 												  КАК СтоимостьЗабалансоваяРегл,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                    КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	""""                                              КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Учет переданных на комиссию товаров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ КАК РазделУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО									  КАК Партия,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									  КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									  КАК КорАналитикаУчетаПартий,
	|	0									 			  КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО									  КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 									  КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО			  						  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьУпр,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	"""" КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Прием на комиссию товаров
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиентБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	0																КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО									  				КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) 							КАК Количество,
	|	0 																КАК Стоимость,
	|	0 																КАК СтоимостьБезНДС,
	|	0 																КАК СтоимостьУпр,
	|	0 																КАК НДСУпр,
	|	0 																КАК СтоимостьРегл,
	|	0 																КАК СтоимостьЗабалансовая,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|			+ ТаблицаВидыЗапасов.СуммаНДСРегл) 						КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) 	КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО 													КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО 													КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение 													КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 													КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО 													КАК АналитикаРасходов,
	|	""""                                                            КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                                    КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиентБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// продажа работ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	Неопределено КАК ВидЗапасов,
	|
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО									  	 КАК Партия,
	|	НЕОПРЕДЕЛЕНО									  	 КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									  	 КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									  	 КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  	 КАК КорАналитикаУчетаПартий,
	|	0									 			  	 КАК НДСРегл,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  	 КАК КорПартия,
	|	ТаблицаТовары.АналитикаФинансовогоУчета				 КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаТовары.ВидДеятельностиНДС	          	 	 КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьУпр,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
	|	&ОрганизацияПолучатель КАК КорОрганизация,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыПолучательБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент КАК АналитикаУчетаПоПартнерам,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ &Подразделение КОНЕЦ) КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СтатьяРасходовСписания,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК АналитикаРасходов,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И ТаблицаТовары.Принципал = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыПолучательБезНазначения
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ &Подразделение КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	ТаблицаТовары.АналитикаФинансовогоУчета,
	|	ТаблицаТовары.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// покупка работ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыПолучательБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаФинансовогоУчета							КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл)								КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО									  				КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫБОР КОГДА &УправленческийУчетОрганизаций И ТаблицаТовары.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА
	|			ТаблицаТовары.СуммаСНДСУпр
	|		КОГДА &УправленческийУчетОрганизаций ТОГДА
	|			ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|	)                                                 КАК СтоимостьУпр,
	|	СУММА(ТаблицаТовары.СуммаНДСУпр) 				  КАК НДСУпр,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА
	|			ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаТовары.СуммаБезНДСРегл
	|		КОНЕЦ
	|	) КАК СтоимостьРегл,
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамПоставщик КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	"""" КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И ТаблицаТовары.Принципал = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ, // ТипЗаписи
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатурыПолучатель
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыПолучательБезНазначения
	|	КОНЕЦ,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель,
	|	ТаблицаТовары.ВидЗапасов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценкаПолучателя
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&КонецПериода                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Организация                                      КАК ОрганизацияВладелец,
	|	&ОрганизацияПолучатель                            КАК ОрганизацияОтгрузки,
	|	&Склад                                            КАК Склад,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя           КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС             КАК НалогообложениеНДС,
	|	ИСТИНА                                            КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ПоТоварамКОформлению
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасовВалюта               КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	&Ссылка                                           КАК ДокументРеализации,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ                                             КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоКОформлению,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ                                             КАК СуммаВыручкиКОформлению
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовВалюта = КурсыВалют.Валюта
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Подразделение                          КАК Подразделение,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент        КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности        		КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО                            КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.ТипЗапасов           КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов           КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ)                                  КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО 							КАК АналитикаФинансовогоУчета,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|
	|	&Менеджер                               КАК Менеджер,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)    КАК Количество,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр)  КАК СуммаВыручки,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СуммаВыручкиБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК Стоимость,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК СтоимостьБезНДС,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	 И &УправленческийУчетОрганизаций ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК СтоимостьУпр,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК СтоимостьРегл,
	|
	|	0                                       КАК СуммаРучнойСкидки,
	|	0                                       КАК СуммаАвтоматическойСкидки,
	|
	|	&Склад                                  КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ                                   КАК Договор,
	|	НЕОПРЕДЕЛЕНО                            КАК Соглашение,
	|
	|	&ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта                                 КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаВидыЗапасов.НалогообложениеНДС  КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКомиссионногоТовара)
	|	ИНАЧЕ
	|		&ХозяйственнаяОперация
	|	КОНЕЦ                                   КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                   КАК ИсточникГФУНоменклатуры,
	|	&Ссылка                                 КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.ТипЗапасов,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ),
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Подразделение                      КАК Подразделение,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент    КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности        	КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО                        КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ                               КАК ТипЗапасов,
	|	
	|	НЕОПРЕДЕЛЕНО                        КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО 						КАК АналитикаФинансовогоУчета,
	|	ТаблицаТовары.НалогообложениеНДС 	КАК ВидДеятельностиНДС,
	|
	|	&Менеджер                           КАК Менеджер,
	|
	|	СУММА(ТаблицаТовары.Количество)     КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)   КАК СуммаВыручки,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаНДСУпр) КАК СуммаВыручкиБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|		КОНЕЦ)                            КАК Стоимость,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ 0
	|		КОНЕЦ)                            КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|	 	 И &УправленческийУчетОрганизаций
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ 0
	|		КОНЕЦ)                            КАК СтоимостьУпр,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаТовары.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|		КОНЕЦ)                            КАК СтоимостьРегл,
	|
	|	0                                   КАК СуммаРучнойСкидки,
	|	0                                   КАК СуммаАвтоматическойСкидки,
	|
	|	ТаблицаТовары.Склад                 КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ                               КАК Договор,
	|	НЕОПРЕДЕЛЕНО                        КАК Соглашение,
	|
	|	&ВалютаВзаиморасчетов               КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта                             КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС)      КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаТовары.НалогообложениеНДС    КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|
	|	ТаблицаТовары.Номенклатура          КАК ИсточникГФУНоменклатуры,
	|	&Ссылка                             КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаТовары.АналитикаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
	|	ТаблицаТовары.НалогообложениеНДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

#Область РасчетыСКлиентами

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКлиент") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	
	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураКлиент = Новый Структура;
		СтруктураКлиент.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураКлиент.Вставить("Партнер",     Запрос.Параметры.Партнер);
		СтруктураКлиент.Вставить("Контрагент",  Запрос.Параметры.Контрагент);
		СтруктураКлиент.Вставить("Договор",     Запрос.Параметры.ДоговорПродажи);
		СтруктураКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
		
		АналитикаВзаиморасчетовКлиент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКлиент);
	Иначе
		АналитикаВзаиморасчетовКлиент = Запрос.Параметры.АналитикаУчетаПоПартнерамКлиент;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКлиент", АналитикаВзаиморасчетовКлиент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос);
	
	ШаблонПолей = "
	|ВЫБРАТЬ
	|	Шаблон.Период                    КАК Период,
	|	Шаблон.ДатаРегистратора          КАК ДатаРегистратора,
	|	Шаблон.НомерРегистратора         КАК НомерРегистратора,
	|	Шаблон.ДатаПлатежа               КАК ДатаПлатежа,
	|	Шаблон.ВидДвижения               КАК ВидДвижения,
	|	Шаблон.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Шаблон.ЗаказКлиента              КАК ЗаказКлиента,
	|	Шаблон.Валюта                    КАК Валюта,
	|	Шаблон.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|	Шаблон.Сумма                     КАК Сумма,
	|	Шаблон.СуммаРегл                 КАК СуммаРегл,
	|	Шаблон.СуммаУпр                  КАК СуммаУпр,
	|	Шаблон.КОплате                   КАК КОплате,
	|	Шаблон.Организация               КАК Организация,
	|	Шаблон.Валюта                    КАК ВалютаДокумента,
	|	Шаблон.КорОбъектРасчетов         КАК КорОбъектРасчетов,
	|	&АналитикаВзаиморасчетовКлиент   КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	#Шаблон КАК Шаблон
	|ГДЕ
	|	&ОтборШаблон";
	
	ТекстЗапроса =
	"
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                             КАК Период,
	|	ДанныеДокумента.Дата                                             КАК ДатаРегистратора,
	|	ДанныеДокумента.Номер                                            КАК НомерРегистратора,
	|	&ДатаПлатежа                                                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                           КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент                                   КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетовКлиент                                            КАК ЗаказКлиента,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаВзаиморасчетов                              КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета 
	|			ТОГДА ДанныеДокумента.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                                            КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|			ТОГДА ДанныеДокумента.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                                            КАК СуммаУпр,
	|	0                                                                КАК КОплате,
	|	&Организация                                                     КАК Организация,
	|	&Валюта                                                          КАК ВалютаДокумента,
	|	Неопределено                                                     КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.Дата                            КАК ДатаРегистратора,
	|	ДанныеДокумента.Номер                           КАК НомерРегистратора,
	|	&ДатаПлатежа                                    КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент                  КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетовКлиент                           КАК ЗаказКлиента,
	|	ДанныеДокумента.ВалютаВзаиморасчетов            КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	
	|	0                                               КАК Сумма,
	|	0                                               КАК СуммаРегл,
	|	0                                               КАК СуммаУпр,
	|	ДанныеДокумента.СуммаВзаиморасчетов             КАК КОплате,
	|	&Организация                                    КАК Организация,
	|	&Валюта КАК ВалютаДокумента,
	|	Неопределено                                                     КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|//ЗачетАвансовКлиентаПоНакладной
	|
	|";
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//ЗачетАвансовКлиентаПоНакладной",
		ВзаиморасчетыСервер.ТекстПроведенияЗачетАвансовКлиентаПоНакладной("ПередачаТоваровМеждуОрганизациями", ШаблонПолей,
			"РасшифровкаПлатежаСКлиентом","","&АналитикаВзаиморасчетовКлиент"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область РасчетыСПоставщиками

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос);
	
	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураПоставщик = Новый Структура;
		СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
		СтруктураПоставщик.Вставить("Партнер",     Запрос.Параметры.Партнер);
		СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Контрагент);
		СтруктураПоставщик.Вставить("Договор",     Запрос.Параметры.ДоговорПокупки);
		СтруктураПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
		
		АналитикаВзаиморасчетовПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
		
	Иначе
		АналитикаВзаиморасчетовПоставщик = Запрос.Параметры.АналитикаУчетаПоПартнерамПоставщик;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПоставщик", АналитикаВзаиморасчетовПоставщик);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос);
	
	//Порядок и состав полей запроса проведения
	ШаблонПолей = "
	|ВЫБРАТЬ
	|	Шаблон.Период                       КАК Период,
	|	Шаблон.ДатаРегистратора             КАК ДатаРегистратора,
	|	Шаблон.НомерРегистратора            КАК НомерРегистратора,
	|	Шаблон.ДатаПлатежа                  КАК ДатаПлатежа,
	|	Шаблон.ВидДвижения                  КАК ВидДвижения,
	|	Шаблон.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	Шаблон.ЗаказПоставщику              КАК ЗаказПоставщику,
	|	Шаблон.Валюта                       КАК Валюта,
	|	Шаблон.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	Шаблон.Сумма                        КАК Сумма,
	|	Шаблон.СуммаРегл                    КАК СуммаРегл,
	|	Шаблон.СуммаУпр                     КАК СуммаУпр,
	|	Шаблон.КОплате                      КАК КОплате,
	|	Шаблон.Организация                  КАК Организация,
	|	Шаблон.ВалютаДокумента              КАК ВалютаДокумента,
	|	Шаблон.КорОбъектРасчетов            КАК КорОбъектРасчетов,
	|	Шаблон.КорАналитикаУчетаПоПартнерам КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	#Шаблон КАК Шаблон
	|ГДЕ
	|	&ОтборШаблон";

	
	ТекстЗапроса =
	"
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                             КАК Период,
	|	ДанныеДокумента.Дата                                             КАК ДатаРегистратора,
	|	ДанныеДокумента.Номер                                            КАК НомерРегистратора,
	|	&ДатаПлатежа                                                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик                                КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетовПоставщик                                         КАК ЗаказПоставщику,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаВзаиморасчетов                              КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента 
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))          КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента 
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))           КАК СуммаУпр,
	|	0                                                                КАК КОплате,
	|	&Организация                                                     КАК Организация,
	|	&Валюта                                                          КАК ВалютаДокумента,
	|	Неопределено                                                     КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День)                  КАК Период,
	|	ДанныеДокумента.Дата                                             КАК ДатаРегистратора,
	|	ДанныеДокумента.Номер                                            КАК НомерРегистратора,
	|	&ДатаПлатежа                                                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик                                КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчетовПоставщик                                         КАК ЗаказПоставщику,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                                           КАК ХозяйственнаяОперация,
	|	
	|	0                                                                КАК Сумма,
	|	0                                                                КАК СуммаРегл,
	|	0                                                                КАК СуммаУпр,
	|	ДанныеДокумента.СуммаВзаиморасчетов                              КАК КОплате,
	|	&Организация                                                     КАК Организация,
	|	&Валюта                                                          КАК ВалютаДокумента,
	|	Неопределено                                                     КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|//ЗачетАвансовПоставщикуПоНакладной
	|
	|";
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//ЗачетАвансовПоставщикуПоНакладной",
		ВзаиморасчетыСервер.ТекстПроведенияЗачетАвансовПоставщикуПоНакладной("ПередачаТоваровМеждуОрганизациями", ШаблонПолей,
			"РасшифровкаПлатежаСПоставщиком","&АналитикаВзаиморасчетовПоставщик"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.АналитикаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.НалогообложениеНДС       КАК НалогообложениеНДС,
	|	ЛОЖЬ                                   КАК Первичное
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	&ОрганизацияПолучатель                        КАК Организация,
	|	ТаблицаТовары.Подразделение                   КАК Подразделение,
	|	ТаблицаТовары.Номенклатура                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                  КАК Характеристика,
	|	ТаблицаТовары.Назначение                      КАК Назначение,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество                      КАК Количество,
	|	ТаблицаТовары.НалогообложениеНДС              КАК НалогообложениеНДС,
	|	ИСТИНА                                        КАК Первичное
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&ОрганизацияПолучатель                        КАК Организация,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаПартий            КАК АналитикаУчетаПартий,
	|	&Ссылка                                       КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                      КАК Количество,
	|	0                                             КАК Стоимость,
	|	0                                             КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаБезНДСРегл                 КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДСРегл                   
	|	КОНЕЦ                                         КАК НДСРегл,
	|	0                                             КАК ПостояннаяРазница,
	|	0                                             КАК Временнаяразница
	|
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Движения.ВидДвижения,
	|	Движения.Период,
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.АналитикаУчетаПартий,
	|	Движения.ДокументПоступления,
	|	Движения.ВидЗапасов,
	|	Движения.Количество,
	|	Движения.Стоимость,
	|	Движения.СтоимостьБезНДС,
	|	Движения.СтоимостьРегл,
	|	Движения.НДСРегл,
	|	Движения.ПостояннаяРазница,
	|	Движения.ВременнаяРазница
	|
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК Движения
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И ((Движения.Количество = 0 И Движения.Стоимость <> 0)
	|		ИЛИ
	|		Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	    )
	|	И НЕ &ПартионныйУчетВерсии22";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ПересчитатьТаблицуТоваров(Запрос.Параметры, Запрос.МенеджерВременныхТаблиц);
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	&Валюта                                          КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки                КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС                          КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС                           КАК СуммаНДС,
	|
	|	ТаблицаТовары.СуммаБезНДСРегл                    КАК СуммаБезНДСРегл,
	|	ТаблицаТовары.СуммаНДСРегл                       КАК СуммаНДСРегл,
	|	ТаблицаТовары.БазаНДСРегл	                     КАК БазаНДСРегл,
	|	ТаблицаТовары.БазаНДСУпр	                     КАК БазаНДСУпр,
	|
	|	ТаблицаТовары.СуммаБезНДСУпр                     КАК СуммаБезНДСУпр,
	|	ТаблицаТовары.СуммаНДСУпр                        КАК СуммаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|
	|	ТаблицаТовары.СуммаВзаиморасчетов                КАК СуммаВзаиморасчетов,
	|	&ВалютаВзаиморасчетов                            КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Валюта                                КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС            КАК СуммаНДС,
	|
	|	ТаблицаВидыЗапасов.СуммаБезНДСРегл     КАК СуммаБезНДСРегл,
	|	ТаблицаВидыЗапасов.СуммаНДСРегл        КАК СуммаНДСРегл,
	|	ТаблицаВидыЗапасов.БазаНДСРегл         КАК БазаНДСРегл,
	|	ТаблицаВидыЗапасов.БазаНДСУпр          КАК БазаНДСУпр,
	|
	|	ТаблицаВидыЗапасов.СуммаБезНДСУпр      КАК СуммаБезНДСУпр,
	|	ТаблицаВидыЗапасов.СуммаНДСУпр         КАК СуммаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|
	|	ТаблицаВидыЗапасов.СуммаВзаиморасчетов      КАК СуммаВзаиморасчетов,
	|	&ВалютаВзаиморасчетов                  КАК ВалютаВзаиморасчетов
	|	
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	&Валюта                                          КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки                КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС                          КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС                           КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДСРегл             КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДСРегл                КАК СуммаНДСРегл,
	|	ТаблицаДокументаРегл.СуммаБезНДСРегл             КАК БазаНДСРегл,
	|	ТаблицаДокументаРегл.СуммаБезНДСУпр              КАК БазаНДСУпр,
	|	ТаблицаДокументаРегл.СуммаБезНДСУпр              КАК СуммаБезНДСУпр,
	|	ТаблицаДокументаРегл.СуммаНДСУпр                 КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО                                     КАК ТипРасчетов,
	|
	|	ТаблицаДокументаРегл.СуммаВзаиморасчетов         КАК СуммаВзаиморасчетов,
	|	&ВалютаВзаиморасчетов                            КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаТовары.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Валюта                                КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС        КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДСРегл   КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДСРегл      КАК СуммаНДСРегл,
	|	ТаблицаДокументаРегл.СуммаБезНДСРегл   КАК БазаНДСРегл,
	|	ТаблицаДокументаРегл.СуммаБезНДСУпр    КАК БазаНДСУпр,
	|	ТаблицаДокументаРегл.СуммаБезНДСУпр    КАК СуммаБезНДСУпр,
	|	ТаблицаДокументаРегл.СуммаНДСУпр       КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО                           КАК ТипРасчетов,
	|	
	|	ТаблицаДокументаРегл.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	&ВалютаВзаиморасчетов                    КАК ВалютаВзаиморасчетов
	|	
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&ЭтоПередачаНаКомиссию";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваров(Реквизиты, МенеджерВременныхТаблиц)
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПредварительная") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаВзаиморасчетов                   КАК СуммаВзаиморасчетов,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)
	|	И &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаВзаиморасчетов                   КАК СуммаВзаиморасчетов,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &ЭтоПередачаНаКомиссию
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",          Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Реквизиты.ВалютаРегламентированногоУчета);
	
	Запрос.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Реквизиты.ВалютаРегламентированногоУчета);
	ВалютыДляПересчета.Вставить("Упр",  Реквизиты.ВалютаУправленческогоУчета);
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&ОрганизацияПолучатель                       КАК Организация,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                      КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасовПолучателя           КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий           КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество)              КАК Количество,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьБезНДС,
	|
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				ТОГДА ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ ТаблицаТовары.СуммаБезНДСРегл КОНЕЦ
	|		) КАК СтоимостьРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА ТаблицаТовары.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|				ТОГДА 0
	|			КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.СуммаНДСРегл 
	|		КОНЕЦ) КАК НДСРегл,
	|
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	ТаблицаТовары.НалогообложениеНДС             КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ИСТИНА                                       КАК Первичное,
	|	&Ссылка                                      КАК ДокументИсточник
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ПартионныйУчетВерсии21
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.ВидЗапасовПолучателя,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НалогообложениеНДС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
#Область ПоступлениеТоваров
	ПоступлениеТоваров =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,	
	|	&ОрганизацияПолучатель КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладПоставщика КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	СУММА (
	|		ВЫБОР
	|			КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|				ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Стоимость,
	|	СУММА (
	|		ВЫБОР 
	|			КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтоимостьБезНДС,
	|	СУММА (
	|		ВЫБОР
	|			КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|		КОНЕЦ) КАК СтоимостьРегл,
	|	
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.СкладПоставщика,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ
	|";
#КонецОбласти

#Область ПоступлениеРабот
	ПоступлениеРабот =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаТовары.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Подразделение
	|";
#КонецОбласти

#Область ПриемНаКомиссию
	ПриемНаКомиссию =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) КАК ХозяйственнаяОперация,	
	|	&ОрганизацияПолучатель КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладПоставщика КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.СкладПоставщика,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ";
#КонецОбласти

	ТекстЗапроса = ПоступлениеТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПоступлениеРабот
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПриемНаКомиссию;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                              КАК Период,
	|	&ХозяйственнаяОперация                               КАК ХозяйственнаяОперация,
	|	&Организация                                         КАК Организация,
	|	&Подразделение                                       КАК Подразделение,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщикБезНазначения
	|	КОНЕЦ                                                КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.СкладПоставщика                   КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасов                        КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                        КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                         КАК КорСклад,
	|	ТаблицаВидыЗапасов.ТипЗапасов                        КАК КорТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                        КАК КорВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Количество                        КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                        КАК КорКоличество,
	|
	|	0                                                    КАК Стоимость,
	|	0                                                    КАК СтоимостьБезНДС,
	|	0                                                    КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                                КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                                КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ЭтоПередачаНаКомиссию";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеУслуг) КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                   КАК Организация,
	|	ТаблицаТовары.Подразделение              КАК Подразделение,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ                                    КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ                                    КАК Контрагент,
	|	&НаправлениеДеятельности				 КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ                                    КАК Договор,
	|	НЕОПРЕДЕЛЕНО                             КАК ОбъектРасчетов,
	|
	|	ТаблицаТовары.СтатьяРасходов             КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.НаправлениеДеятельности    КАК НаправлениеДеятельностиСтатьи,
	|	НЕОПРЕДЕЛЕНО                             КАК АналитикаДоходов,
	|	ТаблицаТовары.АналитикаРасходов          КАК АналитикаРасходов,
	|	
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)        КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр)      КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл)     КАК СуммаРеглБезНДС,
	|
	|	&Валюта                                  КАК Валюта,
	|	СУММА(ТаблицаТовары.СуммаСНДС)           КАК СуммаВВалюте,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалюте,
	|		
	|	&ВалютаВзаиморасчетов                    КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.Подразделение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ТаблицаТовары.АналитикаНоменклатурыКомиссионера КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК Соглашение,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                        КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                          КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)                 КАК Количество,
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик    КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация 
	|			= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.АналитикаНоменклатурыКомиссионера,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.НалогообложениеНДС,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиКОформлениюОтчетовПринципалу";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Организация                                КАК Организация,
	|	&ОрганизацияПолучатель                      КАК Покупатель,
	|	КОформлению.АналитикаНоменклатурыПринципала КАК АналитикаУчетаНоменклатуры,
	|	КОформлению.Соглашение                      КАК Соглашение,
	|	КОформлению.Валюта                          КАК Валюта,
	|	КОформлению.Количество                      КАК Количество,
	|	КОформлению.СуммаСНДС
	|		* КурсыВалют.КоэффициентПересчета       КАК СуммаВыручки,
	|	КОформлению.СуммаНДС 
	|		* КурсыВалют.КоэффициентПересчета       КАК СуммаНДС,
	|	&Ссылка                                     КАК ДокументРеализации
	|ИЗ
	|	ВтРаботыУслуги КАК КОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалют
	|	ПО КОформлению.Валюта = КурсыВалют.Валюта
	|ГДЕ
	|	КОформлению.АналитикаНоменклатурыПринципала <> НЕОПРЕДЕЛЕНО";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель                 КАК Организация,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов        КАК АналитикаРасходов,
	|	ТаблицаТовары.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0 КОНЕЦ)                     КАК СуммаСНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ТаблицаТовары.СуммаБезНДСУпр
	|		ИНАЧЕ 0 КОНЕЦ)                     КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр)    КАК СуммаБезНДСУпр,
	|	
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл
	|		+ ТаблицаТовары.СуммаНДСРегл)      КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл)   КАК СуммаБезНДСРегл,
	|	0	                                   КАК ПостояннаяРазница,
	|	0                                      КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаНоменклатуры    КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель                 КАК Организация,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов        КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаАктивовПассивов,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)      КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр)    КАК СтоимостьБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл)   КАК СтоимостьРегл,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл)      КАК НДСРегл,
	|	СУММА(ТаблицаТовары.СуммаНДСУпр)       КАК НДСУпр,
	|	0	                                   КАК ПостояннаяРазница,
	|	0                                      КАК ВременнаяРазница,
	|	&Ссылка                                КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      		= "Документ.ПередачаТоваровМеждуОрганизациями";
	СинонимТаблицыДокумента 		= "";
	ВЗапросеЕстьИсточник    		= Истина;
	ТекстыЗапросаВременныхТаблиц 	= Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерДокумента",                    """""");
	ПереопределениеРасчетаПараметров.Вставить("НомерВходящегоДокумента",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоОрганизации",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоОрганизацииПолучателю", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Неопределено, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ // документы без посредника
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реализация.ОрганизацияПолучатель КАК Контрагент,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	(ВЫБОР КОГДА Реализация.НалогообложениеНДС В (&НалогообложениеБезНДС) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УчитыватьНДС,
	|	Реализация.Склад.ТекущийОтветственный.Наименование КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка В (&МассивДокументов) И Реализация.Проведен И НЕ Реализация.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ // документы от отправителя на посредника
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	Реализация.Партнер КАК Партнер,
	|	Реализация.Контрагент КАК Контрагент,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	(ВЫБОР КОГДА Реализация.НалогообложениеНДС В (&НалогообложениеБезНДС) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УчитыватьНДС,
	|	Реализация.Склад.ТекущийОтветственный.Наименование КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка В (&МассивДокументов) И Реализация.Проведен И Реализация.РасчетыЧерезОтдельногоКонтрагента
	|	И Реализация.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ // документы от посредника на получателя
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.НомерВходящегоДокумента КАК Номер,
	|	Реализация.ДатаВходящегоДокумента КАК Дата,
	|	Реализация.Партнер КАК Партнер,
	|	Реализация.ОрганизацияПолучатель КАК Контрагент,
	|	Реализация.Контрагент КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	(ВЫБОР КОГДА Реализация.НалогообложениеНДС В (&НалогообложениеБезНДС) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УчитыватьНДС,
	|	"""" КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка В (&МассивДокументов) И Реализация.Проведен И Реализация.РасчетыЧерезОтдельногоКонтрагента
	|	И Реализация.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК ХарактеристикаНаименованиеПолное,
	|	ВложенныйЗапрос.Упаковка.Наименование                                      КАК УпаковкаНаименование,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена													   КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма													   КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС												   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		Реализация.Ссылка КАК Ссылка,
	|		Реализация.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА Реализация.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			&ТекстЗапросаКоэффициентУпаковки
	|		КОНЕЦ КАК Коэффициент,
	|
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|
	|		0 КАК ПроцентСкидки,
	|		Реализация.Характеристика              КАК Характеристика,
	|		Реализация.Упаковка                    КАК Упаковка,
	|		Реализация.СтавкаНДС                   КАК СтавкаНДС,
	|		Реализация.Цена                        КАК Цена,
	|		Реализация.КоличествоУпаковок          КАК Количество,
	|		Реализация.Сумма                       КАК Сумма,
	|		0                                      КАК СуммаСкидки,
	|		Реализация.Сумма                       КАК СуммаБезСкидки,
	|		Реализация.СуммаНДС                    КАК СуммаНДС,
	|		Реализация.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Реализация
	|	ГДЕ
	|		Реализация.Ссылка В (&МассивДокументов)
	|		И Реализация.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		)
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	НалогообложениеБезНДС = Новый Массив();
	НалогообложениеБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	НалогообложениеБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	Запрос.УстановитьПараметр("НалогообложениеБезНДС", НалогообложениеБезНДС);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
												   РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Акт об оказании услуг
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьАктОбОказанииУслуг";
		КомандаПечати.Идентификатор = "Акт";
		КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	ПередачаТоваровМеждуОрганизациямиЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	ПередачаТоваровМеждуОрганизациямиЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
КонецПроцедуры

#Область Состояние

// Осуществляет вычисление текущего состояния передачи товаров на стороне получателя.
//
// Параметры:
//	ПередачаТоваров         - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - ФормаКлиентскогоПриложения - Форма, в реквизиты которой будет помещено рассчитанное состояние.
//
Процедура РассчитатьСостояниеПолучатель(Знач ПередачаТоваров, Знач Договор, СостояниеРасчетов) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетовПолучатель());
	
	Если ЗначениеЗаполнено(ПередачаТоваров) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) КАК ЧИСЛО(31,2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) * 100 / РасчетыСПоставщикамиОстатки.КОплатеРасход КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) < 0
		                      |			ТОГДА ВЫРАЗИТЬ(-ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(31,2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПросроченнойОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПоступления,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентПоступления,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.Проведен
		                      |				И (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |					ИЛИ ДокументПередачаТоваров.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(31,2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаДолгаПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) > 0
		                      |						ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(-РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентДолгаПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |			ТОГДА -РасчетыСПоставщикамиОстатки.КОплатеКонечныйОстаток
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаКОплатеПолучатель
		                      |ИЗ
		                      |	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументПередачаТоваров
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(, , , , ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстатки
		                      |		ПО (ИСТИНА)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстаткиНаДатуАктуальности
		                      |		ПО (ИСТИНА)
		                      |ГДЕ
		                      |	ДокументПередачаТоваров.Ссылка = &ПередачаТоваров");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПередачаТоваров, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ПередачаТоваров", ПередачаТоваров);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ПередачаТоваров));
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет вычисление текущего состояния передачи товаров на стороне отправителя.
//
// Параметры:
//	ПередачаТоваров  - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - ФормаКлиентскогоПриложения - Форма, в реквизиты которой будет помещено рассчитанное состояние.
//
Процедура РассчитатьСостояниеОтправитель(Знач ПередачаТоваров, Знач Договор, СостояниеРасчетов) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетовОтправитель());
	
	Если ЗначениеЗаполнено(ПередачаТоваров) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСКлиентами) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0)
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) * 100 / ДокументПередачаТоваров.СуммаВзаиморасчетов КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(31,2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПросроченнойОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0)
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОтгрузки,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0) * 100 / ДокументПередачаТоваров.СуммаВзаиморасчетов КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОтгрузки,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.Проведен
		                      |				И (ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |					ИЛИ ДокументПередачаТоваров.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(31,2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаДолгаОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.СуммаВзаиморасчетов > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) > 0
		                      |						ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ДокументПередачаТоваров.СуммаВзаиморасчетов КАК ЧИСЛО(15, 0))
		                      |					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(-РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ДокументПередачаТоваров.СуммаВзаиморасчетов КАК ЧИСЛО(15, 0))
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентДолгаОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументПередачаТоваров.Проведен
		                      |				И ДокументПередачаТоваров.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |			ТОГДА РасчетыСКлиентамиОстатки.КОплатеКонечныйОстаток
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаКОплатеОтправитель
		                      |ИЗ
		                      |	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументПередачаТоваров
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(, , , , ЗаказКлиента = &РасчетныйДокумент) КАК РасчетыСКлиентамиОстатки
		                      |		ПО (ИСТИНА)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки(КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), ЗаказКлиента = &РасчетныйДокумент) КАК РасчетыСКлиентамиОстаткиНаДатуАктуальности
		                      |		ПО (ИСТИНА)
		                      |ГДЕ
		                      |	ДокументПередачаТоваров.Ссылка = &ПередачаТоваров");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПередачаТоваров, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ПередачаТоваров", ПередачаТоваров);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ПередачаТоваров));
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет инициализацию структуры состояния расчетов.
//
Функция СтруктураСостоянияРасчетовПолучатель()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолгаПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолгаПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплатеПолучатель", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

// Осуществляет инициализацию структуры состояния расчетов.
//
Функция СтруктураСостоянияРасчетовОтправитель()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаОтгрузки", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОтгрузки", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолгаОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолгаОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплатеОтправитель", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область ФормированиеГиперссылкиВЖурналеДокументовИнтеркампани

// Возвращает текст гиперссылки перехода из журнала документов в рабочее место оформления передач.
//
// Параметры:
//	Параметры - Структура - параметры формирования текста гиперссылки.
//
// ВозвращаемоеЗначение:
//	ФорматированнаяСтрока - текст гиперссылки перехода в рабочее место оформления передач.
//
Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'Передачи'");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОформлятьПередачи", Истина); 
	Запрос.УстановитьПараметр("ОформлятьВыкупы", Ложь); 
	
	Запрос.УстановитьПараметр("Отправитель", Параметры.Организация);
	Запрос.УстановитьПараметр("Склад", Параметры.Склад);
	
	Запрос.Текст = ЗапасыСервер.ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос, "ВыборкаНаличияЗаписей");
		
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , , ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоПередачиВыкуп");
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , ЦветаСтиля.НезаполненноеПолеТаблицы, ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоПередачиВыкуп");
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.ДатаДокументаИБ          КАК ДатаДокументаИБ,
	|	ДанныеДокумента.НомерДокументаИБ         КАК НомерДокументаИБ,
	|	ДанныеДокумента.ТипСсылки                КАК ТипСсылки,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер                  КАК Партнер,
	|	ДанныеДокумента.Контрагент               КАК Контрагент,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ДанныеДокумента.МестоХранения            КАК МестоХранения,
	|	ДанныеДокумента.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.Ответственный            КАК Ответственный,
	|	ДанныеДокумента.Комментарий              КАК Комментарий,
	|	ДанныеДокумента.Валюта                   КАК Валюта,
	|	ДанныеДокумента.Сумма                    КАК Сумма,
	|	ДанныеДокумента.Статус                   КАК Статус,
	|	ДанныеДокумента.Проведен                 КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления          КАК ПометкаУдаления,
	|	ДанныеДокумента.ДополнительнаяЗапись     КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дополнительно            КАК Дополнительно,
	|	ДанныеДокумента.ДатаПервичногоДокумента  КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.ДатаДокументаИБ    КАК ДатаОтраженияВУчете
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРеестрДокументов.Ссылка                             КАК Ссылка,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ                    КАК ДатаДокументаИБ,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерДокументаИБ)         КАК НомерДокументаИБ,
	|	ТаблицаРеестрДокументов.ТипСсылки                          КАК ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация                        КАК Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер                            КАК Партнер,
	|	ТаблицаРеестрДокументов.Контрагент                         КАК Контрагент,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Договор)                  КАК Договор,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ТаблицаРеестрДокументов.МестоХранения                      КАК МестоХранения,
	|	ТаблицаРеестрДокументов.Подразделение                      КАК Подразделение,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Ответственный)            КАК Ответственный,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Комментарий)              КАК Комментарий,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Валюта)                   КАК Валюта,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Сумма)                    КАК Сумма,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Статус)                   КАК Статус,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Проведен)                 КАК Проведен,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ПометкаУдаления)          КАК ПометкаУдаления,
	|	МИНИМУМ(ТаблицаРеестрДокументов.ДополнительнаяЗапись)      КАК ДополнительнаяЗапись,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Дополнительно)            КАК Дополнительно,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ДатаПервичногоДокумента)  КАК ДатаПервичногоДокумента,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерПервичногоДокумента) КАК НомерПервичногоДокумента
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка                                       КАК Ссылка,
	|		&Период                                                      КАК ДатаДокументаИБ,
	|		&Номер                                                       КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных                                     КАК ТипСсылки,
	|		&Организация                                                 КАК Организация,
	|		&ХозяйственнаяОперация                                       КАК ХозяйственнаяОперация,
	|		&Партнер                                                     КАК Партнер,
	|		&Контрагент                                                  КАК Контрагент,
	|		&Договор                                                     КАК Договор,
	|		НЕОПРЕДЕЛЕНО                                                 КАК НаправлениеДеятельности,
	|		&Склад                                                       КАК МестоХранения,
	|		&Подразделение                                               КАК Подразделение,
	|		&Менеджер                                                    КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100))                       КАК Комментарий,
	|		&Валюта                                                      КАК Валюта,
	|		&СуммаДокумента                                              КАК Сумма,
	|		НЕОПРЕДЕЛЕНО                                                 КАК Статус,
	|		&Проведен                                                    КАК Проведен,
	|		&ПометкаУдаления                                             КАК ПометкаУдаления,
	|		ЛОЖЬ                                                         КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоОрганизацииПолучателю КАК СТРОКА(100)) КАК Дополнительно,
	|		&Период                                                      КАК ДатаПервичногоДокумента,
	|		&НомерДокумента                                              КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка                             КАК Ссылка,
	|		&Период                                            КАК ДатаДокументаИБ,
	|		&Номер                                             КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных                           КАК ТипСсылки,
	|		&ОрганизацияПолучатель                             КАК Организация,
	|		&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|		&Партнер                                           КАК Партнер,
	|		&Контрагент                                        КАК Контрагент,
	|		&Договор                                           КАК Договор,
	|		НЕОПРЕДЕЛЕНО                                       КАК НаправлениеДеятельности,
	|		&Склад                                             КАК МестоХранения,
	|		&Подразделение                                     КАК Подразделение,
	|		&Менеджер                                          КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100))             КАК Комментарий,
	|		&Валюта                                            КАК Валюта,
	|		&СуммаДокумента                                    КАК Сумма,
	|		НЕОПРЕДЕЛЕНО                                       КАК Статус,
	|		&Проведен                                          КАК Проведен,
	|		&ПометкаУдаления                                   КАК ПометкаУдаления,
	|		ИСТИНА                                             КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоОрганизации КАК СТРОКА(100)) КАК Дополнительно,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &Период
	|			ИНАЧЕ &ДатаВходящегоДокумента
	|		КОНЕЦ                                              КАК ДатаПервичногоДокумента,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &НомерДокумента
	|			ИНАЧЕ &НомерВходящегоДокумента
	|		КОНЕЦ                                              КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка) КАК ТаблицаРеестрДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеестрДокументов.ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер,
	|	ТаблицаРеестрДокументов.Контрагент,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности,
	|	ТаблицаРеестрДокументов.Подразделение,
	|	ТаблицаРеестрДокументов.МестоХранения,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ,
	|	ТаблицаРеестрДокументов.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
