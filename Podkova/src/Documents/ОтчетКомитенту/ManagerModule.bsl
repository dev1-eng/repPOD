#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетНаОплатуКлиенту.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ОтчетКомитентуЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Отчет комитенту (принципалу) о продажах".
//
// Параметры:
// 
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетКомитенту) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ОтчетКомитенту.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ОтчетКомитенту);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриЗакупках";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.СостояниеРасчетовСКомитентами.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	Отчеты.ТоварыПринятыеНаКомиссию.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	ОтчетКомитентуЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(СпособРасчетаВознаграждения, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПроцентВознаграждения");
	МассивВсехРеквизитов.Добавить("СтавкаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("УдержатьВознаграждение");
	МассивВсехРеквизитов.Добавить("Услуга");
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("Товары.СуммаВознаграждения");
	
	МассивРеквизитовОперации = Новый Массив;
	Если СпособРасчетаВознаграждения <> Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
		МассивРеквизитовОперации.Добавить("ПроцентВознаграждения");
		МассивРеквизитовОперации.Добавить("СтавкаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("УдержатьВознаграждение");
		МассивРеквизитовОперации.Добавить("Услуга");
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("Товары.СуммаВознаграждения");
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетКомитенту - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.УдержатьВознаграждение ТОГДА
	|		ДанныеДокумента.СуммаДокумента - ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		СуммаВознаграждения = Выборка.СуммаВознаграждения;
		НачалоПериода = Выборка.НачалоПериода;
		КонецПериода = Выборка.КонецПериода;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		СуммаВознаграждения = 0;
		НачалоПериода = Неопределено;
		КонецПериода = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Партнер", Партнер);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("Договор", Договор);
	СтруктураРеквизитов.Вставить("ПорядокРасчетов", ПорядокРасчетов);
	СтруктураРеквизитов.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОтчетКомитенту);
	СтруктураРеквизитов.Вставить("СуммаДокумента", СуммаДокумента);
	СтруктураРеквизитов.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов); 
	СтруктураРеквизитов.Вставить("СуммаВознаграждения", СуммаВознаграждения);
	СтруктураРеквизитов.Вставить("НачалоПериода", НачалоПериода);
	СтруктураРеквизитов.Вставить("КонецПериода", КонецПериода);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;

КонецФункции


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область УчетНДС

// Возвращает структуру параметров для заполнения налогообложения НДС закупки.
//
// Параметры:
//  Объект - ДокументОбъект.ОтчетКомитенту - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - Параметры заполнения, описание параметров см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт

	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.ПриемНаКомиссию = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры регистрации счетов-фактур (выданных)
//
// Параметры:
//  Объект		- ДокументОбъект.ОтчетКомитенту, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Функция ПараметрыРегистрацииСчетовФактурВыданных(Объект) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	
	ПараметрыРегистрации.Ссылка					= Объект.Ссылка;
	ПараметрыРегистрации.Дата					= Объект.Дата;
	ПараметрыРегистрации.Организация			= Объект.Организация;
	ПараметрыРегистрации.Контрагент				= Объект.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС		= Объект.НалогообложениеНДС;
	
	ПараметрыРегистрации.РеализацияТоваров	= (НЕ Объект.СпособРасчетаВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры);
	
	ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
	ОтчетКомитентуЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса) Экспорт
	
	ТекстДанныеДокумента = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Валюта КАК ВалютаДокумента,
	|	Товары.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаПродажи КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС20) 
	|			ТОГДА Товары.СуммаПродажи - Товары.СуммаПродажи / 1.20
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС18) 
	|			ТОГДА Товары.СуммаПродажи - Товары.СуммаПродажи / 1.18
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС10) 
	|			ТОГДА Товары.СуммаПродажи - Товары.СуммаПродажи / 1.1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧИСЛО(31,2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС20) 
	|			ТОГДА Товары.СуммаПродажи / 1.20
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС18) 
	|			ТОГДА Товары.СуммаПродажи / 1.18
	|		КОГДА Товары.СтавкаНДС В (&СтавкиНДС10) 
	|			ТОГДА Товары.СуммаПродажи / 1.1
	|		ИНАЧЕ Товары.СуммаПродажи
	|	КОНЕЦ КАК ЧИСЛО(31,2)) КАК СуммаБезНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&Ссылка)
	|	И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Ссылка.Дата КАК Дата,
	|	ВидыЗапасов.Ссылка.Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	(ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) КАК СуммаБезНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомитенту.Ссылка КАК Ссылка,
	|	ОтчетКомитенту.Дата КАК Дата,
	|	ОтчетКомитенту.Валюта КАК ВалютаДокумента,
	|	ОтчетКомитенту.Валюта КАК ВалютаВзаиморасчетов,
	|	"""" КАК ИдентификаторСтроки,
	|	ОтчетКомитенту.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ОтчетКомитенту.СуммаВознаграждения КАК СуммаСНДС,
	|	ОтчетКомитенту.СуммаНДСВознаграждения КАК СуммаНДС,
	|	(ОтчетКомитенту.СуммаВознаграждения - ОтчетКомитенту.СуммаНДСВознаграждения) КАК СуммаБезНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|ГДЕ
	|	ОтчетКомитенту.Ссылка В (&Ссылка)
	|";
	
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	Запрос.УстановитьПараметр("СтавкиНДС20",  СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	
	ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса, ТекстДанныеДокумента);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                         КАК Период,
	|	ДанныеДокумента.Номер                                        КАК Номер,
	|	ДанныеДокумента.Ссылка                                       КАК Ссылка,
	|	ДанныеДокумента.Валюта                                       КАК Валюта,
	|	ДанныеДокумента.Организация                                  КАК Организация,
	|	ДанныеДокумента.Партнер                                      КАК Партнер,
	|	ДанныеДокумента.Контрагент                                   КАК Контрагент,
	|	ДанныеДокумента.Услуга                                       КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                     КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)          КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                 КАК Назначение,
	|	ДанныеДокумента.Договор                                      КАК Договор,
	|	ДанныеДокумента.Менеджер                                     КАК Менеджер,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                                        КАК РасчетыПоДоговорам,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|	ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                                        КАК КонецПериода,
	|	ДанныеДокумента.Подразделение                                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.Соглашение                                   КАК Соглашение,
	|	ДанныеДокумента.НаправлениеДеятельности                      КАК НаправлениеДеятельности,
	|	ДанныеДокумента.УдержатьВознаграждение                       КАК УдержатьВознаграждение,
	|	ДанныеДокумента.ДатаПлатежа                                  КАК ДатаПлатежа
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                             Реквизиты.Номер);
	Запрос.УстановитьПараметр("КонецПериода",                      КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",              Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",             Перечисления.ХозяйственныеОперации.ОтчетКомитенту);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияУдержание",    Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомитентом);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",    Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",        Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("Договор",                           Реквизиты.Договор);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",                Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("Организация",                       Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Номенклатура",                      Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                    Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("Склад",                             Реквизиты.Склад);
	Запрос.УстановитьПараметр("Серия",                             Реквизиты.Серия);
	Запрос.УстановитьПараметр("Назначение",                        Реквизиты.Назначение);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                               ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("Соглашение",                        Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("ИспользоватьПродажуАгентскихУслуг", ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг"));
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("УдержатьВознаграждение",            Реквизиты.УдержатьВознаграждение);
	Запрос.УстановитьПараметр("ДатаПлатежаКлиент",                 Реквизиты.ДатаПлатежа);
	
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДанныеЭтапов.ДатаПлатежа) КАК ДатаПлатежа
	|ИЗ
	|	Документ.ОтчетКомитенту.ЭтапыГрафикаОплаты КАК ДанныеЭтапов
	|ГДЕ
	|	ДанныеЭтапов.Ссылка = &Ссылка
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("ДатаПлатежаПоставщик", Реквизиты.ДатаПлатежа);

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос;
	ЗапросАналитики.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Услуги.Номенклатура                                                  КАК Номенклатура,
	|	Услуги.Характеристика                                                КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                         КАК Назначение,
	|	&Серия                                                               КАК Серия,
	|	ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) КАК Склад
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК Услуги
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Услуги.Номенклатура = Аналитика.Номенклатура
	|		И Услуги.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|		И &Серия = Аналитика.Серия
	|		И ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) = Аналитика.МестоХранения
	|ГДЕ
	|	Услуги.Ссылка = &Ссылка
	|	И ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) <> &Организация
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)";
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Серия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	&Валюта                                           КАК Валюта,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура                            КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика                          КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                      КАК СуммаВыручки,
	|	0                                                 КАК КоличествоКОформлению,
	|	0                                                 КАК СуммаВыручкиКОформлению,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения            КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактуры               КАК ДатаСчетаФактуры,
	|	ТаблицаВидыЗапасов.Покупатель                     КАК Покупатель,
	|	ТаблицаВидыЗапасов.СчетФактураВыставленный.Номер  КАК НомерСчетаФактуры,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&КонецПериода                                     КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	&Валюта                                           КАК Валюта,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура                            КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика                          КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	0                                                 КАК Количество,
	|	0                                                 КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоКОформлению,
	|	ТаблицаВидыЗапасов.СуммаСНДС                      КАК СуммаВыручкиКОформлению,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения            КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактуры               КАК ДатаСчетаФактуры,
	|	ТаблицаВидыЗапасов.Покупатель                     КАК Покупатель,
	|	ТаблицаВидыЗапасов.СчетФактураВыставленный.Номер  КАК НомерСчетаФактуры,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта, 
		Запрос.Параметры.Валюта,
		Запрос.Параметры.Период);

	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	//Порядок и состав полей запроса проведения
	ШаблонПолей = "
	|ВЫБРАТЬ
	|	Шаблон.НомерСтроки               КАК НомерСтроки,
	|	Шаблон.Период                    КАК Период,
	|	&ДатаПлатежаПоставщик            КАК ДатаПлатежа,
	|	Шаблон.ДатаРегистратора          КАК ДатаРегистратора,
	|	Шаблон.НомерРегистратора         КАК НомерРегистратора,
	|	Шаблон.ВидДвижения               КАК ВидДвижения,
	|	Шаблон.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Шаблон.ЗаказПоставщику           КАК ЗаказПоставщику,
	|	Шаблон.Валюта                    КАК Валюта,
	|	Шаблон.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|	Шаблон.Сумма                     КАК Сумма,
	|	Шаблон.КОплате                   КАК КОплате,
	|	Шаблон.СуммаРегл                 КАК СуммаРегл,
	|	Шаблон.СуммаУпр                  КАК СуммаУпр,
	|	Шаблон.ВалютаДокумента           КАК ВалютаДокумента,
	|	Шаблон.КорОбъектРасчетов         КАК КорОбъектРасчетов,
	|	Шаблон.КорАналитикаУчетаПоПартнерам КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	#Шаблон КАК Шаблон
	|ГДЕ
	|	&ОтборШаблон";

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.НомерСтроки                      КАК НомерСтроки,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК Период,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК ДатаПлатежа,
	|	&Период                                             КАК ДатаРегистратора,
	|	&Номер                                              КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам                          КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                               КАК ЗаказПоставщику,
	|
	|	&Валюта                                             КАК Валюта,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	
	|	0                                                   КАК Сумма,
	|	ЭтапыГрафикаОплаты.СуммаПлатежа                     КАК КОплате,
	|	0                                                   КАК СуммаРегл,
	|	0                                                   КАК СуммаУпр,
	|	&Валюта                                             КАК ВалютаДокумента,
	|	Неопределено                                        КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетКомитенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|	
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка = &Ссылка
	|	И ЭтапыГрафикаОплаты.СуммаПлатежа > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.НомерСтроки                      КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК ДатаПлатежа,
	|	&Период                                             КАК ДатаРегистратора,
	|	&Номер                                              КАК НомерРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам                          КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                               КАК ЗаказПоставщику,
	|
	|	&Валюта                                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	
	|	ЭтапыГрафикаОплаты.СуммаПлатежа                     КАК Сумма,
	|
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		ЭтапыГрафикаОплаты.СуммаПлатежа
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                               КАК КОплате,
	|	ВЫРАЗИТЬ(ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	&Валюта                                             КАК ВалютаДокумента,
	|	Неопределено                                        КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетКомитенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|	
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаПлатежа,
	|	&Период                                КАК ДатаРегистратора,
	|	&Номер                                 КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам             КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                  КАК ЗаказПоставщику,
	|
	|	&Валюта                                КАК Валюта,
	|	
	|	&ХозяйственнаяОперацияУдержание        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаВознаграждения    КАК Сумма,
	|	ДанныеДокумента.СуммаВознаграждения    КАК КОплате,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	&Валюта                                КАК ВалютаДокумента,
	|	Неопределено                           КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.УдержатьВознаграждение
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|
	|//ЗачетАвансовПоставщикуПоНакладной
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//ЗачетАвансовПоставщикуПоНакладной",
		ВзаиморасчетыСервер.ТекстПроведенияЗачетАвансовПоставщикуПоНакладной("ОтчетКомитенту", ШаблонПолей, "РасшифровкаПлатежаСПоставщиком"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	//Порядок и состав полей запроса проведения
	ШаблонПолей = "
	|ВЫБРАТЬ
	|	Шаблон.Период                    КАК Период,
	|	&ДатаПлатежаКлиент               КАК ДатаПлатежа,
	|	Шаблон.ДатаРегистратора          КАК ДатаРегистратора,
	|	Шаблон.НомерРегистратора         КАК НомерРегистратора,
	|	Шаблон.ВидДвижения               КАК ВидДвижения,
	|	Шаблон.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Шаблон.ЗаказКлиента              КАК ЗаказКлиента,
	|	Шаблон.Валюта                    КАК Валюта,
	|	Шаблон.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|	Шаблон.Сумма                     КАК Сумма,
	|	Шаблон.КОплате                   КАК КОплате,
	|	Шаблон.СуммаРегл                 КАК СуммаРегл,
	|	Шаблон.СуммаУпр                  КАК СуммаУпр,
	|	Шаблон.ВалютаДокумента           КАК ВалютаДокумента,
	|	Шаблон.КорОбъектРасчетов         КАК КорОбъектРасчетов,
	|	Шаблон.КорАналитикаУчетаПоПартнерам КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	#Шаблон КАК Шаблон
	|ГДЕ
	|	&ОтборШаблон";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                   КАК Период,
	|	ДанныеДокумента.ДатаПлатежа               КАК ДатаПлатежа,
	|	&Период                                   КАК ДатаРегистратора,
	|	&Номер                                    КАК НомерРегистратора,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                     КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам                КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                     КАК ЗаказКлиента,
	|
	|	&Валюта                                   КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ                                     КАК Сумма,
	|	0                                         КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                     КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                     КАК СуммаУпр,
	|	&Валюта                                   КАК ВалютаДокумента,
	|	Неопределено                              КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И НЕ ДанныеДокумента.УдержатьВознаграждение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День)   КАК Период,
	|	ДанныеДокумента.ДатаПлатежа                       КАК ДатаПлатежа,
	|	&Период                                           КАК ДатаРегистратора,
	|	&Номер                                            КАК НомерРегистратора,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                             КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                             КАК ЗаказКлиента,
	|
	|	&Валюта                                           КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	
	|	0                                                 КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ                                             КАК КОплате,
	|	0                                                 КАК СуммаРегл,
	|	0                                                 КАК СуммаУпр,
	|	&Валюта                                           КАК ВалютаДокумента,
	|	Неопределено                                      КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И НЕ ДанныеДокумента.УдержатьВознаграждение
	|
	|//ЗачетАвансовКлиентаПоНакладной
	|
	|";
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//ЗачетАвансовКлиентаПоНакладной", 
		ВзаиморасчетыСервер.ТекстПроведенияЗачетАвансовКлиентаПоНакладной("ОтчетКомитенту", ШаблонПолей, "РасшифровкаПлатежаСКлиентом"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Номенклатура) Тогда
		СтруктураПолей = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
		ЗаполнитьЗначенияСвойств(СтруктураПолей, Запрос.Параметры);
		
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры",
						РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(СтруктураПолей));
	Иначе
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                       КАК Период,
	|	&АналитикаУчетаПоПартнерам                    КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности                      КАК НаправлениеДеятельностиКонтрагента,
	|	Неопределено                                  КАК ЗаказКлиента,
	|	&АналитикаУчетаНоменклатуры                   КАК АналитикаУчетаНоменклатуры,
	|	&НаправлениеДеятельности                      КАК НаправлениеДеятельностиНоменклатуры,
	|	ДанныеДокумента.Подразделение                 КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)     КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяССылка) КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|
	|	&Менеджер КАК Менеджер,
	|
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения 
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.Соглашение               КАК Соглашение,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения      КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаДокумента,
	|	ДанныеДокумента.СуммаВознаграждения      КАК СуммаВВалютеДокумента,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ДанныеДокумента.Услуга                   КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА ДанныеДокумента.Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                    КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса для таблицы сумм в валюте регл. учета.
//
Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваров(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки         КАК НомерСтроки,
	|	&Период                              КАК Период,
	|	&Валюта                              КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаБезНДС         КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС            КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДСРегл     КАК СуммаБезНДСРегл,
	|	ТаблицаДокумента.СуммаНДСРегл        КАК СуммаНДСРегл,
	|	ТаблицаДокумента.СуммаБезНДСРегл     КАК БазаНДСРегл,
	|	ТаблицаДокумента.СуммаБезНДСУпр      КАК БазаНДСУпр,
	|	ТаблицаДокумента.СуммаБезНДСУпр      КАК СуммаБезНДСУпр,
	|	ТаблицаДокумента.СуммаНДСУпр         КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО                         КАК ТипРасчетов,
	|	
	|	ТаблицаДокумента.СуммаСНДС           КАК СуммаВзаиморасчетов,
	|	&Валюта                              КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	ТаблицаТоваровПредварительная КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                                              КАК НомерСтроки,
	|	&Период                                                        КАК Период,
	|	&Валюта                                                        КАК Валюта,
	|	""""                                                           КАК ИдентификаторСтроки,
	|	Документ.СтавкаНДСВознаграждения                               КАК СтавкаНДС,
	|	Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения КАК СуммаБезНДС,
	|	Документ.СуммаНДСВознаграждения                                КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаНДСРегл, 0)
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеРегистра.БазаНДСРегл, 0) <> 0 ТОГДА
	|				ДанныеРегистра.БазаНДСРегл
	|			ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|		КОНЕЦ
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК БазаНДСРегл,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеРегистра.БазаНДСУпр, 0) <> 0 ТОГДА
	|				ДанныеРегистра.БазаНДСУпр
	|			ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСУпр, 0)
	|		КОНЕЦ
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК БазаНДСУпр,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСУпр, 0)
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаНДСУпр, 0)
	|	ИНАЧЕ 0 КОНЕЦ                                                  КАК СуммаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|	
	|	Документ.СуммаВознаграждения КАК СуммаВзаиморасчетов,
	|	&Валюта КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомитенту КАК Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = &Ссылка
	|		И ДанныеРегистра.ИдентификаторСтроки = """"
	|
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И НЕ &УдержатьВознаграждение
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	// Отражение задолженности перед комитентом 
	"ВЫБРАТЬ
	|	&Период                                       КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом) КАК ХозяйственнаяОперация,
	|	&Организация                                  КАК Организация,
	|	&Подразделение                                КАК Подразделение,
	|	&Менеджер                                     КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Договоры.НаправлениеДеятельности  КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|
	|	&Партнер                                      КАК Партнер,
	|	&Контрагент                                   КАК Контрагент,
	|	&НаправлениеДеятельности                      КАК НаправлениеДеятельностиКонтрагента,
	|	&Соглашение                                   КАК Соглашение,
	|	&Договор                                      КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                  КАК Заказ,
	|
	|	0                                             КАК Количество,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))   КАК Сумма,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))                                     КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))                                    КАК СуммаРеглБезНДС,
	|	0                                              КАК СуммаСкидки,
	|
	|	0                                              КАК Стоимость,
	|	0                                              КАК СтоимостьБезНДС,
	|	0                                              КАК СтоимостьРегл,
	|	0                                              КАК ДопРасходы,
	|	0                                              КАК ДопРасходыБезНДС,
	|
	|	&Валюта                                        КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС                   КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта                                        КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС                   КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура
	|	КОНЕЦ                                          КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                          КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|	ПО Договоры.Ссылка = &Договор
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка"; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиКОформлениюОтчетовПринципалу";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КОформлению.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&Организация                              КАК Организация,
	|	
	|	Аналитика.КлючАналитики                   КАК АналитикаУчетаНоменклатуры,
	|	&Соглашение                               КАК Соглашение,
	|	&Валюта                                   КАК Валюта,
	|	КОформлению.Количество                    КАК Количество,
	|	КОформлению.СуммаПродажи                  КАК СуммаВыручки,
	|	ВЫБОР 
	|		КОГДА КОформлению.СтавкаНДС В (&СтавкиНДС20) 
	|			ТОГДА КОформлению.СуммаПродажи - КОформлению.СуммаПродажи / 1.20
	|		КОГДА КОформлению.СтавкаНДС В (&СтавкиНДС18) 
	|			ТОГДА КОформлению.СуммаПродажи - КОформлению.СуммаПродажи / 1.18
	|		КОГДА КОформлению.СтавкаНДС В (&СтавкиНДС10) 
	|			ТОГДА КОформлению.СуммаПродажи - КОформлению.СуммаПродажи / 1.1
	|		ИНАЧЕ 0
	|	КОНЕЦ   								  КАК СуммаНДС,
	|	КОформлению.ДатаСчетаФактуры              КАК ДатаСчетаФактуры,
	|	КОформлению.СчетФактураВыставленный.Номер КАК НомерСчетаФактуры,
	|	КОформлению.Покупатель                    КАК Покупатель
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК КОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.Номенклатура = КОформлению.Номенклатура
	|		И Аналитика.Характеристика = КОформлению.Характеристика
	|		И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Аналитика.МестоХранения = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|ГДЕ
	|	КОформлению.Ссылка = &Ссылка
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> &Организация
	|	И &ИспользоватьПродажуАгентскихУслуг
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	        
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	Запрос.УстановитьПараметр("СтавкиНДС20",  СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваров(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровВВалютуРеглПересчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросТоварыДокумента = Новый Запрос;
	ЗапросТоварыДокумента.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросТоварыДокумента.УстановитьПараметр("Ссылка",        Запрос.Параметры.Ссылка);
	ЗапросТоварыДокумента.УстановитьПараметр("Период",        Запрос.Параметры.Период);
	ЗапросТоварыДокумента.УстановитьПараметр("Валюта",        Запрос.Параметры.Валюта);
	ЗапросТоварыДокумента.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка              КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки         КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС20) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи / 1.20
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС18) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи / 1.18
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС10) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи / 1.1
	|		ИНАЧЕ ТаблицаДокумента.СуммаПродажи
	|	КОНЕЦ КАК ЧИСЛО(31,2))               КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС           КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС20) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи - ТаблицаДокумента.СуммаПродажи / 1.20
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС18) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи - ТаблицаДокумента.СуммаПродажи / 1.18
	|		КОГДА ТаблицаДокумента.СтавкаНДС В (&СтавкиНДС10) 
	|			ТОГДА ТаблицаДокумента.СуммаПродажи - ТаблицаДокумента.СуммаПродажи / 1.1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧИСЛО(31,2))               КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаПродажи        КАК СуммаСНДС,
	|	&Валюта                              КАК Валюта,
	|	&Период                              КАК Дата
	|
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|";
	
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	ЗапросТоварыДокумента.УстановитьПараметр("СтавкиНДС20",  СтавкиНДС20);
	ЗапросТоварыДокумента.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	ЗапросТоварыДокумента.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	
	ЗапросТоварыДокумента.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Запрос.Параметры.ВалютаРегламентированногоУчета);
	ВалютыДляПересчета.Вставить("Упр", Запрос.Параметры.ВалютаУправленческогоУчета);
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(Запрос.МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровВВалютуРеглПересчитана", Истина);
	
КонецПроцедуры


Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстТовары = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.Ссылка.Дата               КАК Период,
	|	ТаблицаВидыЗапасов.Ссылка                    КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту) КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.Ссылка.Организация        КАК Организация,
	|	ТаблицаВидыЗапасов.Ссылка.Подразделение      КАК Подразделение,
	|	ТаблицаВидыЗапасов.Ссылка.Контрагент         КАК Контрагент,
	|	ТаблицаВидыЗапасов.Ссылка.Договор            КАК Договор,
	|	ТаблицаВидыЗапасов.Ссылка                    КАК ОтчетКомитенту,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС                 КАК СтавкаНДС,
	|	АналитикаУчетаНоменклатуры.Номенклатура      КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика    КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов                КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Покупатель                КАК ПокупательКомиссионногоТовара,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактуры          КАК ДатаСчетаФактурыВыданногоПокупателю,
	|	ТаблицаВидыЗапасов.СчетФактураВыставленный   КАК СчетФактураВыданныйПокупателю,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки       КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка В (&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка.Дата                     КАК Период,
	|	Товары.Ссылка                          КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту) КАК ХозяйственнаяОперация,
	|	Товары.Ссылка.Организация              КАК Организация,
	|	Товары.Ссылка.Подразделение            КАК Подразделение,
	|	Товары.Ссылка.Контрагент               КАК Контрагент,
	|	Товары.Ссылка.Договор                  КАК Договор,
	|	Товары.Ссылка                          КАК ОтчетКомитенту,
	|	Товары.Ссылка.НалогообложениеНДС       КАК НалогообложениеНДС,
	|	Товары.СтавкаНДС                       КАК СтавкаНДС,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидЗапасов,
	|	Товары.Покупатель                      КАК ПокупательКомиссионногоТовара,
	|	Товары.ДатаСчетаФактуры                КАК ДатаСчетаФактурыВыданногоПокупателю,
	|	Товары.СчетФактураВыставленный         КАК СчетФактураВыданныйПокупателю,
	|	Товары.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&Ссылка)
	|	И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|";
	УчетНДСУП.ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
	ТекстВознаграждение = 
	"ВЫБРАТЬ
	|	ОтчетКомитенту.Дата                    КАК Период,
	|	ОтчетКомитенту.Ссылка                  КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту) КАК ХозяйственнаяОперация,
	|	ОтчетКомитенту.Организация             КАК Организация,
	|	ОтчетКомитенту.Подразделение           КАК Подразделение,
	|	ОтчетКомитенту.Контрагент              КАК Контрагент,
	|	ОтчетКомитенту.Договор                 КАК Договор,
	|	НЕОПРЕДЕЛЕНО                           КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Грузополучатель,
	|	ЛОЖЬ                                   КАК РеализацияВРозницу,
	|	ОтчетКомитенту.Ссылка                  КАК ДокументРеализации,
	|	ЛОЖЬ                                   КАК ИсправлениеОшибок,
	|	ЛОЖЬ                                   КАК КорректировкаПоСогласованиюСторон,
	|	ВЫБОР КОГДА СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ                                  КАК НалогообложениеНДС,
	|	
	|	ОтчетКомитенту.Услуга                  КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураНабора,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНабора,
	|	""""                                   КАК Содержание,
	|	0                                      КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ОтчетКомитенту.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидЗапасов,
	|	""""                                   КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|ГДЕ
	|	ОтчетКомитенту.Ссылка В (&Ссылка)
	|	И ОтчетКомитенту.СуммаВознаграждения <> 0
	|	И НЕ (ОтчетКомитенту.СпособРасчетаВознаграждения = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается))
	|";
	УчетНДСУП.ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстВознаграждение);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.ОтчетКомитенту) Тогда
		// Акт об оказании услуг
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Акт";
		КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Отчет комитенту о продажах
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОтчетовПоКомиссии";
		КомандаПечати.Идентификатор = "ОтчетКомиссионера";
		КомандаПечати.Представление = НСтр("ru = 'Отчет комитенту о продажах'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	ОтчетКомитентуЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", НСтр("ru='Акт об оказании услуг'"), СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	ОтчетКомитентуЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
КонецПроцедуры

Функция СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Услуга.НаименованиеПолное КАК УслугаНаименование,
	|	ДанныеДокумента.Услуга.Код КАК Код,
	|	ДанныеДокумента.Услуга.Артикул КАК Артикул,
	|
	|	ДанныеДокумента.СуммаВознаграждения КАК Сумма,
	|	ДанныеДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитенту_АктОбУслугах";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитенту.ПФ_MXL_АктОбУслугах");
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки.
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
		
		УстановитьПараметр(ЗаголовокТаблицы, "ПредставлениеПоставщика",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,"));
		УстановитьПараметр(ЗаголовокТаблицы, "ПредставлениеПолучателя",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование,"));
		УстановитьПараметр(ЗаголовокТаблицы, "ТекстЗаголовка",
			ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт об оказании услуг'")));
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ЗаголовокТаблицы, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
		// Выводим таблицу.
		Если ЗначениеЗаполнено(КолонкаКодов) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			УстановитьПараметр(ОбластьМакета, "ИмяКолонкиКодов", КолонкаКодов);
			УстановитьПараметр(ОбластьМакета, "Артикул", ДанныеПечати[КолонкаКодов]);
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);	
		
		// Выводим реквизиты подвала.
		ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
		
		ТекстОСуммеПрописью = НСтр("ru='Сумма комиссионного вознаграждения составила'") + " "
			+ ?(ДанныеПечати.Сумма < 0, НСтр("ru='минус'") + " ", "")
			+ РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.Сумма, ДанныеПечати.Валюта) + ","
			+ Символы.ПС
			+ НСтр("ru='в том числе НДС ('")	+ ДанныеПечати.СтавкаНДС + ") "
			+ ДанныеПечати.СуммаНДС;
		
		УстановитьПараметр(ОбластьПодвала, "ТекстОСуммеПрописью", ТекстОСуммеПрописью);
		
		ТабличныйДокумент.Вывести(ОбластьПодвала);	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
		
	КонецЦикла;
		
	Возврат ТабличныйДокумент;

КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Контрагент КАК Комитент,
	|	ДанныеДокумента.Организация КАК Комиссионер,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	"""" КАК ПредставительКомитента,
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.СуммаКомитента) КАК СуммаКомитента,
	|	СУММА(ВложенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
	|	СУММА(ВложенныйЗапрос.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	ВложенныйЗапрос.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ВложенныйЗапрос.Покупатель КАК Покупатель
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ ТаблицаТовары.Упаковка
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК СуммаКомитента,
	|		ТаблицаТовары.СуммаПродажи КАК СуммаПродажи,
	|		ТаблицаТовары.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|		ТаблицаТовары.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|		ТаблицаТовары.Покупатель КАК Покупатель
	|	ИЗ
	|		Документ.ОтчетКомитенту.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВложенныйЗапрос.ДатаСчетаФактуры,
	|	ВложенныйЗапрос.Покупатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаКомитента),
	|	СУММА(СуммаПродажи),
	|	СУММА(СуммаВознаграждения)
	|ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Заголовок = НСтр("ru = 'Отчет комитенту о продажах'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("Заголовок", Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

// Прочее

Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ОтчетКомитенту";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Ссылка.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомитентуТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ОтчетКомитентуТовары
	|ГДЕ
	|	ОтчетКомитентуТовары.СуммаПродажиНДС = 0 И
	|   НЕ (ОтчетКомитентуТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)  ИЛИ
	|	ОтчетКомитентуТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) 
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры


Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт	
	
	ПолноеИмяОбъекта = "Документ.ОтчетКомитенту";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для каждого Выборка Из ОбновляемыеДанные Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ОтчетКомитенту");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
			КонецЕсли;
			
			Товары = ДанныеОбъекта.Товары; 
			Для каждого Стр Из Товары Цикл
				Если Стр.СуммаПродажиНДС = 0 Тогда
					Стр.СуммаПродажиНДС = КомиссионнаяТорговляСервер.СуммаПродажиНДС(Стр.СуммаПродажи,Стр.СтавкаНДС);
				КонецЕсли;
			КонецЦикла;

			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);	
КонецПроцедуры

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ОтчетКомитенту.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.12.46";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3654d2d5-dfda-47c6-9ce7-ec7cdf2f752f");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетКомитенту.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""Сумма НДС продажи"" табличной части ""Товары"" документа ""Отчет комитенту о продажах""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ОтчетКомитенту.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ОтчетКомитенту.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ОтчетКомитенту.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

#КонецОбласти

// Возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект
// см. ОбщегоНазначения.ЗначениеРеквизитаОбъекта()
// Если полученное значение не имеет тип булево, возвращается значение Ложь.
//
Функция ЗначениеРеквизитаОбъектаТипаБулево(Ссылка, ИмяРеквизита) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	Если ТипЗнч(Результат) <> Тип("Булево") Тогда
		Результат = Ложь;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);	
	Возврат Результат
КонецФункции

#КонецОбласти

#КонецЕсли
