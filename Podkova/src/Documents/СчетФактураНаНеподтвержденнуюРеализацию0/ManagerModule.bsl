#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура на неподтвержденную реализацию по ставке 0%".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПродажиНаЭкспортНесырьевыхТоваров,ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

// Возвращает товары по документу основанию счета-фактуры
//
// Параметры:
// 	 ДокументОснование - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Документ-основание.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - Товары по документу-основанию.
//
Функция ТоварыПоДокументыОснованию(ДокументОснование, ДатаСчетаФактуры) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаСчетаФактуры) Тогда
		ДатаСчетаФактуры = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Корректировочный", Ложь);
	ПараметрыЗаполнения.Вставить("Исправление", Истина);
	ПараметрыЗаполнения.Вставить("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
	ТаблицаОснований = Документы.СчетФактураВыданный.ПустаяСсылка().ДокументыОснования.Выгрузить();
	НоваяСтрока = ТаблицаОснований.Добавить();
	НоваяСтрока.ДокументОснование = ДокументОснование;
	ПараметрыЗаполнения.Вставить("ДокументыОснования", ТаблицаОснований);
	ПараметрыЗаполнения.Вставить("МоментВремени", Новый МоментВремени(ДатаСчетаФактуры));
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаТоваров = Документы.СчетФактураВыданный.ПолучитьТаблицуТоваров(ПараметрыЗаполнения).Товары;
	УстановитьПривилегированныйРежим(Ложь);
	
	СтрокиКУдалению = Новый Массив;
	Для Каждого Строка Из ТаблицаТоваров Цикл
		Если Строка.СтавкаНДС <> Перечисления.СтавкиНДС.НДС0 Тогда
			СтрокиКУдалению.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из СтрокиКУдалению Цикл
		ТаблицаТоваров.Удалить(Строка);
	КонецЦикла;
	
	ТаблицаТоваров.Колонки.Добавить("СуммаСНДС");
	ТаблицаТоваров.Колонки.Добавить("КоличествоУпаковок");
	ТаблицаТоваров.Колонки.Добавить("Упаковка");
	Для Каждого Строка Из ТаблицаТоваров Цикл
		Строка.СуммаСНДС = Строка.Сумма;
		Строка.КоличествоУпаковок = Строка.Количество;
		Строка.Упаковка = Строка.ЕдиницаИзмерения;
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Номенклатура, "СтавкаНДС, ОсобенностьУчета, ТипНоменклатуры");
			Строка.СтавкаНДС = РеквизитыНоменклатуры.СтавкаНДС;
			Если РеквизитыНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга
				ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа Тогда
				Если РеквизитыНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.Партнером Тогда
					Строка.ТипЗапасов = Перечисления.ТипыЗапасов.АгентскаяУслуга;
				Иначе
					Строка.ТипЗапасов = Перечисления.ТипыЗапасов.Услуга;
				КонецЕсли;
			ИначеЕсли РеквизитыНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
				ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
					Строка.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
			КонецЕсли;
		Иначе
			Строка.СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(ДатаСчетаФактуры, Ложь);
			Строка.ТипЗапасов = Перечисления.ТипыЗапасов.Услуга;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПересчетаСуммы = Новый Структура;
	СтруктураПересчетаСуммы.Вставить("ЦенаВключаетНДС", Ложь);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		УчетНДСУП.СкорректироватьСтавкуНДС(Строка.СтавкаНДС, ТекущаяДатаСеанса());
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
	Возврат ТаблицаТоваров;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Подзапрос.КоличествоКОформлению) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению
	|	ИЗ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ГДЕ
	|		НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
	|		И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	|		И &УсловиеОтбора
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению
	|	ИЗ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ГДЕ
	|		НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
	|		И НДССостояниеРеализации0.ДатаПодтверждения > &КонецПериода
	|		И НДССостояниеРеализации0.Состояние В (
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
	|		И &УсловиеОтбора
	|	) КАК Подзапрос";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "НДССостояниеРеализации0.Организация В (&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|ГДЕ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.Ссылка В(&МассивОбъектов)";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	
	МассивШапокОснований = Результат.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	ПоместитьВременнуюТаблицуШапокОснований(МенеджерВременныхТаблиц, МассивШапокОснований);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Номер                КАК Номер,
	|	ДанныеДокументов.Дата                 КАК Дата,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.Контрагент           КАК Контрагент,
	|	ДанныеДокументов.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПлатежноРасчетныеДокументы,
	|	ДанныеДокументов.ДокументОснование    КАК ДокументОснование,
	|
	|	ВЫБОР КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
	|		ДанныеОрганизаций.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		ДанныеОрганизаций.Ссылка
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	
	|	ДанныеОрганизаций.Ссылка КАК Грузоотправитель, 
	|	
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|	КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
	|		ДанныеОрганизаций.ЦифровойИндексОбособленногоПодразделения
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ КАК ИндексПодразделения,
	|	
	|	ВЫБОР КОГДА ДанныеДокументов.КППКонтрагента ПОДОБНО """" ТОГДА """"
	|		  ИНАЧЕ ДанныеДокументов.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА ДанныеДокументов.ИННКонтрагента ПОДОБНО """" ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|		ИНАЧЕ ДанныеДокументов.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|	ИНАЧЕ
	|		ДанныеОрганизаций.КПП
	|	КОНЕЦ КАК КПППоставщика
	|
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокументов
	| 	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Организации КАК ДанныеОрганизаций
	|	ПО
	|		ДанныеДокументов.Организация = ДанныеОрганизаций.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ТаблицаШапокДокументов КАК ДанныеОснований
	|	ПО 
	|		ДанныеОснований.Ссылка = ДанныеДокументов.ДокументОснование
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|	ПО ДанныеКонтрагента.Ссылка = ДанныеДокументов.Контрагент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО
	|		ДанныеПодразделений.Организация = ДанныеДокументов.Организация
	|		И ДанныеПодразделений.Подразделение = ДанныеОснований.Подразделение
	|	
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;";
	
	Запрос.Выполнить();
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			КОГДА НЕ ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В (&МассивОбъектов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетаФактуры.Номер КАК Номер,
	|	СчетаФактуры.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Контрагент.ОбособленноеПодразделение
	|			ТОГДА СчетаФактуры.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетаФактуры.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(СчетаФактуры.ГоловнаяОрганизация, ДанныеОснований.Организация) КАК Организация,
	|	СчетаФактуры.Организация.Префикс КАК Префикс,
	|	СчетаФактуры.ИндексПодразделения КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СчетаФактуры.Контрагент
	|		ИНАЧЕ ДанныеОснований.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СчетаФактуры.Грузоотправитель, ДанныеОснований.Организация)
	|		ИНАЧЕ ДанныеОснований.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	СчетаФактуры.КПППоставщика КАК КПППоставщика,
	|	СчетаФактуры.КПППокупателя КАК КПППокупателя,
	|	СчетаФактуры.ИННПокупателя КАК ИННПокупателя,
	|	ДанныеОснований.Валюта КАК Валюта,
	|	ДанныеОснований.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеОснований.Валюта.Код КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ТаблицаШапокДокументов КАК ДанныеОснований
	|	ПО 
	|		ДанныеОснований.Ссылка = СчетаФактуры.ДокументОснование
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО 
	|		СчетаФактуры.Ссылка = НоменклатураДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1000))
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1))) <> """"
	|			ТОГДА """"
	|		ИНАЧЕ ТаблицаТовары.Характеристика.НаименованиеПолное
	|	КОНЕЦ КАК ХарактеристикаНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество
	|		ИНАЧЕ (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.КоличествоУпаковок
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаНДС  КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В (&МассивДокументов)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[1];
	РезультатПоТабличнойЧасти = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуШапокОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ПервыйТип                  = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = Документы[ИмяОбъекта];
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаШапокДокументов", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	Если ТекстЗапроса = "" Тогда
		ТекстЗапроса = ПустойТекстЗапросаШапокОснований();
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПустойТекстЗапросаШапокОснований()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                               КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)  КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                   КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)     КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                   КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузополучатель,
	|	ЛОЖЬ                                                       КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                               КАК Номенклатура,
	|	""""                                                       КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Комиссионер,
	|	""""                                                       КАК Основание,
	|	ДАТАВРЕМЯ(1,1,1)                                           КАК ОснованиеДата,
	|	""""                                                       КАК ОснованиеНомер,
	|	""""                                                       КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1,1,1)                                           КАК ДоверенностьДата,
	|	""""                                                       КАК ДоверенностьВыдана,
	|	""""                                                       КАК ДоверенностьЛицо,
	|	""""                                                       КАК Кладовщик,
	|	""""                                                       КАК ДолжностьКладовщика
	|ПОМЕСТИТЬ ТаблицаШапокДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураНаНеподтвержденнуюРеализацию0";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаДанныхОснований", ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса));
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                                            КАК Ссылка,
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Контрагент                                           КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование                                    КАК ДокументОснование,
	|	ДанныеДокумента.Номер                                                КАК Номер,
	|	ДанныеДокумента.Дата                                                 КАК Дата,
	|	ДанныеДокумента.КодВидаОперации                                      КАК КодВидаОперации,
	|	ДанныеДокумента.КППКонтрагента                                       КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                       КАК ИННКонтрагента,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВернутьМногооборотнуюТару, ЛОЖЬ)     КАК ВернутьМногооборотнуюТару,
	|	РеестрДокументов.ХозяйственнаяОперация                               КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Ответственный                                        КАК Ответственный,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ                         КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Комментарий                                          КАК Комментарий,
	|	ДанныеДокумента.Проведен                                             КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                      КАК ПометкаУдаления,
	|	РеестрДокументов.ХозяйственнаяОперация = 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)  КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ПО
	|		ДанныеДокумента.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ПО
	|		ДанныеДокумента.ДокументОснование = РеестрДокументов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			Реквизиты.Номер, 
			Истина,
			Реквизиты.ОбособленноеПодразделение, 
			Реквизиты.ЦифровойИндексОбособленногоПодразделения);
			
	КодВидаОперацииКомиссия = УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Организация",					Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",						Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументОснование",				Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("НомерНаПечать",					Номер);
	Запрос.УстановитьПараметр("Номер",							Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",							Реквизиты.Период);
	Запрос.УстановитьПараметр("КодВидаОперации",				Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия",		КодВидаОперацииКомиссия);
	Запрос.УстановитьПараметр("КППКонтрагента",					Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ИННКонтрагента",					Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",		Реквизиты.ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",			Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",			Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Ответственный",					Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",					Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен",						Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",				Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ",	Реквизиты.РучнаяКорректировкаЖурналаСФ);
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", ТипыЗапасовСобственные);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураНаНеподтвержденнуюРеализацию0"));
	ЗначенияПараметровПроведения.Вставить("Валюта", 				 Константы.ВалютаРегламентированногоУчета.Получить());

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.УдалитьСчетФактураВыданныйПокупателю КАК УдалитьСчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                       КАК Период,
	|	&Организация                                                                  КАК Организация,
	|	&Контрагент                                                                   КАК Контрагент,
	|	Товары.Ссылка                                                                 КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&НомерНаПечать                                                                КАК НомерСчетаФактуры,
	|	&Период                                                                       КАК ДатаСчетаФактуры,
	|	&КодВидаОперации                                                              КАК КодВидаОперации,
	|	NULL,
	|	1                                                                             КАК КодСпособаВыставленияПолучения,
	|	&Валюта                                                                       КАК Валюта,
	|	СУММА(Товары.СуммаСНДС)                                                       КАК СуммаПоСчетуФактуре,
	|	СУММА(Товары.СуммаНДС)                                                        КАК СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&Период                                                                       КАК ДатаВыставленияПолучения,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ                                                                          КАК ПоСтавкеБезНДС,
	|	ИСТИНА                                                                        КАК СчетФактураНеВыставляется,
	|	NULL,
	|	&КППКонтрагента                                                               КАК КППКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СУММА(ВЫБОР 
	|			КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ Товары.СуммаСНДС
	|		КОНЕЦ)                                                                    КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ Товары.СуммаНДС
	|		КОНЕЦ)                                                                    КАК СуммаНДСКомиссия,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперацииКомиссия 
	|	КОНЕЦ)                                                                        КАК КодВидаОперацииКомиссия,
	|	NULL,
	|	&ИННКонтрагента                                                               КАК ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Покупатель,
	|	&Ссылка КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Товары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	NULL КАК ДатаОплаты,
	|	NULL КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеподтвержденаСтавка0) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	NULL КАК СторнирующаяЗаписьДопЛиста,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК Исправление,
	|	NULL КАК ДатаСчетаФактурыКомиссионера,
	|	СУММА(Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(Товары.СуммаНДС) КАК НДС
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|			ПО Товары.Ссылка.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (ВЫБОР
	|		КОГДА &ВернутьМногооборотнуюТару
	|			ТОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.СтавкаНДС,
	|	Товары.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеРеестра.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеРеестра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРеестра.Контрагент.Ключ КАК Контрагент,
	|	ДанныеРеестра.Договор КАК Договор,
	|	ДанныеРеестра.Подразделение КАК Подразделение,
	|	ДанныеРеестра.Партнер КАК Партнер,
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВтТаблицаДанныхОснований
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|		ПО ДанныеДокумента.Ссылка.ДокументОснование = ДанныеРеестра.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеРеестра.НаправлениеДеятельности,
	|	ДанныеРеестра.ХозяйственнаяОперация,
	|	ДанныеРеестра.Контрагент.Ключ,
	|	ДанныеРеестра.Договор,
	|	ДанныеРеестра.Подразделение,
	|	ДанныеРеестра.Партнер";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ТаблицаОснований.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ТаблицаОснований.Партнер                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	ТаблицаОснований.Договор                КАК Договор,
	|	ТаблицаОснований.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	ТаблицаОснований.Подразделение          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	ТаблицаОснований.СуммаНДС               КАК Сумма,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК РазделительЗаписи,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'Подтверждение ставки 0%'");
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0() Экспорт
	
	Возврат "РегистрСведений.НДССостояниеРеализации0.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
