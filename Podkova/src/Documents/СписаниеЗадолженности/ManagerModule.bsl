#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СписаниеЗадолженностиЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Списание задолженности".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеЗадолженности) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеЗадолженности.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеЗадолженности);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	СписаниеЗадолженностиЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	СписаниеЗадолженностиЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Задолженность.Партнер, Null КАК Истина)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРезервыПоСомнительнымДолгам(Запрос, ТекстыЗапроса, Регистры);
	
	СписаниеЗадолженностиЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ЗапросРеквизитов = Новый Запрос;
	ЗапросРеквизитов.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                  КАК Период,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ДанныеДокумента.Контрагент                            КАК Контрагент,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов ТОГДА
	|		ДанныеДокумента.СтатьяДоходов                
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов                      КАК АналитикаДоходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов                
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК СтатьяРасходов,
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) КАК ВидЦенностиНДСРасходов,
	|	ДанныеДокумента.АналитикаРасходов                     КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов ТОГДА
	|			ДанныеДокумента.СтатьяРасходов
	|		КОГДА ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов ТОГДА
	|			ДанныеДокумента.СтатьяДоходов                
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК СтатьяАктивовПассивов,
	|	ДанныеДокумента.АналитикаАктивовПассивов              КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.Подразделение                         КАК Подразделение,
	|	ДанныеДокумента.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.МоментВремени                         КАК МоментВремени,
	|	ДанныеДокумента.РасчетыМеждуОрганизациями             КАК РасчетыМеждуОрганизациями
	|ИЗ
	|	Документ.СписаниеЗадолженности КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокумента.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ЗапросРеквизитов.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = ЗапросРеквизитов.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                                  Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                                   Реквизиты.Номер);
	Запрос.УстановитьПараметр("Ссылка",                                  ДокументСсылка);
	Запрос.УстановитьПараметр("МоментВремени",                           Реквизиты.МоментВремени);
	Запрос.УстановитьПараметр("Организация",                             Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                              Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СтатьяДоходов",                           Реквизиты.СтатьяДоходов);
	Запрос.УстановитьПараметр("ВариантРаспределенияРасходовРегл",        Реквизиты.ВариантРаспределенияРасходовРегл);
	Запрос.УстановитьПараметр("ВидЦенностиНДСРасходов",                  Реквизиты.ВидЦенностиНДСРасходов);
	Запрос.УстановитьПараметр("АналитикаДоходов",                        Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("СтатьяРасходов",                          Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяАктивовПассивов",                   Реквизиты.СтатьяАктивовПассивов);
	Запрос.УстановитьПараметр("АналитикаРасходов",                       Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("АналитикаАктивовПассивов",                Реквизиты.АналитикаАктивовПассивов);
	Запрос.УстановитьПараметр("Подразделение",                           Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                   Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ВалютаУпр",                               Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",          Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациями",               Реквизиты.РасчетыМеждуОрганизациями);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихАктивовПассивов",   ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов")); 
	
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросАналитик.УстановитьПараметр("Ссылка",                    Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация",               Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Контрагент",                Запрос.Параметры.Контрагент);
	ЗапросАналитик.УстановитьПараметр("РасчетыМеждуОрганизациями", Запрос.Параметры.РасчетыМеждуОрганизациями);
	
	ЗапросАналитик.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задолженность.Заказ КАК Заказ,
	|
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		Задолженность.Партнер
	|	КОНЕЦ               КАК Партнер,
	|
	|	ВЫБОР КОГДА Задолженность.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		ИЛИ Задолженность.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|	ТОГДА
	|		Задолженность.Заказ
	|	ИНАЧЕ
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(Задолженность.Заказ.РасчетыЧерезОтдельногоКонтрагента, ЛОЖЬ) = ИСТИНА
	|				ТОГДА
	|					ВЫБОР 
	|						КОГДА Задолженность.ТипРасчетов =  ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|							ТОГДА ЕСТЬNULL(Задолженность.Заказ.ДоговорПокупки,ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|						ИНАЧЕ ЕСТЬNULL(Задолженность.Заказ.ДоговорПродажи,ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|					ТОГДА ВЫБОР
	|							КОГДА ЕСТЬNULL(Задолженность.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|							ИНАЧЕ ЕСТЬNULL(Задолженность.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|						КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЕСТЬNULL(Задолженность.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|								ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|							ИНАЧЕ ЕСТЬNULL(Задолженность.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ               КАК Договор,
	|	
	|	ЕСТЬNULL(Задолженность.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                    КАК Организация,
	|	ТаблицаОбъектовРасчетов.Партнер КАК Партнер,
	|	&Контрагент                     КАК Контрагент,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам  КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор 
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|";
	
	РезультатЗапроса = ЗапросАналитик.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Неопределено, // ВалютаДокумента
		Неопределено, // ВалютаВзаиморасчетов
		Запрос.Параметры.Период);

	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаЗадолженность";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	Задолженность.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Задолженность.Заказ КАК Заказ,
	|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДС, Задолженность.Сумма) КАК Сумма,
	|	ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА Задолженность.Сумма
	|	ИНАЧЕ ВЫБОР КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) <> 0
	|			ТОГДА Суммы.СуммаБезНДСРегл
	|			ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма
	|					* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|					* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаУпр
	|		ТОГДА Задолженность.Сумма
	|	ИНАЧЕ ВЫБОР КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0) <> 0
	|			ТОГДА Суммы.СуммаБезНДСУпр
	|			ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма
	|					* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	Задолженность.ТипРасчетов КАК ТипРасчетов,
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		Задолженность.Партнер
	|	КОНЕЦ  КАК Партнер,
	|	ЕСТЬNULL(Задолженность.Заказ.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Задолженность.Заказ.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
	|
	|ПОМЕСТИТЬ ТаблицаЗадолженность
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени) КАК КурсыВалют
	|	ПО
	|		Задолженность.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Задолженность.Ссылка = Суммы.Регистратор
	|		И Задолженность.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Задолженность.Сумма = Суммы.СуммаВзаиморасчетов
	|
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Номер КАК НомерРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказКлиента,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов.
	|	Задолженность.Сумма КАК Сумма,
	|	Задолженность.Сумма КАК КОплате,
	|	0 КАК КОтгрузке,
	|	
	|	Задолженность.СуммаРегл КАК СуммаРегл,
	|	Задолженность.СуммаУпр КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДокумента
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		Задолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И Задолженность.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор   
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Номер КАК НомерРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказКлиента,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов.
	|	-Задолженность.Сумма КАК Сумма,
	|	-Задолженность.Сумма КАК КОплате,
	|	0 КАК КОтгрузке,
	|	
	|	-Задолженность.СуммаРегл КАК СуммаРегл,
	|	-Задолженность.СуммаУпр КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДокумента
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		Задолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор  
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Номер КАК НомерРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказПоставщику,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	Задолженность.Сумма КАК Сумма,
	|	Задолженность.Сумма КАК КОплате,
	|	
	|	Задолженность.СуммаРегл КАК СуммаРегл,
	|	Задолженность.СуммаУпр КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)	КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДокумента
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		Задолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И Задолженность.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор  
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Номер КАК НомерРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Задолженность.Заказ КАК ЗаказПоставщику,
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	// Ресурсы
	|	-Задолженность.Сумма КАК Сумма,
	|	-Задолженность.Сумма КАК КОплате,
	|	
	|	-Задолженность.СуммаРегл КАК СуммаРегл,
	|	-Задолженность.СуммаУпр КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)	КАК ФормаОплаты,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДокумента
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		Задолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор  
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|	И Задолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяДоходов КАК СтатьяДоходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	
	|	Задолженность.СуммаУпр КАК Сумма,
	|	ВЫБОР КОГДА НЕ &УправленческийУчетОрганизаций
	|		ТОГДА 0
	|		ИНАЧЕ Задолженность.СуммаУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	|		ТОГДА 0
	|		ИНАЧЕ Задолженность.СуммаРегл
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &СтатьяДоходов <> НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задолженность.НомерСтроки";
	
	ПолеНаправления = ДенежныеСредстваПовтИсп.ТекстЗапросаРеквизитаОбъектаРасчетов(
						"Задолженность.Заказ",
						"НаправлениеДеятельности",
						"Документы.СписаниеЗадолженности.ТабличныеЧасти.Задолженность.Реквизиты.Заказ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", ПолеНаправления);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ОстаткиРезервовПоСомнительнымДолгам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОстаткиРезервовПоСомнительнымДолгам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, Задолженность.СуммаУпр) - ЕСТЬNULL(ОстаткиРезервов.СуммаУпр, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, Задолженность.СуммаУпр) - ЕСТЬNULL(ОстаткиРезервов.СуммаУпр, 0) КАК СуммаБезНДС,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, Задолженность.СуммаУпр) - ЕСТЬNULL(ОстаткиРезервов.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Задолженность.СуммаРегл) - ЕСТЬNULL(ОстаткиРезервов.СуммаРегл, 0) КАК СуммаСНДСРегл,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Задолженность.СуммаРегл) - ЕСТЬNULL(ОстаткиРезервов.СуммаРегл, 0) КАК СуммаБезНДСРегл,
	|	-ЕСТЬNULL(ОстаткиРезервов.ПостояннаяРазница, 0) КАК ПостояннаяРазница,
	|	-ЕСТЬNULL(ОстаткиРезервов.ВременнаяРазница, 0) КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО Статья.Ссылка = &СтатьяРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = &Ссылка
	|		И Задолженность.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И Задолженность.Сумма = Суммы.СуммаБезНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОстаткиРезервовПоСомнительнымДолгам КАК ОстаткиРезервов
	|	ПО
	|		Задолженность.ИдентификаторСтроки = ОстаткиРезервов.ИдентификаторСтроки
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам)
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|";
	
	ПолеНаправления = ДенежныеСредстваПовтИсп.ТекстЗапросаРеквизитаОбъектаРасчетов(
						"Задолженность.Заказ",
						"НаправлениеДеятельности",
						"Документы.СписаниеЗадолженности.ТабличныеЧасти.Задолженность.Реквизиты.Заказ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", ПолеНаправления);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	#Область СписаниеДебиторскойЗадолженности
	СписаниеДебиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов                  КАК Статья,
	|	&АналитикаАктивовПассивов               КАК Аналитика,
	|	Задолженность.СуммаУпр                  КАК Сумма
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности)
	|	И &ИспользоватьУчетПрочихАктивовПассивов
	|	И &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|";
	#КонецОбласти

	#Область СписаниеКредиторскойЗадолженности
	СписаниеКредиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов                  КАК Статья,
	|	&АналитикаАктивовПассивов               КАК Аналитика,
	|	Задолженность.СуммаУпр                  КАК Сумма
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И &ИспользоватьУчетПрочихАктивовПассивов
	|	И &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО";
	#КонецОбласти
	
	ТекстЗапроса = СписаниеКредиторскойЗадолженности
		+ " ОБЪЕДИНИТЬ ВСЕ " + СписаниеДебиторскойЗадолженности;
	
	ПолеНаправления = ДенежныеСредстваПовтИсп.ТекстЗапросаРеквизитаОбъектаРасчетов(
						"Задолженность.Заказ",
						"НаправлениеДеятельности",
						"Документы.СписаниеЗадолженности.ТабличныеЧасти.Задолженность.Реквизиты.Заказ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", ПолеНаправления);
	
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаДокумента.Сумма
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|		ТОГДА ТаблицаДокумента.Сумма
	|			* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|			* &КоэффициентПересчетаВВалютуРегл
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл,0)
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	
	|	0 КАК СуммаНДСРегл,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаВзаиморасчетов = &ВалютаУпр
	|			ТОГДА ТаблицаДокумента.Сумма
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|		ТОГДА ТаблицаДокумента.Сумма
	|			* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|			* &КоэффициентПересчетаВВалютуУпр
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр,0)
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|	
	|	0 КАК СуммаНДСУпр,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаДокумента.Сумма
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|		ТОГДА ТаблицаДокумента.Сумма
	|			* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|			* &КоэффициентПересчетаВВалютуРегл
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСРегл,0)
	|	КОНЕЦ КАК БазаНДСРегл,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВалютаВзаиморасчетов = &ВалютаУпр
	|			ТОГДА ТаблицаДокумента.Сумма
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|		ТОГДА ТаблицаДокумента.Сумма
	|			* ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|			* &КоэффициентПересчетаВВалютуУпр
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСУпр,0)
	|	КОНЕЦ КАК БазаНДСУпр,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|				И ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДокумента.ТипРасчетов
	|	КОНЕЦ КАК ТипРасчетов,
	|	
	|	ТаблицаДокумента.Сумма КАК СуммаВзаиморасчетов,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалют
	|	ПО
	|		ТаблицаДокумента.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = &Ссылка
	|		И ТаблицаДокумента.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И ТаблицаДокумента.Сумма = Суммы.СуммаБезНДС
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаДокумента.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ТаблицаДокумента.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|		
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаОбъектовРасчетов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И &Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаОбъектовРасчетов.Договор = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("РаспределениеРезервовПоСомнительнымДолгам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОстаткиРезервовПоСомнительнымДолгам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область СписаниеКредиторскойЗадолженности
	СписаниеКредиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер
	|	КОНЕЦ КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ КАК Договор,
	|	Задолженность.Заказ КАК ОбъектРасчетов,
	|	
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ВЫБОР 
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяДоходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	
	|	СУММА(Задолженность.СуммаУпр) КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	СУММА(Задолженность.СуммаРегл) КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	СУММА(Задолженность.Сумма) КАК СуммаВВалюте,
	|	0 КАК СуммаБезНДСВВалюте,
	|	
	|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(Задолженность.Сумма) КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	Задолженность.Заказ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ,
	|	Задолженность.Заказ,
	|	Задолженность.ВалютаВзаиморасчетов";
#КонецОбласти

#Область СписаниеДебиторскойЗадолженности
	СписаниеДебиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер
	|	КОНЕЦ КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ КАК Договор,
	|	Задолженность.Заказ КАК ОбъектРасчетов,
	|	
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ВЫБОР 
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяРасходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	
	|	СУММА(Задолженность.СуммаУпр - ЕСТЬNULL(ОстаткиРезервов.СуммаУпр, 0)) КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	СУММА(Задолженность.СуммаРегл - ЕСТЬNULL(ОстаткиРезервов.СуммаРегл, 0)) КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,

	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	СУММА(Задолженность.Сумма - ЕСТЬNULL(ОстаткиРезервов.Сумма, 0)) КАК СуммаВВалюте,
	|	0 КАК СуммаБезНДСВВалюте,

	|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(Задолженность.Сумма- ЕСТЬNULL(ОстаткиРезервов.Сумма, 0)) КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	Задолженность.Заказ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРезервовПоСомнительнымДолгам КАК ОстаткиРезервов
	|	ПО Задолженность.ИдентификаторСтроки = ОстаткиРезервов.ИдентификаторСтроки
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ,
	|	Задолженность.Заказ,
	|	Задолженность.ВалютаВзаиморасчетов";
#КонецОбласти

	ТекстЗапроса = СписаниеКредиторскойЗадолженности
		+ " ОБЪЕДИНИТЬ ВСЕ " + СписаниеДебиторскойЗадолженности;
		
	ПолеНаправления = ДенежныеСредстваПовтИсп.ТекстЗапросаРеквизитаОбъектаРасчетов(
						"Задолженность.Заказ",
						"НаправлениеДеятельности",
						"Документы.СписаниеЗадолженности.ТабличныеЧасти.Задолженность.Реквизиты.Заказ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", ПолеНаправления);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("РаспределениеРезервовПоСомнительнымДолгам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОстаткиРезервовПоСомнительнымДолгам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаЗадолженность", ТекстыЗапроса) Тогда
        ТекстЗапросаВременнаяТаблицаЗадолженность(Запрос, ТекстыЗапроса);
    КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	&Организация КАК Контрагент,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ КАК Договор,
	|	Задолженность.Заказ КАК ОбъектРасчетов,
	|	
	|	&НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА &РасчетыМеждуОрганизациями
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ Задолженность.Партнер
	|	КОНЕЦ КАК КорПартнер,
	|	&Контрагент КАК КорКонтрагент,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Задолженность.Заказ) В(
	|					ТИП(Справочник.ДоговорыКонтрагентов),
	|					ТИП(Справочник.ДоговорыМеждуОрганизациями),
	|					ТИП(Справочник.ДоговорыКредитовИДепозитов))
	|		ТОГДА Задолженность.Заказ
	|		ИНАЧЕ Задолженность.Заказ.Договор
	|	КОНЕЦ КАК КорДоговор,
	|	Задолженность.Заказ КАК КорОбъектРасчетов,
	|	
	|	ОстаткиРезервов.СуммаУпр КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ОстаткиРезервов.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	
	|	Задолженность.ВалютаВзаиморасчетов КАК Валюта,
	|	ОстаткиРезервов.Сумма КАК СуммаВВалюте,
	|	0 КАК СуммаБезНДСВВалюте,
	|	
	|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ОстаткиРезервов.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	Задолженность.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|	ОстаткиРезервов.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
	|	0 КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	Задолженность.Заказ КАК ИсточникГФУРасчетов,
	|	Задолженность.Заказ КАК КорИсточникГФУРасчетов
	|ИЗ
	|	ТаблицаЗадолженность КАК Задолженность
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиРезервовПоСомнительнымДолгам КАК ОстаткиРезервов
	|	ПО Задолженность.ИдентификаторСтроки = ОстаткиРезервов.ИдентификаторСтроки
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам)";
		
	ПолеНаправления = ДенежныеСредстваПовтИсп.ТекстЗапросаРеквизитаОбъектаРасчетов(
						"Задолженность.Заказ",
						"НаправлениеДеятельности",
						"Документы.СписаниеЗадолженности.ТабличныеЧасти.Задолженность.Реквизиты.Заказ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", ПолеНаправления);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОстаткиРезервовПоСомнительнымДолгам(Запрос, ТекстыЗапроса)
	
	// Распределяем табличную часть документа списание резервов, данные из регистров взаиморасчетов
	// и остатки из регистра резервов. В итоге добавляем к текстам запроса 2 временные таблицы:
	//  - ОстаткиРезервовПоСомнительнымДолгам - в разрезе Идентификаторов строк табличной части (используется для Прочих расходов)
	//  - РаспределениеРезервовПоСомнительнымДолгам - в разрезе Расчетных документов и Идентификаторов строк (используется для Резервов)
	
	ВспомогательныйЗапрос = Новый Запрос;
	ВспомогательныйЗапрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Для Каждого Параметр Из Запрос.Параметры Цикл
		ВспомогательныйЗапрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	ВспомогательныйЗапрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	
	#Область ТекстЗапросаРаспределениеРасчетовПоИдентификаторамСтрок
	
	ВспомогательныйЗапрос.Текст =
	"ВЫБРАТЬ
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказКлиента КАК ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	СУММА(Расчеты.Долг * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(Расчеты.ДолгРегл * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(Расчеты.ДолгУпр * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаУпр
	|ПОМЕСТИТЬ вт_Расчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|ГДЕ
	|	Расчеты.Регистратор = &Ссылка
	|	И Расчеты.Активность
	|	И НЕ &НоваяАрхитектураВзаиморасчетов
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент
	|ИМЕЮЩИЕ
	|	СУММА(Расчеты.Долг * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	СУММА(Расчеты.Долг * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(Расчеты.ДолгРегл * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(Расчеты.ДолгУпр * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Расчеты
	|ГДЕ
	|	Расчеты.ДокументРегистратор = &Ссылка
	|	И Расчеты.Активность
	|	И &НоваяАрхитектураВзаиморасчетов
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент
	|ИМЕЮЩИЕ
	|	СУММА(Расчеты.Долг * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	СУММА(Расчеты.Предоплата * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(Расчеты.ПредоплатаРегл * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(Расчеты.ПредоплатаУпр * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|ГДЕ
	|	Расчеты.Регистратор = &Ссылка
	|	И Расчеты.Активность
	|	И НЕ &НоваяАрхитектураВзаиморасчетов
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент
	|ИМЕЮЩИЕ
	|	СУММА(Расчеты.Предоплата * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	СУММА(Расчеты.Предоплата * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(Расчеты.ПредоплатаРегл * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(Расчеты.ПредоплатаУпр * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
	|ГДЕ
	|	Расчеты.ДокументРегистратор = &Ссылка
	|	И Расчеты.Активность
	|	И &НоваяАрхитектураВзаиморасчетов
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент
	|ИМЕЮЩИЕ
	|	СУММА(Расчеты.Предоплата * ВЫБОР
	|			КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_Расчеты.АналитикаУчетаПоПартнерам,
	|	вт_Расчеты.ОбъектРасчетов,
	|	вт_Расчеты.Валюта,
	|	вт_Расчеты.РасчетныйДокумент
	|ПОМЕСТИТЬ вт_АналитикаРезервовПоСомнительнымДолгам
	|ИЗ
	|	вт_Расчеты КАК вт_Расчеты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Расчеты.АналитикаУчетаПоПартнерам,
	|	вт_Расчеты.ОбъектРасчетов,
	|	вт_Расчеты.Валюта,
	|	вт_Расчеты.РасчетныйДокумент,
	|	вт_Расчеты.Сумма,
	|	вт_Расчеты.СуммаРегл,
	|	вт_Расчеты.СуммаУпр
	|ИЗ
	|	вт_Расчеты КАК вт_Расчеты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	Задолженность.Заказ КАК ОбъектРасчетов,
	|	Задолженность.ИдентификаторСтроки,
	|	Задолженность.Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) КАК СуммаРегл
	|ИЗ
	|	Документ.СписаниеЗадолженности.Задолженность КАК Задолженность
	|	
	|	// Уточнение сумм в валюте регл и упр
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		&Ссылка = Суммы.Регистратор
	|		И Задолженность.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Задолженность.Сумма = Суммы.СуммаБезНДС
	|		И 0 <> Суммы.СуммаБезНДСРегл
	|ГДЕ
	|	Задолженность.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	#КонецОбласти
	
	РезультатПакета = ВспомогательныйЗапрос.ВыполнитьПакет();
	
	ТаблицаРасчеты = РезультатПакета[2].Выгрузить();
	ТаблицаРасчеты.Индексы.Добавить("ОбъектРасчетов");
	ТаблицаЗадолженность = РезультатПакета[3].Выгрузить();
	
	ТаблицаРасчетныеДокументы = ТаблицаРасчеты.СкопироватьКолонки();
	ТаблицаРасчетныеДокументы.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36)));
	
	ТаблицаРаспределения = ТаблицаРасчетныеДокументы.СкопироватьКолонки();
	ТаблицаРаспределения.Колонки.Добавить("ВременнаяРазница", Новый ОписаниеТипов("Число"));
	ТаблицаРаспределения.Колонки.Добавить("ПостояннаяРазница", Новый ОписаниеТипов("Число"));
	
	Если Не ТаблицаЗадолженность.Количество() = 0 Тогда
		
		// Распределяем таблицу расчетов по идентификаторам строк таблицы задолженности.
		
		Для Каждого СтрокаЗадолженность Из ТаблицаЗадолженность Цикл
			СтруктураПоиска = Новый Структура("ОбъектРасчетов", СтрокаЗадолженность.ОбъектРасчетов);
			НайденныеСтроки = ТаблицаРасчеты.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаРасчеты Из НайденныеСтроки Цикл
				Если СтрокаЗадолженность.Сумма = 0 И СтрокаЗадолженность.СуммаРегл = 0 И СтрокаЗадолженность.СуммаУпр = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаРасчеты.Сумма = 0 И СтрокаРасчеты.СуммаРегл = 0 И СтрокаРасчеты.СуммаУпр = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Сумма = Мин(СтрокаЗадолженность.Сумма, СтрокаРасчеты.Сумма);
				СуммаУпр = Мин(СтрокаЗадолженность.СуммаУпр, СтрокаРасчеты.СуммаУпр);
				СуммаРегл = Мин(СтрокаЗадолженность.СуммаРегл, СтрокаРасчеты.СуммаРегл);
				
				НоваяСтрока = ТаблицаРасчетныеДокументы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчеты,, "Сумма,СуммаУпр,СуммаРегл");
				НоваяСтрока.ИдентификаторСтроки = СтрокаЗадолженность.ИдентификаторСтроки;
				НоваяСтрока.Сумма = Сумма;
				НоваяСтрока.СуммаУпр = СуммаУпр;
				НоваяСтрока.СуммаРегл = СуммаРегл;
				
				СтрокаЗадолженность.Сумма = СтрокаЗадолженность.Сумма - Сумма;
				СтрокаЗадолженность.СуммаУпр = СтрокаЗадолженность.СуммаУпр - СуммаУпр;
				СтрокаЗадолженность.СуммаРегл = СтрокаЗадолженность.СуммаРегл - СуммаРегл;
				
				СтрокаРасчеты.Сумма = СтрокаРасчеты.Сумма - Сумма;
				СтрокаРасчеты.СуммаУпр = СтрокаРасчеты.СуммаУпр - СуммаУпр;
				СтрокаРасчеты.СуммаРегл = СтрокаРасчеты.СуммаРегл - СуммаРегл;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("РаспределениеРезервовПоСомнительнымДолгам", ТаблицаРаспределения);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.АналитикаУчетаПоПартнерам,
	|	Т.ОбъектРасчетов,
	|	Т.Валюта,
	|	Т.РасчетныйДокумент,
	|	Т.ИдентификаторСтроки,
	|	Т.Сумма,
	|	Т.СуммаУпр,
	|	Т.СуммаРегл,
	|	Т.ВременнаяРазница,
	|	Т.ПостояннаяРазница
	|ПОМЕСТИТЬ РаспределениеРезервовПоСомнительнымДолгам
	|ИЗ
	|	&РаспределениеРезервовПоСомнительнымДолгам КАК Т";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "РаспределениеРезервовПоСомнительнымДолгам");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.ИдентификаторСтроки,
	|	СУММА(Т.Сумма) КАК Сумма,
	|	СУММА(Т.СуммаУпр) КАК СуммаУпр,
	|	СУММА(Т.СуммаРегл) КАК СуммаРегл,
	|	СУММА(Т.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(Т.ПостояннаяРазница) КАК ПостояннаяРазница
	|ПОМЕСТИТЬ ОстаткиРезервовПоСомнительнымДолгам
	|ИЗ
	|	РаспределениеРезервовПоСомнительнымДолгам КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.ИдентификаторСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОстаткиРезервовПоСомнительнымДолгам");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРезервыПоСомнительнымДолгам(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "РезервыПоСомнительнымДолгам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("РаспределениеРезервовПоСомнительнымДолгам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОстаткиРезервовПоСомнительнымДолгам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	РаспределениеРезервов.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РаспределениеРезервов.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РаспределениеРезервов.Валюта КАК Валюта,
	|	РаспределениеРезервов.РасчетныйДокумент КАК РасчетныйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ТипСуммы,
	|	
	|	РаспределениеРезервов.Сумма КАК Сумма,
	|	РаспределениеРезервов.СуммаУпр КАК СуммаУпр,
	|	РаспределениеРезервов.СуммаРегл КАК СуммаРегл,
	|	РаспределениеРезервов.ПостояннаяРазница КАК ПостояннаяРазница,
	|	РаспределениеРезервов.ВременнаяРазница КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам) КАК ХозяйственнаяОперация,
	|	РаспределениеРезервов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	РаспределениеРезервовПоСомнительнымДолгам КАК РаспределениеРезервов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
