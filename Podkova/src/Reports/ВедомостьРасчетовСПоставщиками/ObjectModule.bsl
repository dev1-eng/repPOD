#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	
	Если Параметры.Свойство("ПараметрКоманды")
			И Параметры.Свойство("ОписаниеКоманды")
			И Параметры.ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда 
		
		СформироватьПараметрыОтчета(Параметры.ПараметрКоманды, ЭтаФорма.ФормаПараметры, Параметры);
			
	КонецЕсли;
	
	ФормаПараметры = ЭтаФорма.ФормаПараметры;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	// Изменение настроек по функциональным опциям
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы);
	
	// Установка значений по умолчанию
	УстановитьОбязательныеНастройки(КомпоновщикНастроекФормы, Истина);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	// Сформируем отчет
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрДанныеОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОтчета,"ДанныеОтчета");
	
	ТекстЗапроса = ТекстЗапроса(ПараметрДанныеОтчета.Значение);
	ВзаиморасчетыСервер.ДобавитьОтборыВыбранныхПолейВЗапрос(ТекстЗапроса, НастройкиОтчета, СхемаКомпоновкиДанных.ВычисляемыеПоля, "Расчеты");
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = ТекстЗапроса;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОбязательныеНастройки(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	
	КомпоновкаДанныхСервер.УстановитьПараметрыВалютыОтчета(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	СегментыСервер.ВключитьОтборПоСегментуПартнеровВСКД(КомпоновщикНастроек);
	УстановитьДатуОтчета(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
КонецПроцедуры

Процедура УстановитьДатуОтчета(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы)
	
	ПараметрДатаОтчетаГраница = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "КонецПериодаГраница");
	ПараметрДатаОтчетаГраница.Использование = Истина;

	ПараметрПериод = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "Период");
	Если ПараметрПериод.Использование И ЗначениеЗаполнено(ПараметрПериод.Значение.ДатаНачала) Тогда
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоОстатки", ПараметрПериод.Значение.ДатаНачала);
		ПараметрДатаОтчетаГраница.Значение = Новый Граница(КонецДня(ПараметрПериод.Значение.ДатаОкончания), ВидГраницы.Включая);
	Иначе
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоОстатки", Дата(1,1,1,0,0,1));
		ПараметрДатаОтчетаГраница.Значение = Дата(1,1,1)
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы)
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "Контрагент");
	КонецЕсли;
КонецПроцедуры

Функция ТекстЗапроса(ВалютаОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Сегменты.Партнер КАК Партнер,
	|	ИСТИНА КАК ИспользуетсяОтборПоСегментуПартнеров
	|ПОМЕСТИТЬ ОтборПоСегментуПартнеров
	|ИЗ
	|	РегистрСведений.ПартнерыСегмента КАК Сегменты
	|{ГДЕ
	|	Сегменты.Сегмент.* КАК СегментПартнеров,
	|	Сегменты.Партнер.* КАК Партнер}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партнер,
	|	ИспользуетсяОтборПоСегментуПартнеров
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КурсВалюты.Валюта КАК Валюта,
	|	КурсВалюты.Курс * КурсВалютыОтчета.Кратность / (КурсВалюты.Кратность * КурсВалютыОтчета.Курс) КАК Коэффициент
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних({&КонецПериода}, ) КАК КурсВалюты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних({&КонецПериода}, Валюта = &Валюта) КАК КурсВалютыОтчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	КурсВалюты.Кратность <> 0
	|	И КурсВалютыОтчета.Курс <> 0
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расчеты.Организация                                     КАК Организация,
	|	Расчеты.Партнер                                         КАК Партнер,
	|	Расчеты.Контрагент                                      КАК Контрагент,
	|	Расчеты.Договор                                         КАК Договор,
	|	Расчеты.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов                                  КАК ОбъектРасчетов,
	|	Расчеты.Валюта                                          КАК Валюта,
	|	Расчеты.РасчетныйДокумент                               КАК РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения                               КАК ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения                          КАК ДатаПлановогоПогашения,
	|	СУММА(Расчеты.ДолгПоставщикаНачальныйОстаток)           КАК ДолгПоставщикаНачальныйОстаток,
	|	СУММА(Расчеты.НашДолгНачальныйОстаток)                  КАК НашДолгНачальныйОстаток,
	|	СУММА(Расчеты.ПлановаяОплатаНачальныйОстаток)           КАК ПлановаяОплатаНачальныйОстаток,
	|	СУММА(Расчеты.ПлановаяПоставкаНачальныйОстаток)         КАК ПлановаяПоставкаНачальныйОстаток,
	|	
	|	СУММА(Расчеты.Заказано)                                 КАК Заказано,
	|	СУММА(Расчеты.ЗаказаноКОплате)                          КАК ЗаказаноКОплате,
	|	СУММА(Расчеты.Поставлено)                               КАК Поставлено,
	|	СУММА(Расчеты.Зачтено)                                  КАК Зачтено,
	|	СУММА(Расчеты.Оплачено)                                 КАК Оплачено,
	|	СУММА(Расчеты.СписаниеПереоценка)                       КАК СписаниеПереоценка,
	|	СУММА(Расчеты.Оплачивается)                             КАК Оплачивается,
	|	
	|	СУММА(Расчеты.ДолгПоставщикаКонечныйОстаток)            КАК ДолгПоставщикаКонечныйОстаток,
	|	СУММА(Расчеты.НашДолгКонечныйОстаток)                   КАК НашДолгКонечныйОстаток,
	|	СУММА(Расчеты.ПлановаяОплатаКонечныйОстаток)            КАК ПлановаяОплатаКонечныйОстаток,
	|	СУММА(Расчеты.ПлановаяПоставкаКонечныйОстаток)          КАК ПлановаяПоставкаКонечныйОстаток
	|ИЗ (
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                                     КАК Организация,
	|		АналитикаУчета.Партнер                                         КАК Партнер,
	|		АналитикаУчета.Контрагент                                      КАК Контрагент,
	|		АналитикаУчета.Договор                                         КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|		РасчетыПоСрокам.ОбъектРасчетов                                 КАК ОбъектРасчетов,
	|		РасчетыПоСрокам.Валюта                                         КАК Валюта,
	|		РасчетыПоСрокам.РасчетныйДокумент                              КАК РасчетныйДокумент,
	|		РасчетыПоСрокам.ДатаВозникновения                              КАК ДатаВозникновения,
	|		РасчетыПоСрокам.ДатаПлановогоПогашения                         КАК ДатаПлановогоПогашения,
	|		РасчетыПоСрокам.ПредоплатаРеглОстаток                          КАК ДолгПоставщикаНачальныйОстаток,
	|		РасчетыПоСрокам.ДолгРеглОстаток                                КАК НашДолгНачальныйОстаток,
	|		0                                                              КАК ПлановаяОплатаНачальныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		0                                                              КАК Заказано,
	|		0                                                              КАК ЗаказаноКОплате,
	|		0                                                              КАК Поставлено,
	|		0                                                              КАК Зачтено,
	|		0                                                              КАК Оплачено,
	|		0                                                              КАК СписаниеПереоценка,
	|		0                                                              КАК Оплачивается,
	|		
	|		0                                                              КАК ДолгПоставщикаКонечныйОстаток,
	|		0                                                              КАК НашДолгКонечныйОстаток,
	|		0                                                              КАК ПлановаяОплатаКонечныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам.Остатки({&НачалоОстатки}) КАК РасчетыПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	{ГДЕ
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                                     КАК Организация,
	|		АналитикаУчета.Партнер                                         КАК Партнер,
	|		АналитикаУчета.Контрагент                                      КАК Контрагент,
	|		АналитикаУчета.Договор                                         КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|		РасчетыПоСрокам.ОбъектРасчетов                                 КАК ОбъектРасчетов,
	|		РасчетыПоСрокам.Валюта                                         КАК Валюта,
	|		РасчетыПоСрокам.РасчетныйДокумент                              КАК РасчетныйДокумент,
	|		РасчетыПоСрокам.ДатаВозникновения                              КАК ДатаВозникновения,
	|		РасчетыПоСрокам.ДатаПлановогоПогашения                         КАК ДатаПлановогоПогашения,
	|		0                                                              КАК ДолгПоставщикаНачальныйОстаток,
	|		0                                                              КАК НашДолгНачальныйОстаток,
	|		0                                                              КАК ПлановаяОплатаНачальныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		0                                                              КАК Заказано,
	|		0                                                              КАК ЗаказаноКОплате,
	|		0                                                              КАК Поставлено,
	|		0                                                              КАК Зачтено,
	|		0                                                              КАК Оплачено,
	|		0                                                              КАК СписаниеПереоценка,
	|		0                                                              КАК Оплачивается,
	|		
	|		РасчетыПоСрокам.ПредоплатаРеглОстаток                          КАК ДолгПоставщикаКонечныйОстаток,
	|		РасчетыПоСрокам.ДолгРеглОстаток                                КАК НашДолгКонечныйОстаток,
	|		0                                                              КАК ПлановаяОплатаКонечныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам.Остатки({&КонецПериодаГраница}) КАК РасчетыПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	{ГДЕ
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                                     КАК Организация,
	|		АналитикаУчета.Партнер                                         КАК Партнер,
	|		АналитикаУчета.Контрагент                                      КАК Контрагент,
	|		АналитикаУчета.Договор                                         КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности                         КАК НаправлениеДеятельности,
	|		РасчетыПоСрокам.ОбъектРасчетов                                 КАК ОбъектРасчетов,
	|		РасчетыПоСрокам.Валюта                                         КАК Валюта,
	|		РасчетыПоСрокам.РасчетныйДокумент                              КАК РасчетныйДокумент,
	|		РасчетыПоСрокам.ДатаВозникновения                              КАК ДатаВозникновения,
	|		РасчетыПоСрокам.ДатаПлановогоПогашения                         КАК ДатаПлановогоПогашения,
	|		0                                                              КАК ДолгПоставщикаНачальныйОстаток,
	|		0                                                              КАК НашДолгНачальныйОстаток,
	|		0                                                              КАК ПлановаяОплатаНачальныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		0                                                              КАК Заказано,
	|		0                                                              КАК ЗаказаноКОплате,
	|		&ПоставленоПоставщиком                                         КАК Поставлено,
	|		&ЗачтеноПоставщиком                                            КАК Зачтено,
	|		&ОплаченоПоставщику                                            КАК Оплачено,
	|		&СписаниеПереоценка                                            КАК СписаниеПереоценка,
	|		0                                                              КАК Оплачивается,
	|		
	|		0                                                              КАК ДолгПоставщикаКонечныйОстаток,
	|		0                                                              КАК НашДолгКонечныйОстаток,
	|		0                                                              КАК ПлановаяОплатаКонечныйОстаток,
	|		0                                                              КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПоСрокам.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	{ГДЕ
	|		РасчетыПоСрокам.Период МЕЖДУ &НачалоПериода И &КонецПериода,
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КлючАналитики.Организация                КАК Организация,
	|		КлючАналитики.Партнер                    КАК Партнер,
	|		КлючАналитики.Контрагент                 КАК Контрагент,
	|		КлючАналитики.Договор                    КАК Договор,
	|		КлючАналитики.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|		РасчетыПланОплат.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		РасчетыПланОплат.Валюта                  КАК Валюта,
	|		РасчетыПланОплат.ДокументПлан            КАК ДокументПлан,
	|		РасчетыПланОплат.ДатаВозникновения       КАК ДатаВозникновения,
	|		РасчетыПланОплат.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|		0                                        КАК ДолгПоставщикаНачальныйОстаток,
	|		0                                        КАК НашДолгНачальныйОстаток,
	|		РасчетыПланОплат.КОплатеНачальныйОстаток 
	|			* ЕСТЬNULL(Курсы.Коэффициент,1)      КАК ПлановаяОплатаНачальныйОстаток,
	|		0                                        КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		0                                        КАК Заказано,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(РасчетыПланОплат.ДокументПлан) В (&ТипыДокументовПлана)
	|				ТОГДА РасчетыПланОплат.КОплатеПриход * ЕСТЬNULL(Курсы.Коэффициент,1)
	|			ИНАЧЕ 0
	|		КОНЕЦ                                    КАК ЗаказаноКОплате,
	|		0                                        КАК Поставлено,
	|		0                                        КАК Зачтено,
	|		0                                        КАК Оплачено,
	|		0                                        КАК СписаниеПереоценка,
	|		0                                        КАК Оплачивается,
	|		
	|		0                                        КАК ДолгПоставщикаКонечныйОстаток,
	|		0                                        КАК НашДолгКонечныйОстаток,
	|		РасчетыПланОплат.КОплатеКонечныйОстаток
	|			* ЕСТЬNULL(Курсы.Коэффициент,1)      КАК ПлановаяОплатаКонечныйОстаток,
	|		0                                        КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПланОплат.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}) КАК РасчетыПланОплат
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПланОплат.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК Курсы
	|				ПО Курсы.Валюта = РасчетыПланОплат.Валюта
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	{ГДЕ
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КлючАналитики.Организация                   КАК Организация,
	|		КлючАналитики.Партнер                       КАК Партнер,
	|		КлючАналитики.Контрагент                    КАК Контрагент,
	|		КлючАналитики.Договор                       КАК Договор,
	|		КлючАналитики.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|		РасчетыПланОтгрузок.ОбъектРасчетов          КАК ОбъектРасчетов,
	|		РасчетыПланОтгрузок.Валюта                  КАК Валюта,
	|		РасчетыПланОтгрузок.ДокументПлан            КАК ДокументПлан,
	|		РасчетыПланОтгрузок.ДатаВозникновения       КАК ДатаВозникновения,
	|		РасчетыПланОтгрузок.ДатаПлановогоПогашения  КАК ДатаПлановогоПогашения,
	|		0                                           КАК ДолгПоставщикаНачальныйОстаток,
	|		0                                           КАК НашДолгНачальныйОстаток,
	|		0                                           КАК ПлановаяОплатаНачальныйОстаток,
	|		РасчетыПланОтгрузок.СуммаНачальныйОстаток 
	|			* ЕСТЬNULL(Курсы.Коэффициент,1)         КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(РасчетыПланОтгрузок.ДокументПлан) В (&ТипыДокументовПлана)
	|				ТОГДА РасчетыПланОтгрузок.СуммаПриход * ЕСТЬNULL(Курсы.Коэффициент,1)
	|			ИНАЧЕ 0
	|		КОНЕЦ                                       КАК Заказано,
	|		0                                           КАК ЗаказаноКОплате,
	|		0                                           КАК Поставлено,
	|		0                                           КАК Зачтено,
	|		0                                           КАК Оплачено,
	|		0                                           КАК СписаниеПереоценка,
	|		0                                           КАК Оплачивается,
	|		
	|		0                                           КАК ДолгПоставщикаКонечныйОстаток,
	|		0                                           КАК НашДолгКонечныйОстаток,
	|		0                                           КАК ПлановаяОплатаКонечныйОстаток,
	|		РасчетыПланОтгрузок.СуммаКонечныйОстаток
	|			* ЕСТЬNULL(Курсы.Коэффициент,1)         КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПланПоставок.ОстаткиИОбороты({&НачалоПериода}, {&КонецПериода}) КАК РасчетыПланОтгрузок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыПланОтгрузок.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК Курсы
	|				ПО Курсы.Валюта = РасчетыПланОтгрузок.Валюта
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	{ГДЕ
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АналитикаУчета.Организация                  КАК Организация,
	|		АналитикаУчета.Партнер                      КАК Партнер,
	|		АналитикаУчета.Контрагент                   КАК Контрагент,
	|		АналитикаУчета.Договор                      КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|		РасчетыСПоставщиками.ЗаказПоставщику        КАК ОбъектРасчетов,
	|		РасчетыСПоставщиками.Валюта                 КАК Валюта,
	|		Неопределено                                КАК ДокументПлан,
	|		ДАТАВРЕМЯ(1,1,1)                            КАК ДатаВозникновения,
	|		ДАТАВРЕМЯ(1,1,1)                            КАК ДатаПлановогоПогашения,
	|		0                                           КАК ДолгПоставщикаНачальныйОстаток,
	|		0                                           КАК НашДолгНачальныйОстаток,
	|		0                                           КАК ПлановаяОплатаНачальныйОстаток,
	|		0                                           КАК ПлановаяПоставкаНачальныйОстаток,
	|		
	|		0                                           КАК Заказано,
	|		0                                           КАК ЗаказаноКОплате,
	|		0                                           КАК Поставлено,
	|		0                                           КАК Зачтено,
	|		0                                           КАК Оплачено,
	|		0                                           КАК СписаниеПереоценка,
	|		ВЫБОР КОГДА РасчетыСПоставщиками.ОплачиваетсяОстаток < 0
	|				ТОГДА -РасчетыСПоставщиками.ОплачиваетсяОстаток
	|			ИНАЧЕ 0 
	|		КОНЕЦ * ЕСТЬNULL(Курсы.Коэффициент,1)       КАК Оплачивается,
	|		
	|		0                                           КАК ДолгПоставщикаКонечныйОстаток,
	|		0                                           КАК НашДолгКонечныйОстаток,
	|		0                                           КАК ПлановаяОплатаКонечныйОстаток,
	|		0                                           КАК ПлановаяПоставкаКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Остатки({&КонецПериодаГраница}) КАК РасчетыСПоставщиками
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|				ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК Курсы
	|				ПО Курсы.Валюта = РасчетыСПоставщиками.Валюта
	|	ГДЕ
	|		АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И РасчетыСПоставщиками.ОплачиваетсяОстаток < 0
	|	{ГДЕ
	|		АналитикаУчета.Организация.* КАК Организация,
	|		АналитикаУчета.Партнер.* КАК Партнер,
	|		АналитикаУчета.Контрагент.* КАК Контрагент,
	|		АналитикаУчета.Договор.* КАК Договор,
	|		АналитикаУчета.НаправлениеДеятельности.* КАК НаправлениеДеятельности,
	|		(АналитикаУчета.Партнер В
	|				(ВЫБРАТЬ
	|					ОтборПоСегментуПартнеров.Партнер
	|				ИЗ
	|					ОтборПоСегментуПартнеров
	|				ГДЕ
	|					ОтборПоСегментуПартнеров.ИспользуетсяОтборПоСегментуПартнеров = &ИспользуетсяОтборПоСегментуПартнеров))}) КАК Расчеты
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Организация,
	|	Расчеты.Партнер,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.Валюта,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ДатаВозникновения,
	|	Расчеты.ДатаПлановогоПогашения
	|ИМЕЮЩИЕ
	|	(&ОтборыВыбранныхПолей)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ПоставленоПоставщиком", ВзаиморасчетыСервер.ШаблонПоляПоставленоПоставщиком());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ЗачтеноПоставщиком", ВзаиморасчетыСервер.ШаблонПоляЗачтеноПоставщиком());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОплаченоПоставщику", ВзаиморасчетыСервер.ШаблонПоляОплаченоПоставщику());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&СписаниеПереоценка", ВзаиморасчетыСервер.ШаблонПоляСписаниеПереоценкаЗадолженности());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ТипыДокументовПлана", ПолучитьТипыДокументовПлана());
	
	Если ВалютаОтчета = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Регл","");
	ИначеЕсли ВалютаОтчета = 2 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Регл","Упр");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ПолучитьТипыДокументовПлана()

	ТекстТиповДокументов = ""; 
	
	
	ТекстТиповДокументов = ТекстТиповДокументов + "ТИП(Документ.ЗаказПоставщику)";
	
	Возврат ТекстТиповДокументов;
	
КонецФункции

Процедура СформироватьПараметрыОтчета(ПараметрКоманды, ПараметрыФормы, Параметры)
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		ЭтоМассив = Истина;
		Если ПараметрКоманды.Количество() > 0 Тогда
			ПервыйЭлемент = ПараметрКоманды[0];
		Иначе
			ПервыйЭлемент = Неопределено;
		КонецЕсли;
	Иначе
		ЭтоМассив = Ложь;
		ПервыйЭлемент = ПараметрКоманды;
	КонецЕсли;
	
	Если ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.Партнеры") Тогда
		Если ЭтоМассив Тогда
			ЕстьПодчиненныеПартнеры = Ложь;
			Для Каждого ЭлементПараметраКоманды Из ПараметрКоманды Цикл
				Если ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(ЭлементПараметраКоманды) Тогда
					ЕстьПодчиненныеПартнеры = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ЕстьПодчиненныеПартнеры = ПартнерыИКонтрагенты.ЕстьПодчиненныеПартнеры(ПараметрКоманды);
		КонецЕсли;
		
		Если ЕстьПодчиненныеПартнеры Тогда
			ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных();
			ЭлементОтбора = ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
			ЗначениеОтбора = ПараметрКоманды;
			Если ЭтоМассив Тогда
				ЗначениеОтбора = Новый СписокЗначений;
				ЗначениеОтбора.ЗагрузитьЗначения(ПараметрКоманды);
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			КонецЕсли;
			ЭлементОтбора.ПравоеЗначение = ЗначениеОтбора;
			ПараметрыФормы.ФиксированныеНастройки = ФиксированныеНастройки;
			Параметры.ФиксированныеНастройки = ФиксированныеНастройки;
			ПараметрыФормы.КлючНазначенияИспользования = "ГруппаПартнеров";
			Параметры.КлючНазначенияИспользования = "ГруппаПартнеров";
		Иначе
			ПараметрыФормы.Отбор = Новый Структура("Партнер", ПараметрКоманды);
			ПараметрыФормы.КлючНазначенияИспользования = ПараметрКоманды;
			Параметры.КлючНазначенияИспользования = ПараметрКоманды;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.ДоговорыКонтрагентов") 
		ИЛИ ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		ПараметрыФормы.Отбор = Новый Структура("Договор", ПараметрКоманды);
		ПараметрыФормы.КлючНазначенияИспользования = ПараметрКоманды;
		Параметры.КлючНазначенияИспользования = ПараметрКоманды;
	Иначе
		ОбъектРасчетов = ВзаиморасчетыСервер.ОбъектРасчетовПоСсылке(ПервыйЭлемент);
		ПараметрыФормы.Отбор = Новый Структура("ОбъектРасчетов", ОбъектРасчетов);
		ПараметрыФормы.КлючНазначенияИспользования = ОбъектРасчетов;
		Параметры.КлючНазначенияИспользования = ОбъектРасчетов;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли