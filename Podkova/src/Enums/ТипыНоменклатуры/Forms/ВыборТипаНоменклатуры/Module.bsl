#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ТипНоменклатурыНабор.Видимость  = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
	Элементы.ТипНоменклатурыМногооборотнаяТара.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	Элементы.ТипНоменклатурыРабота.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры")
												И Не ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	СуффиксыИменЭлементов = Новый Массив;
	СуффиксыИменЭлементов.Добавить("Набор");
	СуффиксыИменЭлементов.Добавить("МногооборотнаяТара");
	СуффиксыИменЭлементов.Добавить("Работа");
	СуффиксыИменЭлементов.Добавить("Товар");
	СуффиксыИменЭлементов.Добавить("Услуга");
	
	Для Каждого Суффикс Из СуффиксыИменЭлементов Цикл
		Элементы["ТипНоменклатуры" + Суффикс].Подсказка = Перечисления.ТипыНоменклатуры.ПодсказкаПоТипуНоменклатуры(
															ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры." + Суффикс));
	КонецЦикла;
	
	ТипНоменклатуры = Параметры.ТипНоменклатуры;
	
	СвязьОсобенностейУчетаИФО = Перечисления.ОсобенностиУчетаНоменклатуры.СвязьОсобенностейУчетаИФО();
	
	Для Каждого ЗначениеПеречисления Из Перечисления.ОсобенностиУчетаНоменклатуры Цикл
		
		ОсобенностьВключена = Ложь;
		ИменаФО = СвязьОсобенностейУчетаИФО.Получить(ЗначениеПеречисления);
		
		Если ИменаФО <> Неопределено Тогда
			МассивИменФО = СтрРазделить(ИменаФО, ",");
			Для Каждого СтрМас Из МассивИменФО Цикл
				Если Не ПолучитьФункциональнуюОпцию(СтрМас) Тогда
					ОсобенностьВключена = Ложь;
					Прервать;
				Иначе
					ОсобенностьВключена = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИмяЗначенияПеречисления = ОбщегоНазначения.ИмяЗначенияПеречисления(ЗначениеПеречисления);
		Если ОсобенностьВключена Тогда
			Элементы["ОсобенностьУчета" + ИмяЗначенияПеречисления].Подсказка =
											Перечисления.ОсобенностиУчетаНоменклатуры.ПодсказкаПоОсобенностиУчетаНоменклатуры(ЗначениеПеречисления);
		Иначе
			Элементы["ОсобенностьУчета" + ИмяЗначенияПеречисления].Видимость = Ложь;	
		КонецЕсли;
		
	КонецЦикла;	
	
	ЕстьОсобенностьПоТоварам = Ложь;
	Для Каждого ЭлементУправления Из Элементы.ГруппаОсобенностиТовараЛокализация.ПодчиненныеЭлементы Цикл
		Если ЭлементУправления.Видимость Тогда
			ЕстьОсобенностьПоТоварам = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ОсобенностьУчетаБезОсобенностейУчета.Видимость = ЕстьОсобенностьПоТоварам;
	Элементы.ДекорацияОсобенностиТовараОтступ.Видимость     = ЕстьОсобенностьПоТоварам;
	
	ЕстьОсобенностьПоУслугам = Ложь;
	Для Каждого ЭлементУправления Из Элементы.ГруппаОсобенностиУслугиЗначения.ПодчиненныеЭлементы Цикл
		Если ЭлементУправления.Видимость Тогда
			ЕстьОсобенностьПоУслугам = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ДекорацияОсобенностиУслугиОтступ.Видимость = ЕстьОсобенностьПоУслугам;
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
		Если Не ЗначениеЗаполнено(Параметры.ОсобенностьУчета) Тогда
			ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
		Иначе
			ОсобенностьУчета = Параметры.ОсобенностьУчета;
		КонецЕсли;
	ИначеЕсли ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Если Не ЗначениеЗаполнено(Параметры.ОсобенностьУчета) Тогда
			ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом;
		Иначе
			ОсобенностьУчета = Параметры.ОсобенностьУчета;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура("ТипНоменклатуры, ОсобенностьУчета");
	
	Результат.ТипНоменклатуры = ТипНоменклатуры;
	
	Если ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда
		Если ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета") Тогда
			Результат.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
		Иначе
			Результат.ОсобенностьУчета = ОсобенностьУчета;
		КонецЕсли;
	ИначеЕсли ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
		Результат.ОсобенностьУчета = ОсобенностьУчета;
	Иначе
		Результат.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипНоменклатурыПриИзменении(Элемент)
	
	Если ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета");
	ИначеЕсли ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом");
	Иначе
		ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсобенностьУчетаТовараПриИзменении(Элемент)
	
	ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар");
	
КонецПроцедуры

&НаКлиенте
Процедура ОсобенностьУчетаУслугиПриИзменении(Элемент)
	
	ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга");
	
КонецПроцедуры

#КонецОбласти


