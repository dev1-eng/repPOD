#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		ЗаполнитьЗначенияСвойств(Объект, ЭтаФорма, РеквизитыБанка());
	КонецЕсли;
	
	Объект.НаименованиеБанкаМеждународное = НаименованиеБанкаМеждународное;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		ЗаполнитьЗначенияСвойств(Объект, ЭтаФорма, РеквизитыБанкаДляРасчетов());
	КонецЕсли;
	
	Объект.НаименованиеБанкаДляРасчетовМеждународное = НаименованиеБанкаДляРасчетовМеждународное;
	
	// Заполним текст корреспондента.
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
	Если ИспользоватьИННКорреспондента Тогда
		Объект.ИННКорреспондента = ИННКорреспондента;
	Иначе
		Объект.ИННКорреспондента = "";
	КонецЕсли;
	
	Если ИспользоватьКППКорреспондента Тогда
		Объект.КППКорреспондента = КППКорреспондента;
	Иначе
		Объект.КППКорреспондента = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)
	
	Если Не ИспользуетсяБанкДляРасчетов Тогда
		Объект.БанкДляРасчетов = Неопределено;
		Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
			Объект[КлючИЗначение.Ключ] = "";
			ЭтаФорма[КлючИЗначение.Ключ] = "";
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаПриИзменении(Элемент)
	
	РеквизитБанкаПриИзменении("БИКБанка");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Элемент.Имя = "БИКБанка" И Не Объект.РучноеИзменениеРеквизитовБанка
		Или Элемент.Имя = "БИКБанкаДляРасчетов" И Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", Элемент.Имя);
		СтруктураПараметров.Вставить("ТекущаяСтрока", ?(Элемент.Имя = "БИКБанка", Объект.Банк, Объект.БанкДляРасчетов));
		СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма,,,,
			Новый ОписаниеОповещения("ОбработкаВыбораБанкаИзКлассификатора", ЭтотОбъект, Элемент.Имя));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанка) Тогда
		РеквизитБанкаОткрытие("БИКБанка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовПриИзменении(Элемент)
	
	РеквизитБанкаПриИзменении("БИКБанкаДляРасчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанкаДляРасчетов) Тогда
		РеквизитБанкаОткрытие("БИКБанкаДляРасчетов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Истина);
		КонецЕсли;
		Объект.Банк = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("Банк", Объект.БИКБанка, Истина);
		Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
			Объект[КлючИЗначение.Ключ] = "";
		КонецЦикла;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаДляРасчетовПриИзменении(Элемент)
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если Не Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Истина);
		КонецЕсли;
		Объект.БанкДляРасчетов = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", Объект.БИКБанкаДляРасчетов, Истина);
		Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
			Объект[КлючИЗначение.Ключ] = "";
		КонецЦикла;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	ВалютаДенежныхСредствПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	
	УправлениеЭлементамиФормы();
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ТекстОшибки = "";
	ОчиститьСообщения();
	Валютный = (Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	Если Не ПустаяСтрока(Текст)
		И Не Объект.ИностранныйБанк
		И Не ДенежныеСредстваКлиентСервер.ПроверитьКорректностьНомераСчета(Текст, Валютный, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "НомерСчета", "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИностранныйБанкПриИзменении(Элемент)
	
	Объект.ИностранныйБанк = (ИностранныйБанк = 1);
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	ИностранныйБанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИностранныйБанкПриИзмененииНаСервере()
	
	УправлениеЭлементамиФормы();
	
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныйСчетГОЗПриИзменении(Элемент)
	
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ГосударственныйКонтрактПриИзменении(Элемент)
	
	
	Возврат;
	
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьИННКорреспондентаПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКППКорреспондентаПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИННКорреспондентаПриИзменении(Элемент)
	
	ИННЗаполненКорректно = Истина;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(ИННКорреспондента) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИННКорреспондента, Не СчетФизЛица, ТекстСообщения) Тогда
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			"ИННКорреспондента",,);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КППКорреспондентаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ТекстСообщения = "";
	Если Не ПустаяСтрока(Текст) И
		Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			"КППКорреспондента",,);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РазблокированиеРеквизитов",,,,,, 
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
	КонецЕсли;
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);

КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВладелецПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	
	СчетФизЛица = (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица"));
	
	КонтрагентФизЛицо = Ложь;
	Если Не СчетФизЛица И ЗначениеЗаполнено(Объект.Владелец) Тогда
		КонтрагентФизЛицо = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо);
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.Контрагенты КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.Наименование КАК НаименованиеПолное
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	Иначе
		Запрос = Неопределено;
	КонецЕсли;
	
	Если Запрос <> Неопределено Тогда
	
		Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ТекстКорреспондента = СокрЛП(Выборка.НаименованиеПолное);
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(Объект.БанкДляРасчетов)) ИЛИ (ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)) Тогда
			
			Если Объект.РучноеИзменениеРеквизитовБанка Тогда
				ТекстКорреспондента = ТекстКорреспондента
					+ " р/с " + СокрЛП(Объект.НомерСчета)
					+ " в " + Строка(Объект.НаименованиеБанка)
					+ " " + Объект.ГородБанка;
			Иначе
				ТекстКорреспондента = ТекстКорреспондента
					+ " р/с " + СокрЛП(Объект.НомерСчета)
					+ " в " + Строка(Объект.Банк);
				Если ЗначениеЗаполнено(Объект.Банк) Тогда
					ТекстКорреспондента = ТекстКорреспондента	
					+ " " + Объект.Банк.Город;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИННКорреспондента()
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ИННКорреспондента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ИНН");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКППКорреспондента()
	
	Если ЗначениеЗаполнено(Объект.Владелец) И ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		КППКорреспондента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "КПП");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБИК(ТипБанка, БИК = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	НашлиПоБИК   = Ложь;
	ЗаписьОБанке = Неопределено;
	
	Если ТипБанка = "Банк" Тогда
		СтруктураРеквизитов = Новый Структура(РеквизитыБанка());
	Иначе
		СтруктураРеквизитов = Новый Структура(РеквизитыБанкаДляРасчетов());
	КонецЕсли;
	
	Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ЭтаФорма[КлючИЗначение.Ключ] = "";
	КонецЦикла;
	
	Если ЗначениеЗаполнено(БИК) Тогда
		
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,, ЗаписьОБанке);
		
		Если ЗначениеЗаполнено(ЗаписьОБанке) Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, ЗаписьОБанке, ПеренестиЗначенияРеквизитов);
			Объект[ТипБанка] = ЗаписьОБанке;
			НашлиПоБИК = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НашлиПоБИК;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, Банк = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипБанка = "Банк" Тогда
		
		СтруктураРеквизитов = Новый Структура;
		ИменаРеквизитов = СтрРазделить(РеквизитыБанка(), ",", Ложь);
		Для каждого ИмяРеквизита Из ИменаРеквизитов Цикл
			СтруктураРеквизитов.Вставить(ИмяРеквизита, СтрЗаменить(ИмяРеквизита, "Банка", ""));
		КонецЦикла;
		СтруктураРеквизитов.Вставить("БИКБанка", "Код");
		СтруктураРеквизитов.Вставить("СВИФТБанка", "СВИФТБИК");
		СтруктураРеквизитов.Вставить("НаименованиеБанкаМеждународное", "МеждународноеНаименование");
		
		РеквизитыБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, СтруктураРеквизитов);
		
		Исключения = "";
		Если Не ЗначениеЗаполнено(РеквизитыБанка.НаименованиеБанкаМеждународное)
			Или ЗначениеЗаполнено(НаименованиеБанкаМеждународное) Тогда
			Исключения = "НаименованиеБанкаМеждународное"
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РеквизитыБанка,, Исключения);
		
		Если ПеренестиЗначенияРеквизитов Тогда
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыБанка);
			Объект.Банк = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
		
		СтруктураРеквизитов = Новый Структура;
		ИменаРеквизитов = СтрРазделить(РеквизитыБанкаДляРасчетов(), ",", Ложь);
		Для каждого ИмяРеквизита Из ИменаРеквизитов Цикл
			СтруктураРеквизитов.Вставить(ИмяРеквизита, СтрЗаменить(ИмяРеквизита, "БанкаДляРасчетов", ""));
		КонецЦикла;
		СтруктураРеквизитов.Вставить("БИКБанкаДляРасчетов", "Код");
		СтруктураРеквизитов.Вставить("СВИФТБанкаДляРасчетов", "СВИФТБИК");
		СтруктураРеквизитов.Вставить("НаименованиеБанкаДляРасчетовМеждународное", "МеждународноеНаименование");
		
		РеквизитыБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, СтруктураРеквизитов);
		
		Исключения = "";
		Если Не ЗначениеЗаполнено(РеквизитыБанка.НаименованиеБанкаДляРасчетовМеждународное)
			Или ЗначениеЗаполнено(НаименованиеБанкаДляРасчетовМеждународное) Тогда
			Исключения = "НаименованиеБанкаДляРасчетовМеждународное"
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РеквизитыБанка,, Исключения);
		
		Если ПеренестиЗначенияРеквизитов Тогда
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыБанка);
			Объект.БанкДляРасчетов = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	Валюта = ДенежныеСредстваСервер.ПолучитьВалютуПоНомеруСчета(Объект.НомерСчета);
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДенежныхСредств = Валюта;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	СформироватьАвтоНаименование();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	НастройкиПолейФормы = Справочники.БанковскиеСчетаКонтрагентов.НастройкиПолейФормы();
	ЗначениеВРеквизитФормы(НастройкиПолейФормы, "НастройкиПолей");
	ЗависимостиПолейФормы = ДенежныеСредстваСервер.ЗависимостиПолейФормы(НастройкиПолейФормы);
	ЗначениеВРеквизитФормы(ЗависимостиПолейФормы, "ЗависимостиПолей");
	
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	ИспользоватьВалютныеПлатежи = ПолучитьФункциональнуюОпцию("ИспользоватьВалютныеПлатежи");
	
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	ИностранныйБанк = ?(Объект.ИностранныйБанк, 1, 0);
	
	ЗаполнитьРеквизитыБанка();
	СформироватьАвтоНаименование();
	
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
	ИспользоватьИННКорреспондента = ЗначениеЗаполнено(Объект.ИННКорреспондента);
	Если ИспользоватьИННКорреспондента Тогда
		ИННКорреспондента = Объект.ИННКорреспондента;
	Иначе
		ЗаполнитьИННКорреспондента();
	КонецЕсли;
	
	ИспользоватьКППКорреспондента = ЗначениеЗаполнено(Объект.КППКорреспондента);
	Если ИспользоватьКППКорреспондента Тогда
		КППКорреспондента = Объект.КППКорреспондента;
	Иначе
		ЗаполнитьКППКорреспондента();
	КонецЕсли;
	
	СчетФизЛица = (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица"));
	
	КонтрагентФизЛицо = Ложь;
	Если Не СчетФизЛица И ЗначениеЗаполнено(Объект.Владелец) Тогда
		КонтрагентФизЛицо = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо);
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если Объект.ИностранныйБанк Тогда
		Элементы.Переместить(Элементы.СВИФТБанка, Элементы.СВИФТБанка.Родитель, Элементы.БИКБанка);
	Иначе
		Элементы.Переместить(Элементы.БИКБанка, Элементы.БИКБанка.Родитель, Элементы.СВИФТБанка);
	КонецЕсли;
	
	Если ВалютныйСчет Тогда
		Элементы.Переместить(Элементы.СВИФТБанкаДляРасчетов, Элементы.СВИФТБанкаДляРасчетов.Родитель, Элементы.БИКБанкаДляРасчетов);
	Иначе
		Элементы.Переместить(Элементы.БИКБанкаДляРасчетов, Элементы.БИКБанкаДляРасчетов.Родитель, Элементы.СВИФТБанкаДляРасчетов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыБанка()
	
	НаименованиеБанкаМеждународное = Объект.НаименованиеБанкаМеждународное;
	НаименованиеБанкаДляРасчетовМеждународное = Объект.НаименованиеБанкаДляРасчетовМеждународное;
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Объект, РеквизитыБанка());
	Иначе
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.БанкДляРасчетов)
			Или ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)
			Или ЗначениеЗаполнено(Объект.СВИФТБанкаДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Объект, РеквизитыБанкаДляРасчетов());
	Иначе
		Если Не Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) +
			?(ЗначениеЗаполнено(НаименованиеБанка), " в " +
			Строка(НаименованиеБанка), "") + " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(НаименованиеБанка), Строка(НаименованиеБанка), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	Иначе
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) +
			?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	
	ЗначенияПолей = Новый Структура;
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			
			СтруктураРеквизитов = Новый Структура(РеквизитыБанка());
			ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ЭтаФорма);
			
			ЗначенияПолей = Новый Структура;
			Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
				ЗначенияПолей.Вставить(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), КлючИЗначение.Значение);
			КонецЦикла;
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
		
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			
			СтруктураРеквизитов = Новый Структура(РеквизитыБанкаДляРасчетов());
			ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ЭтаФорма);
			
			ЗначенияПолей = Новый Структура;
			Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
				ЗначенияПолей.Вставить(СтрЗаменить(КлючИЗначение.Ключ, "БанкаДляРасчетов", ""), КлючИЗначение.Значение);
			КонецЦикла;
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.БанкДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПолей);
	ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка", СтруктураПараметров, ЭтаФорма,,,,
		Новый ОписаниеОповещения("ОбработкаРедактированияРеквизитовБанка", ЭтотОбъект, ИмяЭлемента));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРедактированияРеквизитовБанка(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры = "БИКБанка" Тогда
			
			Объект.РучноеИзменениеРеквизитовБанка = Результат.РучноеИзменение;
			Если Результат.РучноеИзменение Тогда
				
				Объект.Банк = Неопределено;
				
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), Объект[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), ЭтаФорма[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", Объект.СВИФТБанка);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", СВИФТБанка);
				КонецЦикла;
			Иначе
				Объект.Банк = Результат.Банк;
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
					Объект[КлючИЗначение.Ключ] = "";
				КонецЦикла;
				ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
			КонецЕсли;
			
		ИначеЕсли ДополнительныеПараметры = "БИКБанкаДляРасчетов" Тогда
			
			Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = Результат.РучноеИзменение;
			Если Результат.РучноеИзменение Тогда
				
				Объект.БанкДляРасчетов = Неопределено;
				
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "БанкаДляРасчетов", ""), Объект[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "БанкаДляРасчетов", ""), ЭтаФорма[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", Объект.СВИФТБанкаДляРасчетов);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", СВИФТБанкаДляРасчетов);
				КонецЦикла;
			Иначе
				Объект.БанкДляРасчетов = Результат.Банк;
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
					Объект[КлючИЗначение.Ключ] = "";
				КонецЦикла;
				ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(ИмяЭлемента)
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка И Не Объект.ИностранныйБанк Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("Банк", БИКБанка, Истина) И ЗначениеЗаполнено(БИКБанка) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка",  НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",   НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",    НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Значение%", БИКБанка);
				
				Ответ = Неопределено;
				
				ПоказатьВопрос(
					Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииПослеВопроса",
					ЭтотОбъект,
					Новый Структура("ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса",
						ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса)),
					ТекстВопроса,
					СписокВариантовОтветовНаВопрос,
					0,,
					НСтр("ru = 'Выбор банка из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И Не ВалютныйСчет Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", БИКБанкаДляРасчетов, Истина)
				И ЗначениеЗаполнено(БИКБанкаДляРасчетов) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",    НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Значение%", БИКБанкаДляРасчетов);
				
				ПоказатьВопрос(
					Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииЗавершение", ЭтотОбъект),
					ТекстВопроса,
					СписокВариантовОтветовНаВопрос,
					0,,
					НСтр("ru = 'Выбор банка-корреспондента из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
	СписокВариантовОтветовНаВопрос = ДополнительныеПараметры.СписокВариантовОтветовНаВопрос;
	ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		БИКБанка = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.БИКБанка = БИКБанка;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "БИКБанка");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма,,,,
			Новый ОписаниеОповещения("ОбработкаВыбораБанкаИзКлассификатора", ЭтотОбъект, "БИКБанка"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		БИКБанкаДляРасчетов = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = Истина;
		Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "БИКБанкаДляРасчетов");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма,,,,
			Новый ОписаниеОповещения("ОбработкаВыбораБанкаИзКлассификатора", ЭтотОбъект, "БИКБанкаДляРасчетов"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыРедактированияРеквизитов()
	
	Если Объект.ИностранныйБанк Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	Иначе
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораБанкаИзКлассификатора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры = "БИКБанка" Тогда
			Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
				Объект[КлючИЗначение.Ключ] = "";
			КонецЦикла;
			Объект.Банк = Результат;
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Результат, Ложь);
		Иначе
			Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
				Объект[КлючИЗначение.Ключ] = "";
			КонецЦикла;
			Объект.БанкДляРасчетов = Результат;
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Результат, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыБанка()
	
	Возврат "БИКБанка, СВИФТБанка, НаименованиеБанка, НаименованиеБанкаМеждународное, КоррСчетБанка, СтранаБанка, ГородБанка,
		|ГородБанкаМеждународный, АдресБанка, АдресБанкаМеждународный, ТелефоныБанка";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыБанкаДляРасчетов()
	
	Возврат "БИКБанкаДляРасчетов, СВИФТБанкаДляРасчетов, НаименованиеБанкаДляРасчетов, НаименованиеБанкаДляРасчетовМеждународное,
		|КоррСчетБанкаДляРасчетов, СтранаБанкаДляРасчетов, ГородБанкаДляРасчетов, ГородБанкаДляРасчетовМеждународный,
		|АдресБанкаДляРасчетов, АдресБанкаДляРасчетовМеждународный, ТелефоныБанкаДляРасчетов";
	
КонецФункции

&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыФормы(Форма)
	
	РеквизитыФормы = Новый Структура;
	РеквизитыФормы.Вставить("ПоддержкаПлатежей275ФЗ");
	РеквизитыФормы.Вставить("ИспользоватьВалютныеПлатежи");
	РеквизитыФормы.Вставить("ИспользоватьНесколькоВалют");
	РеквизитыФормы.Вставить("ИспользуетсяБанкДляРасчетов");
	РеквизитыФормы.Вставить("ВалютныйСчет");
	РеквизитыФормы.Вставить("ИспользоватьТекстКорреспондента");
	РеквизитыФормы.Вставить("ИспользоватьИННКорреспондента");
	РеквизитыФормы.Вставить("ИспользоватьКППКорреспондента");
	РеквизитыФормы.Вставить("СчетФизЛица");
	РеквизитыФормы.Вставить("КонтрагентФизЛицо");
	
	ЗаполнитьЗначенияСвойств(РеквизитыФормы, Форма);
	
	Возврат РеквизитыФормы;
	
КонецФункции

#КонецОбласти
