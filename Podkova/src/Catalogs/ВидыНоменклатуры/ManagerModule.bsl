#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает настройки использования серий для вида номенклатуры на складе (подразделении).
//
// Параметры:
//  ВидНоменклатуры		 - СправочникСсылка.ВидыНоменклатуры							 - вид номенклатуры, параметры серий которого которой нужно получить
//  СкладПодразделение	 - СправочникСсылка.Склады, СправочникСсылка.СтруктураПредприятия	 - склад или производственное подразделение
//  	для которого нужно получить настройки серий. Если значение не задано - возвращаются настройки, которые
//  	от склада не зависят.
// 
// Возвращаемое значение:
//  Структура - структура с ключами:
//  * ВидНоменклатуры - СправочникСсылка.ВидыНоменклатуры - вид номенклатуры, параметры серий которого нужно получить
//  * ИспользоватьСерии - Булево - Истина, если серии для вида номенклатуры используются
//  * ИспользоватьНомерСерии - Булево - Истина, если номера серий для вида номенклатуры используются
//  * ИспользоватьСрокГодностиСерии - Булево - Истина, если используется срок годности серий для вида номенклатуры
//  * ИспользоватьКоличествоСерии - Булево - Истина, если количество серии указывается
//  * ЕдиницаИзмеренияСрокаГодности - ПеречислениеСсылка.ЕдиницыИзмеренияВремени - единица измерения срока
//																						годности серии
//  * ТочностьУказанияСрокаГодностиСерии - ПеречислениеСсылка.ТочностиУказанияСрокаГодности - точность указания срока
//                                                                                            годности серии
//  * ШаблонРабочегоНаименованияСерии - Строка - шаблон рабочего наименования серии
//  * ВладелецСерий - СправочникСсылка.ВидыНоменклатуры - владелец
//  * НастройкиСерийБерутсяИзДругогоВидаНоменклатуры - Булево - Истина, если настройки серий берутся из другого вида номенклатуры
//  * ШаблонЭтикеткиСерии - СправочникСсылка.ШаблоныЭтикетокИЦенников - ссылка на шаблон этикетки серии
//  * ИспользоватьRFIDМеткиСерии - Булево - Истина, если используются RFID-метки серий
//  * ИспользоватьНомерКИЗГИСМСерии - Булево - Истина, если учет серий вида номенклатуры ведется по номерам КИЗ (ГиСМ)
//  * ИспользоватьДатуПроизводстваСерии - Булево - Истина, если ведется учет серий вида номенклатуры
//													по датам производства
//  * ИспользоватьПроизводителяЕГАИССерии - Булево - Истина, если ведется учет серий вида номенклатуры
//														по производителям (ЕГАИС)
//  * ИспользоватьСправку2ЕГАИССерии - Булево - Истина, если ведется учет серий вида номенклатуры по справкам 2 (ЕГАИС)
//  * ИспользоватьПроизводителяВЕТИССерии - Булево - Истина, если ведется учет серий вида номенклатуры
//														по производителям (ВЕТИС)
//  * ИспользоватьИдентификаторПартииВЕТИССерии - Булево - Истина, если ведется учет серий вида номенклатуры
//														партиям (ВЕТИС)
//  * ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии - Булево - Истина, если ведется учет серий вида номенклатуры
//																по записям складского журнала (ВЕТИС)
//  * ФорматнаяСтрокаСрокаГодности - Строка - форматная строка срока годности
//  * ОбязательныеДопРеквизиты - ФиксированныйМассив - массив строк наименования доп реквизитов
//  * ПолитикаУчетаСерий - СправочникСсылка.ПолитикиУчетаСерий - ссылка на политику учета серий
//  * УказыватьПриПоступлении - Булево - Истина, если серии указываются при поступлении
//  * УказыватьПриОтгрузке - Булево - Истина, если серии указываются при отгрузке
//  * УказыватьПриПланированииОтгрузки - Булево - Истина, если серии указываются при планировании отгрузки
//  * УчетСерийПоFEFO - Булево - Истина, если серии учитываются по FEFO
//  * УказыватьПоФактуОтбора - Булево - Истина, если серии учитываются по факту отбора
//  * УчитыватьОстаткиСерий - Булево - Истина, если учитываются остатки серий
//  * УчитыватьСебестоимостьПоСериям - Булево  - Истина, если учитывается себестоимость по сериям.
//
Функция НастройкиИспользованияСерий(ВидНоменклатуры, СкладПодразделение = Неопределено) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ВидНоменклатуры");
	Результат.Вставить("ИспользоватьСерии");
	Результат.Вставить("ИспользоватьНомерСерии");
	Результат.Вставить("ИспользоватьСрокГодностиСерии");
	Результат.Вставить("ИспользоватьКоличествоСерии");
	Результат.Вставить("ЕдиницаИзмеренияСрокаГодности");
	Результат.Вставить("ТочностьУказанияСрокаГодностиСерии");
	Результат.Вставить("ШаблонРабочегоНаименованияСерии");
	Результат.Вставить("ВладелецСерий");
	Результат.Вставить("НастройкиСерийБерутсяИзДругогоВидаНоменклатуры");
	Результат.Вставить("ШаблонЭтикеткиСерии");
	Результат.Вставить("ИспользоватьRFIDМеткиСерии");
	Результат.Вставить("ИспользоватьНомерКИЗГИСМСерии");
	Результат.Вставить("ИспользоватьДатуПроизводстваСерии");
	Результат.Вставить("ИспользоватьПроизводителяЕГАИССерии");
	Результат.Вставить("ИспользоватьСправку2ЕГАИССерии");
	Результат.Вставить("ИспользоватьПроизводителяВЕТИССерии");
	Результат.Вставить("ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии");
	Результат.Вставить("ИспользоватьИдентификаторПартииВЕТИССерии");
	Результат.Вставить("ИспользоватьМРЦМОТПСерии");
	
	Результат.Вставить("ФорматнаяСтрокаСрокаГодности");
	Результат.Вставить("ОбязательныеДопРеквизиты");
	
	Результат.Вставить("ПолитикаУчетаСерий");
	Результат.Вставить("УказыватьПриПоступлении");
	Результат.Вставить("УказыватьПриОтгрузке");
	Результат.Вставить("УказыватьПриПланированииОтгрузки");
	Результат.Вставить("УчетСерийПоFEFO");
	Результат.Вставить("УказыватьПоФактуОтбора");
	Результат.Вставить("УчитыватьОстаткиСерий");
	Результат.Вставить("УчитыватьСебестоимостьПоСериям");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.ИспользоватьСерии КАК ИспользоватьСерии,
	|	ВидыНоменклатуры.ИспользоватьНомерСерии КАК ИспользоватьНомерСерии,
	|	ВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВидыНоменклатуры.ИспользоватьКоличествоСерии КАК ИспользоватьКоличествоСерии,
	|	ВидыНоменклатуры.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии,
	|	ВидыНоменклатуры.ШаблонРабочегоНаименованияСерии КАК ШаблонРабочегоНаименованияСерии,
	|	ВидыНоменклатуры.ИспользоватьRFIDМеткиСерии КАК ИспользоватьRFIDМеткиСерии,
	|	ВидыНоменклатуры.ИспользоватьНомерКИЗГИСМСерии КАК ИспользоватьНомерКИЗГИСМСерии,
	|	ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьПроизводителяВЕТИССерии КАК ИспользоватьПроизводителяВЕТИССерии,
	|	ВидыНоменклатуры.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии КАК ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,
	|	ВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии КАК ИспользоватьИдентификаторПартииВЕТИССерии,
	|	ВидыНоменклатуры.ИспользоватьМРЦМОТПСерии КАК ИспользоватьМРЦМОТПСерии,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	|			ТОГДА ВидыНоменклатуры.ВладелецСерий
	|		ИНАЧЕ ВидыНоменклатуры.Ссылка
	|	КОНЕЦ КАК ВладелецСерий,
	|	ВидыНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры КАК НастройкиСерийБерутсяИзДругогоВидаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	|			ТОГДА ВидыНоменклатуры.ВладелецСерий.ШаблонЭтикеткиСерии
	|		ИНАЧЕ ВидыНоменклатуры.ШаблонЭтикеткиСерии
	|	КОНЕЦ КАК ШаблонЭтикеткиСерии,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий, ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)) КАК ПолитикаУчетаСерий,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке, ЛОЖЬ) КАК УказыватьПриПоступлении,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузке, ЛОЖЬ) КАК УказыватьПриОтгрузке,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки, ЛОЖЬ) КАК УказыватьПриПланированииОтгрузки,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO, ЛОЖЬ) КАК УчетСерийПоFEFO,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора, ЛОЖЬ) КАК УказыватьПоФактуОтбора,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий, ЛОЖЬ)
	|		КАК УчитыватьОстаткиСерий,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ) 
	|		КАК УчитыватьСебестоимостьПоСериям
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ТЧПолитикиУчетаСерий
	|		ПО ВидыНоменклатуры.Ссылка = ТЧПолитикиУчетаСерий.Ссылка
	|			И (ТЧПолитикиУчетаСерий.Склад = &СкладПодразделение)
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНоменклатурыРеквизитыДляКонтроляСерий.Свойство КАК Свойство
	|ИЗ
	|	Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляСерий КАК ВидыНоменклатурыРеквизитыДляКонтроляСерий
	|ГДЕ
	|	ВидыНоменклатурыРеквизитыДляКонтроляСерий.Ссылка = ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(&ВидНоменклатуры КАК Справочник.ВидыНоменклатуры).НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	|				ТОГДА ВЫРАЗИТЬ(&ВидНоменклатуры КАК Справочник.ВидыНоменклатуры).ВладелецСерий
	|			ИНАЧЕ &ВидНоменклатуры
	|		КОНЕЦ
	|	И ВидыНоменклатурыРеквизитыДляКонтроляСерий.ЭтоДопРеквизит
	|	И ВидыНоменклатурыРеквизитыДляКонтроляСерий.ЗаполнятьОбязательно";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Запрос.УстановитьПараметр("СкладПодразделение", СкладПодразделение);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЗаполнитьЗначенияСвойств(Результат, РеквизитыШапки);
	Результат.ФорматнаяСтрокаСрокаГодности = ФорматнаяСтрокаСрокаГодности(Результат.ТочностьУказанияСрокаГодностиСерии);
	
	Результат.ОбязательныеДопРеквизиты = Новый ФиксированныйМассив(РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Свойство"));
	
	Возврат Результат;
	
КонецФункции

// Получает вид номенклатуры, если вид номенклатуры один в справочнике.
//
// Возвращаемое значение:
// 	СправочникСсылка.ВидНоменклатуры - найденный вид номенклатуры
// 	Неопределено - если видов номенклатуры нет или видов номенклатуры больше одного.
//
Функция ВидНоменклатурыПоУмолчанию() Экспорт
	
	Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	НЕ ВидыНоменклатуры.ПометкаУдаления
	|	И НЕ ВидыНоменклатуры.ЭтоГруппа";
	
	Запрос = Новый Запрос(Текст);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ВидНоменклатуры = Выборка.ВидНоменклатуры;
	Иначе
		ВидНоменклатуры = Неопределено;
	КонецЕсли;
	
	Возврат ВидНоменклатуры;
	
КонецФункции // ВидНоменклатуры()

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ТипНоменклатуры; ТипНоменклатуры");
	Результат.Добавить("ИспользованиеХарактеристик");
	Результат.Добавить("ИспользоватьХарактеристики");
	Результат.Добавить("ИспользоватьСерии; ВариантЗаданияНастроекСерий");
	Результат.Добавить("ПолитикиУчетаСерий; ПолитикиУчетаСерийДобавитьСкладВПолитикиУчетаСерий,ПолитикиУчетаСерийДобавитьПодразделениеВПолитикиУчетаСерий");
	Результат.Добавить("НастройкаИспользованияСерий");
	Результат.Добавить("ТочностьУказанияСрокаГодностиСерии");
	Результат.Добавить("ВариантОформленияПродажи");
	Результат.Добавить("АлкогольнаяПродукция");
	Результат.Добавить("ВариантПредставленияНабораВПечатныхФормах");
	Результат.Добавить("ВариантРасчетаЦеныНабора;ГруппаЦенаНабора");
	Результат.Добавить("СодержитДрагоценныеМатериалы");
	Результат.Добавить("ВладелецХарактеристик");
	Результат.Добавить("ВладелецСерий");
	Результат.Добавить("НастройкиСерийБерутсяИзДругогоВидаНоменклатуры");
	Результат.Добавить("ТоварныеКатегорииОбщиеСДругимВидомНоменклатуры");
	Результат.Добавить("ВладелецТоварныхКатегорий; НастройкаТоварныхКатегорий");
	Результат.Добавить("ЕстьИндивидуальныеНастройкиПолитикиУчетаСерий; ЕстьИндивидуальныеНастройкиПолитикиУчетаСерий");
	
	Возврат Результат;
	
КонецФункции

// Возвращает форматную строку представления срока годности.
//
// Параметры:
//  ТочностьУказанияСрокаГодности	 - Перечисления.ТочностиУказанияСрокаГодности - точность указания срока годности вида номенклатуры.
// 
// Возвращаемое значение:
//  Строка - форматная строка срока годности вида номенклатуры.
//
Функция ФорматнаяСтрокаСрокаГодности(ТочностьУказанияСрокаГодности)Экспорт
	
	Если ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов Тогда
		ФорматнаяСтрока = "ДФ='dd.MM.yy HH:00'";
	ИначеЕсли ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоМесяцев Тогда
		ФорматнаяСтрока = "ДФ=MM.yy";
	Иначе
		ФорматнаяСтрока = "ДФ=dd.MM.yy";
	КонецЕсли;
	
	Возврат ФорматнаяСтрока;
	
КонецФункции

// Возвращает предустановленные виды номенклатуры.
//
// Возвращаемое значение:
//	Массив, элементы - СправочникСсылка.ВидыНоменклатуры.
//
Функция ПолучитьПредустановленныеВидыНоменклатуры() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	МассивВидов = Новый Массив;
	
	ДобавитьПредустановленныйВидНоменклатуры(МассивВидов, Перечисления.ТипыНоменклатуры.Товар, НСтр("ru = 'Товар'"));
	ДобавитьПредустановленныйВидНоменклатуры(МассивВидов, Перечисления.ТипыНоменклатуры.Услуга, НСтр("ru = 'Услуга'"));
	
	Возврат МассивВидов;

КонецФункции 

// Добавляет в массив вид номенклатуры с указанным типом.
// Если вида номенклатуры с таким типов нет в ИБ, то он создается.
//
// Параметры:
//	МассивВидов - Массив                        - массив видов номенклатуры,
//	Тип         - Перечисления.ТипыНоменклатуры - тип номенклатуры,
//	Имя         - Строка                        - имя нового вида номенклатуры.
//
Процедура ДобавитьПредустановленныйВидНоменклатуры(МассивВидов, Тип, Имя) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ТипНоменклатуры = &Тип
	|	И НЕ ВидыНоменклатуры.ПометкаУдаления";
						  
	Запрос.УстановитьПараметр("Тип", Тип);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		НовыйВид = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		НовыйВид.Заполнить(Неопределено);
		НовыйВид.Наименование = Имя;
		НовыйВид.ТипНоменклатуры = Тип;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры") Тогда
			НовыйВид.ГруппаДоступа = Справочники.ГруппыДоступаНоменклатуры.ПолучитьГруппуДоступаПоУмолчанию(НовыйВид);
		КонецЕсли;
		НовыйВид.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		
		ЗаполнитьРеквизитыДляКонтроля(НовыйВид, "Номенклатура");
		
		НастройкаЕдИзмерения = НовыйВид.РеквизитыДляКонтроляНоменклатуры.Найти("ЕдиницаИзмерения");
		Если НастройкаЕдИзмерения <> Неопределено Тогда
			НастройкаЕдИзмерения.ОтображатьПриСоздании = Истина;
			НастройкаЕдИзмерения.ЗаполнятьОбязательно = Истина;
		КонецЕсли;
		
		НовыйВид.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		НовыйВид.ЕдиницаДляОтчетов = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		
		НовыйВид.Записать();
		
		МассивВидов.Добавить(НовыйВид.Ссылка);
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		МассивВидов.Добавить(Выборка.Ссылка);
		
	КонецЕсли;	

КонецПроцедуры 

Процедура СоздатьВидНоменклатуры(ДанныеЗаполнения, ВидНоменклатурыСсылка) Экспорт
	
	ВидНоменклатурыОбъект = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
	
	ВидНоменклатурыОбъект.Заполнить(Неопределено);
	ВидНоменклатурыОбъект.УстановитьНовыйКод();
	
	ВидНоменклатурыОбъект.Наименование      = ДанныеЗаполнения.Наименование;
	ВидНоменклатурыОбъект.СтавкаНДС         = ДанныеЗаполнения.СтавкаНДС;
	ВидНоменклатурыОбъект.ТипНоменклатуры   = ДанныеЗаполнения.ТипНоменклатуры;
	ВидНоменклатурыОбъект.Описание          = ДанныеЗаполнения.Описание;
	ВидНоменклатурыОбъект.ЕдиницаИзмерения  = ДанныеЗаполнения.ЕдиницаИзмерения;
	ВидНоменклатурыОбъект.ЕдиницаДляОтчетов = ДанныеЗаполнения.ЕдиницаДляОтчетов;
	ВидНоменклатурыОбъект.Родитель          = ДанныеЗаполнения.Родитель;
	ВидНоменклатурыОбъект.ИспользоватьХарактеристики = ДанныеЗаполнения.ИспользоватьХарактеристики;
	ВидНоменклатурыОбъект.ИспользованиеХарактеристик = ДанныеЗаполнения.ИспользованиеХарактеристик;
	ВидНоменклатурыОбъект.ВариантОформленияПродажи 	 = ДанныеЗаполнения.ВариантОформленияПродажи;
	
	Если Справочники.ГруппыДоступаНоменклатуры.ИспользуютсяГруппыДоступа() Тогда
		ГруппаДоступа = Справочники.ГруппыДоступаНоменклатуры.ПолучитьГруппуДоступаПоУмолчанию(ВидНоменклатурыОбъект);
		ДанныеЗаполнения.Свойство("ГруппаДоступа", ГруппаДоступа);
		ВидНоменклатурыОбъект.ГруппаДоступа = ГруппаДоступа;
	КонецЕсли;
	
	ЗаполнитьРеквизитыДляКонтроля(ВидНоменклатурыОбъект, "Номенклатура");
	
	НастройкаЕдИзмерения = ВидНоменклатурыОбъект.РеквизитыДляКонтроляНоменклатуры.Найти("ЕдиницаИзмерения");
	Если НастройкаЕдИзмерения <> Неопределено Тогда
		НастройкаЕдИзмерения.ОтображатьПриСоздании = Истина;
		НастройкаЕдИзмерения.ЗаполнятьОбязательно = Истина;
	КонецЕсли;
	
	ВидНоменклатурыОбъект.Записать();
	
	ВидНоменклатурыСсылка = ВидНоменклатурыОбъект.Ссылка;
	
КонецПроцедуры

// Возвращает значение единицы измерения срока годности по значению точности указания срока годности серии.
//
// Параметры:
//	ТочностьУказанияСрокаГодностиСерии - ПеречислениеСсылка.ТочностиУказанияСрокаГодности - Точность указания срока 
//																							годности серии вида номенклатуры.
//
// Возвращаемое значение:
//	ПеречислениеСсылка.ЕдиницыИзмеренияВремени - единица измерения срока годности по значению точности указания 
//												срока годности серии.
//
Функция ЕдиницаИзмеренияСрокаГодности(ТочностьУказанияСрокаГодности) Экспорт
	
	ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.ПустаяСсылка();
	
	Если ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоМесяцев Тогда
		ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Месяц;
	ИначеЕсли ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
		ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Сутки;
	ИначеЕсли ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов Тогда
		ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Час;
	КонецЕсли;
	
	Возврат ЕдиницаИзмеренияСрокаГодности;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ ИСТИНА
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЭтоГруппа ИЛИ
	|	ЗначениеРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	НоменклатураВызовСервера.ВидыНоменклатурыОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Вызывается после окончания загрузки данных из локальной версии
// в область данных сервиса или наоборот.
//
Процедура ПослеЗагрузкиДанныхИзДругойМодели() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	(ВидыНоменклатуры.ЗапретРедактированияНаименованияДляПечатиНоменклатуры
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияНаименованияДляПечатиХарактеристики
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияРабочегоНаименованияНоменклатуры
	|			ИЛИ ВидыНоменклатуры.ЗапретРедактированияРабочегоНаименованияХарактеристики)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		СправочникОбъект.ЗапретРедактированияНаименованияДляПечатиНоменклатуры   = Ложь;
		СправочникОбъект.ЗапретРедактированияНаименованияДляПечатиХарактеристики = Ложь;
		СправочникОбъект.ЗапретРедактированияРабочегоНаименованияНоменклатуры    = Ложь;
		СправочникОбъект.ЗапретРедактированияРабочегоНаименованияХарактеристики  = Ложь;
		
		СправочникОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ОбработатьДополнительныеРеквизитыНоменклатурыДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.12.23";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3613d8b4-8e4c-4b51-bc30-de49905df84a");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ВидыНоменклатуры.ЗарегистрироватьДополнительныеРеквизитыНоменклатурыКОбновлению";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Переносит настройки контроля заполнения дополнительных реквизитов из табличной части видов номенклатуры в элементы плана видов характеристик ""Дополнительные реквизиты и сведения""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ВидыНоменклатуры.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	//++ Локализация
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.13.45";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a7fdc689-ac9c-4cc5-b2ad-bf503c3bdd25");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ВидыНоменклатуры.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заменяет в табличных частях Видов номенклатуры устаревшее название реквизита номенклатуры ПроизводительИмпортерДляДекларацийАлко на ПроизводительИмпортерКонтрагент.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ВидыНоменклатуры.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ВидыНоменклатуры.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ВидыНоменклатуры.ОбработатьДополнительныеРеквизитыНоменклатурыДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗарегистрироватьДополнительныеРеквизитыНоменклатурыКОбновлению(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СвойстваВиды.Свойство КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляНоменклатуры.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|			1 КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроляНоменклатуры
	|		ГДЕ
	|			РеквизитыДляКонтроляНоменклатуры.ЗаполнятьОбязательно
	|			И РеквизитыДляКонтроляНоменклатуры.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			-1
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Условие = ""ВСписке"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|					И (ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно)
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) < 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвойстваВиды.Свойство
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляХарактеристик.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляХарактеристик.Ссылка КАК ВидНоменклатуры,
	|			1 КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляХарактеристик КАК РеквизитыДляКонтроляХарактеристик
	|		ГДЕ
	|			РеквизитыДляКонтроляХарактеристик.ЗаполнятьОбязательно
	|			И РеквизитыДляКонтроляХарактеристик.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			-1
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Условие = ""ВСписке"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|					И (ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно)
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) < 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвойстваВиды.Свойство
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляСерий.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляСерий.Ссылка КАК ВидНоменклатуры,
	|			1 КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляСерий КАК РеквизитыДляКонтроляСерий
	|		ГДЕ
	|			РеквизитыДляКонтроляСерий.ЗаполнятьОбязательно
	|			И РеквизитыДляКонтроляСерий.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			-1
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Условие = ""ВСписке"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|					И (ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно)
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) < 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвойстваВиды.Свойство
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляНоменклатуры.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|			ВЫБОР
	|				КОГДА РеквизитыДляКонтроляНоменклатуры.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				ИНАЧЕ -1
	|			КОНЕЦ КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроляНоменклатуры
	|		ГДЕ
	|			РеквизитыДляКонтроляНоменклатуры.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойств
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			ВЫБОР
	|				КОГДА НЕ ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""Равно""
	|					ТОГДА -1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""НеРавно""
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойств
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) > 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвойстваВиды.Свойство
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляХарактеристик.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляХарактеристик.Ссылка КАК ВидНоменклатуры,
	|			ВЫБОР
	|				КОГДА РеквизитыДляКонтроляХарактеристик.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				ИНАЧЕ -1
	|			КОНЕЦ КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляХарактеристик КАК РеквизитыДляКонтроляХарактеристик
	|		ГДЕ
	|			РеквизитыДляКонтроляХарактеристик.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойствХарактеристик
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			ВЫБОР
	|				КОГДА НЕ ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""Равно""
	|					ТОГДА -1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""НеРавно""
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойствХарактеристик
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) > 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвойстваВиды.Свойство
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВложенныйЗапрос.Контроль) КАК Контроль,
	|		ВложенныйЗапрос.Свойство КАК Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РеквизитыДляКонтроляСерий.Свойство КАК Свойство,
	|			РеквизитыДляКонтроляСерий.Ссылка КАК ВидНоменклатуры,
	|			ВЫБОР
	|				КОГДА РеквизитыДляКонтроляСерий.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				ИНАЧЕ -1
	|			КОНЕЦ КАК Контроль
	|		ИЗ
	|			Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляСерий КАК РеквизитыДляКонтроляСерий
	|		ГДЕ
	|			РеквизитыДляКонтроляСерий.Свойство В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойствСерий
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка,
	|			ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Значение, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)),
	|			ВЫБОР
	|				КОГДА НЕ ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""Равно""
	|					ТОГДА -1
	|				КОГДА ЕСТЬNULL(ТЧЗависимостиДополнительныхРеквизитов.Условие, """") = ""НеРавно""
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ЗависимостиДополнительныхРеквизитов КАК ТЧЗависимостиДополнительныхРеквизитов
	|				ПО ДополнительныеРеквизитыИСведения.Ссылка = ТЧЗависимостиДополнительныхРеквизитов.Ссылка
	|					И (ТЧЗависимостиДополнительныхРеквизитов.ЗависимоеСвойство ПОДОБНО ""ЗаполнятьОбязательно"")
	|					И (ТЧЗависимостиДополнительныхРеквизитов.Реквизит = ""ВидНоменклатуры"")
	|		ГДЕ
	|			ДополнительныеРеквизитыИСведения.Ссылка В
	|					(ВЫБРАТЬ
	|						ТЧДополнительныеРеквизиты.Свойство
	|					ИЗ
	|						Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ТЧДополнительныеРеквизиты
	|					ГДЕ
	|						ТЧДополнительныеРеквизиты.Ссылка В
	|							(ВЫБРАТЬ
	|								ВидыНоменклатуры.НаборСвойствСерий
	|							ИЗ
	|								Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|							ГДЕ
	|								НЕ ВидыНоменклатуры.ЭтоГруппа))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Свойство,
	|		ВложенныйЗапрос.ВидНоменклатуры
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Контроль) <> 0 И
	|		НЕ(ВложенныйЗапрос.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				И СУММА(ВложенныйЗапрос.Контроль) > 0)) КАК СвойстваВиды
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваВиды.Свойство";	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДополнительныеРеквизитыНоменклатурыДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
																			ПолноеИмяОбъекта,
																			МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтСсылокДляОбработки.Ссылка КАК Свойство,
	|	ОбщийНабор.Ссылка КАК НаборСвойств
	|ПОМЕСТИТЬ ВтОбщиеСвойства
	|ИЗ
	|	ИмяВТСсылокДляОбработки КАК ВтСсылокДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ОбщийНабор
	|		ПО (ОбщийНабор.Свойство = ВтСсылокДляОбработки.Ссылка)
	|ГДЕ
	|	ОбщийНабор.Ссылка В (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие), ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие), ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСсылокДляОбработки.Ссылка КАК Свойство,
	|	РеквизитыДляКонтроляНоменклатуры.Ссылка КАК Значение,
	|	РеквизитыДляКонтроляНоменклатуры.Ссылка.НаборСвойств КАК НаборСвойств,
	|	""ВидНоменклатуры"" КАК Реквизит,
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроляНоменклатуры.ЗаполнятьОбязательно
	|			ТОГДА ""Равно""
	|		ИНАЧЕ ""НеРавно""
	|	КОНЕЦ КАК Условие,
	|	""ЗаполнятьОбязательно"" КАК ЗависимоеСвойство,
	|	НЕ РеквизитыДляКонтроляНоменклатуры.Свойство ЕСТЬ NULL КАК ЕстьНастройкаВВидеНоменклатуры
	|ИЗ
	|	ИмяВТСсылокДляОбработки КАК ВтСсылокДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроляНоменклатуры
	|		ПО ВтСсылокДляОбработки.Ссылка = РеквизитыДляКонтроляНоменклатуры.Свойство
	|ГДЕ
	|	НЕ ВтСсылокДляОбработки.Ссылка В
	|				(ВЫБРАТЬ
	|					ВтОбщиеСвойства.Свойство КАК Ссылка
	|				ИЗ
	|					ВтОбщиеСвойства КАК ВтОбщиеСвойства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтСсылокДляОбработки.Ссылка,
	|	РеквизитыДляКонтроляХарактеристик.Ссылка,
	|	РеквизитыДляКонтроляХарактеристик.Ссылка.НаборСвойствХарактеристик,
	|	""ВидНоменклатуры"",
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроляХарактеристик.ЗаполнятьОбязательно
	|			ТОГДА ""Равно""
	|		ИНАЧЕ ""НеРавно""
	|	КОНЕЦ,
	|	""ЗаполнятьОбязательно"",
	|	НЕ РеквизитыДляКонтроляХарактеристик.Свойство ЕСТЬ NULL
	|ИЗ
	|	ИмяВТСсылокДляОбработки КАК ВтСсылокДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляХарактеристик КАК РеквизитыДляКонтроляХарактеристик
	|		ПО ВтСсылокДляОбработки.Ссылка = РеквизитыДляКонтроляХарактеристик.Свойство
	|ГДЕ
	|	НЕ ВтСсылокДляОбработки.Ссылка В
	|				(ВЫБРАТЬ
	|					ВтОбщиеСвойства.Свойство КАК Ссылка
	|				ИЗ
	|					ВтОбщиеСвойства КАК ВтОбщиеСвойства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтСсылокДляОбработки.Ссылка,
	|	РеквизитыДляКонтроляСерий.Ссылка,
	|	РеквизитыДляКонтроляСерий.Ссылка.НаборСвойствСерий,
	|	""ВидНоменклатуры"",
	|	ВЫБОР
	|		КОГДА РеквизитыДляКонтроляСерий.ЗаполнятьОбязательно
	|			ТОГДА ""Равно""
	|		ИНАЧЕ ""НеРавно""
	|	КОНЕЦ,
	|	""ЗаполнятьОбязательно"",
	|	НЕ РеквизитыДляКонтроляСерий.Свойство ЕСТЬ NULL
	|ИЗ
	|	ИмяВТСсылокДляОбработки КАК ВтСсылокДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляСерий КАК РеквизитыДляКонтроляСерий
	|		ПО ВтСсылокДляОбработки.Ссылка = РеквизитыДляКонтроляСерий.Свойство
	|ГДЕ
	|	НЕ ВтСсылокДляОбработки.Ссылка В
	|				(ВЫБРАТЬ
	|					ВтОбщиеСвойства.Свойство КАК Ссылка
	|				ИЗ
	|					ВтОбщиеСвойства КАК ВтОбщиеСвойства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОбщиеСвойства.Свойство,
	|	РеквизитыДляКонтроляНоменклатуры.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие),
	|	""ВидНоменклатуры"",
	|	""ВСписке"",
	|	""ЗаполнятьОбязательно"",
	|	НЕ РеквизитыДляКонтроляНоменклатуры.Свойство ЕСТЬ NULL
	|ИЗ
	|	ВтОбщиеСвойства КАК ВтОбщиеСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыДляКонтроляНоменклатуры
	|		ПО ВтОбщиеСвойства.Свойство = РеквизитыДляКонтроляНоменклатуры.Свойство
	|			И (РеквизитыДляКонтроляНоменклатуры.ЗаполнятьОбязательно)
	|			И (ВтОбщиеСвойства.НаборСвойств = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОбщиеСвойства.Свойство,
	|	РеквизитыДляКонтроляХарактеристик.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие),
	|	""ВидНоменклатуры"",
	|	""ВСписке"",
	|	""ЗаполнятьОбязательно"",
	|	НЕ РеквизитыДляКонтроляХарактеристик.Свойство ЕСТЬ NULL
	|ИЗ
	|	ВтОбщиеСвойства КАК ВтОбщиеСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляХарактеристик КАК РеквизитыДляКонтроляХарактеристик
	|		ПО ВтОбщиеСвойства.Свойство = РеквизитыДляКонтроляХарактеристик.Свойство
	|			И (РеквизитыДляКонтроляХарактеристик.ЗаполнятьОбязательно)
	|			И (ВтОбщиеСвойства.НаборСвойств = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОбщиеСвойства.Свойство,
	|	РеквизитыДляКонтроляСерий.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие),
	|	""ВидНоменклатуры"",
	|	""ВСписке"",
	|	""ЗаполнятьОбязательно"",
	|	НЕ РеквизитыДляКонтроляСерий.Свойство ЕСТЬ NULL
	|ИЗ
	|	ВтОбщиеСвойства КАК ВтОбщиеСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляСерий КАК РеквизитыДляКонтроляСерий
	|		ПО ВтОбщиеСвойства.Свойство = РеквизитыДляКонтроляСерий.Свойство
	|			И (РеквизитыДляКонтроляСерий.ЗаполнятьОбязательно)
	|			И (ВтОбщиеСвойства.НаборСвойств = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие))
	|ИТОГИ
	|	МАКСИМУМ(ЕстьНастройкаВВидеНоменклатуры)
	|ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОбщиеСвойства";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТСсылокДляОбработки", Результат.ИмяВременнойТаблицы);
	ПВХОбъект = Неопределено;
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		ЭлементБлокировки = Блокировка.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ВыборкаПоСвойствам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСвойствам.Следующий() Цикл
			
			ПВХОбъект = ВыборкаПоСвойствам.Свойство.ПолучитьОбъект();
			
			ЗаполнятьОбязательно = Ложь;
			
			Если ВыборкаПоСвойствам.ЕстьНастройкаВВидеНоменклатуры Тогда
				ОтборСтрок = Новый Структура("ЗависимоеСвойство,Реквизит", "ЗаполнятьОбязательно", "ВидНоменклатуры");
				
				НайденныеСтроки = ПВХОбъект.ЗависимостиДополнительныхРеквизитов.НайтиСтроки(ОтборСтрок);
				
				Для Каждого СтрМас Из НайденныеСтроки Цикл
					
					ПВХОбъект.ЗависимостиДополнительныхРеквизитов.Удалить(СтрМас);	

				КонецЦикла;
				
				ВыборкаПоВидамНоменклатуры = ВыборкаПоСвойствам.Выбрать();
				
				Пока ВыборкаПоВидамНоменклатуры.Следующий() Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаПоВидамНоменклатуры.Значение) Тогда
						Продолжить;
					КонецЕсли;
					
					Если ВыборкаПоВидамНоменклатуры.Условие = "Равно"
						Или ВыборкаПоВидамНоменклатуры.Условие = "ВСписке" Тогда
						ЗаполнятьОбязательно = Истина;
					КонецЕсли;
					
					НоваяСтрока = ПВХОбъект.ЗависимостиДополнительныхРеквизитов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоВидамНоменклатуры);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ПВХОбъект.ЗаполнятьОбязательно = ЗаполнятьОбязательно;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПВХОбъект);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(),
			?(ПВХОбъект = Неопределено, ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка(), ПВХОбъект.Ссылка));
		
	КонецПопытки;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

//++ Локализация

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Набор.Ссылка
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		РеквизитыВидовНоменклатуры.Ссылка
	|	ИЗ
	|		Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыВидовНоменклатуры
	|	ГДЕ
	|		РеквизитыВидовНоменклатуры.ИмяРеквизита = &ИмяОшибочногоРеквизита
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеквизитыВидовНоменклатуры.Ссылка
	|	ИЗ
	|		Справочник.ВидыНоменклатуры.РеквизитыБыстрогоОтбораНоменклатуры КАК РеквизитыВидовНоменклатуры
	|	ГДЕ
	|		РеквизитыВидовНоменклатуры.ИмяРеквизита = &ИмяОшибочногоРеквизита
	|	) КАК Набор
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИмяОшибочногоРеквизита", "ПроизводительИмпортерДляДекларацийАлко");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта		= "Справочник.ВидыНоменклатуры";
	МенеджерВременныхТаблиц	= Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
																						ПолноеИмяОбъекта,
																						МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбъекта.Ссылка						КАК Ссылка,
	|	ДанныеОбъекта.Ссылка.ВерсияДанных			КАК ВерсияДанных,
	|	НЕ РеквизитыКонтроля.ИмяРеквизита ЕСТЬ NULL	КАК ТребуетсяЗаменаВКонтроле,
	|	НЕ РеквизитыОтбора.ИмяРеквизита ЕСТЬ NULL	КАК ТребуетсяЗаменаВОтборе
	|ИЗ
	|	&ВТДанныеДляОбработки КАК ДанныеОбъекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК РеквизитыКонтроля
	|		ПО ДанныеОбъекта.Ссылка = РеквизитыКонтроля.Ссылка
	|		И РеквизитыКонтроля.ИмяРеквизита = &ИмяОшибочногоРеквизита
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.РеквизитыБыстрогоОтбораНоменклатуры КАК РеквизитыОтбора
	|		ПО ДанныеОбъекта.Ссылка = РеквизитыОтбора.Ссылка
	|		И РеквизитыОтбора.ИмяРеквизита = &ИмяОшибочногоРеквизита
	|
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДанныеДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ИмяРеквизитаДляПодмены = "ПроизводительИмпортерДляДекларацийАлко";
	
	Запрос.УстановитьПараметр("ИмяОшибочногоРеквизита", ИмяРеквизитаДляПодмены);
	
	РезультатЗапроса	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДанныеОбъекта = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка,
																					Выборка.ВерсияДанных,
																					Параметры.Очередь);
			
			Если ДанныеОбъекта = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			
			НовоеИмяРеквизита = Метаданные.Справочники.Номенклатура.Реквизиты.ПроизводительИмпортерКонтрагент.Имя;
			НовоеОписаниеРеквизита = Метаданные.Справочники.Номенклатура.Реквизиты.ПроизводительИмпортерКонтрагент.Синоним;
			
			Если Выборка.ТребуетсяЗаменаВКонтроле Тогда
				НайденнаяСтрока = ДанныеОбъекта.РеквизитыДляКонтроляНоменклатуры.Найти(ИмяРеквизитаДляПодмены, "ИмяРеквизита");
				Если НайденнаяСтрока <> Неопределено Тогда
					НайденнаяСтрока.ИмяРеквизита = НовоеИмяРеквизита;
					НайденнаяСтрока.ПредставлениеРеквизита = НовоеОписаниеРеквизита;
				КонецЕсли;
				ОбъектИзменен = Истина;
			КонецЕсли;
			Если Выборка.ТребуетсяЗаменаВОтборе Тогда
				НайденнаяСтрока = ДанныеОбъекта.РеквизитыБыстрогоОтбораНоменклатуры.Найти(ИмяРеквизитаДляПодмены, "ИмяРеквизита");
				Если НайденнаяСтрока <> Неопределено Тогда
					НайденнаяСтрока.ИмяРеквизита = НовоеИмяРеквизита;
					НайденнаяСтрока.ПредставлениеРеквизита = НовоеОписаниеРеквизита;
				КонецЕсли;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь,
																						ПолноеИмяОбъекта);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Прочее

Функция ЭтоРеквизитСоставногоТипа(Реквизит)
	
	ТипЗначенияРеквизита = ТипЗнч(Реквизит);
	
	Если ТипЗначенияРеквизита = Тип("ФиксированнаяСтруктура") Тогда
		Возврат (Не Реквизит.Тип.Типы().Количество() < 2);
	ИначеЕсли ТипЗначенияРеквизита = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		Возврат (Не Реквизит.ТипЗначения.Типы().Количество() < 2);
	Иначе
		ТекстИсключения = НСтр("ru = 'Неожиданный тип значения параметра Реквизит.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

// Проверяет возможность изменения настройки отображения реквизита.
//
//	Параметры:
//		Объект - СправочникОбъект.Номенклатура
//		ИмяРеквизита - Строка
//		ВладелецРеквизита - Строка
//		ЭтоДопРеквизит - Булево
//		ЗаполнятьОбязательно - Булево
//
//	Возвращаемое значение:
//		Булево - изменение настройки возможно.
//
Функция ДоступноИзменениеНастройкиОтображенияРеквизита(Объект, СтрокаРеквизита, ВладелецРеквизита) Экспорт
	
	ИмяРеквизита   = СтрокаРеквизита.ИмяРеквизита;
	ЭтоДопРеквизит = СтрокаРеквизита.ЭтоДопРеквизит;
	
	Если ЭтоДопРеквизит Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаРеквизита.Свойство,"ЗаполнятьОбязательно");
		ЗаполнятьОбязательно = Реквизиты.ЗаполнятьОбязательно;
	Иначе
		Если ВладелецРеквизита = "Номенклатура" Тогда
			
			ОписаниеРеквизита = Справочники.Номенклатура.РеквизитОписание(ИмяРеквизита,
																Объект.ТипНоменклатуры,
																Объект.ОсобенностьУчета,
																Объект.ИспользованиеХарактеристик,
																Объект.ИспользоватьСрокГодностиСерии);
			
			ЗаполнятьОбязательно = ОписаниеРеквизита.ОбязательныйДляЗаполнения;
			
		Иначе
			ЗаполнятьОбязательно = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ДоступноИзменениеНастройки = Не ЗаполнятьОбязательно;
	
	Если ЭтоОбязательноОтображаемыйРеквизит(Объект, ИмяРеквизита, ВладелецРеквизита, ЭтоДопРеквизит, ЗаполнятьОбязательно) Тогда
		ДоступноИзменениеНастройки = Ложь;
	КонецЕсли;
	
	Возврат ДоступноИзменениеНастройки
			И Не (СтрокаРеквизита.Уникален
					Или СтрокаРеквизита.ЗаполнятьОбязательно);
	
КонецФункции

// Проверяет возможность изменения настройки обязательности заполнения реквизита.
//
//	Параметры:
//		Объект - СправочникОбъект.Номенклатура
//		ИмяРеквизита - Строка
//		ВладелецРеквизита - Строка
//		ЭтоДопРеквизит - Булево
//		ЗаполнятьОбязательно - Булево
//
//	Возвращаемое значение:
//		Булево - изменение настройки возможно.
//
Функция ДоступноИзменениеНастройкиОбязательностиЗаполненияРеквизита(Объект, СтрокаРеквизита, ВладелецРеквизита)
	
	ИмяРеквизита         = СтрокаРеквизита.ИмяРеквизита;
	ЭтоДопРеквизит       = СтрокаРеквизита.ЭтоДопРеквизит;
	
	Если ЭтоДопРеквизит Тогда
		ТекстИсключения = НСтр("ru = 'Функция не предназначена для использования с доп. реквизитами.'");
		ВызватьИсключение ТекстИсключения;
	Иначе
		Если ВладелецРеквизита = "Номенклатура" Тогда
			
			ОписаниеРеквизита = Справочники.Номенклатура.РеквизитОписание(ИмяРеквизита,
																		Объект.ТипНоменклатуры,
																		Объект.ОсобенностьУчета,
																		Объект.ИспользованиеХарактеристик,
																		Объект.ИспользоватьСрокГодностиСерии);
			
			ТипЗначения = ОписаниеРеквизита.Тип;
			
			ЗаполнятьОбязательно = ОписаниеРеквизита.ОбязательныйДляЗаполнения;
			
		ИначеЕсли ВладелецРеквизита = "ХарактеристикиНоменклатуры" Тогда
			
			ОписаниеРеквизита = Справочники.ХарактеристикиНоменклатуры.РеквизитОписание(ИмяРеквизита,
																						Объект.ТипНоменклатуры,
																						Объект.ОсобенностьУчета);
			
			ТипЗначения = ОписаниеРеквизита.Тип;
			
			ЗаполнятьОбязательно = ОписаниеРеквизита.ОбязательныйДляЗаполнения;
			
		Иначе
			ЗаполнятьОбязательно = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ДоступноИзменениеНастройки = НЕ ЗаполнятьОбязательно;
	
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	Возврат ДоступноИзменениеНастройки
		И ТипЗначения <> ОписаниеТиповБулево;
	
КонецФункции

// Добавляет реквизит в табличные части элемента справочника номенклатуры.
//
// Параметры:
//	Объект - СправочникОбъект.Номенклатура
//	Реквизит - Структура - см. Справочник.Номенклатура.ЗначениеСвойствРеквизита
//	ТаблицаРеквизитовДляКонтроляНоменклатуры - ТаблицаЗначений
//	ТаблицаРеквизитовОтбораНоменклатуры - ТаблицаЗначений
//
Процедура ДобавитьРеквизитДляКонтроляИОтбораНоменклатуры(Объект, Реквизит, ВладелецРеквизита) Экспорт
	
	Если Справочники.Номенклатура.НеотображаемыеВТаблицеНастроекРеквизиты().Найти(Реквизит.Имя) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НеиспользуемыеДляКонтроляРеквизиты = Справочники.Номенклатура.НеиспользуемыеДляКонтроляУникальностиРеквизиты();
	ТипыНеИспользуемыеДляКонтроля = Справочники.Номенклатура.НеиспользуемыеДляКонтроляЗаполненияИОтборовТипы();
			
	СвойстваДляЗаполнения =
		"Уникален, ЗаполнятьОбязательно, ОтображатьПриСоздании, ДоступностьУникален,
		|ДоступностьЗаполнятьОбязательно, ДоступностьОтображатьПриСоздании";
	
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Реквизит, "Тип") Тогда
		ТипРеквизита = Новый ОписаниеТипов("Неопределено");
	Иначе
		ТипРеквизита = Реквизит.Тип;
	КонецЕсли;
	
	ЭтоТовар = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар);
	ЭтоМногооборотнаяТара = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	ПредставлениеРеквизита = Реквизит.Представление;
		
	ЭтоНеиспользуемыйДляКонтроляРеквизит = (НеиспользуемыеДляКонтроляРеквизиты.Найти(Реквизит.Имя) <> Неопределено);
	ЭтоНеиспользуемыйДляКонтроляТип = (ТипыНеИспользуемыеДляКонтроля.Найти(Реквизит.Имя) <> Неопределено);
	ЭтоРеквизитСоставногоТипа = ЭтоРеквизитСоставногоТипа(Реквизит);
	ЭтоОбязательныйДляЗаполненияРеквизит = Реквизит.ОбязательныйДляЗаполнения;
	ТипРеквизитаБулево = (ТипРеквизита = ОписаниеТиповБулево);
	
	ЭтоРеквизитРекомендуемыйДляКонтроляУникальности = Реквизит.РекомендуемыйДляКонтроляУникальности; 
	
	Отбор = Новый Структура("ИмяРеквизита,ЭтоДопРеквизит", Реквизит.Имя, Ложь);
	
	Если ВладелецРеквизита = "Номенклатура" Тогда
		ИмяТЧ = "РеквизитыДляКонтроляНоменклатуры";
	Иначе
		ИмяТЧ = "РеквизитыДляКонтроляХарактеристик";
	КонецЕсли;
		
	НайденныеСтроки = Объект[ИмяТЧ].НайтиСтроки(Отбор);	
	
	ЭтоНоваяСтрока = Ложь;
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтрокаРеквизитовДляКонтроля = Объект[ИмяТЧ].Добавить();
		СтрокаРеквизитовДляКонтроля.ИмяРеквизита = Реквизит.Имя;
		ЭтоНоваяСтрока = Истина;
	Иначе
		СтрокаРеквизитовДляКонтроля = НайденныеСтроки[0];
	КонецЕсли;	
	
	СтрокаРеквизитовДляКонтроля.ПредставлениеРеквизита = ПредставлениеРеквизита;
	
	Если Не СтрокаРеквизитовДляКонтроля.ЗаполнятьОбязательно Тогда
		СтрокаРеквизитовДляКонтроля.ЗаполнятьОбязательно = ЭтоОбязательныйДляЗаполненияРеквизит;
	КонецЕсли;
	
	Если Не СтрокаРеквизитовДляКонтроля.ОтображатьПриСоздании Тогда
		СтрокаРеквизитовДляКонтроля.ОтображатьПриСоздании =
			ЭтоОбязательноОтображаемыйРеквизит(Объект, Реквизит, "Номенклатура", Ложь, ЭтоОбязательныйДляЗаполненияРеквизит);
	КонецЕсли;
	
	Если ЭтоРеквизитРекомендуемыйДляКонтроляУникальности
		И ЭтоНоваяСтрока Тогда
		СтрокаРеквизитовДляКонтроля.Уникален = Истина;
		СтрокаРеквизитовДляКонтроля.ОтображатьПриСоздании = Истина;
		СтрокаРеквизитовДляКонтроля.ДоступностьУникален = Истина;
	ИначеЕсли ЭтоНеиспользуемыйДляКонтроляРеквизит
		Или ЭтоНеиспользуемыйДляКонтроляТип Тогда
		СтрокаРеквизитовДляКонтроля.ДоступностьУникален = Ложь;
		СтрокаРеквизитовДляКонтроля.Уникален = Ложь;
	Иначе
		СтрокаРеквизитовДляКонтроля.ДоступностьУникален = Истина;
	КонецЕсли;
	
	СтрокаРеквизитовДляКонтроля.ДоступностьЗаполнятьОбязательно = ДоступноИзменениеНастройкиОбязательностиЗаполненияРеквизита(Объект,
																												СтрокаРеквизитовДляКонтроля,
																												ВладелецРеквизита);

		
	СтрокаРеквизитовДляКонтроля.ДоступностьОтображатьПриСоздании   = ДоступноИзменениеНастройкиОтображенияРеквизита(Объект,
																													СтрокаРеквизитовДляКонтроля,
																													ВладелецРеквизита);
КонецПроцедуры

Функция ЭтоОбязательноОтображаемыйРеквизит(Объект, ИмяРеквизита, ВладелецРеквизита, ЭтоДопРеквизит, ЗаполнятьОбязательно)
	
	Если ЭтоДопРеквизит Тогда
		Возврат ЗаполнятьОбязательно;
	КонецЕсли;
	
	Если ЗаполнятьОбязательно Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ВладелецРеквизита = "Номенклатура" Тогда
		
		ОбязательноОтображаемый = Справочники.Номенклатура.РеквизитОписание(ИмяРеквизита,
																Объект.ТипНоменклатуры,
																Объект.ОсобенностьУчета,
																Объект.ИспользованиеХарактеристик,
																Объект.ИспользоватьСрокГодностиСерии).ОбязательныйДляОтображенияПриСоздании;
		
		Возврат ОбязательноОтображаемый;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ИменаРеквизитовДляФормыНастройкаСоставаРеквизитовСерии(Событие) Экспорт
	
	//Событие: СохранениеРезультатов,ОткрытиеФормыРедактирования
	
	ИменаРеквизитов = "ИспользоватьRFIDМеткиСерии,ИспользоватьНомерКИЗГИСМСерии,ИспользоватьНомерСерии,ИспользоватьСрокГодностиСерии,"
						+ "ТочностьУказанияСрокаГодностиСерии,НастройкаИспользованияСерий,АвтоматическиГенерироватьСерии,ИспользоватьДатуПроизводстваСерии,"
						+ "ИспользоватьПроизводителяЕГАИССерии,ИспользоватьСправку2ЕГАИССерии,"
						+ "ИспользоватьПроизводителяВЕТИССерии,ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,ИспользоватьИдентификаторПартииВЕТИССерии,"
						+ "ИспользоватьМРЦМОТПСерии";
	
	Если Событие = "ОткрытиеФормыРедактирования" Тогда
		ИменаРеквизитов = ИменаРеквизитов + ",КиЗГИСМ,ПродукцияМаркируемаяДляГИСМ,АлкогольнаяПродукция,"
							+ "ПодконтрольнаяПродукцияВЕТИС,ОсобенностьУчета";
	КонецЕсли;
	
	Возврат ИменаРеквизитов;
	
КонецФункции

Процедура УдалитьРеквизитДляКонтроля(Объект, ИмяРеквизита, ВладелецРеквизита)
	
	Отбор = Новый Структура("ИмяРеквизита", ИмяРеквизита);
	КоллекцияРеквизитовДляКонтроля = КоллекцияРеквизитовДляКонтроля(Объект, ВладелецРеквизита);
	
	НайденныеСтроки = КоллекцияРеквизитовДляКонтроля.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		СтрокаТаблицыРеквизитов = НайденныеСтроки[0];
		КоллекцияРеквизитовДляКонтроля.Удалить(СтрокаТаблицыРеквизитов);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьРеквизитДляОтбора(Объект, ИмяРеквизита, ВладелецРеквизита)
	
	КоллекцияРеквизитовОтбора = КоллекцияРеквизитовОтбора(Объект, ВладелецРеквизита); 
	
	МассивСтрок = КоллекцияРеквизитовОтбора.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	
	Если МассивСтрок.Количество() > 0 Тогда
		СтрокаТаблицыРеквизитов = МассивСтрок[0];
		КоллекцияРеквизитовОтбора.Удалить(СтрокаТаблицыРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииФлагаУникален(Объект, ВладелецРеквизита, ИдентификаторСтрокиТаблицы) Экспорт
	
	КоллекцияРеквизитовДляКонтроля = Справочники.ВидыНоменклатуры.КоллекцияРеквизитовДляКонтроля(Объект, ВладелецРеквизита);
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.ВидыНоменклатуры") Тогда
		ТекущиеДанные = КоллекцияРеквизитовДляКонтроля[ИдентификаторСтрокиТаблицы];
	Иначе	
		ТекущиеДанные = КоллекцияРеквизитовДляКонтроля.НайтиПоИдентификатору(ИдентификаторСтрокиТаблицы);
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	Если ВладелецРеквизита <> "СерииНоменклатуры"
		И ТекущиеДанные.Уникален Тогда
		ТекущиеДанные.ЗаполнятьОбязательно = Истина;
		ТекущиеДанные.ОтображатьПриСоздании = Истина;
	КонецЕсли;
		
	// Если тип реквизита - Булево, то не включать контроль заполнения.
	Если ТекущиеДанные.ЭтоДопРеквизит Тогда
		
		ТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Свойство, "ТипЗначения");
		
		Если ТипЗначения = ОписаниеТиповБулево Тогда
			ТекущиеДанные.ЗаполнятьОбязательно = Ложь;
		КонецЕсли;
		
	Иначе
		
		Если ВладелецРеквизита = "Номенклатура" Тогда
			
			ТипРеквизита = Справочники.Номенклатура.РеквизитОписание(ТекущиеДанные.ИмяРеквизита,
																	Объект.ТипНоменклатуры,
																	Объект.ОсобенностьУчета,
																	Объект.ИспользованиеХарактеристик,
																	Объект.ИспользоватьСрокГодностиСерии).Тип;
			
			Если ТипРеквизита = ОписаниеТиповБулево Тогда
				ТекущиеДанные.ЗаполнятьОбязательно = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВладелецРеквизита <> "СерииНоменклатуры" Тогда 
		ТекущиеДанные.ДоступностьОтображатьПриСоздании = Справочники.ВидыНоменклатуры.ДоступноИзменениеНастройкиОтображенияРеквизита(Объект,
																																	ТекущиеДанные,
																																	ВладелецРеквизита);
	КонецЕсли;
	
КонецПроцедуры

// Выполняет заполнение таблицы настроек контроля реквизитов справочников Номенклатура и ХарактеристикиНоменклатуры.
//
Процедура ЗаполнитьРеквизитыДляКонтроля(Объект, ВладелецРеквизитов) Экспорт
	
	ЭтоРеквизитыХарактеристик = ВладелецРеквизитов = "ХарактеристикиНоменклатуры";
	
	Если ЭтоРеквизитыХарактеристик
		И Не Объект.ИспользоватьХарактеристики Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоРеквизитыХарактеристик Тогда
		ЗависимостьОтТипаНоменклатуры = ЗначениеНастроекПовтИсп.ВсеРеквизитыХарактеристикНоменклатуры(Объект.ТипНоменклатуры,
																									Объект.ОсобенностьУчета);
	Иначе
		ЗависимостьОтТипаНоменклатуры = ЗначениеНастроекПовтИсп.ВсеРеквизитыНоменклатуры(Объект.ТипНоменклатуры,
																						Объект.ОсобенностьУчета,
																						Объект.ИспользоватьХарактеристики,
																						Объект.ИспользоватьСрокГодностиСерии);
	КонецЕсли;
	
	Для Каждого НастройкаОтТипа Из ЗависимостьОтТипаНоменклатуры Цикл
		
		Если НастройкаОтТипа.Значение.Использование Тогда
			Справочники.ВидыНоменклатуры.ДобавитьРеквизитДляКонтроляИОтбораНоменклатуры(Объект,
																						НастройкаОтТипа.Значение,
																						ВладелецРеквизитов);
		Иначе
			УдалитьРеквизитДляКонтроля(Объект, НастройкаОтТипа.Ключ, ВладелецРеквизитов);
			УдалитьРеквизитДляОтбора(Объект, НастройкаОтТипа.Ключ, ВладелецРеквизитов);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоРеквизитыХарактеристик Тогда
		Объект.РеквизитыДляКонтроляХарактеристик.Сортировать("ПредставлениеРеквизита");
	Иначе
		Объект.РеквизитыДляКонтроляНоменклатуры.Сортировать("ПредставлениеРеквизита");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДопРеквизитыДляКонтроляИОтбора(Объект, НазначениеДопРеквизитов) Экспорт
	
	Если НазначениеДопРеквизитов = "ХарактеристикиНоменклатуры"
		И Не Объект.ИспользоватьХарактеристики Тогда
		Объект.РеквизитыБыстрогоОтбораХарактеристик.Очистить();
		Объект.РеквизитыДляКонтроляХарактеристик.Очистить();
		Возврат;
	ИначеЕсли НазначениеДопРеквизитов = "СерииНоменклатуры"
		И Не Объект.ИспользоватьСерии Тогда
		Объект.РеквизитыДляКонтроляСерий.Очистить();
		Возврат;
	КонецЕсли;
	
	ТипыНеИспользуемыеДляКонтроля = Справочники.Номенклатура.НеиспользуемыеДляКонтроляЗаполненияИОтборовТипы();
	
	СвойстваДляЗаполнения = "Уникален, ЗаполнятьОбязательно, ОтображатьПриСоздании, ДоступностьУникален, ДоступностьЗаполнятьОбязательно, ДоступностьОтображатьПриСоздании";
	
	Отбор = Новый Структура("Свойство, ЭтоДопРеквизит");
		
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	ВсеДопРеквизиты = Справочники.Номенклатура.ВсеДополнительныеРеквизиты(Объект.Ссылка, НазначениеДопРеквизитов);
	
	РеквизитыДляКонтроля    = КоллекцияРеквизитовДляКонтроля(Объект, НазначениеДопРеквизитов);
	РеквизитыБыстрогоОтбора = КоллекцияРеквизитовОтбора(Объект, НазначениеДопРеквизитов);
	
	УдаляемыеСтроки = Новый Массив;
	
	Для каждого ДопРеквизит Из РеквизитыДляКонтроля Цикл
		Если Не ДопРеквизит.ЭтоДопРеквизит Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Отбор, ДопРеквизит);
		
		ОписаниеДопРеквизита = ВсеДопРеквизиты.НайтиСтроки(Отбор);
		
		Если ОписаниеДопРеквизита.Количество() = 0 Тогда
			УдаляемыеСтроки.Добавить(ДопРеквизит);
		Иначе
			ЗаполнитьЗначенияСвойств(ДопРеквизит,ОписаниеДопРеквизита[0]);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из УдаляемыеСтроки Цикл
		РеквизитыДляКонтроля.Удалить(Строка);
	КонецЦикла;
	
	Если РеквизитыБыстрогоОтбора <> Неопределено Тогда
		УдаляемыеСтроки = Новый Массив;
		
		Для каждого ДопРеквизит Из РеквизитыБыстрогоОтбора Цикл
			Если Не ДопРеквизит.ЭтоДопРеквизит Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Отбор, ДопРеквизит);
			
			Если ВсеДопРеквизиты.НайтиСтроки(Отбор).Количество() = 0 Тогда
				УдаляемыеСтроки.Добавить(ДопРеквизит);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Строка Из УдаляемыеСтроки Цикл
			РеквизитыБыстрогоОтбора.Удалить(Строка);
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого ДопРеквизит Из ВсеДопРеквизиты Цикл
		
		ТипЗначения = ДопРеквизит.Тип;
		ЭтоНеиспользуемыйДляКонтроляТип = (ТипыНеИспользуемыеДляКонтроля.Найти(ТипЗначения) <> Неопределено);
		ТипРеквизитаБулево = (ТипЗначения = ОписаниеТиповБулево);
		
		ЗаполнитьЗначенияСвойств(Отбор, ДопРеквизит);
		
		НайденныеСтроки = РеквизитыДляКонтроля.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаРеквизитовДляКонтроля = НайденныеСтроки[0];
			СтрокаРеквизитовДляКонтроля.ПредставлениеРеквизита = ДопРеквизит.ПредставлениеРеквизита;	
			НоваяСтрока = Ложь;
		Иначе
			СтрокаРеквизитовДляКонтроля = РеквизитыДляКонтроля.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРеквизитовДляКонтроля, ДопРеквизит);
			НоваяСтрока = Истина;
		КонецЕсли;
		
		Если ДопРеквизит.ЗаполнятьОбязательно Тогда
			СтрокаРеквизитовДляКонтроля.ЗаполнятьОбязательно = Истина;
			Если НазначениеДопРеквизитов <> "СерииНоменклатуры" Тогда
				СтрокаРеквизитовДляКонтроля.ОтображатьПриСоздании = Истина;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаРеквизитовДляКонтроля.ДоступностьЗаполнятьОбязательно = Истина;
		
		Если НазначениеДопРеквизитов <> "СерииНоменклатуры" Тогда
			Если Не ЭтоНеиспользуемыйДляКонтроляТип Тогда
				СтрокаРеквизитовДляКонтроля.ДоступностьУникален = Истина;
			Иначе
				СтрокаРеквизитовДляКонтроля.Уникален = Ложь;
				СтрокаРеквизитовДляКонтроля.ДоступностьУникален = Ложь;
			КонецЕсли;
			
			СтрокаРеквизитовДляКонтроля.ДоступностьОтображатьПриСоздании = Не СтрокаРеквизитовДляКонтроля.ЗаполнятьОбязательно
																			И Не СтрокаРеквизитовДляКонтроля.Уникален;
			
		КонецЕсли;			
	КонецЦикла;
		
	Если РеквизитыБыстрогоОтбора <> Неопределено Тогда
		Отбор = Новый Структура("Свойство");
		
		Для Каждого ДопРеквизит Из ВсеДопРеквизиты Цикл
			ЗаполнитьЗначенияСвойств(Отбор, ДопРеквизит);
			ИзменяемыеСтроки = РеквизитыБыстрогоОтбора.НайтиСтроки(Отбор);
			
			Для Каждого СтрокаРеквизитов Из ИзменяемыеСтроки Цикл
				ЗаполнитьЗначенияСвойств(СтрокаРеквизитов, ДопРеквизит, "ПредставлениеРеквизита");
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если РеквизитыДляКонтроля <> Неопределено Тогда
		РеквизитыДляКонтроля.Сортировать("ПредставлениеРеквизита");
	КонецЕсли;
	
КонецПроцедуры

Функция КоллекцияРеквизитовДляКонтроля(ТекущийОбъект, ТипВладельцаНабораЭлементов) Экспорт
	
	Если ТипВладельцаНабораЭлементов = "Номенклатура" Тогда
		Возврат ТекущийОбъект.РеквизитыДляКонтроляНоменклатуры;
	ИначеЕсли ТипВладельцаНабораЭлементов = "ХарактеристикиНоменклатуры" Тогда
		Возврат ТекущийОбъект.РеквизитыДляКонтроляХарактеристик;
	ИначеЕсли ТипВладельцаНабораЭлементов = "СерииНоменклатуры" Тогда
		Возврат ТекущийОбъект.РеквизитыДляКонтроляСерий;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция КоллекцияРеквизитовОтбора(ТекущийОбъект, ТипВладельцаНабораЭлементов) Экспорт
	
	Если ТипВладельцаНабораЭлементов = "Номенклатура" Тогда
		Возврат ТекущийОбъект.РеквизитыБыстрогоОтбораНоменклатуры;
	ИначеЕсли ТипВладельцаНабораЭлементов = "ХарактеристикиНоменклатуры" Тогда
		Возврат ТекущийОбъект.РеквизитыБыстрогоОтбораХарактеристик;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ИспользоватьПроизводство() Экспорт
	
	ИспользоватьПроизводство = Ложь; //Для УТ
	
	
	Возврат ИспользоватьПроизводство;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли