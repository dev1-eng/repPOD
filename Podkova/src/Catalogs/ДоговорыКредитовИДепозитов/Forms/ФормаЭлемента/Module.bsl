
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	СсылкаКопирования = Параметры.ЗначениеКопирования;
	Если Не СсылкаКопирования.Пустая() Тогда
		Результат = РегистрыСведений.ПроцентныеСтавкиФинансовыхИнструментов.ПрочитатьПроцентнуюСтавкуКомисии(СсылкаКопирования);
		СтавкаПроцентов   = Результат.Процент;
		Комиссия          = Результат.Комиссия;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	// подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	ТипКомиссииЗаблокирован = Истина;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если СтавкаПроцентов <> 0 Или Комиссия <> 0 Тогда
		
		Если ТекущийОбъект.ЭтоНовый() Тогда
			СсылкаНаСправочник = Справочники.ДоговорыКредитовИДепозитов.ПолучитьСсылку();
			ТекущийОбъект.УстановитьСсылкуНового(СсылкаНаСправочник);
		Иначе
			СсылкаНаСправочник = ТекущийОбъект.Ссылка;
		КонецЕсли;
		
		РегистрыСведений.ПроцентныеСтавкиФинансовыхИнструментов.ЗаписатьПроцентнуюСтавкуКомисии(
			СсылкаНаСправочник, СтавкаПроцентов, Комиссия, Объект.Дата);
			
		ЕстьИсторияСтавок = Истина;
		НастроитьЗависимыеЭлементыФормыНаСервере("ЕстьИсторияСтавок");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ОбновитьЗаголовокФормы();
	
	// подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	ТипКомиссииЗаблокирован = Истина;
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ВариантГрафиковКредитовИДепозитов" Тогда
		ОбработатьЗапись_ВариантГрафиковКредитовИДепозитов();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ПроцентныеСтавкиФинансовыхИнструментов" Тогда
		ОбработатьЗапись_ПроцентныеСтавкиКредитовДепозитов();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл"
		И Параметр.Свойство("ВладелецФайла")
		И Параметр.ВладелецФайла = Объект.Ссылка
		И Параметр.ЭтоНовый
		И ДобавляетсяФайлПодтверждающегоДокумента Тогда
		
		Элементы.ПодтверждающиеДокументы.ТекущиеДанные.Файл = Источник[0];
		ДобавляетсяФайлПодтверждающегоДокумента = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗапись_ВариантГрафиковКредитовИДепозитов()
	
	УстановитьТекущийВариантГрафика();
	НастроитьЗависимыеЭлементыФормыНаСервере("ВариантГрафика");
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗапись_ПроцентныеСтавкиКредитовДепозитов()
	
	УстановитьТекущиеПроцентныеСтавки();
	НастроитьЗависимыеЭлементыФормыНаСервере("ЕстьИсторияСтавок");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ХарактерДоговораПриИзменении(Элемент)
	
	ХарактерДоговораПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ХарактерДоговораПриИзмененииСервер()
	
	Если Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит Тогда
		Объект.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная;
		Объект.ТипКомиссии = Перечисления.ТипыКомиссииКредитовИДепозитов.Нет;
	КонецЕсли;
	
	УстановитьТипДоговора();
	УстановитьПараметрыВыбораСтатейДДС();
	
	ПартнерыИКонтрагенты.ЗаголовокЭлементаПартнерВЗависимостиОтХарактераДоговораКредитаИДепозита(
		ЭтотОбъект, "Партнер", Объект.ХарактерДоговора);
	
	ЗаполнитьСтатьиУчета(Объект.ХарактерДоговора, Объект.ТипДоговора, Объект.ТипСрочности);
	
	
	НастроитьЗависимыеЭлементыФормыНаСервере("ХарактерДоговора");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	Если Объект.ФормаОплаты = Перечисления.ФормыОплаты.Наличная Тогда
		ЗаполнитьКассуПоУмолчанию(Объект.Организация, Объект.Касса, Объект.ВалютаВзаиморасчетов);
	Иначе
		ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Организация, Объект.ПорядокОплаты, Объект.БанковскийСчет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	БанковскийСчетПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура БанковскийСчетПриИзмененииНаСервере()
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаВзаиморасчетовПриИзменении(Элемент)
	
	ВалютаВзаиморасчетовПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаВзаиморасчетовПриИзмененииСервер()
	
	Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(Объект.ВалютаВзаиморасчетов);
	Перечисления.ПорядокОплатыПоСоглашениям.ЗаполнитьВозможныеПорядкиОплаты(
		Объект.ВалютаВзаиморасчетов, Элементы.ПорядокОплаты, Объект.ПорядокОплаты);
		
	УстановитьПараметрыВыбораБанковскихСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПервогоТраншаПриИзменении(Элемент)
	
	ДатаСрокиГрафикаПриИзмененииСервер(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоследнегоПлатежаПриИзменении(Элемент)
	
	ДатаСрокиГрафикаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокМесПриИзменении(Элемент)
	
	ДатаСрокиГрафикаПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура СрокДнейПриИзменении(Элемент)
	
	ДатаСрокиГрафикаПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСрокиГрафикаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаПоследнегоПлатежа) И Объект.ДатаПоследнегоПлатежа < Объект.ДатаПервогоТранша Тогда
		
		Текст = НСтр("ru='Дата последнего платежа не может быть раньше даты первого транша'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,, "ДатаПоследнегоПлатежа", "Объект");
		Объект.ДатаПоследнегоПлатежа = Неопределено;
		
	КонецЕсли;
	
	ДатаСрокиГрафикаПриИзмененииСервер(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеДляПечати) Тогда
		Объект.НаименованиеДляПечати = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ПартнерПриИзмененииСервер(Объект.Партнер, Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
	
КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииСервер(Партнер, Контрагент, ПорядокОплаты, БанковскийСчетКонтрагента)
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	ЗаполнитьБанковскийСчетПоУмолчанию(Контрагент, ПорядокОплаты, БанковскийСчетКонтрагента);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОплатыПриИзменении(Элемент)
	
	ПорядокОплатыПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПорядокОплатыПриИзмененииСервер()
	
	Если Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях Тогда
		Объект.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета;
	ИначеЕсли Объект.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
		Объект.ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьПараметрыВыбораБанковскихСчетов();
	
	Если Не БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчет) Тогда
		Объект.БанковскийСчет = Неопределено;
	КонецЕсли;
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Организация, Объект.ПорядокОплаты, Объект.БанковскийСчет);
	
	Если Не БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетКонтрагента) Тогда
		Объект.БанковскийСчетКонтрагента = Неопределено;
	КонецЕсли;
	ЗаполнитьБанковскийСчетПоУмолчанию(Объект.Контрагент, Объект.ПорядокОплаты, Объект.БанковскийСчетКонтрагента);
	
	Если Не БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетПроцентов) Тогда
		Объект.БанковскийСчетПроцентов = Неопределено;
	КонецЕсли;
	
	Если Не БанковскийСчетСоответствуетПорядкуОплаты(Объект.БанковскийСчетКомиссии) Тогда
		Объект.БанковскийСчетКомиссии = Неопределено;
	КонецЕсли;
	
	Если Не БанковскийСчетСоответствуетПорядкуОплаты(Объект.Касса) Тогда
		Объект.Касса = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстИспользуемыйГрафикНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВариантГрафика.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ТекстИспользуемыйГрафикНажатиеЗавершение", ЭтотОбъект),
				НСтр("ru = 'Ввод графика возможен только после записи договора.
					|Записать и продолжить?'"),
				РежимДиалогаВопрос.ДаНет,,
				КодВозвратаДиалога.Да);
			Возврат;
		КонецЕсли;
		
		ТекстИспользуемыйГрафикНажатиеФрагмент();
		
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ВариантГрафика);
		
		ОткрытьФорму("Справочник.ВариантыГрафиковКредитовИДепозитов.ФормаОбъекта",
			ПараметрыФормы,
			ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстИспользуемыйГрафикНажатиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТекстИспользуемыйГрафикНажатиеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстИспользуемыйГрафикНажатиеФрагмент()

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Основание", Новый Структура("Владелец", Объект.Ссылка));
		
		ОткрытьФорму("Справочник.ВариантыГрафиковКредитовИДепозитов.ФормаОбъекта",
			ПараметрыФормы,
			ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДоговораСрочностиПриИзменении(Элемент)
	
	ТипДоговораСрочностиПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ТипДоговораСрочностиПриИзмененииСервер()
	
	ЗаполнитьСтатьиУчета(Объект.ХарактерДоговора, Объект.ТипДоговора, Объект.ТипСрочности);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтавкуПроцентовНажатие(Элемент)
	
	Отбор = Новый Структура("Договор", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("РегистрСведений.ПроцентныеСтавкиФинансовыхИнструментов.ФормаСписка", ПараметрыФормы, ЭтаФорма,, Окно);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКомиссииПриИзменении(Элемент)
	
	Комиссия = 0;
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролироватьЛимитПриИзменении(Элемент)
	
	Если Не КонтролироватьЛимит И Объект.СуммаЛимита > 0 Тогда
		Объект.СуммаЛимита = 0;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизита(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбеспечениеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.Контрагент = Объект.Контрагент;
		Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровКонтрагентов.НеСогласован");
		Элемент.ТекущиеДанные.ДатаНачала = Объект.Дата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающиеДокументыВидДокументаПриИзменении(Элемент)
	
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающиеДокументыФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	Возврат;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПросмотретьПодтверждающийДокумент(Команда)
	
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодтверждающиеДокументы(Команда)
	
	Возврат;
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(
		ЭтаФорма,, Новый ОписаниеОповещения("ОбработатьРазблокировкуРеквизитов", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРазблокировкуРеквизитов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		ТипКомиссииЗаблокирован = Ложь;
		НастроитьЗависимыеЭлементыФормы("ТипКомиссииЗаблокирован");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	НастройкиПолейФормы = Справочники.ДоговорыКредитовИДепозитов.НастройкиПолейФормы();
	ЗначениеВРеквизитФормы(НастройкиПолейФормы, "НастройкиПолей");
	ЗависимостиПолейФормы = ДенежныеСредстваСервер.ЗависимостиПолейФормы(НастройкиПолейФормы);
	ЗначениеВРеквизитФормы(ЗависимостиПолейФормы, "ЗависимостиПолей");
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КонтролироватьЛимит = (Объект.СуммаЛимита > 0);
	
	УстановитьТипДоговора();
	УстановитьПараметрыВыбораБанковскихСчетов();
	УстановитьПараметрыВыбораСтатейДДС();
	УстановитьТекущийВариантГрафика();
	УстановитьТекущиеПроцентныеСтавки();
	
	Перечисления.ПорядокОплатыПоСоглашениям.ЗаполнитьВозможныеПорядкиОплаты(
		Объект.ВалютаВзаиморасчетов, Элементы.ПорядокОплаты, Объект.ПорядокОплаты);
	
	ОбновитьЗаголовокФормы();
	
	ПартнерыИКонтрагенты.ЗаголовокЭлементаПартнерВЗависимостиОтХарактераДоговораКредитаИДепозита(
		ЭтотОбъект, "Партнер", Объект.ХарактерДоговора);
	
	
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокФормы()
	
	Если Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм Тогда
		ПредставлениеТипа = НСтр("ru='Условия кредита или займа'");
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит Тогда
		ПредставлениеТипа = НСтр("ru='Условия депозита'");
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный Тогда
		ПредставлениеТипа = НСтр("ru='Условия выдачи займа'");
	Иначе
		ПредставлениеТипа = НСтр("ru='Договор с контрагентом'");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЭтаФорма.Заголовок = ПредставлениеТипа + " (" + НСтр("ru='создание'") + ")";
	Иначе
		ЭтаФорма.Заголовок = Объект.Наименование + " (" + ПредставлениеТипа + ")";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипДоговора()
	
	СписокВыбора = Элементы.ТипДоговора.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм Тогда
		
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.КредитВБанке);
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ВнешнийЗайм);
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ВнутреннийЗайм);
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ВкладСотрудника);
		
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит Тогда
		
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ДепозитВБанке);
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией);
		
	ИначеЕсли Объект.ХарактерДоговора = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный Тогда
		
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ВнешнийЗайм);
		СписокВыбора.Добавить(Перечисления.ТипыДоговораКредитовИДепозитов.ВнутреннийЗайм);
	КонецЕсли;
	
	Если СписокВыбора.НайтиПоЗначению(Объект.ТипДоговора) = Неопределено И СписокВыбора.Количество() Тогда
		Объект.ТипДоговора = СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораБанковскихСчетов()
	
	МассивПараметров = Новый Массив;
	Если Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях
		Или Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях Тогда
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", ВалютаРегламентированногоУчета));
	Иначе
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", Объект.ВалютаВзаиморасчетов));
	КонецЕсли;
	
	МассивПараметров.Добавить(Новый ПараметрВыбора("ВыборСчетовГоловнойОрганизации", Неопределено));
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Закрыт", Ложь));
	
	ПараметрыВыбораСчета = Новый ФиксированныйМассив(МассивПараметров);
	
	Элементы.БанковскийСчет.ПараметрыВыбора            = ПараметрыВыбораСчета;
	Элементы.БанковскийСчетКонтрагента.ПараметрыВыбора = ПараметрыВыбораСчета;
	Элементы.БанковскийСчетПроцентов.ПараметрыВыбора   = ПараметрыВыбораСчета;
	Элементы.БанковскийСчетКомиссии.ПараметрыВыбора    = ПараметрыВыбораСчета;
	Элементы.Касса.ПараметрыВыбора                     = ПараметрыВыбораСчета;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораСтатейДДС()
	
	ХО = Перечисления.ХозяйственныеОперации;
	ХарактерыДоговоров = Перечисления.ХарактерыДоговоровФинансовыхИнструментов;
	Если Объект.ХарактерДоговора <> ХарактерыДоговоров.КредитИлиЗайм Тогда
		Элементы.СтатьяДДСПоступления.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора);
		Элементы.СтатьяДДСОсновногоДолга.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора, Истина);
		Если Объект.ХарактерДоговора = ХарактерыДоговоров.Депозит Тогда
			Элементы.СтатьяДДСПроцентов.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора,, ХО.НачисленияПоДепозитам);
		Иначе
			Элементы.СтатьяДДСПроцентов.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора,, ХО.ПоступлениеПроцентовПоЗаймамВыданным);
		КонецЕсли;
	Иначе
		Элементы.СтатьяДДСПоступления.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора, Истина);
		Элементы.СтатьяДДСОсновногоДолга.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора);
		Элементы.СтатьяДДСПроцентов.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора,, ХО.ОплатаПроцентовПоКредитам);
	КонецЕсли;
	Элементы.СтатьяДДСКомиссии.ПараметрыВыбора = ПараметрыВыбораСтатьиДДС(Объект.ХарактерДоговора);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыВыбораСтатьиДДС(ХарактерДоговора, ЭтоПоступление = Ложь, ХозяйственнаяОперация = Неопределено)
	
	МассивПараметров = Новый Массив;
	Если ХозяйственнаяОперация = Неопределено Тогда
		ХозяйственнаяОперация = Справочники.ДоговорыКредитовИДепозитов.ОперацияПоХарактеруДоговора(ХарактерДоговора, ЭтоПоступление);
	КонецЕсли;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ХозяйственнаяОперация", ХозяйственнаяОперация));
	
	Возврат Новый ФиксированныйМассив(МассивПараметров);
	
КонецФункции


&НаСервере
Процедура ДатаСрокиГрафикаПриИзмененииСервер(ИмяЭлемента = "ДатаПоследнегоПлатежа")
	
	Справочники.ВариантыГрафиковКредитовИДепозитов.ПересчитатьСроки(Объект, ИмяЭлемента);
	
КонецПроцедуры

&НаСервере
Функция БанковскийСчетСоответствуетПорядкуОплаты(БанковскийСчет)
	
	Соответствует = Истина;
	
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		ВалютаСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "ВалютаДенежныхСредств");
		Если Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте
			Или Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВВалюте Тогда
			Соответствует = (ВалютаСчета <> ВалютаРегламентированногоУчета);
		Иначе
			Соответствует = (ВалютаСчета = ВалютаРегламентированногоУчета);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Соответствует;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьБанковскийСчетПоУмолчанию(ВладелецСчета, ПорядокОплаты, БанковскийСчетВладельца)
	
	Если (ЗначениеЗаполнено(БанковскийСчетВладельца)
		И ВладелецСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчетВладельца, "Владелец"))
		Или Не ЗначениеЗаполнено(ВладелецСчета) Тогда
		Возврат;
	КонецЕсли;
	
	ОплатаВВалюте = (ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте
		Или ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВВалюте);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчета.Ссылка КАК БанковскийСчет
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &ВладелецСчета
	|	И (БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаРегл И НЕ &ОплатаВВалюте
	|		ИЛИ БанковскиеСчета.ВалютаДенежныхСредств <> &ВалютаРегл И &ОплатаВВалюте)
	|	И НЕ БанковскиеСчета.ПометкаУдаления");
	
	Если ТипЗнч(ВладелецСчета) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"БанковскиеСчетаОрганизаций","БанковскиеСчетаКонтрагентов");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВладелецСчета", ВладелецСчета);
	Запрос.УстановитьПараметр("ОплатаВВалюте", ОплатаВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегл", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
		БанковскийСчетВладельца = Выборка.БанковскийСчет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьКассуПоУмолчанию(Организация, Касса, ВалютаВзаиморасчетов)
	
	Если ЗначениеЗаполнено(Касса) Тогда
		Возврат;
	КонецЕсли;
	
	Касса = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяКасса", "");
	Если Не ЗначениеЗаполнено(Касса) Тогда
		Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Касса) Тогда
		СтруктураРеквизитов = Справочники.Кассы.ПолучитьРеквизитыКассы(Касса);
		ВалютаВзаиморасчетов = СтруктураРеквизитов.Валюта;
	Иначе
		ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийВариантГрафика()
	
	ВариантГрафика = Справочники.ВариантыГрафиковКредитовИДепозитов.ТекущийВариантГрафика(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(ВариантГрафика) Тогда
		ТекстИспользуемыйГрафик = Строка(ВариантГрафика);
	Иначе
		ТекстИспользуемыйГрафик = "<" + НСтр("ru = 'Ввести'")+ ">";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущиеПроцентныеСтавки()
	
	Результат = РегистрыСведений.ПроцентныеСтавкиФинансовыхИнструментов.ПрочитатьПроцентнуюСтавкуКомисии(Объект.Ссылка);
	
	СтавкаПроцентов   = Результат.Процент;
	Комиссия          = Результат.Комиссия;
	ЕстьИсторияСтавок = Результат.ЕстьИстория;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьиУчета(ДоговорХарактер, ДоговорТип, ТипСрочности)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСКомиссии,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСОсновногоДолга,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПоступленияВыдачи,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПроцентов,
	|	ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовКомиссии,
	|	ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовПроцентов,
	|	ДоговорыКредитовИДепозитов.Дата КАК Дата
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|ГДЕ
	|	НЕ ДоговорыКредитовИДепозитов.ПометкаУдаления
	|	И ДоговорыКредитовИДепозитов.ТипДоговора = &ТипДоговора
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = &ХарактерДоговора
	|	И ДоговорыКредитовИДепозитов.ТипСрочности = &ТипСрочности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ТипДоговора", ДоговорТип);
	Запрос.УстановитьПараметр("ХарактерДоговора", ДоговорХарактер);
	Запрос.УстановитьПараметр("ТипСрочности",ТипСрочности);
	
	ПустаяСтатьяДоходов = ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	ПустаяСтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ПустаяСтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		// Транши
		Объект.СтатьяДДСПоступленияВыдачи = Выборка.СтатьяДДСПоступленияВыдачи;
		
		// Оплаты
		Объект.СтатьяДДСОсновногоДолга = Выборка.СтатьяДДСОсновногоДолга;
		Объект.СтатьяДДСПроцентов = Выборка.СтатьяДДСПроцентов;
		Объект.СтатьяДДСКомиссии = Выборка.СтатьяДДСКомиссии;
		
		// Начисления
		Объект.СтатьяДоходовРасходовПроцентов = Выборка.СтатьяДоходовРасходовПроцентов;
		Объект.СтатьяДоходовРасходовКомиссии = Выборка.СтатьяДоходовРасходовКомиссии;
		
	Иначе
		
		// Транши
		Объект.СтатьяДДСПоступленияВыдачи = ПустаяСтатьяДДС;
		
		// Оплаты
		Объект.СтатьяДДСОсновногоДолга = ПустаяСтатьяДДС;
		Объект.СтатьяДДСПроцентов = ПустаяСтатьяДДС;
		Объект.СтатьяДДСКомиссии = ПустаяСтатьяДДС;
		
		// Начисления
		Если ДоговорХарактер = Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм Тогда
			Объект.СтатьяДоходовРасходовПроцентов = ПустаяСтатьяРасходов;
			Объект.СтатьяДоходовРасходовКомиссии = ПустаяСтатьяРасходов;
		Иначе
			Объект.СтатьяДоходовРасходовПроцентов = ПустаяСтатьяДоходов;
			Объект.СтатьяДоходовРасходовКомиссии = ПустаяСтатьяДоходов;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыФормы(Форма)
	
	РеквизитыФормы = Новый Структура;
	РеквизитыФормы.Вставить("КонтролироватьЛимит");
	РеквизитыФормы.Вставить("ВариантГрафика");
	РеквизитыФормы.Вставить("ЕстьИсторияСтавок");
	РеквизитыФормы.Вставить("ТипКомиссииЗаблокирован");
	
	ЗаполнитьЗначенияСвойств(РеквизитыФормы, Форма);
	
	Возврат РеквизитыФормы;
	
КонецФункции

#КонецОбласти
