#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	НомерСчета = "";
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Пропускаем обработку, чтобы гарантировать получение формы объекта при передаче параметра "АвтоТест".
	Если ДанныеЗаполнения = "АвтоТест" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("ВалютаДенежныхСредств") Тогда
		ВалютаДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(ВалютаДенежныхСредств);
	КонецЕсли;
	
	ДенежныеСредстваСервер.ОбработкаЗаполненияСправочников(ЭтотОбъект);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменСБанками") Тогда
		ИспользоватьПрямойОбменСБанком = Истина;
	Иначе
		ИспользоватьОбменСБанком = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("ИспользоватьНесколькоОрганизаций", ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций"));
	Дополнительно.Вставить("ИспользоватьНесколькоВалют", ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют"));
	Дополнительно.Вставить("ПоддержкаПлатежей275ФЗ", ПолучитьФункциональнуюОпцию("ПоддержкаПлатежейВСоответствииС275ФЗ"));
	Дополнительно.Вставить("ВалютныйСчет", (ЗначениеЗаполнено(ВалютаДенежныхСредств)
		И ВалютаДенежныхСредств <> Константы.ВалютаРегламентированногоУчета.Получить()));
	
	НастройкиПолей = Справочники.БанковскиеСчетаОрганизаций.НастройкиПолейФормы();
	СвойстваЭлементов = ДенежныеСредстваКлиентСервер.СвойстваЭлементовФормы(ЭтотОбъект, НастройкиПолей,,, Дополнительно);
	ДенежныеСредстваСервер.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(СвойстваЭлементов, НепроверяемыеРеквизиты);
	ЭтотОбъект.ДополнительныеСвойства.Вставить("СвойстваЭлементов", СвойстваЭлементов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ТекстОшибки = "";
	Если Не ИностранныйБанк
		И Не ДенежныеСредстваКлиентСервер.ПроверитьКорректностьНомераСчета(НомерСчета,, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "НомерСчета", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов") Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	БанковскиеСчетаОрганизаций.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
		|ГДЕ
		|	БанковскиеСчетаОрганизаций.Ссылка <> &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Если Не Запрос.Выполнить().Пустой() Тогда
			Константы.ИспользоватьНесколькоРасчетныхСчетов.Установить(Истина);
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("СвойстваЭлементов") Тогда
		
		РеквизитыИсключения = Новый Массив;
		РеквизитыИсключения.Добавить("ВариантВыводаМесяца");
		РеквизитыИсключения.Добавить("РучноеИзменениеРеквизитовБанка");
		РеквизитыИсключения.Добавить("РучноеИзменениеРеквизитовБанкаДляРасчетов");
		РеквизитыИсключения.Добавить("Кодировка");
		
		ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизитыОбъекта(
			ЭтотОбъект, ЭтотОбъект.ДополнительныеСвойства.СвойстваЭлементов, РеквизитыИсключения);
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияУТ.СинхронизироватьКлючи(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыСинхронизацииКлючей()
	
	Результат = Новый Соответствие;
	
	РеквизитыДляРеестра = Новый Структура;
	РеквизитыДляРеестра.Вставить("ПометкаУдаления");
	РеквизитыДляРеестра.Вставить("Наименование");
	РеквизитыДляРеестра.Вставить("Владелец", "Организация");
	
	Результат.Вставить("Справочник.КлючиРеестраДокументов", РеквизитыДляРеестра);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
