#Область ПрограмныйИнтерфейс

// Предназначена для определения факта наличия в данных документа номенклатуры, являющейся маркируемой продукцией.
// 
// Параметры:
//  Коллекция                - ДанныеФормыКоллекция - состав номенклатуры документа
//  ВидМаркируемойПродукции  - ПеречислениеСсылка.ВидыПродукцииИС - вид продукции, наличие которой необходимо определить.
//  ЕстьМаркируемаяПродукция - Булево - признак наличия маркируемой продукции.
//
Процедура ЕстьМаркируемаяПродукцияВКоллекции(Коллекция, ВидМаркируемойПродукции, ЕстьМаркируемаяПродукция) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьМаркируемаяПродукция
	|ИЗ
	|	ВремТаблТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));
	Результат = Запрос.Выполнить();
	
	ЕстьМаркируемаяПродукция = НЕ Результат.Пустой();
	
КонецПроцедуры

// Заполняет переданную таблицу товарами переданного документа, являющимися маркируемой продукцией требуемого вида.
// 
// Параметры:
//  Контекст - ДанныеФормыСтруктура, ФормаКлиентскогоПриложения, ДокументСсылка - документ, маркируемую продукцию которого необходимо получить.
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции, которую необходимо получить.
//  ТаблицаМаркируемойПродукции - ТаблицаЗначений - таблица маркируемой продукции документа. (См. ПроверкаИПодборПродукцииИСМП.ТаблицаМаркируемойПродукцииДокумента())
//
Процедура ЗаполнитьМаркируемуюПродукциюДокумента(Контекст, ВидМаркируемойПродукции, ТаблицаМаркируемойПродукции) Экспорт
	
	Если ТаблицаМаркируемойПродукции.Количество() > 0 Тогда
		РезультатЗапроса = ЗапросGTINпоТаблицеМаркируемойПродукции(ВидМаркируемойПродукции, ТаблицаМаркируемойПродукции);
		ТаблицаМаркируемойПродукции.Очистить();
	ИначеЕсли ТипЗнч(Контекст) = Тип("ДанныеФормыСтруктура") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииДанныеФормыСтруктура(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтКлиента") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровОтКлиента(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПриобретениеТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПриобретениеТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтКлиента") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровОтКлиента(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ЧекККМ")
		Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ЧекККМВозврат") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииЧекККМ(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "РеализацияТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровПоставщику") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "КорректировкаРеализации") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииКорректировкаРеализации(Контекст, ВидМаркируемойПродукции);
	Иначе
		Возврат;
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			ПродукцияПоGTIN = ТаблицаМаркируемойПродукции.СкопироватьКолонки();
			СписокКодовGTIN = Новый Массив;
			
			ВыборкаGTIN = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаGTIN.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					// Соответственно тут должен быть остаточный GTIN
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ТаблицаМаркируемойПродукции.Добавить(), Выборка);
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				Если ПродукцияПоGTIN.Количество() = 0 Тогда
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ПродукцияПоGTIN.Добавить(), Выборка,, "GTIN");
					КонецЦикла;
				КонецЕсли;
				
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(ВыборкаGTIN.GTIN) Тогда
					GTIN = ШтрихкодированиеИСКлиентСервер.GTINПоШтрихкодуEAN(ВыборкаGTIN.GTIN);
					СписокКодовGTIN.Добавить(GTIN);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаПродукцииПоGTIN Из ПродукцияПоGTIN Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаМаркируемойПродукции.Добавить(), СтрокаПродукцииПоGTIN);
				СтрокаПродукцииПоGTIN.КодыGTIN.ЗагрузитьЗначения(СписокКодовGTIN);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет в табличной части служебные реквизиты, например: признак использования характеристик номенклатуры.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ТабличнаяЧасть - ДанныеФормыКоллекция, ТаблицаЗначений - таблица для заполнения.
//
Процедура ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть) Экспорт
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	
	Если ТабличнаяЧасть.Количество() > 0 Тогда
		ПерваяСтрокаКоллекции = ТабличнаяЧасть[0];
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "Характеристика") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить(
				"ЗаполнитьПризнакХарактеристикиИспользуются",
				Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "Серия") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить(
				"ЗаполнитьПризнакТипНоменклатуры",
				Новый Структура("Номенклатура", "ТипНоменклатуры"));
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполненияРеквизитов.Количество() > 0 Тогда
		НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
			ТабличнаяЧасть, ПараметрыЗаполненияРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Функция АдресДанныхПроверкиМаркируемойПродукцииЧекККМ(ПараметрыСканирования, Объект, УникальныйИдентификатор, ВидМаркируемойПродукции) Экспорт
	
	СписокШтрихкодов = Объект.АкцизныеМарки.Выгрузить().ВыгрузитьКолонку("АкцизнаяМарка");
	ШтрихкодыМаркируемойПродукции = ИнтеграцияИСУТ.ШтрихкодыСодержащиеВидыПродукции(
		СписокШтрихкодов, ВидМаркируемойПродукции);
	
	ДанныеПроверяемогоДокумента = ШтрихкодированиеИС.ВложенныеШтрихкодыУпаковок(
		ШтрихкодыМаркируемойПродукции, ПараметрыСканирования);
	
	ТаблицаМаркируемойПродукции = ПроверкаИПодборПродукцииИСМП.ТаблицаМаркируемойПродукцииДокумента(Объект, ВидМаркируемойПродукции);
	
	ДанныеХранилища = Новый Структура("ДеревоУпаковок, МаркированныеТовары, ТаблицаМаркируемойПродукции",
		ДанныеПроверяемогоДокумента.ДеревоУпаковок,
		ДанныеПроверяемогоДокумента.МаркированныеТовары,
		ТаблицаМаркируемойПродукции);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеХранилища, УникальныйИдентификатор);
	
КонецФункции

Процедура ПриЗакрытииФормыПроверкиИПодбораВФормеРМК(Форма, Результат, ВидПродукцииИС) Экспорт
	
	ДанныеПроверкиИПодбора = ПолучитьИзВременногоХранилища(Результат);
	
	ИнтеграцияИСУТ.УдалитьСтрокиАкцизныхМарокПоВидуПродукции(Форма.Объект.АкцизныеМарки, ВидПродукцииИС);
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		Для Каждого СтрокаАкцизныхМарок Из ДанныеПроверкиИПодбора.ТаблицаШтрихкодовВерхнегоУровня Цикл
			НоваяСтрокаАкцизныхМарок = Форма.Объект.АкцизныеМарки.Добавить();
			НоваяСтрокаАкцизныхМарок.АкцизнаяМарка = СтрокаАкцизныхМарок.ШтрихкодУпаковки;
		КонецЦикла;
		
		ОтборПоВидуПродукции  = Новый Структура("ВидПродукцииИС", ВидПродукцииИС);
		СтрокиПоВидуПродукции = Форма.Объект.Товары.НайтиСтроки(ОтборПоВидуПродукции);
		
		ДобавленныеСтроки = Новый Массив;
		ИзмененныеСтроки  = Новый Массив;
		
		Для Каждого СтрокаПродукции Из ДанныеПроверкиИПодбора.ТаблицаПодобраннойПровереннойПродукции Цикл
			Если СтрокаПродукции.КоличествоПодобрано = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ПродукцияНайдена = Ложь;
			
			Для Каждого СтрокаПоВидуПродукции Из СтрокиПоВидуПродукции Цикл
				Если СтрокаПродукции.Номенклатура = СтрокаПоВидуПродукции.Номенклатура
					И СтрокаПродукции.Характеристика = СтрокаПоВидуПродукции.Характеристика
					И СтрокаПродукции.Серия = СтрокаПоВидуПродукции.Серия Тогда
					ПродукцияНайдена = Истина;
					Если ИзмененныеСтроки.Найти(СтрокаПоВидуПродукции) = Неопределено Тогда
						СтрокаПоВидуПродукции.Количество = СтрокаПродукции.КоличествоПодобрано;
						ИзмененныеСтроки.Добавить(СтрокаПоВидуПродукции);
					Иначе
						СтрокаПоВидуПродукции.Количество = СтрокаПоВидуПродукции.Количество + СтрокаПродукции.КоличествоПодобрано;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ПродукцияНайдена Тогда
				НоваяСтрокаТоваров = Форма.Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, СтрокаПродукции);
				НоваяСтрокаТоваров.Количество = СтрокаПродукции.КоличествоПодобрано;
				ДобавленныеСтроки.Добавить(НоваяСтрокаТоваров);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаПоВидуПродукции Из СтрокиПоВидуПродукции Цикл
			Если ИзмененныеСтроки.Найти(СтрокаПоВидуПродукции) = Неопределено Тогда
				Форма.Объект.Товары.Удалить(СтрокаПоВидуПродукции);
			КонецЕсли;
		КонецЦикла;
		
		Форма.ОбработатьСтрокиТЧ(ДобавленныеСтроки, ИзмененныеСтроки);
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(
			Форма.Объект, НоменклатураСервер.ПараметрыУказанияСерий(Форма.Объект, Документы.ЧекККМ));
		
	КонецЕсли;
	
	ПроверкаИПодборПродукцииИС.ЗаполнитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека());
	ПроверкаИПодборПродукцииИС.ПрименитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека());
	
	ШтрихкодированиеИС.ОбновитьКэшМаркируемойПродукции(Форма);
	
КонецПроцедуры

Функция КонтрагентНеРезидент(Контрагент) Экспорт
	
	ЮрФизЛицоКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ЮрФизЛицо");
	
	Возврат ЮрФизЛицоКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
	
КонецФункции

#Область РаботаСоСтатусамиПроверкиИПодбораСтрок

Функция НастройкиИсточникаКешаЧека() Экспорт
	
	Результат = ПроверкаИПодборПродукцииИС.НастройкиИсточникаКешаШтрихкодовУпаковок();
	
	Результат.Штрихкоды =        "АкцизныеМарки";
	Результат.ШтрихкодУпаковки = "АкцизнаяМарка";
	Результат.Серии            = "Серии";
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СерииНоменклатуры

// Предназначена для расчета статусов указания серий во всех строках таблицы товаров
// см. НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий
// 
// Параметры:
// * Форма        - ФормаКлиентскогоПриложения - форма с таблицей товаров
//  ПараметрыУказанияСерий - Структура - параметры указания серий
//
Процедура ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	Если Форма.ПодобраннаяМаркируемаяПродукция.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУказанияСерийКопия = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыУказанияСерий, Ложь);
	
	ПараметрыУказанияСерийКопия.ИмяТЧТовары = "ПодобраннаяМаркируемаяПродукция";
	ПараметрыУказанияСерийКопия.ИмяТЧСерии = "ПодобраннаяМаркируемаяПродукция";
	ПараметрыУказанияСерийКопия.ИмяПоляПомещение = Неопределено;
	ПараметрыУказанияСерийКопия.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтотОбъект";
	ПараметрыУказанияСерийКопия.ПоляСвязи.Добавить("Серия");
	
	ЕстьРеквизитТаблицыСклад = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.ПодобраннаяМаркируемаяПродукция[0], "Склад");
	Если Не ЕстьРеквизитТаблицыСклад Тогда
		ДобавляемыеРеквизиты = Новый Массив;
		НовыйРеквизит = Новый РеквизитФормы("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"), "ПодобраннаяМаркируемаяПродукция");
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		НовыйРеквизит = Новый РеквизитФормы("Назначение", Новый ОписаниеТипов("Булево"), "ПодобраннаяМаркируемаяПродукция");
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	КонецЕсли;
	Для Каждого СтрокаТЧ Из Форма.ПодобраннаяМаркируемаяПродукция Цикл
		СтрокаТЧ.Склад = Форма.Склад;
	КонецЦикла;
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерийКопия);
	
КонецПроцедуры

// Возвращает через параметр наличие права на добавление элементов справочника СерииНоменклатуры
// 
// Параметры:
// 	ПравоДобавлениеСерий - Булево - исходящий, наличие права на добавление.
//
Процедура ОпределитьПравоДобавлениеСерий(ПравоДобавлениеСерий) Экспорт
	
	ПравоДобавлениеСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеМаркируемойПродукцииДокумента

Функция ЗапросGTINпоТаблицеМаркируемойПродукции(ВидМаркируемойПродукции, ТаблицаМаркируемойПродукции)
	
	ПоляВЫБРАТЬ = Новый Массив;
	ПоляБезGTIN = Новый Массив;
	Для Каждого Колонка Из ТаблицаМаркируемойПродукции.Колонки Цикл
		Если Колонка.Имя <> "КодыGTIN"
				И Колонка.Имя <> "ИдентификаторыПроисхожденияВЕТИС" Тогда
			ПоляВЫБРАТЬ.Добавить(СтрШаблон("МаркируемаяПродукция.%1 КАК %1", Колонка.Имя));
			Если Колонка.Имя <> "GTIN" Тогда
				ПоляБезGTIN.Добавить(СтрШаблон("МаркируемаяПродукция.%1 КАК %1", Колонка.Имя));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ПоляВЫБРАТЬ
	|ПОМЕСТИТЬ ВТМаркируемаяПродукция
	|ИЗ
	|	&МаркируемаяПродукция КАК МаркируемаяПродукция
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	&ПоляБезGTIN
	|ИЗ
	|	ВТМаркируемаяПродукция КАК МаркируемаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И МаркируемаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	МаркируемаяПродукция.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка)
	|	И МаркируемаяПродукция.GTIN = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Номенклатура не заполнена только для строк с остаточными GTIN
	|	&ПоляВЫБРАТЬ
	|ИЗ
	|	ВТМаркируемаяПродукция КАК МаркируемаяПродукция
	|ГДЕ
	|	МаркируемаяПродукция.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)
	|	И МаркируемаяПродукция.GTIN <> """"
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МаркируемаяПродукция", ТаблицаМаркируемойПродукции);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоляВЫБРАТЬ", СтрСоединить(ПоляВЫБРАТЬ, ",
	|"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоляБезGTIN", СтрСоединить(ПоляБезGTIN, ",
	|"));
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииДанныеФормыСтруктура(ДанныеФормыСтруктура, ВидМаркируемойПродукции, ИмяКоллекции = "Товары")
	
	Возврат ЗапросМаркируемойПродукцииДанныеФормыКоллекция(ДанныеФормыСтруктура[ИмяКоллекции], ВидМаркируемойПродукции);
	
КонецФункции

Функция ЗапросМаркируемойПродукцииДанныеФормыКоллекция(ДанныеФормыКоллекция, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура      КАК Номенклатура,
	|	ВТ_Товары.Характеристика    КАК Характеристика,
	|	ВТ_Товары.Серия             КАК Серия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_МаркируемаяПродукция
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ВТ_Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура              КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика            КАК Характеристика,
	|	МаркируемаяПродукция.Серия                     КАК Серия,
	|	МаркируемаяПродукция.Количество                КАК Количество
	|ИЗ
	|	ВТ_МаркируемаяПродукция КАК МаркируемаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И МаркируемаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Товары", ДанныеФормыКоллекция.Выгрузить());
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПриобретениеТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|		И Товары.Склад = Серии.Склад
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровОтКлиента(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.НоменклатураОприходование = Серии.НоменклатураОприходование
	|		И Товары.ХарактеристикаОприходование = Серии.ХарактеристикаОприходование
	|		И Товары.Назначение = Серии.Назначение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииЧекККМ(ФормаОбъект, ВидМаркируемойПродукции)
	
	Если ТипЗнч(ФормаОбъект) = Тип("ФормаКлиентскогоПриложения") Тогда
		Товары = ФормаОбъект.Объект.Товары;
	Иначе
		Товары = ФормаОбъект.Товары;
	КонецЕсли;
	
	Возврат ЗапросМаркируемойПродукцииДанныеФормыКоллекция(Товары, ВидМаркируемойПродукции);
	
КонецФункции

Функция ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|		И Товары.Склад = Серии.Склад
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииКорректировкаРеализации(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия                                   КАК Серия,
	|	Товары.Количество                              КАК Количество
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#КонецОбласти
