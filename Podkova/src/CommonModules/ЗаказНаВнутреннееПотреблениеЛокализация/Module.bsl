
#Область ПрограммныйИнтерфейс

// Добавляет в текст запроса реквизиты табличной части "Товары".
//  Реквизиты добавляются вместо параметра "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыТаблицыТовары(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	Если ИмяТаблицы = Неопределено Тогда
		ПоляЛокализация = 
		"	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)             КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)      КАК КатегорияЭксплуатации";
	Иначе
		ПоляЛокализация = 
		"	Таблица.ФизическоеЛицо               КАК ФизическоеЛицо,
		|	Таблица.КатегорияЭксплуатации        КАК КатегорияЭксплуатации";
	КонецЕсли; 
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказНаВнутреннееПотребление_ТоварыЛокализация", ПоляЛокализация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

// Вызывается из соответствующего обработчика документа
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт

	//++ Локализация
	Элементы = Форма.Элементы;

	Элементы.ХозяйственнаяОперация.СписокВыбора.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	Элементы.ХозяйственнаяОперация.Видимость = Истина;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	НастроитьПанельНавигации(Форма);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается при изменении реквизита ХозяйственнаяОперация в документе
//
Процедура ХозяйственнаяОперацияПриИзменении(Форма, ИзмененныеРеквизиты, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	НастроитьПанельНавигации(Форма);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриВыполненииКоманды(ИмяКоманды, Форма, ДополнительныеПараметры) Экспорт
	
	Элементы = Форма.Элементы;
	
	//++ Локализация
	
	Если ИмяКоманды = Элементы.ТоварыЗаполнитьТМЦ.ИмяКоманды Тогда
		ЗаполнитьТМЦСИстекающимСроком(Форма, ДополнительныеПараметры);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ Локализация
	Отчеты.МатериалыВЭксплуатации.ДобавитьКомандуОтчета(КомандыОтчетов);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПараметрыЗаполненияВидаДеятельностиНДС(Объект, ПараметрыЗаполнения) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		ПараметрыЗаполнения.ПередачаВЭксплуатацию = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует массивы имен реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ВсеРеквизиты - Массив - возвращает все реквизиты
//  РеквизитыОперации - Массив - возвращает реквизиты операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	//++ Локализация
	
	ВсеРеквизиты.Добавить("Товары.ФизическоеЛицо");
	ВсеРеквизиты.Добавить("Товары.КатегорияЭксплуатации");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		
		РеквизитыОперации.Добавить("Товары.СтатьяРасходов");
		РеквизитыОперации.Добавить("Товары.АналитикаРасходов");
		РеквизитыОперации.Добавить("Товары.ФизическоеЛицо");
		РеквизитыОперации.Добавить("Товары.КатегорияЭксплуатации");
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьИменаЭлементовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехЭлементов, МассивЭлементовОперации) Экспорт
	
	//++ Локализация

	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьТМЦ");

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьТМЦ");
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

//++ Локализация

Процедура НастроитьПанельНавигации(Форма)

	Объект = Форма.Объект;
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьМатериалыВЭксплуатации",
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации);
	
	ОбщегоНазначенияУТ.НастроитьФормуПоПараметрам(Форма, СтруктураНастроек);
	
КонецПроцедуры

Процедура ЗаполнитьТМЦСИстекающимСроком(Форма, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	
	Объект.Товары.Очистить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииТМЦВЭксплуатации.Ссылка
	|ПОМЕСТИТЬ Партии
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦВЭксплуатации
	|ГДЕ
	|	НЕ ПартииТМЦВЭксплуатации.ПометкаУдаления
	|	И ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(ПартииТМЦВЭксплуатации.ДатаЗавершенияЭксплуатации, МЕСЯЦ) = &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатацииОбороты.Номенклатура,
	|	ТМЦВЭксплуатацииОбороты.Характеристика,
	|	ТМЦВЭксплуатацииОбороты.ФизическоеЛицо,
	|	ТМЦВЭксплуатацииОбороты.Партия.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ТМЦВЭксплуатацииОбороты.КоличествоОборот КАК Количество,
	|	ТМЦВЭксплуатацииОбороты.КоличествоОборот КАК КоличествоУпаковок
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|			,
	|			&Период,
	|			,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Партия В
	|					(ВЫБРАТЬ
	|						Партии.Ссылка
	|					ИЗ
	|						Партии КАК Партии)) КАК ТМЦВЭксплуатацииОбороты
	|ГДЕ
	|	ТМЦВЭксплуатацииОбороты.КоличествоОборот > 0";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", КонецМесяца(?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса())));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ИзмененныеСтроки = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ИзмененныеСтроки.Добавить(НоваяСтрока);
	КонецЦикла;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыполнитьДействие_ПриИзмененииСтрок", ИзмененныеСтроки);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти