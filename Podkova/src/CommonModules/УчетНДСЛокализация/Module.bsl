#Область СлужебныйПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// см. УчетНДСУП.НастройкиУчета
Процедура ДополнитьНастройкиУчета(НастройкиУчета) Экспорт
	
	//++ Локализация
	НастройкиУчета.ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС = ПолучитьФункциональнуюОпцию("ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС");
	НастройкиУчета.ЭкспортНесырьевыхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортНесырьевыхТоваров");
	НастройкиУчета.ЭкспортСырьевыхТоваровУслуг = ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг");
	НастройкиУчета.ПродажиНаЭкспорт = НастройкиУчета.ЭкспортНесырьевыхТоваров Или НастройкиУчета.ЭкспортСырьевыхТоваровУслуг;
	НастройкиУчета.ДатаРазделенияЭкспорта = Дата("20160701");
	НастройкиУчета.ПродажаТоваровОблагаемыхНДСУПокупателя = ПолучитьФункциональнуюОпцию("ПродажаТоваровОблагаемыхНДСУПокупателя");
	НастройкиУчета.ПокупкаТоваровОблагаемыхНДСУПокупателя = ПолучитьФункциональнуюОпцию("ПокупкаТоваровОблагаемыхНДСУПокупателя");
	НастройкиУчета.ДатаНачалаУчетаНДСПоНаправлениямДеятельности = Константы.ДатаНачалаУчетаНДСПоНаправлениямДеятельности.Получить();
	НастройкиУчета.ДатаОтраженияВозвратовКорректировочнымиСФ = УчетНДСРФ.ДатаОтраженияВозвратовКорректировочнымиСФ();
	
	НастройкиУчета.Вставить("ПрименяетсяЕНВД", ПолучитьФункциональнуюОпцию("ПлательщикЕНВД"));
	НастройкиУчета.Вставить("ПрименяетсяПСН", Ложь);
	НастройкиУчета.Вставить("ФормироватьОтчетностьПоНДС", ПолучитьФункциональнуюОпцию("ФормироватьОтчетностьПоНДС"));
	НастройкиУчета.Вставить("ДатаВозможностиВычетаПриОказанииУслугНеВРФ", Дата("20190701"));
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПараметрыУчетаПоОрганизации
Процедура ДополнитьПараметрыУчетаОрганизации(ПараметрыУчета, Организация, Дата, Склад, Подразделение) Экспорт
	
	//++ Локализация
	ПараметрыУчета.Вставить("ПрименяетсяУСН", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяЕНВД", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяПСН", Ложь);
	ПараметрыУчета.Вставить("ЕстьРеализацияРаботУслугНеНаТерриторииРФ", Ложь);
	
	ДатаСреза = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(Организация, ДатаСреза);
	
	Если ПараметрыУчетнойПолитики.УчетнаяПолитикаСуществует Тогда
		
		Если ПараметрыУчетнойПолитики.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
		ИначеЕсли ПараметрыУчетнойПолитики.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
		Иначе
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		КонецЕсли;
		
		Если ПараметрыУчетнойПолитики.ПрименяетсяУчетНДСПоФактическомуИспользованию Тогда
			ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
		Иначе
			ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
		
		ПараметрыУчета.ПрименяетсяУСН = (ПараметрыУчетнойПолитики.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная);
		ПараметрыУчета.ПрименяетсяПСН = ПараметрыУчетнойПолитики.ПрименяетсяПСН
			И Справочники.Патенты.ЕстьДействующийПатент(Организация, Подразделение, ДатаСреза);
		ПараметрыУчета.ПрименяетсяЕНВД = ПараметрыУчетнойПолитики.ПрименяетсяЕНВД;
		Если ЗначениеЗаполнено(Склад) Тогда
			ПараметрыУчета.ПрименяетсяЕНВД = ПараметрыУчета.ПрименяетсяЕНВД
				И Справочники.Организации.РозничнаяТорговляОблагаетсяЕНВД(Организация, Склад, ДатаСреза);
		КонецЕсли;
		
		Если ПараметрыУчета.ПрименяетсяЕНВД Тогда
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
		ИначеЕсли ПараметрыУчета.ПрименяетсяПСН Тогда
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		Иначе
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;

		ПараметрыУчета.РаздельныйУчетНДС = ПараметрыУчетнойПолитики.РаздельныйУчетТоваров;
		ПараметрыУчета.ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую = ПараметрыУчетнойПолитики.ВариантУчетаНДСПриИзмененииВидаДеятельности;
		ПараметрыУчета.СтатьяРасходов_НеОблагаетсяНДС = ПараметрыУчетнойПолитики.СтатьяРасходовНеНДС;
		ПараметрыУчета.АналитикаРасходов_НеОблагаетсяНДС = ПараметрыУчетнойПолитики.АналитикаРасходовНеНДС;
		ПараметрыУчета.СтатьяРасходов_ОблагаетсяЕНВД = ПараметрыУчетнойПолитики.СтатьяРасходовЕНВД;
		ПараметрыУчета.АналитикаРасходов_ОблагаетсяЕНВД = ПараметрыУчетнойПолитики.АналитикаРасходовЕНВД;
		ПараметрыУчета.ЕстьРеализацияРаботУслугНеНаТерриторииРФ = ПараметрыУчетнойПолитики.ЕстьРеализацияРаботУслугНеНаТерриторииРФ;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. РегистрыСведений.НастройкиУчетаНДС.ЗначенияПоУмолчанию
Процедура ДополнитьОписаниеНастроекУчетаНДСПоОрганизации(ОписаниеНастроек) Экспорт
	
	//++ Локализация
	ОписаниеНастроек.Вставить("ПрименяетсяОсвобождениеОтУплатыНДС", Ложь);
	ОписаниеНастроек.Вставить("ЕстьРеализацияРаботУслугНеНаТерриторииРФ", Ложь);
	ОписаниеНастроек.Вставить("ПериодичностьОформленияСводныхСправок", Перечисления.Периодичность.Месяц);
	ОписаниеНастроек.Вставить("ПравилоОтбораАвансовДляРегистрацииСчетовФактур", Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня);
		
	ОписаниеНастроек.Вставить("РаздельныйУчетТоваровПоНалогообложениюНДС", Ложь);
	ОписаниеНастроек.Вставить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС", Ложь);
	ОписаниеНастроек.Вставить("УчетНДСДлительногоЦиклаПроизводства", Ложь);
	ОписаниеНастроек.Вставить("ПрименяетсяУчетНДСПоФактическомуИспользованию", Ложь);
	ОписаниеНастроек.Вставить("Учитывать5ПроцентныйПорог", Ложь);
	
	ОписаниеНастроек.Вставить("ВариантУчетаНДСПриИзмененииВидаДеятельности", Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ВключатьВСтоимость);
	ОписаниеНастроек.Вставить("СтатьяРасходовНеНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовНеНДС", Неопределено);
	ОписаниеНастроек.Вставить("СтатьяРасходовЕНВД", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовЕНВД", Неопределено);
	
	ОписаниеНастроек.Вставить("СтатьяРасходовСписаниеНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовСписаниеНДС", Неопределено);
	//-- Локализация
	
КонецПроцедуры

// см. РегистрыСведений.НастройкиУчетаНДС.ОписаниеДействующихПараметров
Процедура ДополнитьОписаниеДействующихНастроекУчетаНДС(МассивСтрокОписания, ДействующиеНастройки) Экспорт
	
	//++ Локализация
	СтрокаШаблон = "%1: %2." + Символы.ПС;
	СтрокаШаблонБулево = "%1." + Символы.ПС;
	
	Если ДействующиеНастройки.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
		МассивСтрокОписания.Добавить(СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Организация освобождена от уплаты НДС'")));
	Иначе
		МассивСтрокОписания.Добавить(
			СтрШаблон(СтрокаШаблон, НСтр("ru='Правило отбора авансов'"), ДействующиеНастройки.ПравилоОтбораАвансовДляРегистрацииСчетовФактур));
		
		Если ЗначениеЗаполнено(ДействующиеНастройки.ПериодичностьОформленияСводныхСправок) Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблон,
					НСтр("ru='Сводные справки оформляются с периодичностью'"),
					ДействующиеНастройки.ПериодичностьОформленияСводныхСправок));
		КонецЕсли;
		
		Если ДействующиеНастройки.ЕстьРеализацияРаботУслугНеНаТерриторииРФ Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Организация реализует работы (услуги) не на территории РФ'")));
		КонецЕсли;
		
		Если ДействующиеНастройки.РаздельныйУчетТоваровПоНалогообложениюНДС Тогда
		
			Если ДействующиеНастройки.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Используется раздельный учет НДС по постатейным производственным затратам'")));
			КонецЕсли; 
					
			Если ДействующиеНастройки.ПрименяетсяУчетНДСПоФактическомуИспользованию Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Применяется учет НДС по фактическому использованию'")));
			КонецЕсли; 		
				
			Если ДействующиеНастройки.УчетНДСДлительногоЦиклаПроизводства Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Применяется особый порядок учета НДС при длит. цикле производства (п. 13 ст. 167 НК РФ)'")));
			КонецЕсли;
			
			Если ДействующиеНастройки.Учитывать5ПроцентныйПорог Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru='Применяется 5% порог при распределении НДС по видам деятельности'")));
			КонецЕсли;
			
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблон,
					НСтр("ru='Вариант учета НДС при изменении вида деятельности'"),
					ДействующиеНастройки.ВариантУчетаНДСПриИзмененииВидаДеятельности));	
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПрименяемыеТипыНалогообложенияНДС
Процедура ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки) Экспорт
	
	//++ Локализация
	Если (Продажи И НастройкиУчета.ПрименяетсяЕНВД) Или (Закупки И ПолучитьФункциональнуюОпцию("ИспользоватьУведомленияОКонтролируемыхСделках")) Тогда
		Если Продажи И Закупки Тогда
			Представление = НСтр("ru = 'Облагается ЕНВД'");
		ИначеЕсли Продажи Тогда
			Представление = НСтр("ru = 'Продажа облагается ЕНВД'");
		Иначе
			Представление = НСтр("ru = 'Закупка облагается ЕНВД'");
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, Представление);
	КонецЕсли;
	Если Продажи Тогда
		Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
			ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ, услуг'"));
		КонецЕсли;
		Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
			ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, НСтр("ru = 'Экспорт несырьевых товаров'"));
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт, НСтр("ru = 'Реализация работ, услуг не на территории РФ'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту, НСтр("ru = 'Продажа по Патенту'"));
	КонецЕсли;
	Если Закупки Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС, НСтр("ru = 'Налоговый агент по НДС'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги, НСтр("ru = 'Электронные услуги иностранных организаций'"));
	КонецЕсли;
	Если (Продажи И НастройкиУчета.ПродажаТоваровОблагаемыхНДСУПокупателя) ИЛИ (Закупки И НастройкиУчета.ПокупкаТоваровОблагаемыхНДСУПокупателя) Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя, НСтр("ru = 'Облагается НДС у покупателя'"));
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС
Процедура ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета) Экспорт
	
	//++ Локализация
	Если НастройкиУчета.ПрименяетсяЕНВД Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, НСтр("ru = 'Облагаемую ЕНВД'"));
	КонецЕсли;
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту, НСтр("ru = 'НДС - Патент'"));
	
	Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ'"));
	КонецЕсли;
	Если НастройкиУчета.ЭкспортНесырьевыхТоваров Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, НСтр("ru = 'Экспорт несырьевых товаров'"));
	КонецЕсли;
	Если НастройкиУчета.РаздельныйУчетНДС Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением, НСтр("ru = 'Определяется распределением'"));
	КонецЕсли;
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию, НСтр("ru = 'По фактическому использованию'"));
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости
Процедура ДополнитьВидыДеятельностиНДСУчитываетсяВСтоимости(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению
Процедура ДополнитьВидыДеятельностНДСПринимаетсяКВозмещению(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.НалогообложенияНДСПродажиНаЭкспорт
Процедура ДополнитьНалогообложенияНДСПродажиНаЭкспорт(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые
Процедура ДополнитьТипыНалогообложенияНДСНеоблагаемые(ТипыНалогообложения) Экспорт
	//++ Локализация
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область СтавкиНДС


#КонецОбласти

#Область УчетВходящегоНДС

// см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки
Процедура ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(НедоступныеТипыНалогообложения, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаполнения.Контрагент, "ЮрФизЛицо");
	Если ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент ИЛИ Не ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
	КонецЕсли;

	Если Не ПараметрыЗаполнения.ПриобретениеТоваров И Не ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыУПоставщика Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриемНаКомиссию
		ИЛИ ПараметрыЗаполнения.ВозвратТоваровКомитенту Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ИмпортТоваров ИЛИ ПараметрыЗаполнения.ВвозТоваровИзТаможенногоСоюза Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗакупкаЧерезПодотчетноеЛицо Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговыеУслуги Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС
Процедура ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	Возврат;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыСНДС].Имя);
	
	СписокНалогообложенийБезНДС = Новый СписокЗначений;
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийБезНДС;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	// Ожидаем ответа разработчиков платформы по запросу 30164862
	Если Не (ОбщегоНазначения.ЭтоВебКлиент() ИЛИ ОбщегоНазначения.ЭтоOSXКлиент()) Тогда
		
		СтавкиНДС = Новый Соответствие;
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС18,		НСтр("ru = '4%'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС18_118,	НСтр("ru = '4/104'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС10,		НСтр("ru = '2%'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС10_110,	НСтр("ru = '2/102'"));
		
		ЭлементФормыСтавкаНДС = Форма.Элементы.Найти(ИмяПоляВводаСтавкиНДС);
		
		Для Каждого СтавкаНДС Из СтавкиНДС Цикл
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСтавкиНДС);
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ЭлементФормыСтавкаНДС.ПутьКДанным);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = СтавкаНДС.Ключ;
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			// на ВебКлиенте, 8.3.12.1567 такой путь к данным не является валидным 
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Контрагент.НДСпоСтавкам4и2");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("Текст", СтавкаНДС.Значение);
			
		КонецЦикла;
	КонецЕсли;
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПутьКДаннымСтавкаНДС = ЭлементыФормы[ИмяПоляВводаСтавкиНДС].ПутьКДанным;
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКДаннымСтавкаНДС);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = УчетНДСУП.СписокНезначащихСтавок();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС
Процедура ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ПрименяетсяПСН    = ПараметрыУчетаОрганизации.ПрименяетсяПСН;
	Иначе
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ПрименяетсяПСН    = ПараметрыУчетаИБ.ПрименяетсяПСН;
	КонецЕсли;
	
	// Дополним доступные виды деятельности
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			ДоступныеВидыДеятельностиНДС.Вставить("ПриобретениеТоваров", МассивДоступных);
		Иначе
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеТоваров, МассивДоступных);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных = Новый Массив;
			Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
				МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеРабот, МассивДоступных);
		Иначе
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеРабот, МассивДоступных);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		Если ПараметрыЗаполнения.ПриобретениеТоваров ИЛИ ПараметрыЗаполнения.ПриобретениеРабот Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеНаСтатьи, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеТоваровНаСкладах, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеМеждуФилиалами, МассивДоступных);
	КонецЕсли;
		
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеТоваровИРаботВПроизводстве, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.СписаниеТоваровИРаботНаСтатьи, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ВыпускПродукцииИРабот, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.СборкаРазборкаТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПередачаВЭксплуатацию, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПрочееВыбытиеТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ЛизинговоеИмуществоНаБалансе, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.КорректировкаВидаДеятельностиНДС Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ДоступныеВидыДеятельностиНДС.Вставить("КорректировкаВидаДеятельностиНДС", МассивДоступных);
	КонецЕсли;
	
	// Дополним не доступные по настройкам виды деятельности
	Если Не РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	КонецЕсли;
	
	Если НЕ (РаздельныйУчетНДС ИЛИ ПараметрыУчетаОрганизации.ПрименяетсяУСН)
			Или Не ПрименяетсяЕНВД Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	КонецЕсли;
	
	Если НЕ (РаздельныйУчетНДС ИЛИ ПараметрыУчетаОрганизации.ПрименяетсяУСН)
			ИЛИ НЕ ПрименяетсяПСН
			ИЛИ НЕ Справочники.Патенты.ЕстьДействующийПатент(ПараметрыЗаполнения.Организация,
			?(ПараметрыЗаполнения.Свойство("Подразделение"), ПараметрыЗаполнения.Подразделение , Неопределено),
				ПараметрыЗаполнения.Дата) Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту)
	КонецЕсли;

	
	ДатаПроверки = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
	Если Не РаздельныйУчетНДС 
		Или Не ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров
		Или ДатаПроверки < ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	КонецЕсли;
	
	Если Не РаздельныйУчетНДС 
		Или Не ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг
		Или ДатаПроверки < ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьВидДеятельностиНДС
Процедура ЗаполнитьВидДеятельностиНДСПоПараметрам(НовыйВидДеятельностиНДС, ТекущийВидДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
				ПараметрыЗаполнения.Организация,
				ПараметрыЗаполнения.Дата,
				ПараметрыЗаполнения.Склад,
				ПараметрыЗаполнения.Подразделение);
				
	Если ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
			
		Если (ПараметрыЗаполнения.ПриобретениеТоваров
					ИЛИ ПараметрыЗаполнения.ПриобретениеРабот
					ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
					ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
				И ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		ИначеЕсли ПараметрыЗаполнения.ПриобретениеТоваров 
			И ПараметрыУчетаПоОрганизации.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
		ИначеЕсли (ПараметрыЗаполнения.ПриобретениеТоваров
					ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
					ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
				И ПараметрыУчетаПоОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
		Иначе
			НовыйВидДеятельностиНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли; 
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС
Процедура ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	
	Если ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию 
		И ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяТабличнойЧасти = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов = "" И ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТабличнаяЧасть.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|	И СтатьиРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл В 
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов))
	|;
	|";
	
	ИмяРеквизитаСтатьяРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов), ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходов",    ИмяРеквизитаСтатьяРасходов);
	ИмяРеквизитаАналитикаРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов), ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", ИмяРеквизитаАналитикаРасходов);
	
	ИмяРеквизитаСтатьяАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАктивовПассивов",    ИмяРеквизитаСтатьяАктивовПассивов);
	ИмяРеквизитаАналитикаАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаАктивовПассивов", ИмяРеквизитаАналитикаАктивовПассивов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", Объект[ПараметрыПроверки.ИмяТабличнойЧасти]);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС", ВидДеятельностиНДС);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru='В организации используется учет НДС по фактическому использованию. 
		                           |Выбранная в строке %1 статья расходов должна иметь порядок раздельного учета НДС ""НДС распределяется пропорционально выручке""'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область УчетИсходящегоНДС

// см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи
Процедура ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата, ПараметрыЗаполнения.Склад, ПараметрыЗаполнения.Подразделение);
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ПрименяетсяЕНВД = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ПрименяетсяПСН = ПараметрыУчетаОрганизации.ПрименяетсяПСН;
	Иначе
		ПрименяетсяЕНВД = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ПрименяетсяПСН = ПараметрыУчетаИБ.ПрименяетсяПСН;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияРаботУслуг, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияПрочихАктивов, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ВыкупТоваровХранителем, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ВозвратТоваровОтКлиента, МассивДоступных);
	КонецЕсли;

	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ОтчетДавальцу, МассивДоступных);
	КонецЕсли;
		
	// Недоступные налогообложения по настройкам
	Если НЕ ПрименяетсяЕНВД Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	КонецЕсли;
	
	Если НЕ ПрименяетсяПСН Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
	КонецЕсли;
	
	Если Не ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров
		Или Не ПараметрыЗаполнения.ЭтоЗаказ
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	КонецЕсли;
	
	Если Не ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг
		Или Не ПараметрыЗаполнения.ЭтоЗаказ
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	КонецЕсли;
	
	Если (ПараметрыЗаполнения.ЭтоЗаказ И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов")) Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	ДатаПроверки = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
	Если ДатаПроверки < Дата("20190701")
			ИЛИ НЕ ПараметрыУчетаОрганизации.ЕстьРеализацияРаботУслугНеНаТерриторииРФ Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
Процедура ЗаполнитьНалогообложениеНДСПродажиПоПараметрам(НовоеНалогообложениеНДС, ТекущееНалогообложениеНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация,
									ПараметрыЗаполнения.Дата,
									ПараметрыЗаполнения.Склад,
									ПараметрыЗаполнения.Подразделение);
									
	Если НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт	
			ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
			ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
		// Учитываем особенности заполнение налогобложения на экспорт.
		// В заказах при использовании обособленного обеспечения потребностей явно указывается вид экспорта: сырьевой или несырьевой.
		// Это необходимо для того, чтобы корректно вести учет при обособленных закупках под заказы.
		// В остальных случаях в документах продажи используется единое налогообложение "ПродажаНаЭкспорт".
		Если Не ПараметрыЗаполнения.ЭтоЗаказ
			 И (ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг
			 	ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров) Тогда
			НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
		ИначеЕсли ПараметрыЗаполнения.ЭтоЗаказ 
			 И НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
			 И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
			Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг И НастройкиУчета.ЭкспортНесырьевыхТоваров Тогда
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(); // Пользователь должен выбрать значение.
			ИначеЕсли НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг; 
			Иначе
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;  
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка() Тогда
	
		Если ПараметрыУчетаОрганизации.ПрименяетсяПСН Тогда
			НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		ИначеЕсли ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи;
		Иначе
			НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению
Процедура ДополнитьПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС) Экспорт
	
	//++ Локализация
	
	Если НалогообложениеНДС = Неопределено Тогда
		НалогообложениеНДС = ОтборыВидовЗапасов.НалогообложениеНДС;
	КонецЕсли;
	
	НалогообложениеОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Организация, Дата).ОсновноеНалогообложениеНДСПродажи;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт Тогда
		
		ДоступныеТипыЗапасов = Новый Массив;
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ОтборыВидовЗапасов.ТипЗапасов = ДоступныеТипыЗапасов;

	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		
		ДоступныеТипыЗапасов = Новый Массив;
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ОтборыВидовЗапасов.ТипЗапасов = ДоступныеТипыЗапасов;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
		
	ИначеЕсли НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		И НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту
		И Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(НалогообложениеНДС) <> НалогообложениеОрганизации Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
КонецПроцедуры

// см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
Процедура УстановитьВидДеятельностиПоНалогообложениюНДС(ВидДеятельностиНДС, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт Тогда
		ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
Процедура ДополнитьТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ТекстЗапроса, ПараметрыЗапроса) Экспорт
	
	//++ Локализация
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	""ПодакцизныйТовар"" КАК Признак
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	ВременнаяТаблицаТовары.Номенклатура.ПодакцизныйТовар
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	""ОблагаетсяНДСУПокупателя"" КАК Признак
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Номенклатура.ОблагаетсяНДСУПокупателя
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|;
		|";
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДС
Процедура СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ) Экспорт
	
	//++ Локализация
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Признак = "ПодакцизныйТовар" Тогда
		
			ТекстОшибки = НСтр("ru='При режиме налогообложения ""Продажа облагается ЕНВД"" запрещено выбирать подакцизный товар в строке %НомерСтроки% списка ""Товары""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
		
		ИначеЕсли Выборка.Признак = "ОблагаетсяНДСУПокупателя" Тогда
			ТекстОшибки = НСтр("ru='Товар в строке %НомерСтроки% списка ""Товары"" не соответствует режиму налогообложения ""Облагается НДС у покупателя""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОграничениеТоваровПоНалогообложению
Процедура ДополнитьОграничениеТоваровПоНалогообложению(Ограничения, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	СтруктураОтбора = Новый Структура("Реквизит,ВидСравнения,Значение");
	
	Если НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		СтруктураОтбора.Реквизит = "ПодакцизныйТовар";
		СтруктураОтбора.Значение = Ложь;
		СтруктураОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Ограничения.Добавить(СтруктураОтбора);
	КонецЕсли;

	СтруктураОтбора.Реквизит = "ОблагаетсяНДСУПокупателя";
	СтруктураОтбора.Значение = (НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя"));
	СтруктураОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Ограничения.Добавить(СтруктураОтбора);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

#Область ЛокализацияОперацийПроведения

// см. УчетНДСУП.ОтразитьВводОстатковСобственныхТоваров
Процедура ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
	#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПриобретения,
	|
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУвеличение,
	|	0 КАК СуммаУменьшение,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|
	|	СУММА(Товары.СуммаНДСРегл) КАК СуммаРегл,
	|	0 КАК СуммаУвеличениеРегл,
	|	0 КАК СуммаУменьшениеРегл,
	|	СУММА(Товары.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСУвеличениеРегл,
	|	0 КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Товары КАК Товары
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ВводОстатков22
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.СтавкаНДС";
	
	#КонецОбласти
	
	#Область ЗаполнениеШапкиСФПолученный
	
	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Товары.Организация) КАК Организация,
	|	МАКСИМУМ(Товары.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Товары.Контрагент) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Валюта
	|ИЗ
	|	#Товары КАК Товары
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ВводОстатков22
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка";
	
	#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьПриобретениеУПоставщика
Процедура ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
	
#Область ПартииНДСКРаспределению
	
	ТекстЗапросаПартииНДСКРаспределению =
	// Формирование движений по распределяемым расходам
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяРасходов
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ЭлектронныеУслуги)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	И (НЕ ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьтоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		ИЛИ ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Формирование движений по косвенным расходам на сырьевой экспорт
	|ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	Ценности.СтатьяРасходов КАК СтатьяРасходов,
	|	Ценности.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Ценности.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|	И СтатьиРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл =
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|
	|";
	
#КонецОбласти
	
#Область ДанныеОснованийСчетовФактур
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураНалоговыйАгентПолученный", ИдентификаторыСчетовФактур["Документ.СчетФактураПолученныйНалоговыйАгент"]);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураНалоговыйАгентПолученный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент) КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПриобретения,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУвеличение,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУменьшение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУвеличение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУменьшение,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУвеличениеРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУменьшениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУвеличениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти

#Область ЖурналСФ
	
	ТекстЗапросаЖурналУчетаСчетовФактур =
	"ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Контрагент.ИНН) КАК ИННКонтрагента,
	|	МАКСИМУМ(Ценности.Контрагент.КПП) КАК КППКонтрагента,
	|	Ценности.Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	МАКСИМУМ(ДанныеПервичныхДокументов.Номер) КАК НомерСчетаФактуры,
	|	МАКСИМУМ(ДанныеПервичныхДокументов.Дата) КАК ДатаСчетаФактуры,
	|	""45"" КАК КодВидаОперации,
	|	2 КАК КодВидаСделки,
	|	1 КАК КодСпособаПолучения,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаСНДС, 0)) КАК СуммаПоСчетуФактуре,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДС
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Ценности.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И Ценности.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Период,
	|	Ценности.Ссылка
	|";
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ПартииНДСКРаспределению", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ПартииНДСКРаспределению", ТекстЗапросаПартииНДСКРаспределению);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЖурналУчетаСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЖурналУчетаСчетовФактур", ТекстЗапросаЖурналУчетаСчетовФактур);
	КонецЕсли;
	
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
		КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВозвратТоваровОтПокупателя
Процедура ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
	Если НЕ Запрос.Параметры.Свойство("ТипыЗапасовСобственные") Тогда
		Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	КонецЕсли;
	Если НЕ Запрос.Параметры.Свойство("ДатаНачалаУчетаНДСПоНаправлениямДеятельности") Тогда
		Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", 
			УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	КонецЕсли;
	Если НЕ Запрос.Параметры.Свойство("ДатаОтраженияВозвратовКорректировочнымиСФ") Тогда
		Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСРФ.ДатаОтраженияВозвратовКорректировочнымиСФ());
	КонецЕсли;
	
#Область НДСЗаписиКнигиПокупок
	ТекстЗапросаНДСЗаписиКнигиПокупок =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Организация КАК Поставщик,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ КАК СчетФактура,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчетаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ) КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	""16"" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС) КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			  И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ -СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ) КАК НДСУпр
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|						ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС),
	|	Ценности.Период
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	ИдентификаторСводнаяСправкаНДС = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС");
	Запрос.УстановитьПараметр("ИдентификаторСводнаяСправкаНДС", ИдентификаторСводнаяСправкаНДС);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС ИЛИ Ценности.РозничныйПокупатель
	|			ТОГДА &ИдентификаторСводнаяСправкаНДС
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА &ИдентификаторСчетФактураВыданный
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументРеализации КАК КорректируемыйДокумент,
	|
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			КОГДА СуммыДокументов.СуммаБезНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДС 
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			КОГДА СуммыДокументов.СуммаНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			ИНАЧЕ СуммыДокументов.СуммаНДС 
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл 
	|		КОНЕЦ) КАК СуммаБезНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.БазаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			КОГДА СуммыДокументов.БазаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			ИНАЧЕ СуммыДокументов.БазаНДСРегл 
	|		КОНЕЦ) КАК БазаНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			КОГДА СуммыДокументов.СуммаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаНДСРегл 
	|		КОНЕЦ) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ) КАК КорректировкаПоСогласованиюСторон,
	|	Ценности.РозничныйПокупатель КАК РозничныйПокупатель
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Ценности.ПокупательНеПлательщикНДС
	|		ИЛИ Ценности.РозничныйПокупатель
	|		ИЛИ Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	СпрВидыЗапасов.ТипЗапасов,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ПокупательНеПлательщикНДС,
	|	Ценности.РозничныйПокупатель,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область ЗаполнениеТоваровСФВыданный
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный =
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	Ценности.Характеристика КАК Характеристика,
	|	Ценности.НоменклатураНабора КАК НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	"""" КАК Содержание,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК КодТНВЭД,
	|	Ценности.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	СУММА(Ценности.Количество * ВЫБОР 
	|			КОГДА Ценности.Количество > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДСРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО Ценности.ДокументРеализации = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И (НЕ Ценности.РозничныйПокупатель
	|			ИЛИ Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены)
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Ценности.Номенклатура,
	|	Ценности.Характеристика,
	|	Ценности.НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора,
	|	СпрВидыЗапасов.ТипЗапасов,
	|	Ценности.КодТНВЭД,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ДокументРеализации,
	|	Ценности.НалогообложениеНДС,
	|	Ценности.ЕдиницаИзмерения
	|";
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный = СтрЗаменить(
		ТекстЗапросаЗаполнениеТоваровСФВыданный,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Ценности.ЕдиницаИзмерения",
			"Ценности.Номенклатура"));
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПриобретения,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	0 КАК СуммаУвеличение,
	|	0 КАК СуммаУменьшение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДС,
	|	0 КАК СуммаНДСУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	0 КАК СуммаУвеличениеРегл,
	|	0 КАК СуммаУменьшениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСУвеличениеРегл,
	|	0 КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РозничныйПокупатель
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РозничныйПокупатель
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПокупок", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПокупок", ТекстЗапросаНДСЗаписиКнигиПокупок);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеТоваровСФВыданный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеТоваровСФВыданный", ТекстЗапросаЗаполнениеТоваровСФВыданный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВвозТоваровИзТаможенногоСоюза
Процедура ОтразитьВвозТоваровИзТаможенногоСоюза(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
	Если НЕ Запрос.Параметры.Свойство("ТипыНоменклатурыТовар") Тогда
		Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	КонецЕсли;
	
	ТекстТоварыКОформлениюЗаявленийОВвозе =
	"ВЫБРАТЬ
	|	Товары.Ссылка                          КАК Регистратор,
	|	Товары.Период                          КАК Период,
	|	Товары.Склад                           КАК Склад,
	|	Товары.ДокументПриобретения            КАК ДокументПоступления,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	Товары.Серия                           КАК Серия,
	|	Товары.Количество                      КАК КОформлению,
	|	Товары.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	СуммыДокументов.СуммаБезНДС            КАК ФактурнаяСтоимость
	|ИЗ
	|	#Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Контрагенты КАК Контрагенты
	|	ПО
	|		Товары.Контрагент = Контрагенты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Товары.Ссылка = СуммыДокументов.Ссылка
	|		И Товары.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (&ТипыНоменклатурыТовар)
	|";
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ТоварыКОформлениюЗаявленийОВвозе", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ТоварыКОформлениюЗаявленийОВвозе", ТекстТоварыКОформлениюЗаявленийОВвозе);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьРеализациюКлиенту
Процедура ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ДатаНачалаПримененияСводныхСправок", Константы.ДатаНачалаПримененияСводныхСправок.Получить());
	
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК НДС,
	|
	// Хозяйственную операцию заполняем только в случае реализации с особым переходом права.
	// Только в этом случае НДСЗаписиКнигиПродаж является источником для проводок МФУ.
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СУММА(СуммыДокументов.СуммаНДСУпр) КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НЕ Ценности.РеализацияВРозницу
	|		ИЛИ Ценности.Период < &ДатаНачалаПримененияСводныхСправок)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И (Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|		
	|		ИЛИ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			И Ценности.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// Подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|	
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// НЕ подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	НДССостояниеРеализации0.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(СуммыДокументов.БазаНДСРегл
	|		* (ВЫБОР НДССостояниеРеализации0.СтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|					ТОГДА 0.20
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|					ТОГДА 0.18
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|					ТОГДА 0.10
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|					ТОГДА 20/120
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|					ТОГДА 18/118
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|					ТОГДА 10/110
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|		КАК ЧИСЛО(31,2))) КАК НДС,
	|	
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|	ПО
	|		Ценности.Ссылка = СчетФактураНаНеподтвержденнуюРеализацию0.ДокументОснование
	|		И СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Ссылка ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период                       КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор                  КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация                  КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия                  КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод         КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста   КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление                  КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС                  КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС                          КАК НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация         КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НДСУпр                       КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Регистратор = &Ссылка
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|";
	
#КонецОбласти

#Область НДССостояниеРеализации0
	
	ТекстНДССостояниеРеализации0 = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК ДатаРеализации,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Контрагент,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	ЕСТЬNULL(НДССостояниеРеализации0.Состояние, ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)) КАК Состояние,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаПодтверждения,
	|	ВЫРАЗИТЬ(НДССостояниеРеализации0.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС = &СтавкаНДСНаЭкспорт
	|";
	
	УчетНДСУП.УстановитьПараметрЗапросаСтавкаНДСНаЭкспорт(Запрос.Параметры);
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	Запрос.УстановитьПараметр("ТипыНоменклатурыУслугаРабота", УчетНДСУПСлужебный.ТипыНоменклатурыУслугаРабота());
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|				ВЫБОР Ценности.СтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) В (&ТипыНоменклатурыУслугаРабота)
	|							И ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ИСТИНА)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						КОГДА ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|					КОНЕЦ
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				КОНЕЦ
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ИНАЧЕ Ценности.НалогообложениеНДС
	|		КОНЕЦ) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|	ПО
	|		Ценности.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РеализацияВРозницу
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область НДСПредъявленныйСохранение
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|ГДЕ
	|	НДСПредъявленный.Регистратор = &Ссылка
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
#КонецОбласти
	
#Область ЗаполнениеТоваровСФВыданный
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	Ценности.Характеристика КАК Характеристика,
	|	Ценности.НоменклатураНабора КАК НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Ценности.Содержание КАК Содержание,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК КодТНВЭД,
	|	Ценности.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	СУММА(Ценности.Количество) КАК Количество,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО Ценности.ДокументРеализации = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РеализацияВРозницу
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Ценности.Номенклатура,
	|	Ценности.Характеристика,
	|	Ценности.НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора,
	|	Ценности.Содержание,
	|	СпрВидыЗапасов.ТипЗапасов,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ДокументРеализации,
	|	Ценности.ЕдиницаИзмерения";
	
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДССостояниеРеализации0", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДССостояниеРеализации0", ТекстНДССостояниеРеализации0);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеТоваровСФВыданный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеТоваровСФВыданный", ТекстЗапросаЗаполнениеТоваровСФВыданный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстЦенности);
	
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВозвратТоваровПоставщику
Процедура ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт

	//++ Локализация
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСРФ.ДатаОтраженияВозвратовКорректировочнымиСФ());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизацийВключен", РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУправленческогоУчетаОрганизаций", РасчетСебестоимостиПовтИсп.ДатаНачалаВеденияУправленческогоУчетаОрганизаций());
	
#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СуммыДокументов.БазаНДСРегл КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|";
	
#КонецОбласти
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                          КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА -СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ 
	|";
	
#КонецОбласти
	
#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ЛОЖЬ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументПоступления КАК КорректируемыйДокумент,
	|	
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Период,
	|	Ценности.Ссылка,
	|	Ценности.ВидЗапасов.ТипЗапасов,
	|	Ценности.ДокументПоступления,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.ДокументПоступления КАК ДокументПриобретения,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0)
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаУвеличение,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаУменьшение,
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаНДСУвеличение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДСУменьшение,
	|
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0)
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаУвеличениеРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаУменьшениеРегл,
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаНДСУвеличениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС,
	|	Ценности.ДокументПоступления";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстТовары);
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьОтчетКомиссионера
Процедура ОтразитьОтчетКомиссионера(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомиссионеру", 
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомиссионеру"));
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураКомиссионеру КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	Ценности.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Ценности.ПокупательКомиссионногоТовара.ЮрФизЛицо В
	|			(ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо), ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель))
	|		ИЛИ Ценности.НомерСчетаФактурыКомиссионера <> """")
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Ценности.ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьОтчетКомитенту
Процедура ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	ИдентификаторСчетФактураКомитента = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомитента");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомитента", ИдентификаторСчетФактураКомитента);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураКомитента КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|	
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер,
	|	Ценности.ПокупательКомиссионногоТовара
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеЗаданий

#Область ЗаданияКФормированиюДвиженийПоНДС

// см. УчетНДСУП.СформироватьЗаданияПоДокументам
Процедура СформироватьЗаданияПоДокументам(МассивДокументов) Экспорт
	
	//++ Локализация
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Тип");
	Таблица.Колонки.Добавить("Ссылка");
	
	Для Каждого Документ Из МассивДокументов Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Ссылка = Документ.Ссылка;
		НоваяСтрока.Тип    = ТипЗнч(Документ.Ссылка);
	КонецЦикла;
	Таблица.Сортировать("Тип");
	
	ТаблицаТипов = Таблица.Скопировать(, "Тип");
	ТаблицаТипов.Свернуть("Тип");
	
	Для Каждого СтрокаТипа Из ТаблицаТипов Цикл
		
		Отбор = Новый Структура("Тип", СтрокаТипа.Тип);
		МассивСсылок = Таблица.Скопировать(Отбор, "Ссылка").ВыгрузитьКолонку("Ссылка");
		
		Если СтрокаТипа.Тип = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамЗаявлениеОВвозеТоваров(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.РаспределениеНДС") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамРаспределениеНДС(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураВыданный(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураВыданныйАванс") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураАванс(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураПолученный(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураПолученныйАванс") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураАванс(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент") Тогда
			УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураПолученный(МассивСсылок);
		ИначеЕсли СтрокаТипа.Тип = Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
			УчетНДСРФ.СформироватьЗаданияПоИнымДокументамПодтвержденияНДС(МассивСсылок);
		КонецЕсли;
		
	КонецЦикла;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ПрочийИнтерфейсФормированияЗаданий

// см. УчетНДСУП.СформироватьЗаданияПриИзмененииДанныхПартий
Процедура СформироватьЗаданияПриИзмененииДанныхПартий(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)     КАК Месяц,
	|	Партии.Организация                      КАК Организация,
	|	Партии.СчетФактура                      КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И (Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И Партии.Проведен
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)                        КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И Партии.Проведен
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НаВнеоборотныеАктивы)
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[0].Выбрать());
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[1].Выбрать());
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(ТаблицаИзменений);
	Документы.СчетФактураНалоговыйАгент.СформироватьДвиженияНДС(ТаблицаИзменений);
	УчетНДСРФ.СформироватьЗаданияПоПриобретениюЭлектронныхУслуг(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураВыданныйАванс.СформироватьДвиженияПоКнигамПокупокПродаж(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры
#КонецОбласти


#КонецОбласти

#Область ПодключениеКБСП

// См. УчетНДСУП.ОпределитьОбъектыСКомандамиОтчетов
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.БлокировкаВычетаНДС);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	Объекты.Добавить(Метаданные.Документы.ИнойДокументПодтвержденияНДС);
	Объекты.Добавить(Метаданные.Документы.СводнаяСправкаНДС);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНДС);
	//-- Локализация

КонецПроцедуры

// См. УчетНДСУП.НастроитьВариантыОтчетов
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	
	#Область КнигаПокупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КнигаПокупок);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование книги покупок после выполнения регламентных операций закрытия периода по НДС.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Покупатель
		|ИНН
		|КПП
		|Покупка за период
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|Наименование продавца
		|Страна происхождения товара
		|НДС'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент
		|Выводить покупателей'");
	#КонецОбласти
	
	#Область КнигаПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КнигаПродаж);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование книги продаж после выполнения регламентных операций закрытия периода по НДС.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Продавец
		|ИНН
		|КПП
		|Продажа за период
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|Наименование покупателя
		|Страна происхождения товара
		|НДС'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент
		|Выводить продавцов'");
	#КонецОбласти
	
	#Область НаличиеСчетовФактур
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НаличиеСчетовФактур);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль наличия счетов-фактур, полученных от поставщиков.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Документ-основание
		|Счет-фактура
		|Проведен'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Наличие счета-фактуры
		|Документ'");
	#КонецОбласти
	
	#Область РеестрСчетовФактурДляСверки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрСчетовФактурДляСверки);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыставленныеСчетаФактуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование печатной формы реестра счетов-фактур, выданных покупателю за налоговый период.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Покупатель
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|НДС
		|Сверка
		|Реестр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПолученныеСчетаФактуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование печатной формы реестра счетов-фактур, полученных от поставщика за налоговый период.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Поставщик
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|НДС
		|Сверка
		|Реестр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент'");
	#КонецОбласти
	
	#Область ЖурналУчетаСчетовФактур
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаСчетовФактур);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование списка счетов-фактур, исправленных счетов-фактур,
		|корректировочных счетов-фактур, полученных от поставщиков и переданных покупателям.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Наименование налогоплательщика
		|ИНН
		|КПП
		|Выставленные счета-фактуры
		|Полученные счета-фактуры
		|Руководитель организации
		|Индивидуальный предприниматель'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация'");
	#КонецОбласти

	#Область АнализРаспределенияНДС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРаспределенияНДС);
	ОписаниеОтчета.Включен = Ложь;
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.БлокировкаВычетаНДС",        "Дата", "РегламентныеОперации", "Организация");	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаписьКнигиПокупок",         "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаписьКнигиПродаж",          "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаявлениеОВвозеТоваров",     "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КорректировкаНалогообложенияНДСПартийТоваров", "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.РаспределениеНДС",           "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураВыданный",        "Дата", "ПродажиВозвратыОтКлиентов", "Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураВыданныйАванс",   "ДатаПолученияАванса", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураКомиссионеру",    "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураКомитента",       "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураНалоговыйАгент",  "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураНаНеподтвержденнуюРеализацию0", "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученный",      "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученныйНалоговыйАгент", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученныйНалоговыйАгент", "ДатаСоставления", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученныйАванс", "ДатаОтраженияВРеглУчете", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ИнойДокументПодтвержденияНДС", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СводнаяСправкаНДС", "Дата", "РегламентныеОперации", "Организация");
	
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам", "Период", "РегламентныеОперации", "Организация");
	//-- Локализация

КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	//++ Локализация
	Если НастройкиФормы.ИмяФормы = "Обработка.ЖурналДокументовНДС.Форма.СписокДокументов" Тогда
		Обработки.ЖурналДокументовНДС.ПриОпределенииКомандПодключенныхКОбъекту(Команды);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииОбъектовСКомандамиПечати
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт

	//++ Локализация
	СписокОбъектов.Добавить(Документы.БлокировкаВычетаНДС);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПокупок);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПродаж);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	СписокОбъектов.Добавить(Документы.РаспределениеНДС);
	СписокОбъектов.Добавить(Документы.СписаниеНДСНаРасходы);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданный);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданныйАванс);
	СписокОбъектов.Добавить(Документы.СчетФактураКомиссионеру);
	СписокОбъектов.Добавить(Документы.СчетФактураНалоговыйАгент);
	СписокОбъектов.Добавить(Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	СписокОбъектов.Добавить(Документы.СчетФактураПолученныйАванс);
	СписокОбъектов.Добавить(Обработки.ЖурналДокументовНДС);
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПередДобавлениемКомандПечати
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ИмяФормы = "Документ.СчетФактураВыданный.Форма.ФормаОформленияСчетовФактур" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		
		// Счет-фактура
		КомандаПечати = КоллекцияКомандПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
		КомандаПечати.Порядок = 1;
		
		Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			// Счет-фактура (в валюте)
			КомандаПечати = КоллекцияКомандПечати.Добавить();
			КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
			КомандаПечати.Идентификатор = "СчетФактураВВалюте";
			КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
			КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
			КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
			КомандаПечати.Порядок = 2;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "Документ.СчетФактураНалоговыйАгент.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНалоговыйАгент.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНалоговыйАгент"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "РегистрСведений.НДССостояниеРеализации0.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНаНеподтвержденнуюРеализацию0"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
	
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриЗаполненииСписковСОграничениемДоступа
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//++ Локализация
	Списки.Вставить(Метаданные.Документы.БлокировкаВычетаНДС, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПокупок, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПродаж, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаявлениеОВвозеТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.РаспределениеНДС, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеНДСНаРасходы, Истина);
	Списки.Вставить(Метаданные.Документы.СводнаяСправкаНДС, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомиссионеру, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомитента, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.ИнойДокументПодтвержденияНДС, Истина);

	Списки.Вставить(Метаданные.ЖурналыДокументов.КорректировкиНДС, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ДанныеОснованийСчетовФактур, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НДССостояниеРеализации0, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомиссионерамКОформлению, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомитентовКРегистрации, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйАвансПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомиссионеруПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомитентаПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйАвансПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйНалоговыйАгентПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ИнойДокументПодтвержденияНДСПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ПартииНДСКРаспределению, Истина);
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОписаниеДокументовДляЖурналов

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт
	
	//++ Локализация
	
	// ЗаявлениеОВвозе
	
	СтрокаЗаявлениеОВвозеТоваров = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаЗаявлениеОВвозеТоваров;
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров");
	Строка.ПолноеИмяДокумента			= "Документ.ЗаявлениеОВвозеТоваров";
	Строка.КлючНазначенияИспользования 	= "ЗаявленияОВвозеТоваров";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (заявления о ввозе)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ЗаявлениеОВвозеТоваров";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки;
	
	
	// СчетФактураПолученный
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (счета-фактуры)'");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомиссионера;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомитенту;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
	
	
	// СчетФактураПолученныйНалоговыйАгент
	
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученныеНалоговыйАгент";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученныйНалоговыйАгент";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки товаров с обратным обложением НДС (счета-фактуры)'");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	// СчетФактураВыданный
	
	СтрокаСчетФактураВыданный = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка = СтрокаСчетФактураВыданный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыВыданные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураВыданный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураВыданный";
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.СчетФактураВыданный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы продажи (счета-фактуры)'");
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности;
	
	
	//-- Локализация
КонецПроцедуры

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	// СчетФактураВыданный
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка.КлючНазначенияИспользования	= "ДокументыПередачиВПереработку";
	Строка.ХозяйственнаяОперация		= Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента					= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.СчетФактураПолученный.ПолноеИмя();
	Строка.ЗаголовокРабочегоМеста		= НСтр("ru = 'Документы передачи в переработку (все)'");
	Строка.Порядок						= 24;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область РегламентнаяОперацияПоНДС

// см. УчетНДСУП.ВыполнитьФормированиеДвиженийПоНДС
Процедура ВыполнитьФормированиеДвиженийПоНДС(КонецПериода, МассивОрганизаций) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ОбновитьСостояниеТребованийОформленияСчетовФактур(МассивОрганизаций);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьДокументыВУчетеНДС
Процедура ДополнитьСчетаФактурыКОтражениюВУчетеНДС(СчетаФактуры, МассивСсылок) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученныйНалоговыйАгент
	|ГДЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основания.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Основания
	|	ПО
	|		СчетФактураПолученный.СчетФактураОснование = Основания.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОВвозеТоваров.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|ГДЕ
	|	ЗаявлениеОВвозеТоваров.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаможеннаяДекларацияИмпорт.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
	|ГДЕ
	|	ТаможеннаяДекларацияИмпорт.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИнойДокументПодтвержденияНДС.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|ГДЕ
	|	ИнойДокументПодтвержденияНДС.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	СчетФактураНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|	ПО
	|		ДокументыОснования.ДокументОснование = КорректировкаПриобретения.Ссылка
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|ГДЕ
	|	КорректировкаПриобретения.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииНДСКРаспределению.ДокументПоступленияРасходов КАК СчетФактура
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		РаспределениеНДС.Ссылка = ПартииНДСКРаспределению.Регистратор
	|ГДЕ
	|	РаспределениеНДС.Ссылка В (&МассивСсылок)
	|";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаФактуры, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СчетФактура"));
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ВходящиеДанныеМеханизма
Процедура ДополнитьВходящиеДанныхДляВыполненияРегламентнойОперации(ВходящиеДанные) Экспорт
	
	//++ Локализация
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок);
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж);
	
	ВходящиеДанные.Добавить(Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет);
	ВходящиеДанные.Добавить(Метаданные.РегистрыСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам);

	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураВыданный);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученный);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	ВходящиеДанные.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ЗафиксироватьРезультат
Процедура ЗафиксироватьРезультат(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ЗафиксироватьРезультат(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПолучитьПартии
Процедура ПолучитьПартии(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьПартии(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПолучитьСчетаФактурыДокументы
Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПолучитьИсправительныеСчетаФактурыДокументы
Процедура ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПолучитьКорректировочныеСчетаФактурыДокументы
Процедура ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ. ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПолучитьРазрезыВычетаНДС
Процедура ПолучитьРазрезыВычетаНДС(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ВыполнитьРасчет
Процедура ВыполнитьРасчет(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ВыполнитьРасчет(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти