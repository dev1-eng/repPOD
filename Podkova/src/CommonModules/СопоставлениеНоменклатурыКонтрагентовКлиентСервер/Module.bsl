/////////////////////////////////////////////////////////////////////////////////////////
// СопоставлениеНоменклатурыКонтрагентовКлиентСервер:
// механизм сопоставления номенклатуры контрагентов с номенклатурой информационной базы.
//
////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает набор данных, представляющий номенклатуру информационной базы.
//
// Параметры:
//  Номенклатура   - ОпределяемыйТип.НоменклатураБЭД               - значение для инициализации выходного свойства Номенклатура.
//  Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - значение для инициализации выходного свойства Характеристика.
//  Упаковка       - ОпределяемыйТип.УпаковкаНоменклатурыБЭД       - значение для инициализации выходного свойства Упаковка.
//
// Возвращаемое значение:
//  Структура - данные, представляющие номенклатуру информационной базы:
//   * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД, Неопределено               - номенклатура ИБ. Неопределено, если не инициализировано.
//   * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД, Неопределено - характеристика номенклатуры ИБ. Неопределено, если не инициализировано.
//   * Упаковка       - ОпределяемыйТип.УпаковкаНоменклатурыБЭД, Неопределено       - упаковка номенклатуры информационной базы. Неопределено, если не инициализировано.
//
Функция НоваяНоменклатураИнформационнойБазы(Знач Номенклатура = Неопределено, Знач Характеристика = Неопределено, Знач Упаковка = Неопределено) Экспорт
	
	НоменклатураИБ = Новый Структура;
	НоменклатураИБ.Вставить("Номенклатура"  , Номенклатура);
	НоменклатураИБ.Вставить("Характеристика", Характеристика);
	НоменклатураИБ.Вставить("Упаковка"      , Упаковка);

	Возврат НоменклатураИБ;
	
КонецФункции

// Возвращает набор данных, представляющий номенклатуру контрагента информационной базы.
//
// Параметры:
//  Номенклатура   - ОпределяемыйТип.НоменклатураБЭД               - значение для инициализации выходного свойства Номенклатура.
//  Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - значение для инициализации выходного свойства Характеристика.
//  Упаковка       - ОпределяемыйТип.УпаковкаНоменклатурыБЭД       - значение для инициализации выходного свойства Упаковка.
//
// Возвращаемое значение:
//  Структура - данные, представляющие номенклатуру контрагента информационной базы:
//   * Номенклатура            - ОпределяемыйТип.НоменклатураБЭД, Неопределено               - номенклатура ИБ. Неопределено, если не инициализировано.
//   * Характеристика          - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД, Неопределено - характеристика номенклатуры ИБ. Неопределено, если не инициализировано.
//   * Упаковка                - ОпределяемыйТип.УпаковкаНоменклатурыБЭД, Неопределено       - упаковка номенклатуры информационной базы. Неопределено, если не инициализировано.
//   * НоменклатураКонтрагента - СправочникСсылка.НоменклатураКонтрагентов                   - ссылка номенклатуры контрагентов.
//
Функция НоваяНоменклатураКонтрагентаИнформационнойБазы(Знач Номенклатура = Неопределено, Знач Характеристика = Неопределено, Знач Упаковка = Неопределено) Экспорт
	
	НоменклатураИБ = Новый Структура;
	НоменклатураИБ.Вставить("Номенклатура"           , Номенклатура);
	НоменклатураИБ.Вставить("Характеристика"         , Характеристика);
	НоменклатураИБ.Вставить("Упаковка"               , Упаковка);
	НоменклатураИБ.Вставить("НоменклатураКонтрагента", ПредопределенноеЗначение("Справочник.НоменклатураКонтрагентов.ПустаяСсылка"));

	Возврат НоменклатураИБ;
	
КонецФункции

// Возвращает набор данных, представляющий номенклатуру контрагента.
//
// Параметры:
//  Владелец      - ОпределяемыйТип.ВладелецНоменклатурыБЭД - значение для инициализации выходного свойства Владелец.
//  Идентификатор - Строка                                  - значение для инициализации выходного свойства Идентификатор.
//
// Возвращаемое значение:
//  Структура - данные, представляющие номенклатуру контрагента:
//   * Владелец                           - Неопределено, ОпределяемыйТип.ВладелецНоменклатурыБЭД, ОпределяемыйТип.Организация - владелец номенклатуры.
//                                                                                                                               Неопределено, если не инициализировано.
//   * Идентификатор                      - Строка - идентификатор записи по комбинации: номенклатура#характеристика#упаковка.
//   * Наименование                       - Строка - наименование номенклатуры.
//   * Характеристика                     - Строка - наименование характеристики номенклатуры.
//   * НаименованиеУпаковки               - Строка - наименование упаковки номенклатуры.
//   * ЕдиницаИзмерения                   - Строка - наименование базовой единицы измерения номенклатуры.
//   * ЕдиницаИзмеренияКод                - Строка - код по ОКЕИ базовой единицы измерения номенклатуры.
//   * Артикул                            - Строка - артикул номенклатуры.
//   * СтавкаНДС                          - Строка - ставка НДС номенклатуры. 
//   * ШтрихкодКомбинации                 - Строка - штрихкод комбинации: номенклатура, характеристика, упаковка.
//   * ШтрихкодыНоменклатуры              - Строка - другие штрихкоды номенклатуры через запятую.
//   * ИдентификаторНоменклатурыСервиса   - Строка - идентификатор в сервисе 1С:Номенклатура.
//   * ИдентификаторХарактеристикиСервиса - Строка - идентификатор характеристики в сервисе 1С:Номенклатура.
//   * ИдентификаторНоменклатуры          - Строка - идентификатор номенклатуры.
//   * ИдентификаторХарактеристики        - Строка - идентификатор характеристики.
//   * ИдентификаторУпаковки              - Строка - идентификатор упаковки.
//   * ИсторияИдентификаторов             - Массив - история версий идентификаторов для данной номенклатуры (служебный).
//   * КоличествоБазовойЕдиницыИзмерения  - Число  - количество базовой единицы измерения (числитель).
//   * КоличествоУпаковок                 - Число  - количество упаковок (знаменатель)
//   * ВариантУказанияНоменклатуры        - ПеречислениеСсылка.ВариантыУказанияНоменклатурыБЭД - значение в чьих терминах указана номенклатура.
//                                                                                               По умолчанию номенклатура контрагента.
//   * НоменклатураКонтрагента            - СправочникСсылка.НоменклатураКонтрагентов          - ссылка номенклатуры контрагентов.
//
Функция НоваяНоменклатураКонтрагента(Знач Владелец = Неопределено, Знач Идентификатор = Неопределено) Экспорт
	
	НоменклатураКонтрагента = Новый Структура;
	НоменклатураКонтрагента.Вставить("Владелец"            , Владелец);
	НоменклатураКонтрагента.Вставить("Идентификатор"       , ?(ЗначениеЗаполнено(Идентификатор), Идентификатор, ""));
	НоменклатураКонтрагента.Вставить("Наименование"        , "");
	НоменклатураКонтрагента.Вставить("Характеристика"      , "");
	НоменклатураКонтрагента.Вставить("НаименованиеУпаковки", "");
	НоменклатураКонтрагента.Вставить("ЕдиницаИзмерения"    , "");
	НоменклатураКонтрагента.Вставить("ЕдиницаИзмеренияКод" , "");
	НоменклатураКонтрагента.Вставить("Артикул"             , "");
	НоменклатураКонтрагента.Вставить("СтавкаНДС"           , "");
	НоменклатураКонтрагента.Вставить("ШтрихкодКомбинации"                , "");
	НоменклатураКонтрагента.Вставить("ШтрихкодыНоменклатуры"             , "");
	НоменклатураКонтрагента.Вставить("ИдентификаторНоменклатурыСервиса"  , "");
	НоменклатураКонтрагента.Вставить("ИдентификаторХарактеристикиСервиса", "");
	НоменклатураКонтрагента.Вставить("ИдентификаторНоменклатуры"         , "");
	НоменклатураКонтрагента.Вставить("ИдентификаторХарактеристики"       , "");
	НоменклатураКонтрагента.Вставить("ИдентификаторУпаковки"             , "");
	НоменклатураКонтрагента.Вставить("ИсторияИдентификаторов"            , Новый Массив);
	НоменклатураКонтрагента.Вставить("КоличествоУпаковок"                , 0);
	НоменклатураКонтрагента.Вставить("КоличествоБазовойЕдиницыИзмерения" , 0);
	НоменклатураКонтрагента.Вставить("НоменклатураКонтрагента"           , 
		ПредопределенноеЗначение("Справочник.НоменклатураКонтрагентов.ПустаяСсылка"));
	НоменклатураКонтрагента.Вставить("ВариантУказанияНоменклатуры"       ,
		ПредопределенноеЗначение("Перечисление.ВариантыУказанияНоменклатурыБЭД.НоменклатураКонтрагента"));

	Возврат НоменклатураКонтрагента;

КонецФункции

// Возвращает структуру свойств номенклатуры ИБ.
//
// Возвращаемое значение:
//  Структура - свойства номенклатуры информационной базы:
//   * ИспользоватьХарактеристики           - Булево - признак использования характеристик. По умолчанию Ложь.
//   * ИспользоватьУпаковки                 - Булево - признак использования упаковок. По умолчанию Ложь.
//   * ОбязательноеЗаполнениеХарактеристики - Булево - признак обязательного заполнения характеристик при их использовании. По умолчанию Истина.
//   * ЕдиницаИзмеренияПоУмолчанию          - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - базовая единица измерения номенклатуры,
//                                                                                      которую необходимо выводить в подсказке
//                                                                                      ввода упаковки/единицы измерения.
//
Функция НовыеСвойстваНоменклатурыИБ() Экспорт
	
	СвойствоНоменклатуры = Новый Структура;
	СвойствоНоменклатуры.Вставить("ИспользоватьХарактеристики"          , Ложь);
	СвойствоНоменклатуры.Вставить("ИспользоватьУпаковки"                , Ложь);
	СвойствоНоменклатуры.Вставить("ОбязательноеЗаполнениеХарактеристики", Истина);
	СвойствоНоменклатуры.Вставить("ЕдиницаИзмеренияПоУмолчанию"         , Неопределено);
	
	Возврат СвойствоНоменклатуры;
	
КонецФункции

// Возвращает значение варианта указания номенклатуры в терминах организации.
//
// Возвращаемое значение:
//  Перечисление.ВариантыУказанияНоменклатурыБЭД - наша номенклатура. Номенклатура в терминах покупателя.
//
Функция ВариантУказанияНоменклатураОрганизации() Экспорт
	
	Возврат ПредопределенноеЗначение("Перечисление.ВариантыУказанияНоменклатурыБЭД.НашаНоменклатура");
	
КонецФункции

// Возвращает значение варианта указания номенклатуры в терминах контрагента.
//
// Возвращаемое значение:
//  Перечисление.ВариантыУказанияНоменклатурыБЭД - номенклатура контрагента. Номенклатура в терминах поставщика.
//
Функция ВариантУказанияНоменклатураКонтрагента() Экспорт
	
	Возврат  ПредопределенноеЗначение("Перечисление.ВариантыУказанияНоменклатурыБЭД.НоменклатураКонтрагента");
	
КонецФункции

// Возвращает структуру свойств упаковки.
//
// Возвращаемое значение:
//  Структура - содержит:
//   * НаименованиеУпаковки                - Строка - признак использования характеристик. По умолчанию Ложь.
//   * НаименованиеБазовойЕдиницыИзмерения - Строка - признак использования упаковок. По умолчанию Ложь.
//   * КодОКЕИБазовойЕдиницыИзмерения      - Строка - признак обязательного заполнения характеристик при их использовании. По умолчанию Истина.
//   * КоличествоБазовойЕдиницыИзмерения   - Число  - при наличии упаковки указывается коэффициент пересчета 1 упаковки на базовую единицу измерения.
//                                                    В случае разупаковки указывается 1.
//   * КоличествоУпаковок                  - Число  - при наличии упаковки указывается 1. В случае разупаковки указывается коэффициент пересчета
//                                                    базовой единицы измерения на упаковку.
//
Функция НовыеСвойстваУпаковки() Экспорт
	
	СвойствоНоменклатуры = Новый Структура;
	СвойствоНоменклатуры.Вставить("НаименованиеУпаковки"               , "");
	СвойствоНоменклатуры.Вставить("НаименованиеБазовойЕдиницыИзмерения", "");
	СвойствоНоменклатуры.Вставить("КодОКЕИБазовойЕдиницыИзмерения"     , "");
	СвойствоНоменклатуры.Вставить("КоличествоБазовойЕдиницыИзмерения"  , 0);
	СвойствоНоменклатуры.Вставить("КоличествоУпаковок"                 , 0);
		
	Возврат СвойствоНоменклатуры;
	
КонецФункции

#КонецОбласти

