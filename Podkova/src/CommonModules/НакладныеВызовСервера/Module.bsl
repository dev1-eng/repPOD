
////////////////////////////////////////////////////////////////////////////////
// Модуль "НакладныеВызовСервера", содержит процедуры и функции для
// оформления накладных.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Для переданной группировки возвращает параметры для открытия формы оформляемой по заказам накладной.
// см. НакладныеКлиент.ОткрытьФормуСозданныхДокументов.
//
// Параметры:
//  ГруппировкиРаспоряжений				 - ГруппировкиРаспоряжений - Массив - содержит массивы групп распоряжений по которым необходимо создать документ
//  															см. НакладныеКлиент.ДанныеДляОформленияПоЗаказам.
//  ПараметрыФормыСозданныхДокументов	 - Структура - параметры для ОбщаяФорма.ФормаСозданныхДокументов.
//  СписокОшибок						 - Структура - список ошибок.
//  ПолеОшибки							 - Строка - значение, которое задается в свойстве Поле объекта СообщениеПользователю.
//
// Возвращаемое значение:
//  Структура - Структура с полями:
//  		ИмяФормы	 - Строка
//  		Параметры	 - Структура.
//
Функция ОформитьНакладныеПоЗаказам(ГруппировкиРаспоряжений, ПараметрыФормыСозданныхДокументов, СписокОшибок, ПолеОшибки) Экспорт
	
	ПараметрыСозданныхДокументов = Новый Структура("ИмяФормы, Параметры");
	
	НакладныеСервер.СгруппироватьДокументыПоКлючевымПолямВКоллекции(ГруппировкиРаспоряжений, "МассивЗаказов", "КлючевыеПоляШапки");
	
	Если ГруппировкиРаспоряжений.Количество() = 1 И ГруппировкиРаспоряжений[0].МассивЗаказов.Количество() = 1 Тогда
		
		МенеджерНакладной = Документы[ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента];
		
		ПараметрыЗаполнения = МенеджерНакладной.ПараметрыЗаполненияДокумента();
		ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, ГруппировкиРаспоряжений[0].ПоляЗаполнения);
		РеквизитыШапки = МенеджерНакладной.ДанныеЗаполненияНакладной(ГруппировкиРаспоряжений[0].МассивЗаказов[0], ГруппировкиРаспоряжений[0].ПоляЗаполнения);
		МенеджерНакладной.ИнициализироватьПараметрыЗаполнения(ПараметрыЗаполнения, РеквизитыШапки, ГруппировкиРаспоряжений[0].МассивЗаказов[0]);
		
		ПараметрыСозданныхДокументов.ИмяФормы = "Документ." + ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента + ".ФормаОбъекта";
		ПараметрыСозданныхДокументов.Параметры = Новый Структура("Основание", ПараметрыЗаполнения);
		
	Иначе
		
		СозданныеДокументы = НакладныеСервер.СформироватьДокументыПоРаспоряжениям(ГруппировкиРаспоряжений, СписокОшибок, ПолеОшибки);
		
		Владелец = Пользователи.АвторизованныйПользователь();
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Владелец, СозданныеДокументы, ПараметрыФормыСозданныхДокументов.КлючДанных);
		УстановитьПривилегированныйРежим(Ложь);
		
		ПараметрыСозданныхДокументов.ИмяФормы = "ОбщаяФорма.ФормаСозданныхДокументов";
		ПараметрыСозданныхДокументов.Параметры = ПараметрыФормыСозданныхДокументов;
		ПараметрыСозданныхДокументов.Вставить("КоличествоСозданныхДокументов", СозданныеДокументы.Количество());
		
	КонецЕсли;
	
	Возврат ПараметрыСозданныхДокументов;
	
КонецФункции

// Для переданной группировки возвращает параметры для открытия формы переоформляемой по ордерам накладной.
// см. НакладныеКлиент.ОткрытьФормуСозданныхДокументов.
//
// Параметры:
//  ГруппировкиРаспоряжений				 - ГруппировкиРаспоряжений - Массив - содержит массивы групп распоряжений по которым необходимо создать документ
//  															см. НакладныеКлиент.ДанныеДляОформленияПоОрдерам.
//  ПараметрыФормыСозданныхДокументов	 - Структура - параметры для ОбщаяФорма.ФормаСозданныхДокументов.
//  СписокОшибок						 - Структура - список ошибок.
//  ПолеОшибки							 - Строка - значение, которое задается в свойстве Поле объекта СообщениеПользователю.
//
// Возвращаемое значение:
//  Структура - Структура с полями:
//  		ИмяФормы	 - Строка
//  		Параметры	 - Структура.
//
Функция ОформитьНакладныеПоОрдерам(ГруппировкиРаспоряжений, ПараметрыФормыСозданныхДокументов, СписокОшибок, ПолеОшибки) Экспорт
	
	ПараметрыСозданныхДокументов = Новый Структура("ИмяФормы, Параметры");
	
	Если ГруппировкиРаспоряжений.Количество() = 1 И ГруппировкиРаспоряжений[0].ЭтоНакладная Тогда
		
		ЗначенияЗаполнения = Новый Структура(
			"ЗаполнятьПоОрдеру, МассивЗаказов, ОтборПоТоварам", Истина, ГруппировкиРаспоряжений[0].МассивЗаказов);
		ГруппировкиРаспоряжений[0].ПоляЗаполнения.Свойство("ОтборПоТоварам", ЗначенияЗаполнения.ОтборПоТоварам);
		
		ПараметрыСозданныхДокументов.ИмяФормы = "Документ." + ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента + ".ФормаОбъекта";
		ПараметрыСозданныхДокументов.Параметры = Новый Структура("Ключ, ЗначенияЗаполнения",
			ГруппировкиРаспоряжений[0].МассивЗаказов[0], ЗначенияЗаполнения);
		
		Возврат ПараметрыСозданныхДокументов;
		
	КонецЕсли;
	
	НакладныеСервер.СгруппироватьДокументыПоКлючевымПолямВКоллекции(ГруппировкиРаспоряжений, "МассивЗаказов", "КлючевыеПоляШапки");
	
	Если ГруппировкиРаспоряжений.Количество() = 1 И ГруппировкиРаспоряжений[0].МассивЗаказов.Количество() = 1 Тогда
		
		МенеджерНакладной = Документы[ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента];
		
		Если ГруппировкиРаспоряжений[0].ЕстьНакладные Тогда
			
			РеквизитыШапки = МенеджерНакладной.ДанныеЗаполненияНакладной(ГруппировкиРаспоряжений[0].МассивЗаказов[0], ГруппировкиРаспоряжений[0].ПоляЗаполнения);
			
			НастройкиФормы = НакладныеСервер.НастройкиФормыПереоформленияНакладных();
			НастройкиФормы.Заголовок = ГруппировкиРаспоряжений[0].ЗаголовокФормыПереоформления;
			НастройкиФормы.ИмяФормыНакладной = "Документ." + ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента + ".ФормаОбъекта";
			НастройкиФормы.НакладнаяНаПриемку = ГруппировкиРаспоряжений[0].НакладнаяНаПриемку;
			НастройкиФормы.НакладнаяНаОтгрузку = ГруппировкиРаспоряжений[0].НакладнаяНаОтгрузку;
			
			ПараметрыСозданныхДокументов.ИмяФормы = "ОбщаяФорма.ПереоформлениеНакладныхПоРаспоряжениям";
			ПараметрыСозданныхДокументов.Параметры = Новый Структура("НастройкиФормы, Заказы, РеквизитыШапки, Склад",
				НастройкиФормы, ГруппировкиРаспоряжений[0].МассивЗаказов[0], РеквизитыШапки, ГруппировкиРаспоряжений[0].Склад);
			
		Иначе
			
			ПараметрыЗаполнения = МенеджерНакладной.ПараметрыЗаполненияДокумента();
			ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, ГруппировкиРаспоряжений[0].ПоляЗаполнения);
			РеквизитыШапки = МенеджерНакладной.ДанныеЗаполненияНакладной(ГруппировкиРаспоряжений[0].МассивЗаказов[0], ГруппировкиРаспоряжений[0].ПоляЗаполнения);
			МенеджерНакладной.ИнициализироватьПараметрыЗаполнения(ПараметрыЗаполнения, РеквизитыШапки, ГруппировкиРаспоряжений[0].МассивЗаказов[0]);
			
			ПараметрыСозданныхДокументов.ИмяФормы = "Документ." + ГруппировкиРаспоряжений[0].ИмяОформляемогоДокумента + ".ФормаОбъекта";
			ПараметрыСозданныхДокументов.Параметры = Новый Структура("Основание", ПараметрыЗаполнения);
			
		КонецЕсли;
		
	Иначе
		
		СозданныеДокументы = НакладныеСервер.СформироватьДокументыПоРаспоряжениям(ГруппировкиРаспоряжений, СписокОшибок, ПолеОшибки);
		
		Владелец = Пользователи.АвторизованныйПользователь();
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Владелец, СозданныеДокументы, ПараметрыФормыСозданныхДокументов.КлючДанных);
		УстановитьПривилегированныйРежим(Ложь);
		
		ПараметрыСозданныхДокументов.ИмяФормы = "ОбщаяФорма.ФормаСозданныхДокументов";
		ПараметрыСозданныхДокументов.Параметры = ПараметрыФормыСозданныхДокументов;
		ПараметрыСозданныхДокументов.Вставить("КоличествоСозданныхДокументов", СозданныеДокументы.Количество());
		
	КонецЕсли;
	
	Возврат ПараметрыСозданныхДокументов;
	
КонецФункции

#КонецОбласти