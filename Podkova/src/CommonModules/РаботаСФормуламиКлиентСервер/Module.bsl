
#Область ПрограммныйИнтерфейс

// Получает текст операнда для вставки в формулу.
//
// Параметры:
//  Операнд - Строка - имя операнда.
//
// Возвращаемое значение:
//  Строка - Текст операнда для вставки.
//
Функция ПолучитьТекстОперандаДляВставки(Операнд) Экспорт
	
	Возврат "[" + Операнд + "]";
	
КонецФункции // ПолучитьТекстОперандаДляВставки()

// Извлекает операнды из текстовой формулы
//
// Параметры:
//  Формула - Строка - текст формулы.
//
// Возвращаемое значение:
//  Массив - Операнды из текстовой формулы.
//
Функция ОперандыТекстовойФормулы(Формула) Экспорт
	
	МассивОперандов = Новый Массив();
	
	ТекстФормулы = СокрЛП(Формула);
	Если СтрЧислоВхождений(ТекстФормулы, "[") <> СтрЧислоВхождений(ТекстФормулы, "]") Тогда
		ЕстьОперанды = Ложь;
	Иначе
		ЕстьОперанды = Истина;
	КонецЕсли;
	
	Пока ЕстьОперанды = Истина Цикл
		НачалоОперанда = СтрНайти(ТекстФормулы, "[");
		КонецОперанда = СтрНайти(ТекстФормулы, "]");
		
		Если НачалоОперанда = 0
			Или КонецОперанда = 0
			Или НачалоОперанда > КонецОперанда Тогда
			ЕстьОперанды = Ложь;
			Прервать;
			
		КонецЕсли;
		
		ИмяОперанда = Сред(ТекстФормулы, НачалоОперанда + 1, КонецОперанда - НачалоОперанда - 1);
		МассивОперандов.Добавить(ИмяОперанда);
		ТекстФормулы = СтрЗаменить(ТекстФормулы, "[" + ИмяОперанда + "]", "");
		КонецПрошлогоОперанда = КонецОперанда;
		
	КонецЦикла;
	
	Если (МассивОперандов.Найти("ПланируемыеКонечныеОстатки") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицит") <> Неопределено)
		И МассивОперандов.Найти("ПланируемыеНачальныеОстатки") = Неопределено Тогда
		
		МассивОперандов.Добавить("ПланируемыеНачальныеОстатки");
		
	КонецЕсли;
	
	Если (МассивОперандов.Найти("ПланируемыеКонечныеОстаткиСОтбором") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицитСОтбором") <> Неопределено)
		И МассивОперандов.Найти("ПланируемыеНачальныеОстаткиСОтбором") = Неопределено Тогда
		
		МассивОперандов.Добавить("ПланируемыеНачальныеОстаткиСОтбором");
		
	КонецЕсли;
	
	Если (МассивОперандов.Найти("ПланируемыеНачальныеОстатки") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыеКонечныеОстатки") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицит") <> Неопределено)
		Или МассивОперандов.Найти("ПланыПрихода") <> Неопределено Тогда
		
		Если МассивОперандов.Найти("ПланыЗакупок") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыЗакупок");
		КонецЕсли;
		
		
		Если МассивОперандов.Найти("ПланыСборкиКомплекты") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыСборкиКомплекты");
		КонецЕсли;
		
		Если МассивОперандов.Найти("ПланыРазборкиКомплектующие") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыРазборкиКомплектующие");
		КонецЕсли;
		
	КонецЕсли;
	
	Если (МассивОперандов.Найти("ПланируемыеНачальныеОстатки") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыеКонечныеОстатки") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицит") <> Неопределено)
		Или МассивОперандов.Найти("ПланыРасхода") <> Неопределено Тогда
		
		Если МассивОперандов.Найти("ПланыПродаж") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыПродаж");
		КонецЕсли;
		
		
		Если МассивОперандов.Найти("ПланыРазборкиКомплекты") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыРазборкиКомплекты");
		КонецЕсли;
		
		Если МассивОперандов.Найти("ПланыСборкиКомплектующие") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыСборкиКомплектующие");
		КонецЕсли;
		
	КонецЕсли;
	
	Если (МассивОперандов.Найти("ПланируемыеНачальныеОстаткиСОтбором") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыеКонечныеОстаткиСОтбором") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицитСОтбором") <> Неопределено)
		Или МассивОперандов.Найти("ПланыПриходаСОтбором") <> Неопределено Тогда
		
		Если МассивОперандов.Найти("ПланыЗакупокСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыЗакупокСОтбором");
		КонецЕсли;
		
		
		Если МассивОперандов.Найти("ПланыСборкиКомплектыСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыСборкиКомплектыСОтбором");
		КонецЕсли;
		
		Если МассивОперандов.Найти("ПланыРазборкиКомплектующиеСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыРазборкиКомплектующиеСОтбором");
		КонецЕсли;
		
	КонецЕсли;
	
	Если (МассивОперандов.Найти("ПланируемыеНачальныеОстаткиСОтбором") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыеКонечныеОстаткиСОтбором") <> Неопределено
		Или МассивОперандов.Найти("ПланируемыйКонечныйДефицитСОтбором") <> Неопределено)
		Или МассивОперандов.Найти("ПланыРасходаСОтбором") <> Неопределено Тогда
		
		Если МассивОперандов.Найти("ПланыПродажСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыПродажСОтбором");
		КонецЕсли;
		
		
		Если МассивОперандов.Найти("ПланыРазборкиКомплектыСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыРазборкиКомплектыСОтбором");
		КонецЕсли;
		
		Если МассивОперандов.Найти("ПланыСборкиКомплектующиеСОтбором") = Неопределено Тогда
			МассивОперандов.Добавить("ПланыСборкиКомплектующиеСОтбором");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивОперандов
	
КонецФункции // ОперандыТекстовойФормулы()

// Получает массив доступных операндов из дерева
//
// Параметры:
//  ДеревоОперандов  - ДанныеФормыКоллекция - Дерево, в котором два уровня, операнд получается посредством склеивания
//                                            идентификаторов строк верхнего и нижнего уровня.
//
// Возвращаемое значение:
//  Массив - Доступные операнды
//
Функция МассивОперандовДляДерева(ДеревоОперандов, ВыбиратьОперандПлана) Экспорт

	МассивОперандов = Новый Массив();
	
	Для Каждого СтрокаВерхнегоУровня Из ДеревоОперандов.ПолучитьЭлементы() Цикл
		
		Если ВыбиратьОперандПлана Тогда
			МассивОперандов.Добавить(СтрокаВерхнегоУровня.Идентификатор);
		КонецЕсли;
		
		Для Каждого СтрокаВторогоУровня Из СтрокаВерхнегоУровня.ПолучитьЭлементы() Цикл
			
			Если ЗначениеЗаполнено(СтрокаВерхнегоУровня.Идентификатор) Тогда
				
				МассивОперандов.Добавить(?(ВыбиратьОперандПлана, "", СтрокаВерхнегоУровня.Идентификатор +".")
											+ СтрокаВторогоУровня.Идентификатор);
			Иначе
				
				МассивОперандов.Добавить(СтрокаВторогоУровня.Идентификатор);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;                                                                           
	
	Возврат МассивОперандов;

КонецФункции

#КонецОбласти
