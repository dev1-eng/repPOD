////////////////////////////////////////////////////////////////////////////////////////
// СопоставлениеНоменклатурыКонтрагентовСлужебныйВызовСервера: 
// механизм сопоставления номенклатуры контрагентов с номенклатурой информационной базы.
//
////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// См. СопоставлениеНоменклатурыКонтрагентовКлиент.СформироватьСписокВыбораНоменклатурыКонтрагента
Функция СформироватьСписокВыбораНоменклатурыКонтрагента(Знач ВладелецНоменклатуры, Знач Номенклатура, Знач Характеристика, Знач Упаковка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВладелецНоменклатуры", ВладелецНоменклатуры);
	Запрос.УстановитьПараметр("Номенклатура"        , Номенклатура);
	Запрос.УстановитьПараметр("Характеристика"      , Характеристика);
	Запрос.УстановитьПараметр("Упаковка"            , Упаковка);

	СопоставлениеНоменклатурыКонтрагентовПереопределяемый.ТекстЗапросаСпискаВыбораНоменклатурыКонтрагента(Запрос);
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НоменклатураКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.ВладелецНоменклатуры = &ВладелецНоменклатуры
		|	И НоменклатураКонтрагентов.Номенклатура = &Номенклатура
		|	И НоменклатураКонтрагентов.Характеристика = &Характеристика
		|	И НоменклатураКонтрагентов.Упаковка = &Упаковка
		|	И НЕ НоменклатураКонтрагентов.ПометкаУдаления
		|	И НЕ НоменклатураКонтрагентов.Недействителен";
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	МассивВыбора = Новый Массив();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивВыбора.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивВыбора;
	
КонецФункции

// См. СопоставлениеНоменклатурыКонтрагентовСлужебный.ПроверкаСопоставленияНоменклатурыКонтрагентовВДокументах
Функция ПроверкаСопоставленияНоменклатурыКонтрагентовВДокументах(Знач НаборДокументов) Экспорт
	
	Возврат СопоставлениеНоменклатурыКонтрагентовСлужебный.ПроверкаСопоставленияНоменклатурыКонтрагентовВДокументах(НаборДокументов);
	
КонецФункции

Функция ПоследняяНастройкаВариантаУказанияНоменклатуры(Знач ДокументСсылка, Знач Контрагент, Знач Организация) Экспорт
	
	Возврат РегистрыСведений.ВариантыУказанияНоменклатурыВДокументахБЭД.ПоследняяНастройкаВариантаУказанияНоменклатуры(ДокументСсылка,
																														Контрагент,
																														Организация);
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗапуститьПерезаполнениеСловаряСопоставленияНоменклатурыВФоне(УникальныйИдентификатор, Знач ПараметрыПроцедуры) Экспорт
	
	ОтменитьВыполнениеЗадания(УникальныйИдентификатор);
	
	НаименованиеЗадания = НСтр("ru = 'Обмен с контрагентами. Перезаполнение словаря сопоставления номенклатуры.'");
	ИмяПроцедуры        = "СопоставлениеНоменклатурыКонтрагентовСлужебный.НачатьПерезаполнениеСловаряСопоставленияНоменклатуры";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);

КонецФункции

Процедура ОтменитьВыполнениеЗадания(Знач ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

#КонецОбласти
