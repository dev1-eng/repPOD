///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм расчета себестоимости
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОсновнойИнтерфейсМеханизма

// Запуск расчета себестоимости.
//
// Параметры:
//	ПараметрыЗапуска - Структура - содержит ключи:
//		Дата - Дата - период расчета себестоимости
//		МассивОрганизаций - СправочникСсылка.Организации - рассчитывать только по указанной организации;
//			также будут пересчитана себестоимость по организациям, связанным по схеме Интеркампани с указанной
//					- Массив - массив организаций, по которым надо рассчитать себестоимость, другие организации не рассчитываются
//		ПредварительныйРасчет - Булево - выполнять фактический или предварительный расчет;
//			предварительный расчет может выполняться
//				= регламентным заданием
//				= как подготовительный этап к распределению расходов на продукцию
//		РегламентноеЗадание - Булево - если Истина, значит вызвана из регламентного задания расчета предварительной себестоимости
//		МестоВызоваРасчета - Строка - необязательный, полное имя процедуры, вызвавшей расчет
//	ПараметрыРасчета - Структура - параметры расчета, сформированные в вызывающем механизме.
//	ПараметрыОтладки - Структура - предназначена для переопределения одноименных свойств структуры ПараметрыРасчета.
//		Подробнее см. пояснения в коде ИнициализироватьПараметрыРасчетаСебестоимости() к параметру ПараметрыОтладки.
//
Процедура РассчитатьВсе(ПараметрыЗапуска, ПараметрыРасчета = Неопределено, ПараметрыОтладки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыОтладки = Неопределено Тогда
		ПараметрыОтладки = Новый Структура; // для упрощения дальнейших обращений к этому свойству
	КонецЕсли;
	
	Если НЕ ПараметрыЗапуска.Свойство("ТолькоРасчетСебестоимости") Тогда
		// Запущено не из механизма расчета партий
		ПараметрыЗапуска.Вставить("ТолькоРасчетСебестоимости", (ПараметрыРасчета = Неопределено));
	КонецЕсли;
	
	// Проверим, закончено ли обновление ИБ
	Если ПараметрыЗапуска.ТолькоРасчетСебестоимости Тогда // при запуске из партионного учета версии 2.2 проверка уже выполнена там
		РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьБлокировкуДанныхПриОбновленииИБ(Истина, , ПараметрыОтладки);
	КонецЕсли;
	
	// Инициализируем параметры расчета
	ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	НомерГруппы = 0;
	
	// Выполним расчет себестоимости по каждой из групп связанных организаций
	Пока НомерГруппы < ПараметрыРасчета.ГруппыОрганизацийПоИнтеркампани.Количество() Цикл
		
		ПараметрыЗапускаРасчетаПоГруппеОрганизаций = Новый Структура(
			"ГруппаОрганизаций, МетодОценки",
			ПараметрыРасчета.ГруппыОрганизацийПоИнтеркампани[НомерГруппы],
			ПараметрыРасчета.МетодыОценкиПоГруппамОрганизаций[НомерГруппы]);
		
		РассчитатьСебестоимостьПоГруппеОрганизаций(ПараметрыЗапускаРасчетаПоГруппеОрганизаций, ПараметрыРасчета, ПараметрыОтладки);
		
		НомерГруппы = НомерГруппы + 1;
		
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВТПромежуточнаяСебестоимостьТоваров");
	
	// Записываем движения (в случае, если расчет себестоимости запущен самостоятельно, а не как этап расчета партий)
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаписатьСформированныеДвижения(
		ПараметрыРасчета,
		ПараметрыОтладки.ПротоколыРасчета);
	
КонецПроцедуры

// Обертка для запуска расчета - выполняет расчет в Попытке - Исключении
// Параметры аналогичны процедуре РассчитатьВсе()
//
// Параметры:
//	ПараметрыЗапуска - Структура - содержит ключи:
//		Дата - Дата - период расчета себестоимости
//		МассивОрганизаций - СправочникСсылка.Организации - рассчитывать только по указанной организации;
//			также будут пересчитана себестоимость по организациям, связанным по схеме Интеркампани с указанной
//					- Массив - массив организаций, по которым надо рассчитать себестоимость, другие организации не рассчитываются
//		ПредварительныйРасчет - Булево - выполнять фактический или предварительный расчет;
//			предварительный расчет может выполняться
//				= регламентным заданием
//				= как подготовительный этап к распределению расходов на продукцию
//		РегламентноеЗадание - Булево - если Истина, значит вызвана из регламентного задания расчета предварительной себестоимости
//		МестоВызоваРасчета - Строка - необязательный, полное имя процедуры, вызвавшей расчет
//	ПараметрыРасчета - Структура - параметры расчета, сформированные в вызывающем механизме.
//	ПараметрыОтладки - Структура - предназначена для переопределения одноименных свойств структуры ПараметрыРасчета.
//		Подробнее см. пояснения в коде ИнициализироватьПараметрыРасчетаСебестоимости()
//
// Возвращаемое значение:
//	Булево - признак успешного выполнения расчета.
//
Функция РассчитатьВсеВПопыткеИсключении(ПараметрыЗапуска, ПараметрыРасчета = Неопределено, ПараметрыОтладки = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	Попытка
		РассчитатьВсе(ПараметрыЗапуска,	ПараметрыРасчета, ПараметрыОтладки);
	Исключение
		
		Если ПараметрыРасчета = Неопределено Тогда
			ПараметрыРасчета = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьОсновныеПараметрыРасчета(
				ПараметрыЗапуска.Дата,
				ПараметрыЗапуска.МассивОрганизаций,
				Ложь,
				Ложь);
		КонецЕсли;
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбработатьИсключениеВызоваРассчитатьВсе(
			ПараметрыРасчета,
			ИнформацияОбОшибке,
			Отказ);
		
	КонецПопытки;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыВызываемыеИзРегламентныхЗаданий

// Обновления стоимости товаров регламентным заданием.
//
// Параметры:
//	Период - Дата - дата начала расчета.
//
Процедура ПредварительныйРасчетСебестоимости(Период = Неопределено) Экспорт
	
	Перем ПараметрыРасчета;
	Перем ПараметрыОтладки;
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.РасчетСебестоимости); // проверка возможности запуска задания
	
	Если РасчетСебестоимостиЛокализация.ПредварительныйРасчетСебестоимости(Период) Тогда
		Возврат; // Выполнен локализованный расчет
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Дата = ТекущаяДатаСеанса();
	Иначе
		Дата = Период;
	КонецЕсли;
	НачалоПериода = НачалоМесяца(Дата);
	КонецПериода  = КонецМесяца(Дата);
	
	// Инициализация параметров запуска
	МассивОрганизаций = РасчетСебестоимостиПрикладныеАлгоритмы.СвязиОрганизацийПоСхемеИнтеркампани(КонецПериода);
	
	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("Дата", 						  			  НачалоПериода);
	ПараметрыЗапуска.Вставить("МассивОрганизаций", 						  МассивОрганизаций);
	ПараметрыЗапуска.Вставить("ТолькоПредварительныйРасчетСебестоимости", Истина);
	ПараметрыЗапуска.Вставить("ЗапущеноРегламентнымЗаданием", 			  Истина);
	ПараметрыЗапуска.Вставить("МестоВызоваРасчета", 					  "РасчетСебестоимостиКорректировкаСтоимости.ПредварительныйРасчетСебестоимости");
	
	// Инициализация параметров отладки
	Отладка = Новый Структура("РасчетОдногоЭтапа", Истина);
	ПараметрыОтладки = Новый Структура("Отладка, ПротоколыРасчета", Отладка, Неопределено);
	
	// Инициализация параметров расчета
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	
	СтрокаСхемыРасчета = Новый Структура("Дата, Организации", НачалоПериода, МассивОрганизаций); 
	ПараметрыРасчета.Вставить("РегламентноеЗадание", Истина);
	РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, Истина);
	
	// Записываем сформированные движения и завершаем расчет периода
	ПараметрыРасчета.ЗапущенРасчетПартий = Ложь;
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Истина);
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаписатьСформированныеДвижения(
		ПараметрыРасчета,
		ПараметрыОтладки.ПротоколыРасчета);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область ИсправлениеОшибокВИсходныхДанных

Процедура ПроверкаНеактивныеЗаписиВРегистрахИсточниках(ПараметрыПроверки) Экспорт
	
	ВходящиеДанные = Новый Соответствие;
	
	ДополнительныеПараметры = ЗакрытиеМесяцаСервер.ДополнительныеПараметрыПроверки(ПараметрыПроверки);
	
	Если ДополнительныеПараметры.Свойство("Период") Тогда
		Период = ДополнительныеПараметры.Период;
	Иначе
		Период = Неопределено;
	КонецЕсли;
	
	РасчетСебестоимости.ВходящиеДанныеМеханизма(ВходящиеДанные);
	ВходящиеДанныеМеханизма(ВходящиеДанные);
	
	ШаблонЗапроса = "
	|%1
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""%2"" КАК ИмяРегистра,
	|	%3 КАК Организация,
	|	Т.Регистратор КАК Регистратор
	|%4
	|ИЗ
	|	%2 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ Т.Активность";
	
	ТекстЗапроса = "";
	
	Для Каждого КлючИЗначение Из ВходящиеДанные Цикл
		
		МетаданныеРегистра = КлючИЗначение.Ключ;
		
		Если НЕ Метаданные.РегистрыСведений.Содержит(МетаданныеРегистра)
		 И НЕ Метаданные.РегистрыНакопления.Содержит(МетаданныеРегистра) Тогда
			Продолжить;
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(МетаданныеРегистра)
		 И МетаданныеРегистра.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
			Продолжить;
		КонецЕсли;
			
		Если МетаданныеРегистра.Измерения.Найти("Организация") <> Неопределено Тогда
			ИмяПоляОрганизации = "Т.Организация";
		ИначеЕсли МетаданныеРегистра.Измерения.Найти("АналитикаУчетаПоПартнерам") <> Неопределено Тогда
			ИмяПоляОрганизации = "Т.АналитикаУчетаПоПартнерам.Организация";
		Иначе
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонЗапроса,
				?(ТекстЗапроса = "", "", "ОБЪЕДИНИТЬ ВСЕ"),
				МетаданныеРегистра.ПолноеИмя(),
				ИмяПоляОрганизации,
				?(ТекстЗапроса = "", "ПОМЕСТИТЬ ВТНеактивныеЗаписиРегистров", ""));
		
	КонецЦикла;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("Организация");
	СписокПолей.Добавить("Регистратор",		НСтр("ru='Документ'"));
	СписокПолей.Добавить("ИмяРегистра",		НСтр("ru='Имя регистра'"));
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемПроверки(
		"ВТНеактивныеЗаписиРегистров",
		НСтр("ru='Обнаружены неактивные записи регистров в движениях документов организации ""%1"" за период %2'"),
		СписокПолей,
		"Регистратор");
	
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемыВыполненияПроверки(
	 	ПараметрыПроверки,
		ПараметрыРегистрации,
		СокрЛП(ТекстЗапроса));
	
КонецПроцедуры

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ОчисткаДвиженийПриОтключенномУчетеСебестоимости(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОчисткаДвиженийПриОтключенномУчетеСебестоимости,
		Истина, Ложь, Ложь);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить     = НСтр("ru='Очистить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Использование_ОчисткаДвиженийПриОтключенномУчетеСебестоимости");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.Формы.Форма.ПолноеИмя());
	
КонецПроцедуры

// Обработчики этапа.

// Процедура определяет необходимость выполнения этапа.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
//
Процедура Использование_ОчисткаДвиженийПриОтключенномУчетеСебестоимости(ПараметрыОбработчика) Экспорт
	
	КоличествоДокументов = Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.КоличествоРегистраторовСНеиспользуемымиДвижениями();
	
	Если КоличествоДокументов = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='При отключенном учете себестоимости отсутствуют документы с движениями по регистрам учета себестоимости.'"));
		
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При отключенном учете себестоимости найдены документы с движениями по регистрам учета себестоимости: %1'"),
			Формат(КоличествоДокументов, "ЧГ="));
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			ТекстСообщения,
			,
			,
			Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РасчетПартийИСебестоимости

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетПартийИСебестоимости(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеВыкупаТоваров);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОстатковТоваровКПередаче);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовКомитентамОСписании);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовПоКомиссииМеждуОрганизациями);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеПередачТоваров);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоРасчетамСПартнерамиИПереоценкаРасчетов);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru='Рассчитать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Использование_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеОформление = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Оформление_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетСебестоимостиКорректировкаСтоимости.Выполнить_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.РегистрыСведений.ПротоколыРасчетаПартийИСебестоимости.Формы.ФормаПросмотраПротоколов.ПолноеИмя());
	НоваяСтрока.ДействиеПодробнее.ОткрыватьВместоЖР = Истина;
	НоваяСтрока.ДействиеПодробнее.НеТребуетсяПриУспешномВыполнении = Истина;
	
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	ПериодРасчета    = ПараметрыРасчета.ПериодРегистрации;
	
	// Проверим ведение учета себестоимости - расчет возможен начиная с месяца, предшествующему началу учета (с момента ввода остатков).
	Если НЕ РасчетСебестоимостиПовтИсп.ВозможенРасчетСебестоимости(НачалоМесяца(ПериодРасчета)) Тогда
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru='Нет движений по регистрам себестоимости и прочих расходов.'"));
		Возврат;
	КонецЕсли;
	
	// Дополним связанными по Интеркампани организациями и добавим информационные сообщения.
	ПараметрыОбработчика.ДанныеЭтапа.МассивОрганизаций = РасчетСебестоимостиПрикладныеАлгоритмы.СвязиОрганизацийПоСхемеИнтеркампани(
		ПериодРасчета,
		ПараметрыРасчета.МассивОрганизаций);
	
	МассивОрганизаций = ПараметрыОбработчика.ДанныеЭтапа.МассивОрганизаций;
	МассивДополнительныеОрганизации = Новый Массив;
	
	Для Каждого ТекущаяОрганизация Из МассивОрганизаций Цикл
		Если ПараметрыРасчета.МассивОрганизаций.Найти(ТекущаяОрганизация) = Неопределено Тогда
			МассивДополнительныеОрганизации.Добавить(ТекущаяОрганизация);
		КонецЕсли;
	КонецЦикла;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, МассивОрганизаций.Количество());
	
	Если МассивДополнительныеОрганизации.Количество() > 0 Тогда
		
		ТекстДополнительныеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Также будет выполнен расчет для организаций, связанных по схеме Интеркампани: %1'"),
			РасчетСебестоимостиПрикладныеАлгоритмы.ПредставлениеОрганизаций(МассивДополнительныеОрганизации, ", "));
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			ТекстДополнительныеОрганизации,
			,
			,
			Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.ВажнаяИнформация);
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, МассивОрганизаций.Количество());
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьНеобходимостьВключенияНастройкиРаспределениеДопРасходовПоВыбывшимТоварам(ПараметрыРасчета) Тогда
		
		ТекстРекомендации = НСтр("ru='Обнаружены расходы, которые можно списать на выбытия прошлых периодов.
			|Рекомендуется включить настройку ""Распределение доп. расходов по выбывшим товарам"".'");
		
		ОписаниеДействия = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПанельАдминистрированияУТ.Формы.ФинансовыйРезультатИКонтроллинг.ПолноеИмя());
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			ТекстРекомендации,
			,
			ОписаниеДействия,
			Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.ПолезныйСовет);
		
	КонецЕсли;
	
	НачалоПериодаРасчета = Макс(
		РасчетСебестоимостиПрикладныеАлгоритмы.НачалоПериодаРасчета(ПериодРасчета, МассивОрганизаций),
		НачалоМесяца(НачалоМесяца(Константы.ДатаНачалаУчетаСебестоимости.Получить()) - 1));
	
	Если НачалоПериодаРасчета <= ПериодРасчета Тогда
		
		ПараметрыОбработчика.ДанныеЭтапа.ДатаНачалаРасчета = НачалоПериодаРасчета;
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Требуется пересчет начиная с периода %1.'"),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериодаРасчета)));
		Возврат; // партии не актуальны
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьНекорректныеДвиженияСебестоимости(ПериодРасчета, МассивОрганизаций) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru='Период еще не был пересчитан в партионном учете версии 2.2.'"));
		Возврат; // период не рассчитывался в партионном учете версии 2.2
		
	КонецЕсли;
	
	ОрганизацииСДвижениямиПоСебестоимости = РасчетСебестоимостиПрикладныеАлгоритмы.ОрганизацииСДвижениямиПоСебестоимости(
		ПериодРасчета,
		МассивОрганизаций);
		
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьОбязательныеКорректировкиОстатков(ПериодРасчета) Тогда
		ОрганизацииСОстаткамиПоСебестоимости = РасчетСебестоимостиПрикладныеАлгоритмы.ОрганизацииСОстаткамиПоСебестоимости(
			ПериодРасчета,
			МассивОрганизаций);
	Иначе
		ОрганизацииСОстаткамиПоСебестоимости = Неопределено;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ОрганизацииСДвижениямиПоСебестоимости.Количество());
	
	Если (ЗначениеЗаполнено(ОрганизацииСДвижениямиПоСебестоимости)
	 	И НЕ РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьДокументыРасчетаСебестоимости(ПериодРасчета, ОрганизацииСДвижениямиПоСебестоимости))
	 ИЛИ (ЗначениеЗаполнено(ОрганизацииСОстаткамиПоСебестоимости)
	 	И НЕ РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьДокументыРасчетаСебестоимости(НачалоМесяца(ПериодРасчета - 1), ОрганизацииСОстаткамиПоСебестоимости)) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru='Расчет себестоимости в данном периоде еще не выполнялся.'"));
		Возврат;
		
	КонецЕсли;
	
	РасчетСебестоимостиЛокализация.Использование_РасчетПартийИСебестоимости(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура Оформление_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	ПараметрыОбработчика.ДанныеЭтапа.ТекстПодробнее = "";
	
	Если ЗакрытиеМесяцаСервер.ТребуетсяПересчетЭтапа(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		
		ПротоколыРасчета = РегистрыСведений.ОшибкиРасчетаПартийИСебестоимости.ПолучитьПротоколыРасчета(
			ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации,
			ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		
		ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПротоколыРасчета.Количество());
		
		Если ЗначениеЗаполнено(ПротоколыРасчета) Тогда
			ПараметрыОбработчика.ДанныеЭтапа.ТекстПодробнее = ЗакрытиеМесяцаСервер.ТекстПодробнееПоУмолчанию();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Выполнить_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации,
		Неопределено,
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("Дата", 					    ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	ПараметрыЗапуска.Вставить("МассивОрганизаций",  	    ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	ПараметрыЗапуска.Вставить("МестоВызоваРасчета", 	    "РасчетСебестоимостиКорректировкаСтоимости.Выполнить_РасчетПартийИСебестоимости");
	ПараметрыЗапуска.Вставить("ВыполняетсяЗакрытиеМесяца",  Истина);
	ПараметрыЗапуска.Вставить("АвтоматическоеТестирование", ПараметрыОбработчика.АвтоматическоеТестирование);
	
	РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(ПараметрыЗапуска);
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_РасчетПартийИСебестоимости(ТаблицаПроверок) Экспорт
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПроверкиДляРегистрации(ТаблицаПроверок);
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация

// Перед началом расчета заполняет все необходимые параметры и инициализирует все структуры данных, используемые алгоритма расчета.
// Если расчет себестоимости вызывается не самостоятельно, а как этап расчета партий,
// то параметр ПараметрыРасчета уже будет инициализирован общими свойствами механизмов расчета.
//
// Внимание: если какая-то сущность используется более чем в одном этапе расчета, то ее стоит занести в ПараметрыРасчета.
//
Процедура ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ИнициализироватьОбщиеПараметрыРасчетаСебестоимости");
	
	// Создадим контейнер всех параметров, используемых механизмом расчета партий
	ПараметрыИнициализации = Новый Структура;
	ПараметрыИнициализации.Вставить("Дата",
		?(ПараметрыЗапуска.ТолькоРасчетСебестоимости И ПараметрыЗапуска.ПредварительныйРасчет,
			КонецДня(ПараметрыЗапуска.Дата), КонецМесяца(ПараметрыЗапуска.Дата)));
	ПараметрыИнициализации.Вставить("МассивОрганизаций",
		?(ТипЗнч(ПараметрыЗапуска.МассивОрганизаций) <> Тип("Массив") И ЗначениеЗаполнено(ПараметрыЗапуска.МассивОрганизаций),
			РасчетСебестоимостиПрикладныеАлгоритмы.СвязиОрганизацийПоСхемеИнтеркампани(НачалоМесяца(ПараметрыЗапуска.Дата), ПараметрыЗапуска.МассивОрганизаций),
			ПараметрыЗапуска.МассивОрганизаций));
	ПараметрыИнициализации.Вставить("ЗапущенРасчетПартий", Ложь);
	ПараметрыИнициализации.Вставить("ТолькоПредварительныйРасчетСебестоимости",
		?(ПараметрыЗапуска.ТолькоРасчетСебестоимости, ПараметрыЗапуска.ПредварительныйРасчет, Ложь));
	ПараметрыИнициализации.Вставить("ЗапущеноРегламентнымЗаданием", ПараметрыЗапуска.РегламентноеЗадание);
	
	Если ПараметрыЗапуска.Свойство("ИзмененоДокументов") Тогда
		// Штатный вызов из механизма партионного учета версии 2.1.
		ПараметрыИнициализации.Вставить("ИзмененоДокументов", ПараметрыЗапуска.ИзмененоДокументов);
	КонецЕсли;
	Если ПараметрыЗапуска.Свойство("ОписаниеЗамера") Тогда
		// Штатный вызов из механизма партионного учета версии 2.1.
		ПараметрыИнициализации.Вставить("ОписаниеЗамера", ПараметрыЗапуска.ОписаниеЗамера);
	КонецЕсли;
	
	Если ПараметрыЗапуска.Свойство("АвтоматическоеТестирование") И ПараметрыЗапуска.АвтоматическоеТестирование Тогда
		ПараметрыИнициализации.Вставить("АвтоматическоеТестирование", Истина); // вызывается при тестировании
	Иначе
		ПараметрыИнициализации.Вставить("АвтоматическоеТестирование", Ложь);
	КонецЕсли;
	
	Если ПараметрыЗапуска.ТолькоРасчетСебестоимости И ПараметрыЗапуска.Свойство("МестоВызоваРасчета") Тогда
		ПараметрыИнициализации.Вставить("МестоВызоваРасчета", ПараметрыЗапуска.МестоВызоваРасчета);
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьОбщиеПараметрыРасчета(
		ПараметрыИнициализации, ПараметрыРасчета, ПараметрыОтладки);
		
	РасчетСебестоимостиПрикладныеАлгоритмы.СкопироватьВременнуюТаблицу(
		ПараметрыРасчета,
		"ВТСтоимостьПартийТоваров",
		"ВТСтоимостьПартийТоваровПредыдущая");
		
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Истина);
		
		Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТСтоимостьПартийТоваров") > 0 Тогда
			
			// Предварительная стоимость была нужна для распределения доп. расходов в механизме расчета партий.
			// Теперь ее надо очистить - вместо нее будет сформирована фактическая стоимость.
			РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВТСтоимостьПартийТоваров");
			РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВТКэшСтоимостьТоваров");
			
			РасчетСебестоимостиПротоколРасчета.ОчисткаСформированныхДвижений(
				ПараметрыРасчета,
				Метаданные.РегистрыСведений.СтоимостьТоваров.Имя);
			
		КонецЕсли;
		
	Иначе
		
		НомерЗаданияДоРасчета = РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания();
		ПараметрыРасчета.Вставить("НомерЗаданияДоРасчета", НомерЗаданияДоРасчета - 1);
		
		// Запомним протокол расчета и вернем его в место вызова расчета
		ПараметрыОтладки.Вставить("ПротоколыРасчета", Новый Массив);
		
		// Инициализируем кэши регистров, обслуживаемых механизмом партионного учета
		// Непосредственное обновление кэшей будет выполнено в ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций
		Для Каждого КлючИЗначение Из ИспользуемыеКэшиРегистровПартионногоУчета() Цикл
			
			РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьДанныеРегистра(ПараметрыРасчета, КлючИЗначение.Ключ);
			
			ОписаниеРегистра = ПараметрыРасчета.Движения[КлючИЗначение.Ключ.Имя];
			ОписаниеРегистра.ИспользоватьВТКэш = Ложь; // расчетные движения брать из данных ИБ
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Общие параметры расчета себестоимости
	ПараметрыРасчета.Вставить("ПредварительныйРасчет", ПараметрыЗапуска.ПредварительныйРасчет);
	ПараметрыРасчета.Вставить("УчитыватьКорректировкиСтоимости",
		НЕ ПараметрыЗапуска.ПредварительныйРасчет
		ИЛИ НЕ ПараметрыЗапуска.Свойство("УчитыватьКорректировкиСтоимости")
		ИЛИ ПараметрыЗапуска.УчитыватьКорректировкиСтоимости);
	
КонецПроцедуры

Процедура ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций");
	
	РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		ПараметрыЗапуска.ГруппаОрганизаций.Количество());
	
	// Заменим основной отбор по организациям на текущую рассчитываемую группу.
	// При окончании расчета себестоимости основной отбор будет восстановлен из ПараметрыРасчета.КопияМассивОрганизаций
	ПараметрыРасчета.Вставить("МассивОрганизаций", ПараметрыЗапуска.ГруппаОрганизаций);
	ПараметрыРасчета.Вставить("МетодОценки", 	   ПараметрыЗапуска.МетодОценки); // общий метод оценки для этой группы организаций
	
	// Обновим временные таблицы с отборами по организациям.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьВременныеТаблицыДляОтборов(ПараметрыРасчета);
	
	// Обновим все расчетные кэши остатков и оборотов - в них должны быть только записи по рассчитываемой группе организаций
	// Если расчет вызван регламентной операцией, то считаем стоимость по средней (без учета партий)
	// Для этого в расчетном кэше оборотов и остатков будут "очищены" поля, относящиеся к партиям
	// Если расчет себестоимости вызван из механизма партионного учета, то по окончании расчета себестоимости
	// расчетные кэши будут восстановлены автоматически.
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
	
	ПараметрыРасчета.Вставить("КоличествоУзлов",     0);
	ПараметрыРасчета.Вставить("КоличествоУзловРегл", 0);
	
	// Добавим информацию о текущей итерации расчета себестоимости в протокол расчета
	СтрокаПротокола = НСтр("ru='Вид расчета себестоимости'") + ": "
		+ ?(ПараметрыРасчета.ПредварительныйРасчет, НСтр("ru='Предварительный'"), НСтр("ru='Фактический'"));
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		// Метод оценки не влияет на алгоритм расчета
		ПредставлениеМетодаОценки = НСтр("ru='Неважен'");
	ИначеЕсли ПараметрыРасчета.ПартионныйУчетВерсии22 И НЕ ЗначениеЗаполнено(ПараметрыРасчета.МетодОценки) Тогда
		// См. РасчетСебестоимостиПрикладныеАлгоритмы.ОпределитьМетодОценкиСтоимостиДляГруппыОрганизаций()
		ПредставлениеМетодаОценки = НСтр("ru='Не ""ФИФО (взвешенная оценка)""'");
	Иначе
		ПредставлениеМетодаОценки = ПараметрыРасчета.МетодОценки;
	КонецЕсли;
	
	СтрокаПротокола = НСтр("ru='Метод оценки стоимости'") + ": "
		+ РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ПредставлениеМетодаОценки);
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	СтрокаПротокола = НСтр("ru='Организации'") + ": "
		+ РасчетСебестоимостиПрикладныеАлгоритмы.ПредставлениеОрганизаций(ПараметрыРасчета.МассивОрганизаций, ", ");
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВТПромежуточнаяСебестоимостьТоваров");
	
КонецПроцедуры

#КонецОбласти

#Область ЭтапыРасчета

// Этап 9б и 17 (вызов механизма расчета себестоимости)
//
Процедура РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, ПредварительныйРасчет, УчитыватьКорректировкиСтоимости = Истина) Экспорт
	
	Если НЕ ПараметрыРасчета.ИспользоватьУчетСебестоимости И НЕ ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыРасчета.Отладка.НеВыполнятьРасчетСебестоимости Тогда
		
		РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РасчетСебестоимостиТоваров");
		
		РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Расчет себестоимости пропущен для целей отладки.'"));
		
		Возврат;
		
	КонецЕсли;
	
	// Протокол тут не пишем - он ведется внутри расчета себестоимости, по его этапам
	
	ПараметрыЗапускаРасчетаСебестоимости = Новый Структура;
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("Дата", 							 СтрокаСхемыРасчета.Дата);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("ПредварительныйРасчет", 			 ПредварительныйРасчет);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("МассивОрганизаций", 				 СтрокаСхемыРасчета.Организации);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("РегламентноеЗадание", 			 ПараметрыРасчета.РегламентноеЗадание);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("АвтоматическоеТестирование", 	 ПараметрыРасчета.АвтоматическоеТестирование);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("УчитыватьКорректировкиСтоимости", УчитыватьКорректировкиСтоимости);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("МестоВызоваРасчета", 			 "РасчетСебестоимости.РасчетСебестоимостиТоваров");
	
	СебестоимостьРассчитана = РассчитатьВсеВПопыткеИсключении(
		ПараметрыЗапускаРасчетаСебестоимости,
		ПараметрыРасчета,
		ПараметрыРасчета.ПараметрыОтладки);
	
	Если НЕ СебестоимостьРассчитана Тогда
		ВызватьИсключение РасчетСебестоимостиПрикладныеАлгоритмы.ТекстОшибкиНекорректногоЗавершенияРасчетаСебестоимости();
	КонецЕсли;
	
КонецПроцедуры

// Этап 0 - начало расчета
Процедура РассчитатьСебестоимостьПоГруппеОрганизаций(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки)
	
	ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	// Этап 1.1
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьКорректностьИсходныхДанныхДоРасчета(ПараметрыРасчета);
	КонецЕсли;
	
	Если РасчетСебестоимостиЛокализация.РассчитатьСебестоимость(ПараметрыРасчета) Тогда
		Возврат; // Выполнен локализованный расчет себестоимости
	КонецЕсли;
		
	// Этап сохранения движений документа "Распределение расходов будущих периодов" в кэш.
	// Формирует движения по регистрам:
	// - ПрочиеРасходы
	ПодготовкаДанныхДляПрочихРасходов(ПараметрыРасчета);
	
	// Этап 3.1
	// Формирует движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	РасчетСебестоимостиЛокализация.ВключитьИсключитьНДСВСтоимость(ПараметрыРасчета);
	
	// Этап 3.2
	// Формирует временные таблицы:
	// - ВТДопРасходов (для фактического расчета она пустая)
	РаспределитьРасходыНаСебестоимость(ПараметрыРасчета);

	// Этап 3.3
	// Формирует временные таблицы:
	// - ВТВозвраты (для фактического расчета она пустая)
	// - СторноОтчетыКомиссионера
	// Формирует движения по регистрам (если выполняется фактический расчет):
	// - СебестоимостьТоваров
	// - ВыручкаИСебестоимостьПродаж
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	СкорректироватьСтоимостьВозвратовПрошлыхПериодов(ПараметрыРасчета);

	
	// Этап 3.5
	// Формирует временные таблицы:
	// - ВтПередачиТоваров (для фактического расчета она пустая)
	СформироватьТаблицуПередачМеждуОрганизациями(ПараметрыРасчета);
	
	// Этап 3.6
	// Подготовка узлов корректировки для расчета управленческих стоимостей:
	//	- Стоимость;
	//	- СтоимостьБезНДС.
	//
	// Формирует временные таблицы:
	// - ВтУзлыКорректировки
	СформироватьУзлыКорректировкиСписанияСтоимости(ПараметрыРасчета);
	
	Если ПараметрыРасчета.КоличествоУзлов <> 0 Тогда
		
		// Этап 3.7
		// Формирует временные таблицы:
		// - ВтТаблицаРешений
		// - ВтПеремещенияСписания
		РассчитатьСтоимость(ПараметрыРасчета, Ложь);
		
		// Этап 3.8
		// Дополняет временные таблицы:
		// - ВТСтоимостьПартийТоваров
		// Формирует движения по регистрам:
		// - СтоимостьТоваров
		ЗарегистрироватьСтоимость(ПараметрыРасчета, Ложь);
		
	КонецЕсли;

	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтУзлыКорректировки, ВтПередачиТоваров, РаботыДляДавальца,
		|ВтСебестоимостьТоваровСвернуто, ВтСебестоимостьТоваровПеремещения,
		|ВтТаблицаРешений, ВтПеремещенияСписания, РезервыПоУзлам");
	
	// Этап 3.10
	// Формирует временные таблицы:
	// - ВтУзлыКорректировки
	СформироватьУзлыКорректировкиСписанияСтоимостиРегл(ПараметрыРасчета);
	
	Если ПараметрыРасчета.КоличествоУзловРегл <> 0 Тогда
		
		// Этап 3.11
		// Формирует временные таблицы:
		// - ВтТаблицаРешений
		// - ВтПеремещенияСписания
		РассчитатьСтоимость(ПараметрыРасчета, Истина);
		
		// Этап 3.12
		// Дополняет временные таблицы:
		// - ВТСтоимостьПартийТоваров
		// Формирует движения по регистрам:
		// - СтоимостьТоваров
		ЗарегистрироватьСтоимость(ПараметрыРасчета, Истина);

	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтСебестоимостьТоваровСвернуто, ВтСебестоимостьТоваровПеремещения"); 
	
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтУзлыКорректировки, ВТВозвраты, ВТДопРасходов, ЕстьВозвратныеОтходы,
		|РезервыПоУзлам, РаботыДляДавальца, ВтТаблицаРешений, ВтПеремещенияСписания");
		
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		
		// Этап 3.14
		// Формирует движения по регистрам:
		// - СебестоимостьТоваров
		// - ПрочиеРасходы
		// - ПрочиеДоходы
		// - ДвиженияНоменклатураДоходыРасходы
		// - ДвиженияНоменклатураНоменклатура
		// - ПрочиеАктивыПассивы
		СкорректироватьСтоимостьСписанияЗапасов(ПараметрыРасчета);
		
		
		// Этап 3.17
		// Формирует движения по регистрам:
		// - ВыручкаИСебестоимостьПродаж
		// - Закупки
		СкорректироватьСтоимостьПродаж(ПараметрыРасчета);
		
		// Этап 3.18
		// Формирует движения по регистрам:
		// - ВыручкаИСебестоимостьПродаж
		// - ПрочиеРасходы
		// - ДвиженияНоменклатураДоходыРасходы
		РасчетСебестоимостиЛокализация.ВключитьИсключитьНДСВСтоимостьПродаж(ПараметрыРасчета);
		
		Если ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьРегл > 0
		 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьУпр > 0
		 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыРегл > 0
		 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыУпр > 0 Тогда
			// Этап 3.19
			// Формирует движения по регистрам:
			// - СебестоимостьТоваров
			// - ПрочиеРасходы
			// - ПрочиеРасходыНезавершенногоПроизводства
			// - ДвиженияНоменклатураДоходыРасходы
			// - ДвиженияНоменклатураНоменклатура
			СписатьОшибкиОкругленияРасчетаСебестоимости(ПараметрыРасчета);
			
		КонецЕсли;
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "СторноОтчетыКомиссионера");
	
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
		
	Если ПараметрыРасчета.ФО.ФормироватьФинансовыйРезультат Тогда
		// Этап 4.1
		// Формирует движения по регистрам:
		// - ФинансовыеРезультаты
		РаспределитьВыручкуПоНаправлениямДеятельности(ПараметрыРасчета);
	КонецЕсли;
	
	// Этап 4.3
	// Формирует движения по регистрам:
	// - ПрочиеАктивыПассивы
	ОтразитьПрибылиИУбытки(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ФО.ФормироватьУправленческийБаланс Тогда
		// Этап 4.4
		// Формирует движения управленческого баланса
		ОтразитьВУправленческомБалансе(ПараметрыРасчета);
	КонецЕсли;
	
	// Этап Распределение расходов будущих периодов
	// Формирует движения по регистрам;
	// - ПрочиеРасходы
	РасчетСебестоимостиПостатейныеЗатраты.РаспределитьРасходыБудущихПериодов(ПараметрыРасчета);
	
КонецПроцедуры

// Этап сохранения движений документа "Распределение расходов будущих периодов" в кэш.
//
Процедура ПодготовкаДанныхДляПрочихРасходов(ПараметрыРасчета)

	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляПрочихРасходов");
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля =
		"Период, ВидДвижения, Организация, Подразделение, НаправлениеДеятельности, ХозяйственнаяОперация,
		|СтатьяРасходов, АналитикаРасходов, Сумма, СуммаБезНДС, СуммаРегл, СуммаУпр, ПостояннаяРазница, ВременнаяРазница,
		|КорПодразделение, КорНаправлениеДеятельности, КорСтатьяРасходов, КорАналитикаРасходов";
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Период,
	|	Т.ВидДвижения,
	|	Т.Регистратор КАК ДокументДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.Сумма,
	|	Т.СуммаБезНДС,
	|	Т.СуммаРегл,
	|	Т.СуммаУпр,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.КорПодразделение,
	|	Т.КорНаправлениеДеятельности,
	|	Т.КорСтатьяРасходов,
	|	Т.КорАналитикаРасходов,
	|	Т.ХозяйственнаяОперация
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеРасходовБудущихПериодов КАК Распределение
	|		ПО Распределение.Ссылка = Т.Регистратор 
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Распределение.Дата < &НачалоПериода
	|	И (Т.РасчетПартий ИЛИ Т.РасчетСебестоимости)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Добавим движение и заполним его свойства.
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, КопируемыеПоля);
	КонецЦикла;
	
КонецПроцедуры

// Этап 3.2
// Формирует временную таблицу ВТДопРасходов
//
Процедура РаспределитьРасходыНаСебестоимость(ПараметрыРасчета)

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РаспределитьРасходыНаСебестоимость");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда 
		
		ТаблицаДопРасходов = ТаблицаРаспределенияРасходовНаСебестоимостьТоваров(ПараметрыРасчета);
		
		ТаблицаДопРасходов.Колонки.Удалить("Подразделение");
		ТаблицаДопРасходов.Колонки.Удалить("СтатьяРасходовСписания");
		ТаблицаДопРасходов.Колонки.Удалить("АналитикаРасходов");
		
		Запрос.УстановитьПараметр("ТаблицаДопРасходов", ТаблицаДопРасходов);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Таблица.РазделУчета КАК РазделУчета,
		|	Таблица.ВидЗапасов                 КАК ВидЗапасов,
		|	Таблица.Организация                КАК Организация,
		|	Таблица.ДопРасходы           	   КАК ДопРасходы,
		|	Таблица.ДопРасходыБезНДС     	   КАК ДопРасходыБезНДС,
		|	Таблица.ДопРасходыРегл             КАК ДопРасходыРегл,
		|	Таблица.ДопРасходыУпр              КАК ДопРасходыУпр
		|ПОМЕСТИТЬ ВТДопРасходов
		|ИЗ
		|	&ТаблицаДопРасходов КАК Таблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ДопРасходыУпр
		|ПОМЕСТИТЬ ВТДопРасходов
		|";
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Этап 3.3
// Выполняет корректировку стоимости возвратов от клиента прошлых периодов
//
Процедура СкорректироватьСтоимостьВозвратовПрошлыхПериодов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьВозвратовПрошлыхПериодов");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	СУММА(ДД.Количество) КАК Количество,
	|	МАКСИМУМ(Стоимости.Период) КАК Период
	|ПОМЕСТИТЬ СторноОтчетыКомиссионера
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК Стоимости
	|		ПО Стоимости.Период < &НачалоПериода
	|		И Стоимости.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|		И Стоимости.РазделУчета = ДД.РазделУчета
	|		И Стоимости.ВидЗапасов = ДД.ВидЗапасов
	|		И Стоимости.Организация = ДД.АналитикаУчетаПоПартнерам.Организация
	|ГДЕ
	|	ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|СГРУППИРОВАТЬ ПО
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.АналитикаУчетаПоПартнерам.Организация
	|ИМЕЮЩИЕ
	|	СУММА(ДД.Количество) < 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.ДокументИсточник КАК Ссылка
	|ПОМЕСТИТЬ ВтРеализацииПрошлыхПериодов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Регистратор                         КАК Ссылка,
	|	Себестоимость.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                         КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                          КАК ВидЗапасов,
	|	Себестоимость.Организация               		  КАК Организация,
	|	Себестоимость.Партия                          	  КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета           КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ Себестоимость.Период < &ДатаПереходаНаПартионныйУчетВерсии22
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|
	|	СУММА(Себестоимость.Количество)                   КАК Количество,
	|	СУММА(Себестоимость.Стоимость)                    КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)              КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)        КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.Трудозатраты)       		  КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)    КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС)  КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)    КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС)  КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(Себестоимость.СтоимостьРегл)                КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)    КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.ПостояннаяРазница)            КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница)             КАК ВременнаяРазница,
	|	СУММА(Себестоимость.ДопРасходыРегл)               КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл)             КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)    КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)    КАК ПостатейныеПеременныеРегл,
	|	СУММА(Себестоимость.СтоимостьУпр)    			  КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр)    			  КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр)    		  КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)     КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)     КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВтСуммыРеализацийПрошлыхПериодов
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|		ПО Продажи.Ссылка = Себестоимость.Регистратор
	|ГДЕ
	|	Себестоимость.Период < &НачалоПериода
	|	И Себестоимость.Организация В(&МассивОрганизаций)
	|	И Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Себестоимость.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Регистратор,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ Себестоимость.Период < &ДатаПереходаНаПартионныйУчетВерсии22
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Себестоимость.Количество) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьПродаж.ДокументДвижения                  КАК Ссылка,
	|	СебестоимостьПродаж.АналитикаУчетаНоменклатуры        КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьПродаж.РазделУчета                       КАК РазделУчета,
	|	СебестоимостьПродаж.ВидЗапасов                        КАК ВидЗапасов,
	|	СебестоимостьПродаж.Организация               		  КАК Организация,
	|	СебестоимостьПродаж.Партия                            КАК Партия,
	|	СебестоимостьПродаж.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	СебестоимостьПродаж.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	СебестоимостьПродаж.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|
	|	СУММА(СебестоимостьПродаж.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(СебестоимостьПродаж.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(СебестоимостьПродаж.ДопРасходыРегл)             КАК ДопРасходыРегл,
	|	СУММА(СебестоимостьПродаж.ДопРасходыУпр)    		  КАК ДопРасходыУпр
	|
	|ПОМЕСТИТЬ ВтСуммыДопРасходовПрошлыхПериодов
	|ИЗ (
	|	ВЫБРАТЬ
	|		СебестоимостьПродаж.ДокументДвижения,
	|		СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|		СебестоимостьПродаж.РазделУчета,
	|		СебестоимостьПродаж.ВидЗапасов,
	|		АналитикаПартнеров.Организация,
	|		СебестоимостьПродаж.Партия,
	|		СебестоимостьПродаж.АналитикаУчетаПартий,
	|		СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|		СебестоимостьПродаж.ВидДеятельностиНДС,
	|
	|		СебестоимостьПродаж.ДопРасходы,
	|		СебестоимостьПродаж.ДопРасходыБезНДС,
	|		СебестоимостьПродаж.ДопРасходыРегл,
	|		СебестоимостьПродаж.ДопРасходыУпр
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|			ПО СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|			ПО Продажи.Ссылка = СебестоимостьПродаж.ДокументДвижения
	|	ГДЕ
	|		СебестоимостьПродаж.Период < &НачалоПериода
	|		И АналитикаПартнеров.Организация В(&МассивОрганизаций)
	|		И СебестоимостьПродаж.РасчетПартий
	|		И СебестоимостьПродаж.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		СебестоимостьПродаж.ДокументДвижения,
	|		СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|		СебестоимостьПродаж.РазделУчета,
	|		СебестоимостьПродаж.ВидЗапасов,
	|		АналитикаПартнеров.Организация,
	|		СебестоимостьПродаж.Партия,
	|		СебестоимостьПродаж.АналитикаУчетаПартий,
	|		СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|		СебестоимостьПродаж.ВидДеятельностиНДС,
	|
	|		СебестоимостьПродаж.ДопРасходы,
	|		СебестоимостьПродаж.ДопРасходыБезНДС,
	|		СебестоимостьПродаж.ДопРасходыРегл,
	|		СебестоимостьПродаж.ДопРасходыУпр
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|			ПО СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|			ПО Продажи.Ссылка = СебестоимостьПродаж.ДокументДвижения
	|	ГДЕ
	|		СебестоимостьПродаж.РасчетПартий
	|
	|	) КАК СебестоимостьПродаж
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьПродаж.ДокументДвижения,
	|	СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|	СебестоимостьПродаж.РазделУчета,
	|	СебестоимостьПродаж.ВидЗапасов,
	|	СебестоимостьПродаж.Организация,
	|	СебестоимостьПродаж.Партия,
	|	СебестоимостьПродаж.АналитикаУчетаПартий,
	|	СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|	СебестоимостьПродаж.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выручка.Регистратор,
	|	Выручка.АналитикаУчетаНоменклатуры,
	|	Выручка.ВидЗапасов,
	|	Выручка.ЗаказКлиента,
	|	МАКСИМУМ(Выручка.Соглашение) КАК Соглашение,
	|	МАКСИМУМ(Выручка.Менеджер) КАК Менеджер,
	|	МАКСИМУМ(Выручка.Склад) КАК Склад,
	|	МАКСИМУМ(Выручка.Договор) КАК Договор,
	|	МАКСИМУМ(Выручка.ИсточникГФУНоменклатуры) КАК ИсточникГФУНоменклатуры,
	|	МАКСИМУМ(Выручка.ИсточникГФУРасчетов) КАК ИсточникГФУРасчетов
	|ПОМЕСТИТЬ РеквизитыВыручки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК Выручка
	|ГДЕ
	|	Выручка.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|СГРУППИРОВАТЬ ПО
	|	Выручка.Регистратор,
	|	Выручка.АналитикаУчетаНоменклатуры,
	|	Выручка.ВидЗапасов,
	|	Выручка.ЗаказКлиента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.Регистратор,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	МАКСИМУМ(Движения.Склад) КАК Склад,
	|	МАКСИМУМ(Движения.ИсточникГФУНоменклатуры) КАК ИсточникГФУНоменклатуры
	|ПОМЕСТИТЬ РеквизитыДвиженияНоменклатураДоходыРасходы
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК Движения
	|ГДЕ
	|	Движения.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Движения.Организация В(&МассивОрганизаций)
	|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	И НЕ Движения.РасчетСебестоимости
	|	И Движения.Активность
	|СГРУППИРОВАТЬ ПО
	|	Движения.Регистратор,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Период                              КАК Период,
	|	ВЫБОР КОГДА Себестоимость.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                   						  КАК ВидДвижения,
	|	Себестоимость.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                         КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                          КАК ВидЗапасов,
	|	Себестоимость.ВидЗапасов.ТипЗапасов               КАК ТипЗапасов,
	|	Себестоимость.Партия                          	  КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета           КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС                  КАК ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ)                                            КАК КорВидДеятельностиНДС,
	|
	// В кор. части могут быть данные об исходной аналитике продажи (если возврат идет на другой склад)
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ                                             КАК ВидыЗапасовДляЦены,
	// В кор. части могут быть данные об исходном виде запасов продажи (в случае возврата проданного по Интеркампани товара)
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорАналитикаУчетаНоменклатуры
	|		ИНАЧЕ
	|			Себестоимость.АналитикаУчетаНоменклатуры
	|	КОНЕЦ                                             КАК АналитикаНоменклатурыДляЦены,
	|
	|	СУММА(Себестоимость.Количество)                   КАК Количество,
	|
	|	СУММА(Себестоимость.Стоимость)                    КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)              КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)        КАК СтоимостьЗабалансовая,
	|
	|	СУММА(Себестоимость.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.Трудозатраты)       		  КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)	  КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС)  КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)	  КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС)  КАК ПостатейныеПеременныеБезНДС,
	|
	|	СУММА(Себестоимость.СтоимостьРегл)                КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)    КАК СтоимостьЗабалансоваяРегл,
	|
	|	СУММА(Себестоимость.ПостояннаяРазница)            КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница)             КАК ВременнаяРазница,
	|
	|	СУММА(Себестоимость.ДопРасходыРегл)               КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл)             КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)	  КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)	  КАК ПостатейныеПеременныеРегл,
	
	|	СУММА(Себестоимость.СтоимостьУпр)	  			  КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр)	  			  КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр)	  		  КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)	  КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)	  КАК ПостатейныеПеременныеУпр,
	|
	|	Себестоимость.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры       КАК КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.КорРазделУчета                      КАК КорРазделУчета,
	|	Себестоимость.КорВидЗапасов                       КАК КорВидЗапасов,
	|	Себестоимость.АналитикаУчетаПоПартнерам           КАК АналитикаУчетаПоПартнерам,
	|	Себестоимость.ЗаказКлиента                        КАК ЗаказКлиента,
	|	Себестоимость.Подразделение                       КАК Подразделение,
	|	Себестоимость.Организация                         КАК Организация,
	|	Себестоимость.КорОрганизация                      КАК КорОрганизация,
	|	Себестоимость.ПериодПродажи                       КАК ПериодПродажи,
	|	ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|		НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ)) КАК ПериодРеализации,
	|	Себестоимость.АналитикаРасходов                   КАК АналитикаРасходов,
	|	Себестоимость.СтатьяРасходовСписания              КАК СтатьяРасходовСписания,
	|	Себестоимость.СтатьяДоходов                       КАК СтатьяДоходов,
	|	Себестоимость.АналитикаДоходов                    КАК АналитикаДоходов,
	|	Себестоимость.ГруппаПродукции                     КАК ГруппаПродукции,
	|	Себестоимость.Регистратор                         КАК ДокументДвижения,
	|	Себестоимость.ИдентификаторСтроки                 КАК ИдентификаторСтроки,
	|	Себестоимость.КодСтроки                 		  КАК КодСтроки,
	|	Себестоимость.КорПартия                 		  КАК КорПартия,
	|	Себестоимость.КорАналитикаУчетаПартий             КАК КорАналитикаУчетаПартий,
	|	Себестоимость.КорАналитикаФинансовогоУчета        КАК КорАналитикаФинансовогоУчета,
	|	Себестоимость.НДСРегл                 			  КАК НДСРегл,
	|	Себестоимость.НДСУпр                 			  КАК НДСУпр,
	|	Себестоимость.СтатьяКалькуляции                   КАК СтатьяКалькуляции,
	|	Себестоимость.ТипЗаписи                 		  КАК ТипЗаписи,
	|	Себестоимость.ДокументИсточник                 	  КАК ДокументИсточник,
	|	ЕСТЬNULL(РеквизитыВыручки.Соглашение, НЕОПРЕДЕЛЕНО) КАК Соглашение,
	|	ЕСТЬNULL(РеквизитыВыручки.Менеджер, НЕОПРЕДЕЛЕНО) КАК Менеджер,
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.Склад
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.Склад, НЕОПРЕДЕЛЕНО) КОНЕЦ) КАК Склад,
	|	ЕСТЬNULL(РеквизитыВыручки.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.ИсточникГФУНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО) КОНЕЦ) КАК ИсточникГФУНоменклатуры,
	|	ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО) КАК ИсточникГФУРасчетов,
	|
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И (НЕ &ПартионныйУчетВерсии22 ИЛИ Себестоимость.ПериодПродажи < &ДатаПереходаНаПартионныйУчетВерсии22)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ											  КАК ПоЦенеПродажи,
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И &ПартионныйУчетВерсии22
	|	  И Себестоимость.ПериодПродажи > &ДатаПереходаНаПартионныйУчетВерсии22
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ											  КАК ПоЦенеПродажи22
	|ПОМЕСТИТЬ ВтВозвратыПрошлыхПериодов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК СторноСписанияНаРасходы
	|		ПО СторноСписанияНаРасходы.Ссылка = Себестоимость.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ СторноОтчетыКомиссионера КАК СторноОтчетыКомиссионера
	|		ПО СторноОтчетыКомиссионера.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|		И СторноОтчетыКомиссионера.РазделУчета = Себестоимость.РазделУчета
	|		И СторноОтчетыКомиссионера.ВидЗапасов = Себестоимость.ВидЗапасов
	|		И СторноОтчетыКомиссионера.Организация = Себестоимость.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыВыручки КАК РеквизитыВыручки
	|		ПО РеквизитыВыручки.Регистратор = Себестоимость.Регистратор
	|		И РеквизитыВыручки.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|		И РеквизитыВыручки.ВидЗапасов = Себестоимость.ВидЗапасов
	|		И РеквизитыВыручки.ЗаказКлиента = Себестоимость.ЗаказКлиента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыДвиженияНоменклатураДоходыРасходы КАК РеквизитыДвиженияНоменклатураДоходыРасходы
	|		ПО РеквизитыДвиженияНоменклатураДоходыРасходы.Регистратор = Себестоимость.Регистратор
	|		И РеквизитыДвиженияНоменклатураДоходыРасходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|		И РеквизитыДвиженияНоменклатураДоходыРасходы.ВидЗапасов = Себестоимость.ВидЗапасов
	|ГДЕ
	|	(Себестоимость.СлужебноеВидДвиженияПриход
	|		И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
	|	ИЛИ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL)
	|	И НЕ Себестоимость.РасчетСебестоимости
	|	
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	ВЫБОР КОГДА Себестоимость.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.ВидЗапасов.ТипЗапасов,
	|	Себестоимость.Подразделение,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ),
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		ТОГДА Себестоимость.КорАналитикаУчетаНоменклатуры
	|	ИНАЧЕ Себестоимость.АналитикаУчетаНоменклатуры КОНЕЦ,
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	Себестоимость.ХозяйственнаяОперация,
	|	Себестоимость.КорРазделУчета,
	|	Себестоимость.КорВидЗапасов,
	|	Себестоимость.ПериодПродажи,
	|	ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|		НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ)),
	|	Себестоимость.Организация,
	|	Себестоимость.КорОрганизация,
	|	Себестоимость.АналитикаРасходов,
	|	Себестоимость.СтатьяРасходовСписания,
	|	Себестоимость.СтатьяДоходов,
	|	Себестоимость.АналитикаДоходов,
	|	Себестоимость.ГруппаПродукции,
	|	Себестоимость.Регистратор,
	|	Себестоимость.ИдентификаторСтроки,
	|	Себестоимость.КодСтроки,
	|	Себестоимость.КорПартия,
	|	Себестоимость.КорАналитикаУчетаПартий,
	|	Себестоимость.КорАналитикаФинансовогоУчета,
	|	Себестоимость.НДСРегл,
	|	Себестоимость.НДСУпр,
	|	Себестоимость.СтатьяКалькуляции,
	|	Себестоимость.ТипЗаписи,
	|	Себестоимость.ДокументИсточник,
	|	ЕСТЬNULL(РеквизитыВыручки.Соглашение, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.Менеджер, НЕОПРЕДЕЛЕНО),
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.Склад
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.Склад, НЕОПРЕДЕЛЕНО) КОНЕЦ), // Склад
	|	ЕСТЬNULL(РеквизитыВыручки.Договор, НЕОПРЕДЕЛЕНО),
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.ИсточникГФУНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО) КОНЕЦ), // ИсточникГФУНоменклатуры
	|	ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И (НЕ &ПартионныйУчетВерсии22 ИЛИ Себестоимость.ПериодПродажи < &ДатаПереходаНаПартионныйУчетВерсии22)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И &ПартионныйУчетВерсии22
	|	  И Себестоимость.ПериодПродажи > &ДатаПереходаНаПартионныйУчетВерсии22
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаВозвратов.Партия                        КАК Партия,
	|	ТаблицаВозвратов.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаВозвратов.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ТаблицаВозвратов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	ТаблицаВозвратов.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаВозвратов.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаВозвратов.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаВозвратов.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаВозвратов.ГруппаПродукции               КАК ГруппаПродукции,
	|	Назначения.НаправлениеДеятельности             КАК НаправлениеДеятельности,
	|	Назначения.НаправлениеДеятельности             КАК КорНаправлениеДеятельности,
	//++ Локализация
	//-- Локализация
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовУпр, НЕОПРЕДЕЛЕНО) КАК ВариантРаспределенияРасходовУпр,
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ЛОЖЬ) КАК ПринятиеКНалоговомуУчету,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	ТаблицаВозвратов.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаВозвратов.КодСтроки                 	   КАК КодСтроки,
	|	ТаблицаВозвратов.Менеджер                      КАК Менеджер,
	|	ТаблицаВозвратов.Склад                         КАК Склад,
	|	ТаблицаВозвратов.Соглашение                    КАК Соглашение,
	|	ТаблицаВозвратов.Договор                       КАК Договор,
	|	ТаблицаВозвратов.ИсточникГФУНоменклатуры       КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВозвратов.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ТаблицаВозвратов.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаВозвратов.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаВозвратов.КорПартия                     КАК КорПартия,
	|	ТаблицаВозвратов.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаВозвратов.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаВозвратов.НДСРегл                       КАК НДСРегл,
	|	ТаблицаВозвратов.НДСУпр                        КАК НДСУпр,
	|	ТаблицаВозвратов.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаВозвратов.ТипЗаписи                     КАК ТипЗаписи,
	|	ТаблицаВозвратов.ДокументИсточник              КАК ДокументИсточник,
	|	ТаблицаВозвратов.Количество                    КАК Количество,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.Стоимость / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.Стоимость / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.Стоимость
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.Стоимость КАК ЧИСЛО(31,2)) 							КАК Стоимость,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьБезНДС КАК ЧИСЛО(31,2)) 					КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьЗабалансовая / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьЗабалансовая / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьЗабалансовая
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьЗабалансовая КАК ЧИСЛО(31,2)) 				КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходы / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходы + ЕСТЬNULL(СуммыДопРасходов.ДопРасходы, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьДопРасходы
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходы КАК ЧИСЛО(31,2)) 						КАК ДопРасходы,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыБезНДС + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыБезНДС, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьДопРасходыБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыБезНДС КАК ЧИСЛО(31,2)) 					КАК ДопРасходыБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.Трудозатраты / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.Трудозатраты / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.Трудозатраты
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.Трудозатраты КАК ЧИСЛО(31,2)) 						КАК Трудозатраты,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеСНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеСНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеСНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеСНДС КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеБезНДС КАК ЧИСЛО(31,2)) 		КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеСНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеСНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеСНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеСНДС КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеБезНДС КАК ЧИСЛО(31,2)) 		КАК ПостатейныеПеременныеБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьРегл КАК ЧИСЛО(31,2)) 						КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьЗабалансоваяРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьЗабалансоваяРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьЗабалансоваяРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьЗабалансоваяРегл КАК ЧИСЛО(31,2)) 			КАК СтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостояннаяРазница / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостояннаяРазница / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостояннаяРазница
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостояннаяРазница КАК ЧИСЛО(31,2)) 					КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ВременнаяРазница / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ВременнаяРазница / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ВременнаяРазница
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ВременнаяРазница КАК ЧИСЛО(31,2)) 					КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыРегл + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыРегл, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ДопРасходыРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыРегл КАК ЧИСЛО(31,2)) 					КАК ДопРасходыРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ТрудозатратыРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ТрудозатратыРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ТрудозатратыРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ТрудозатратыРегл КАК ЧИСЛО(31,2)) 					КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеРегл КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеРегл КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьУпр КАК ЧИСЛО(31,2)) 						КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыУпр + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыУпр, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ДопРасходыУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыУпр КАК ЧИСЛО(31,2)) 						КАК ДопРасходыУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ТрудозатратыУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ТрудозатратыУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ТрудозатратыУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ТрудозатратыУпр КАК ЧИСЛО(31,2)) 					КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеУпр КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеУпр КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтВозвратыПрошлыхПериодов КАК ТаблицаВозвратов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыРеализацийПрошлыхПериодов КАК СтоимостиПродаж
	|		ПО ТаблицаВозвратов.ПоЦенеПродажи
	|			И ТаблицаВозвратов.ДокументИсточник          	= СтоимостиПродаж.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостиПродаж.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостиПродаж.ВидЗапасов
	|				ИЛИ СтоимостиПродаж.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостиПродаж.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостиПродаж.РазделУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыРеализацийПрошлыхПериодов КАК СтоимостиПродаж22
	|		ПО ТаблицаВозвратов.ПоЦенеПродажи22
	|			И ТаблицаВозвратов.ДокументИсточник          	= СтоимостиПродаж22.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостиПродаж22.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостиПродаж22.ВидЗапасов
	|				ИЛИ СтоимостиПродаж22.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостиПродаж22.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостиПродаж22.РазделУчета
	|			И ТаблицаВозвратов.Партия               		= СтоимостиПродаж22.Партия
	|			И ТаблицаВозвратов.АналитикаУчетаПартий         = СтоимостиПродаж22.АналитикаУчетаПартий
	|			И ТаблицаВозвратов.АналитикаФинансовогоУчета    = СтоимостиПродаж22.АналитикаФинансовогоУчета
	|			И ТаблицаВозвратов.КорВидДеятельностиНДС        = СтоимостиПродаж22.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДопРасходовПрошлыхПериодов КАК СуммыДопРасходов
	|		ПО ТаблицаВозвратов.ДокументИсточник          		= СуммыДопРасходов.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СуммыДопРасходов.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СуммыДопРасходов.ВидЗапасов
	|				ИЛИ СуммыДопРасходов.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СуммыДопРасходов.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СуммыДопРасходов.РазделУчета
	|			И ТаблицаВозвратов.Партия               		= СуммыДопРасходов.Партия
	|			И ТаблицаВозвратов.АналитикаУчетаПартий         = СуммыДопРасходов.АналитикаУчетаПартий
	|			И ТаблицаВозвратов.АналитикаФинансовогоУчета    = СуммыДопРасходов.АналитикаФинансовогоУчета
	|			И ТаблицаВозвратов.КорВидДеятельностиНДС        = СуммыДопРасходов.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ТаблицаВозвратов.ПериодРеализации          		= СтоимостьТоваров.Период
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостьТоваров.ВидЗапасов
	|				ИЛИ СтоимостьТоваров.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостьТоваров.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостьТоваров.РазделУчета
	|			И ТаблицаВозвратов.Партия = НЕОПРЕДЕЛЕНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ТаблицаВозвратов.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВозвратов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Назначения.Ссылка = Аналитика.Назначение
	|
	|ГДЕ
	|	(ТаблицаВозвратов.ПоЦенеПродажи И СтоимостиПродаж.Ссылка ЕСТЬ НЕ NULL)
	|		ИЛИ (ТаблицаВозвратов.ПоЦенеПродажи22 И СтоимостиПродаж22.Ссылка ЕСТЬ НЕ NULL)
	|		ИЛИ (НЕ ТаблицаВозвратов.ПоЦенеПродажи И СтоимостьТоваров.Период ЕСТЬ НЕ NULL)
	|		ИЛИ (НЕ ТаблицаВозвратов.ПоЦенеПродажи22 И СтоимостьТоваров.Период ЕСТЬ НЕ NULL)
	|";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	// Подготовим таблицу значений для переноса во временную таблицу ВТВозвраты
	//  - в случае предварительного расчета движения с/с не пишутся в регистр - сохраняются только в этой ВТ
	//  - при окончательном расчете движения будут в регистре, а эта ВТ будет пустой
	ОписаниеРегистраСебестоимость = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя];
	
	ПоляТаблицыВозвратов =
		"ВидДвижения, СлужебноеВидДвиженияПриход, Организация, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов,
		|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, "
		+ СтрЗаменить(ОписаниеРегистраСебестоимость.РесурсыРегистра, "%1", "");
	
	СтруктураРесурсов = Новый Структура(СтрЗаменить(ОписаниеРегистраСебестоимость.РесурсыРегистра, "%1", ""));
	
	РасчетСебестоимостиПротоколРасчета.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "ВТВозвраты");
	
	ТаблицаВозвратов = ОписаниеРегистраСебестоимость.Таблица.СкопироватьКолонки(ПоляТаблицыВозвратов);
	
	// Формируются движения по регистрам:
	// - СебестоимостьТоваров
	// - ВыручкаИСебестоимостьПродаж
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда

		// Корректировка стоимости.
		Пока Выборка.Следующий() Цикл
			
			// Накопим новые движения себестоимости в таблице значений
			СформироватьДвиженияСебестоимостьТоваров(ПараметрыРасчета, Выборка, Выборка.ВидДвижения);

			Если Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы
			 И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов
			 И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ОтчетКомиссионера Тогда
				
				СформироватьДвиженияВыручкаИСебестоимостьПродажВозврат(ПараметрыРасчета, Выборка);
				
			КонецЕсли;
			
			СуммаСНДС   = Выборка.Стоимость + Выборка.ДопРасходы + Выборка.Трудозатраты + Выборка.ПостатейныеПостоянныеСНДС + Выборка.ПостатейныеПеременныеСНДС;
			СуммаБезНДС = Выборка.СтоимостьБезНДС + Выборка.ДопРасходыБезНДС + Выборка.Трудозатраты + Выборка.ПостатейныеПостоянныеБезНДС + Выборка.ПостатейныеПеременныеБезНДС;
			СуммаРегл   = Выборка.СтоимостьРегл + Выборка.ДопРасходыРегл + Выборка.ТрудозатратыРегл + Выборка.ПостатейныеПостоянныеРегл + Выборка.ПостатейныеПеременныеРегл;
			СуммаУпр    = Выборка.СтоимостьУпр + Выборка.ДопРасходыУпр + Выборка.ТрудозатратыУпр + Выборка.ПостатейныеПостоянныеУпр + Выборка.ПостатейныеПеременныеУпр;
			
			// Формирование прочих доходов/расходов при возврате тары от клиента
			Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
				
				Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
					
					СуммовыеПоказатели = Новый Структура;
					СуммовыеПоказатели.Вставить("СуммаСНДС", СуммаСНДС);
					СуммовыеПоказатели.Вставить("СуммаБезНДС", СуммаБезНДС);
					СуммовыеПоказатели.Вставить("СуммаРегл", СуммаРегл);
					СуммовыеПоказатели.Вставить("СуммаУпр", СуммаУпр);
					СуммовыеПоказатели.Вставить("ПостояннаяРазница", Выборка.ПостояннаяРазница);
					СуммовыеПоказатели.Вставить("ВременнаяРазница", Выборка.ВременнаяРазница);
					
					СформироватьДвиженияПрочиеРасходы(
						ПараметрыРасчета,
						Выборка,
						СуммовыеПоказатели);
					
				ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов Тогда
					
					СуммовыеПоказатели = Новый Структура;
					СуммовыеПоказатели.Вставить("СуммаСНДС", ?(СуммаСНДС < 0, -СуммаСНДС, 0));
					СуммовыеПоказатели.Вставить("СуммаБезНДС", ?(СуммаБезНДС < 0, -СуммаБезНДС, 0));
					СуммовыеПоказатели.Вставить("СуммаРегл", ?(СуммаРегл < 0, -СуммаРегл, 0));
					СуммовыеПоказатели.Вставить("СуммаУпр", ?(СуммаУпр < 0, -СуммаУпр, 0));
					СуммовыеПоказатели.Вставить("ПостояннаяРазница", ?(СуммаРегл < 0, -Выборка.ПостояннаяРазница, 0));
					СуммовыеПоказатели.Вставить("ВременнаяРазница", ?(СуммаРегл < 0, -Выборка.ВременнаяРазница, 0));

					СформироватьДвиженияПрочиеРасходы(
						ПараметрыРасчета,
						Выборка,
						СуммовыеПоказатели);

					СформироватьДвиженияПрочиеДоходы(
						ПараметрыРасчета,
						Выборка,
						?(СуммаСНДС > 0, СуммаСНДС, 0),
						?(СуммаРегл > 0, СуммаРегл, 0),
						?(СуммаУпр > 0, СуммаУпр, 0));
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионера
			 И Выборка.Количество < 0 Тогда
				
				СтрокаВозврата = ТаблицаВозвратов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВозврата, Выборка);
				
				СтрокаВозврата.СлужебноеВидДвиженияПриход = Истина;
				
				Для Каждого КлючИЗначение Из СтруктураРесурсов Цикл
					СтрокаВозврата[КлючИЗначение.Ключ] = - Выборка[КлючИЗначение.Ключ];
				КонецЦикла;
				
			КонецЕсли;
			
			// Корректировка движений по оборотным регистрам управленческого учета.
			СформироватьДвиженияПоОборотнымРегистрамУпрУчета(ПараметрыРасчета, Выборка);
			
		КонецЦикла;
		
	Иначе // предварительный расчет
		
		// Соберем движения себестоимости в таблице значений, подобно СформироватьДвиженияСебестоимостьТоваров()
		Пока Выборка.Следующий() Цикл
			НовСтр = ТаблицаВозвратов.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		КонецЦикла;
		
		ТаблицаВозвратов.ЗаполнитьЗначения(Истина, "СлужебноеВидДвиженияПриход");
		ТаблицаВозвратов.ЗаполнитьЗначения(0,	   "Количество");
		
		Если ПараметрыРасчета.РегламентноеЗадание Тогда
			
			// Считаем по средней, без учета партий
			ТаблицаВозвратов.ЗаполнитьЗначения(Неопределено,
				"Партия,  АналитикаФинансовогоУчета, АналитикаУчетаПартий, ВидДеятельностиНДС");
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Сохраним таблицу возвратов в общем менеджере временных таблиц
	РасчетСебестоимостиПрикладныеАлгоритмы.ПоместитьТаблицуЗначенийВоВременнуюТаблицу(
		ПараметрыРасчета,
		"ВТВозвраты",
		ТаблицаВозвратов,
		ПоляТаблицыВозвратов);
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтРеализацииПрошлыхПериодов, ВтСуммыРеализацийПрошлыхПериодов, ВтСуммыДопРасходовПрошлыхПериодов, ВтВозвратыПрошлыхПериодов");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры


// Этап 3.5
// Формирует временную таблицу ВтПередачиТоваров
//
Процедура СформироватьТаблицуПередачМеждуОрганизациями(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьТаблицуПередачМеждуОрганизациями");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПроданныеТовары.ОрганизацияВладелец            КАК ОрганизацияПродавец,
	|	ПроданныеТовары.ВидЗапасовПродавца.Организация КАК ОрганизацияПолучатель,
	|	ПроданныеТовары.АналитикаУчетаНоменклатуры     КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ПроданныеТовары.КоличествоОстаток)       КАК Количество,
	|	ПроданныеТовары.ВидЗапасовПродавца.ВидЗапасовВладельца 	КАК ВидЗапасовПродавца,
	|	ПроданныеТовары.ВидЗапасовПродавца 						КАК ВидЗапасовПолучателя
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(&ГраницаКонецПериода,
	|		&ПредварительныйРасчет
	|		И ОрганизацияВладелец В (&МассивОрганизаций)
	|		И ВидЗапасовПродавца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	) КАК ПроданныеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроданныеТовары.ОрганизацияВладелец,
	|	ПроданныеТовары.ВидЗапасовПродавца.Организация,
	|	ПроданныеТовары.АналитикаУчетаНоменклатуры,
	|	ПроданныеТовары.ВидЗапасовПродавца.ВидЗапасовВладельца,
	|	ПроданныеТовары.ВидЗапасовПродавца
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Резервы.Организация                            КАК ОрганизацияПродавец,
	|	Резервы.КорОрганизация                         КАК ОрганизацияПолучатель,
	|	Резервы.АналитикаУчетаНоменклатуры             КАК АналитикаУчетаНоменклатуры,
	|	СУММА(Резервы.Количество)                      КАК Количество,
	|	Резервы.ВидЗапасов                             КАК ВидЗапасовПродавца,
	|	Резервы.КорВидЗапасов                          КАК ВидЗапасовПолучателя
	|
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|ГДЕ
	|	Резервы.Период МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И &ПредварительныйРасчет
	|	И Резервы.Организация В (&МассивОрганизаций)
	|	И Резервы.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|СГРУППИРОВАТЬ ПО
	|	Резервы.Организация,
	|	Резервы.КорОрганизация,
	|	Резервы.АналитикаУчетаНоменклатуры,
	|	Резервы.ВидЗапасов,
	|	Резервы.КорВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&КонецПериода                                                           КАК Период,
	|	Товары.АналитикаУчетаНоменклатуры                                       КАК АналитикаУчетаНоменклатуры,
	|	Товары.ОрганизацияПродавец                                              КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	Товары.ВидЗапасовПродавца   КАК ВидЗапасов,
	|	Товары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|
	|	Товары.Количество КАК Количество,
	|	0                 КАК Стоимость,
	|	0                 КАК ПостояннаяРазница,
	|	0                 КАК ВременнаяРазница,
	|	0                 КАК СтоимостьБезНДС,
	|	0                 КАК СтоимостьРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)          КАК КорРазделУчета,
	|	Товары.ОрганизацияПолучатель                                                     КАК КорОрганизация,
	|	Товары.АналитикаУчетаНоменклатуры                                                КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтПередачиТоваров
	|ИЗ
	|	Товары КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&КонецПериода КАК Период,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	Товары.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	Неопределено КАК КорВидЗапасов,
	|
	|	Товары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	Неопределено КАК КорРазделУчета,
	|	Неопределено КАК КорОрганизация,
	|	Неопределено КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) КАК ХозяйственнаяОперация
	|ИЗ
	|	Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ Товары
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВтПередачиТоваров");
	
КонецПроцедуры

// Этап 3.6
Процедура СформироватьУзлыКорректировкиСписанияСтоимости(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьУзлыКорректировкиСписанияСтоимости");
	
	ТекстЗапроса =
	"
	// Данные об аналитике для расчета.
	|//ПредварительныйРасчет ВЫБРАТЬ РАЗЛИЧНЫЕ
	|//ПредварительныйРасчет	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПредварительныйРасчет	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПредварительныйРасчет	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПредварительныйРасчет ПОМЕСТИТЬ ВтАналитикаНоменклатуры
	|//ПредварительныйРасчет ИЗ
	|//ПредварительныйРасчет	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|//ПредварительныйРасчет
	|//ПредварительныйРасчет ОБЪЕДИНИТЬ
	|//ПредварительныйРасчет
	|//ПредварительныйРасчет ВЫБРАТЬ
	|//ПредварительныйРасчет	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПредварительныйРасчет	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПредварительныйРасчет	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПредварительныйРасчет ИЗ
	|//ПредварительныйРасчет	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|//ПредварительныйРасчет		Организация В (&МассивОрганизаций)
	|//ПредварительныйРасчет		И РазделУчета = Значение(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|//ПредварительныйРасчет	) КАК УчетСебестоимости
	|//ПредварительныйРасчет ;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Организация,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
	|ПОМЕСТИТЬ
	|	ЕстьВозвратныеОтходы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И ДД.Количество < 0
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// Данные о движении товаров за период.
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация                КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.РазделУчета                КАК РазделУчета,
	|	ВложенныйЗапрос.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Партия
	|	КОНЕЦ									   КАК Партия,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаУчетаПартий
	|	КОНЕЦ									   КАК АналитикаУчетаПартий,
	|	ВложенныйЗапрос.КодСтрокиПродукция		   КАК КодСтрокиПродукция,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаФинансовогоУчета
	|	КОНЕЦ									   КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.ВидДеятельностиНДС
	|	КОНЕЦ										КАК ВидДеятельностиНДС,
	|	ВложенныйЗапрос.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов				КАК СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов			КАК АналитикаРасходов,
	// Показатели узла 1го графа. Данные для расчета ресурса Стоимость.
	|	СУММА(ВложенныйЗапрос.ВесГраф_1)          	КАК ВесГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДопРасходыГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ТрудозатратыГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПостоянныеГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПеременныеГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ПостатейныеПеременныеГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьЗабалансовая) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК СтоимостьЗабалансовая,
	|	1                             			   КАК СтоимостьЗнакГраф_1,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))  			   КАК ПостояннаяРазница,
	|	1 										   КАК ПостояннаяРазницаЗнак,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))  			   КАК ВременнаяРазница,
	|	1 										   КАК ВременнаяРазницаЗнак,
	
	// Показатели узла 2го графа. Данные для расчета ресурса СтоимостьБезНДС.
	|	СУММА(ВложенныйЗапрос.ВесГраф_2)    		КАК ВесГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК СтоимостьГраф_2,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДопРасходыГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ДопРасходыГраф_2,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ТрудозатратыГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ТрудозатратыГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПостоянныеГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ПостатейныеПостоянныеГраф_2,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПеременныеГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  			   КАК ПостатейныеПеременныеГраф_2,
	|	1                             			   КАК СтоимостьЗнакГраф_2
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|
	|	(ВЫБРАТЬ
			// Данные по всем движениям за период. По "внешним" приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И УчетСебестоимости.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0       									 КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	// Показатели узла 1го графа. Данные для расчета ресурса Стоимость.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0 КОНЕЦ КАК ВесГраф_1,
	
		// Данные о суммах внешних поступлений.
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 	И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 	И УчетСебестоимости.Количество = 0
	|		 	И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|				УчетСебестоимости.Стоимость
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходы
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходы
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Трудозатраты
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ТрудозатратыГраф_1,

	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_1,
	
		// Делится по контурам. Расчет производится по одному из весов.
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьЗабалансовая
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьЗабалансовая,
	
	// Показатели узла 2го графа. Данные для расчета ресурса СтоимостьБезНДС.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0 КОНЕЦ 							 КАК ВесГраф_2,
	
		// Данные о суммах внешних поступлений.
	|
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьБезНДС
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_2,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходыБезНДС
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_2,
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные по всем движениям за период. По "внешним" приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И УчетСебестоимости.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0       									 КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	// Показатели узла 1го графа. Данные для расчета ресурса Стоимость.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0 КОНЕЦ КАК ВесГраф_1,
	
		// Данные о суммах внешних поступлений.
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 	И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 	И УчетСебестоимости.Количество = 0
	|		 	И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|				УчетСебестоимости.Стоимость
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходы
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходы
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Трудозатраты
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ТрудозатратыГраф_1,

	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_1,
	
		// Делится по контурам. Расчет производится по одному из весов.
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьЗабалансовая
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьЗабалансовая,
	
	// Показатели узла 2го графа. Данные для расчета ресурса СтоимостьБезНДС.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0 КОНЕЦ 							 КАК ВесГраф_2,
	
		// Данные о суммах внешних поступлений.
	|
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьБезНДС
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_2,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходыБезНДС
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_2,
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТПромежуточнаяСебестоимостьТоваров КАК УчетСебестоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|	ГДЕ
	|		 УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
	|
	// Уменьшение количества в узле при встречных перемещениях в один и тот же узел.
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                   КАК Организация,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.КорРазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.КорВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.КорПартия                     КАК Партия,
	|		УчетСебестоимости.КорАналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0       									    КАК КодСтрокиПродукция,
	|		УчетСебестоимости.КорАналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.КорВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	|		-УчетСебестоимости.Количество КАК ВесГраф_1,
	|		0 КАК СтоимостьГраф_1,
	|		0 КАК ДопРасходыГраф_1,
	|		0 КАК ТрудозатратыГраф_1,
	|		0 КАК ПостатейныеПостоянныеГраф_1,
	|		0 КАК ПостатейныеПеременныеГраф_1,
	|		0 КАК СтоимостьЗабалансовая,
	|		-УчетСебестоимости.Количество КАК ВесГраф_2,
	|		0 КАК СтоимостьГраф_2,
	|		0 КАК ДопРасходыГраф_2,
	|		0 КАК ПостатейныеПостоянныеГраф_2,
	|		0 КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|	ГДЕ
	|		 УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|		 И УчетСебестоимости.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		 И УчетСебестоимости.КорАналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		 И УчетСебестоимости.КорРазделУчета = УчетСебестоимости.РазделУчета
	|		 И УчетСебестоимости.КорВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		 И УчетСебестоимости.КорПартия = УчетСебестоимости.Партия
	|		 И УчетСебестоимости.КорАналитикаУчетаПартий = УчетСебестоимости.АналитикаУчетаПартий
	|		 И УчетСебестоимости.КорАналитикаФинансовогоУчета = УчетСебестоимости.АналитикаФинансовогоУчета
	|		 И УчетСебестоимости.КорВидДеятельностиНДС = УчетСебестоимости.ВидДеятельностиНДС
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные о возвратах прошлых периодов.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0       									 КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
		// Показатели графа 1. Стоимость.
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ВесГраф_1,
			// Данные о суммах внешних поступлений.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходы
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_1,
	
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Трудозатраты
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ТрудозатратыГраф_1,
	
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_1,
	
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеСНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_1,
	
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьЗабалансовая
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьЗабалансовая,
		// Показатели графа 2. СтоимостьБезНДС.	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ВесГраф_2,
	
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьГраф_2,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ДопРасходыБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ДопРасходыГраф_2,
	|
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_2,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТВозвраты КАК УчетСебестоимости
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные о передачах между организациям.
	|		УчетСебестоимости.Организация                				КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры 				КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                				КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                		 		КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО                     			 				КАК Партия,
	|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|		0       									 				КАК КодСтрокиПродукция,
	|		НЕОПРЕДЕЛЕНО  								 				КАК АналитикаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
		// Показатели графа 1. Стоимость.
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        				КАК ВесГраф_1,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        				КАК СтоимостьГраф_1,
	|		0                                            				КАК ДопРасходыГраф_1,
	|		0                                            				КАК ТрудозатратыГраф_1,
	|		0                                            				КАК ПостатейныеПостоянныеГраф_1,
	|		0                                            				КАК ПостатейныеПеременныеГраф_1,
	|		0                                            				КАК СтоимостьЗабалансовая,
		// Показатели графа 2. СтоимостьБезНДС.	
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        				КАК ВесГраф_2,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        				КАК СтоимостьГраф_2,
	|		0                                            				КАК ДопРасходыГраф_2,
	|		0                                            				КАК ПостатейныеПостоянныеГраф_2,
	|		0                                            				КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВтПередачиТоваров КАК УчетСебестоимости
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Таблица.Организация                							КАК Организация,
	|		Таблица.АналитикаУчетаНоменклатуры 							КАК АналитикаУчетаНоменклатуры,
	|		Таблица.РазделУчета                							КАК РазделУчета,
	|		Таблица.ВидЗапасов                 							КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО                     			 				КАК Партия,
	|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|		0       									 				КАК КодСтрокиПродукция,
	|		НЕОПРЕДЕЛЕНО  								 				КАК АналитикаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
		// Показатели графа 1. Стоимость.
	|		0                                  							КАК ВесГраф_1,
	|		0                                  							КАК СтоимостьГраф_1,
	|		Таблица.ДопРасходы           								КАК ДопРасходыГраф_1,
	|		0                                  							КАК ТрудозатратыГраф_1,
	|		0                                  							КАК ПостатейныеПостоянныеГраф_1,
	|		0                                            				КАК ПостатейныеПеременныеГраф_1,
	|		0                                  							КАК СтоимостьЗабалансовая,
		// Показатели графа 2. СтоимостьБезНДС.
	|		0                                  							КАК ВесГраф_2,
	|		0                                  							КАК СтоимостьГраф_2,
	|		Таблица.ДопРасходыБезНДС     								КАК ДопРасходыГраф_2,
	|		0                                  							КАК ПостатейныеПостоянныеГраф_2,
	|		0                                            				КАК ПостатейныеПеременныеГраф_2
	|	ИЗ 
	|		ВТДопРасходов КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Данные по остаткам на начало расчетного периода.
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                   КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                   КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                    КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     	КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       	КАК АналитикаУчетаПартий,
	|		0       									 	КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  	КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         	КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
		// Показатели графа 1. Стоимость.
	|		УчетСебестоимости.КоличествоОстаток             КАК ВесГраф_1,
	|		УчетСебестоимости.СтоимостьОстаток              КАК СтоимостьГраф_1,
	|		УчетСебестоимости.ДопРасходыОстаток       		КАК ДопРасходыГраф_1,
	|		УчетСебестоимости.ТрудозатратыОстаток			КАК ТрудозатратыГраф_1,
	|		УчетСебестоимости.ПостатейныеПостоянныеСНДСОстаток		КАК ПостатейныеПостоянныеГраф_1,
	|		УчетСебестоимости.ПостатейныеПеременныеСНДСОстаток		КАК ПостатейныеПеременныеГраф_1,
	|		УчетСебестоимости.СтоимостьЗабалансоваяОстаток  КАК СтоимостьЗабалансовая,
		// Показатели графа 2. СтоимостьБезНДС.
	|		УчетСебестоимости.КоличествоОстаток             КАК ВесГраф_2,
	|		УчетСебестоимости.СтоимостьБезНДСОстаток        КАК СтоимостьГраф_2,
	|		УчетСебестоимости.ДопРасходыБезНДСОстаток 		КАК ДопРасходыГраф_2,
	|		УчетСебестоимости.ПостатейныеПостоянныеБезНДСОстаток	КАК ПостатейныеПостоянныеГраф_2,
	|		УчетСебестоимости.ПостатейныеПеременныеБезНДСОстаток	КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&ГраницаНачалоПериода,
	|			Организация В (&МассивОрганизаций)
	|			//ПредварительныйРасчет И (АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов)
	|			//ПредварительныйРасчет В
	|			//ПредварительныйРасчет (ВЫБРАТЬ
	|			//ПредварительныйРасчет 	АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов
	|			//ПредварительныйРасчет	ИЗ ВтАналитикаНоменклатуры)
	|		) КАК УчетСебестоимости
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.РазделУчета,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов,
	|	ВложенныйЗапрос.Организация,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Партия
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаУчетаПартий
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КодСтрокиПродукция,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаФинансовогоУчета
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.ВидДеятельностиНДС
	|	КОНЕЦ
	|";
	
	ТекстЗапроса = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПредварительныйРасчет", "");
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВтУзлыКорректировки");
	
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет
	 И ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОВзвешеннаяОценка Тогда
		ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета, Запрос); // корректировка ВтУзлыКорректировки
	КонецЕсли;
	
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтАналитикаНоменклатуры");
	КонецЕсли;
	
	ПараметрыНумерации = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"АналитикаУчетаНоменклатуры", // разделитель
		, // без группировки
		"АналитикаУчетаНоменклатуры,
			|ВидЗапасов, Организация, Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС", // порядок
		"НомерУзла", // поле номера
		"АналитикаУчетаНоменклатуры"); // индекс
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВтУзлыКорректировки");
	
	ПараметрыРасчета.КоличествоУзлов =
		РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВтУзлыКорректировки");

	ПодготовитьДанныеДляРаспределенияРезервов(ПараметрыРасчета, Ложь);
	
КонецПроцедуры

// Этап 3.7, 3.11
Процедура РассчитатьСтоимость(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РассчитатьСтоимость" + ?(РасчетСтоимостиРегл, "(Регл)", ""));
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ?(РасчетСтоимостиРегл,
		ТекстЗапросаДвиженияСтоимостиРегл(ПараметрыРасчета),
		ТекстЗапросаДвиженияСтоимости(ПараметрыРасчета));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	
	Если ПараметрыРасчета.ИспользоватьПлатформуДляРешенияСЛУ Тогда
		РешитьСЛУПлатформой(ПараметрыРасчета, РасчетСтоимостиРегл);
	Иначе
		РешитьСЛУ(ПараметрыРасчета, РасчетСтоимостиРегл);
	КонецЕсли;
	
КонецПроцедуры

// Этап 3.8, 3.12
Процедура ЗарегистрироватьСтоимость(ПараметрыРасчета, РегистрацияСтоимостиРегл)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗарегистрироватьСтоимость" + ?(РегистрацияСтоимостиРегл, "(Регл)", ""));
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.УстановитьПараметр("РегистрацияСтоимостиРегл", РегистрацияСтоимостиРегл);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.ДокументДвижения КАК ДокументДвижения,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.СтоимостьДопРасходы КАК СтоимостьДопРасходы,
	|	Т.СтоимостьДопРасходыБезНДС КАК СтоимостьДопРасходыБезНДС,
	|	Т.Трудозатраты КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	Т.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	Т.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	|	Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|	Т.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	Т.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	Т.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	Т.СтоимостьУпр КАК СтоимостьУпр,
	|	Т.ДопРасходыУпр КАК ДопРасходыУпр,
	|	Т.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	Т.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	Т.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваровВременная
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК Т
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтоимостьПартийТоваров";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Т.КоличествоРасход <> 0 ТОГДА Т.КоличествоРасход
	|		КОГДА &ПредварительныйРасчет ТОГДА Т.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВТОборотыКоличествоСПартиями
	|ИЗ
	|(ВЫБРАТЬ
	|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
	|	ДанныеПоКоличеству.РазделУчета,
	|	ДанныеПоКоличеству.ВидЗапасов,
	|	ДанныеПоКоличеству.Организация,
	|	ДанныеПоКоличеству.Партия,
	|	ДанныеПоКоличеству.АналитикаУчетаПартий,
	|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
	|	ДанныеПоКоличеству.ВидДеятельностиНДС,
	|	СУММА(ДанныеПоКоличеству.КоличествоРасход)  КАК КоличествоРасход,
	|	СУММА(ДанныеПоКоличеству.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обороты.АналитикаУчетаНоменклатуры,
	|		(ВЫБОР
	|			КОГДА Обороты.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И Обороты.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ Обороты.РазделУчета КОНЕЦ) КАК РазделУчета,
	|		Обороты.ВидЗапасов,
	|		Обороты.Организация,
	|		Обороты.Партия,
	|		Обороты.АналитикаУчетаПартий,
	|		Обороты.АналитикаФинансовогоУчета,
	|		Обороты.ВидДеятельностиНДС,
	|		Обороты.Количество 	КАК КоличествоРасход,
	|		0 					КАК КоличествоОстаток
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = Обороты.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Обороты.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = Обороты.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	ГДЕ
	|		НЕ Обороты.СлужебноеВидДвиженияПриход
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		(ВЫБОР
	|			КОГДА Остатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И Остатки.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ Остатки.РазделУчета КОНЕЦ) КАК РазделУчета,
	|		Остатки.ВидЗапасов,
	|		Остатки.Организация,
	|		Остатки.Партия,
	|		Остатки.АналитикаУчетаПартий,
	|		Остатки.АналитикаФинансовогоУчета,
	|		Остатки.ВидДеятельностиНДС,
	|		0 					КАК КоличествоРасход,
	|		Остатки.Количество 	КАК КоличествоОстаток
	|	ИЗ
	|		ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = Остатки.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Остатки.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = Остатки.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	) КАК ДанныеПоКоличеству
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
	|	ДанныеПоКоличеству.Организация,
	|	ДанныеПоКоличеству.ВидЗапасов,
	|	ДанныеПоКоличеству.РазделУчета,
	|	ДанныеПоКоличеству.Партия,
	|	ДанныеПоКоличеству.АналитикаУчетаПартий,
	|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
	|	ДанныеПоКоличеству.ВидДеятельностиНДС
	|) КАК Т
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА Т.КоличествоРасход <> 0 ТОГДА Т.КоличествоРасход
	|		КОГДА &ПредварительныйРасчет ТОГДА Т.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ <> 0
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Обороты.АналитикаУчетаНоменклатуры,
	|	Обороты.РазделУчета,
	|	Обороты.ВидЗапасов,
	|	Обороты.Организация,
	|	СУММА(Обороты.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОборотыКоличествоБезПартий
	|ИЗ
	|	ВТОборотыКоличествоСПартиями КАК Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	Обороты.АналитикаУчетаНоменклатуры,
	|	Обороты.РазделУчета,
	|	Обороты.ВидЗапасов,
	|	Обороты.Организация
	|
	|ИМЕЮЩИЕ
	|	СУММА(Обороты.Количество) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.Организация                КАК Организация,
	|	УзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	УзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	УзлыКорректировки.Партия					 КАК Партия,
	|	УзлыКорректировки.АналитикаУчетаПартий		 КАК АналитикаУчетаПартий,
	|	УзлыКорректировки.АналитикаФинансовогоУчета	 КАК АналитикаФинансовогоУчета,
	|	УзлыКорректировки.ВидДеятельностиНДС		 КАК ВидДеятельностиНДС,
	
	|	СУММА(ТаблицаРешений.СтоимостьГраф_1
	|		* ТаблицаРешений.СтоимостьЗнакГраф_1) 			КАК СтоимостьГраф_1,
	|	СУММА(ТаблицаРешений.ДопРасходыГраф_1)           	КАК ДопРасходыГраф_1,
	|	СУММА(ТаблицаРешений.ТрудозатратыГраф_1)            КАК ТрудозатратыГраф_1,
	|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеГраф_1)   КАК ПостатейныеПостоянныеГраф_1,
	|	СУММА(ТаблицаРешений.ПостатейныеПеременныеГраф_1)	КАК ПостатейныеПеременныеГраф_1,
	
	|	СУММА(ТаблицаРешений.ПостояннаяРазница
	|		* ТаблицаРешений.ПостояннаяРазницаЗнак)         КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРешений.ВременнаяРазница
	|		* ТаблицаРешений.ВременнаяРазницаЗнак)          КАК ВременнаяРазница,
	|	СУММА(ТаблицаРешений.СтоимостьЗабалансовая)         КАК СтоимостьЗабалансовая,

	|	СУММА(ТаблицаРешений.СтоимостьГраф_2
	|		* ТаблицаРешений.СтоимостьЗнакГраф_2)			КАК СтоимостьГраф_2,
	|	СУММА(ТаблицаРешений.ДопРасходыГраф_2)		 		КАК ДопРасходыГраф_2,
	|	СУММА(ТаблицаРешений.ТрудозатратыГраф_2)			КАК ТрудозатратыГраф_2,
	|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеГраф_2)	КАК ПостатейныеПостоянныеГраф_2,
	|	СУММА(ТаблицаРешений.ПостатейныеПеременныеГраф_2)	КАК ПостатейныеПеременныеГраф_2
	|ПОМЕСТИТЬ ВТСтоимостьТоваровБезВидаУчета
	|ИЗ
	|	ВтТаблицаРешений КАК ТаблицаРешений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
	|			ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|ГДЕ
	|	(ТаблицаРешений.СтоимостьГраф_1 <> 0
	|		ИЛИ ТаблицаРешений.ДопРасходыГраф_1 <> 0
	|		ИЛИ ТаблицаРешений.ТрудозатратыГраф_1 <> 0
	|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеГраф_1 <> 0
	|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеГраф_1 <> 0
	|		ИЛИ ТаблицаРешений.ВременнаяРазница <> 0
	|		ИЛИ ТаблицаРешений.ПостояннаяРазница <> 0
	|		ИЛИ ТаблицаРешений.СтоимостьЗабалансовая <> 0
	|		ИЛИ ТаблицаРешений.СтоимостьГраф_2 <> 0
	|		ИЛИ ТаблицаРешений.ДопРасходыГраф_2 <> 0
	|		ИЛИ ТаблицаРешений.ТрудозатратыГраф_2 <> 0
	|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеГраф_2 <> 0
	|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеГраф_2 <> 0)
	|	И УзлыКорректировки.АналитикаУчетаНоменклатуры ССЫЛКА Справочник.КлючиАналитикиУчетаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.АналитикаУчетаНоменклатуры,
	|	УзлыКорректировки.Организация,
	|	УзлыКорректировки.ВидЗапасов,
	|	УзлыКорректировки.РазделУчета,
	|	УзлыКорректировки.Партия,
	|	УзлыКорректировки.АналитикаУчетаПартий,
	|	УзлыКорректировки.АналитикаФинансовогоУчета,
	|	УзлыКорректировки.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзлыКорректировки.Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка								КАК ДокументДвижения,
	|	&НачалоПериода 														КАК Период,
	|
	|	СтоимостьТоваров.Организация 										КАК Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры 						КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.ВидЗапасов 										КАК ВидЗапасов,
	|	СтоимостьТоваров.РазделУчета 										КАК РазделУчета,
	|	СтоимостьТоваров.Партия					 	  						КАК Партия,
	|	СтоимостьТоваров.АналитикаУчетаПартий		  						КАК АналитикаУчетаПартий,
	|	СтоимостьТоваров.АналитикаФинансовогоУчета	  						КАК АналитикаФинансовогоУчета,
	|	СтоимостьТоваров.ВидДеятельностиНДС		 	  						КАК ВидДеятельностиНДС,
	|
	// упр.
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.СтоимостьГраф_1
	|	КОНЕЦ 																КАК Стоимость,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.СтоимостьГраф_2
	|	КОНЕЦ 																КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ДопРасходыГраф_1
	|	КОНЕЦ 																КАК СтоимостьДопРасходы,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ДопРасходыГраф_2
	|	КОНЕЦ 																КАК СтоимостьДопРасходыБезНДС,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.СтоимостьЗабалансовая
	|	КОНЕЦ 																КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ТрудозатратыГраф_1
	|	КОНЕЦ 																КАК Трудозатраты,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеГраф_1
	|	КОНЕЦ 																КАК ПостатейныеПостоянныеСНДС,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеГраф_2
	|	КОНЕЦ 																КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеГраф_1
	|	КОНЕЦ 																КАК ПостатейныеПеременныеСНДС,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА 0
	|		ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеГраф_2
	|	КОНЕЦ 																КАК ПостатейныеПеременныеБезНДС,
	|
	// регл.
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.СтоимостьГраф_1
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.СтоимостьЗабалансовая
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК СтоимостьЗабалансоваяРегл,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ДопРасходыГраф_1
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ДопРасходыРегл,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ТрудозатратыГраф_1
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ТрудозатратыРегл,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ПостатейныеПостоянныеГраф_1
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ПостатейныеПостоянныеРегл,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ПостатейныеПеременныеГраф_1
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ПостатейныеПеременныеРегл,
	|
	// упр.
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.СтоимостьГраф_2
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК СтоимостьУпр,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ДопРасходыГраф_2
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ДопРасходыУпр,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ТрудозатратыГраф_2
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ТрудозатратыУпр,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ПостатейныеПостоянныеГраф_2
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ПостатейныеПостоянныеУпр,
	|	ВЫБОР КОГДА &РегистрацияСтоимостиРегл
	|		ТОГДА СтоимостьТоваров.ПостатейныеПеременныеГраф_2
	|		ИНАЧЕ 0
	|	КОНЕЦ 																КАК ПостатейныеПеременныеУпр,
	|
	// разницы
	|	СтоимостьТоваров.ПостояннаяРазница									КАК ПостояннаяРазница,
	|	СтоимостьТоваров.ВременнаяРазница									КАК ВременнаяРазница,
	|
	// количество
	|	ЕСТЬNULL(Обороты.Количество, 0)										КАК Количество
	|
	|ПОМЕСТИТЬ ВТСтоимостьТоваров
	|ИЗ
	|	ВТСтоимостьТоваровБезВидаУчета КАК СтоимостьТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО СтоимостьТоваров.Организация = ДокументыРасчетаСебестоимости.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОборотыКоличествоСПартиями КАК Обороты
	|			ПО СтоимостьТоваров.АналитикаУчетаНоменклатуры  = Обороты.АналитикаУчетаНоменклатуры
	|			И СтоимостьТоваров.РазделУчета 					= Обороты.РазделУчета
	|			И СтоимостьТоваров.ВидЗапасов 					= Обороты.ВидЗапасов
	|			И СтоимостьТоваров.Организация 					= Обороты.Организация
	|			И СтоимостьТоваров.Партия 						= Обороты.Партия
	|			И СтоимостьТоваров.АналитикаУчетаПартий 		= Обороты.АналитикаУчетаПартий
	|			И СтоимостьТоваров.АналитикаФинансовогоУчета 	= Обороты.АналитикаФинансовогоУчета
	|			И СтоимостьТоваров.ВидДеятельностиНДС 			= Обороты.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СтоимостьТоваров.ДокументДвижения									КАК ДокументДвижения,
	|	СтоимостьТоваров.Период 											КАК Период,
	|
	|	СтоимостьТоваров.Организация 										КАК Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры 						КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.ВидЗапасов 										КАК ВидЗапасов,
	|	СтоимостьТоваров.РазделУчета 										КАК РазделУчета,
	|	СтоимостьТоваров.Партия					 	  						КАК Партия,
	|	СтоимостьТоваров.АналитикаУчетаПартий		  						КАК АналитикаУчетаПартий,
	|	СтоимостьТоваров.АналитикаФинансовогоУчета	  						КАК АналитикаФинансовогоУчета,
	|	СтоимостьТоваров.ВидДеятельностиНДС		 	  						КАК ВидДеятельностиНДС,
	|
	|	СУММА(СтоимостьТоваров.Стоимость)		 	  						КАК Стоимость,
	|	СУММА(СтоимостьТоваров.СтоимостьБезНДС)		 	  					КАК СтоимостьБезНДС,
	|	СУММА(СтоимостьТоваров.СтоимостьЗабалансовая)		 	  			КАК СтоимостьЗабалансовая,
	|	СУММА(СтоимостьТоваров.СтоимостьДопРасходы)		 	  				КАК СтоимостьДопРасходы,
	|	СУММА(СтоимостьТоваров.СтоимостьДопРасходыБезНДС)		 	  		КАК СтоимостьДопРасходыБезНДС,
	|	СУММА(СтоимостьТоваров.Трудозатраты)		 	  					КАК Трудозатраты,
	|	СУММА(СтоимостьТоваров.ПостатейныеПостоянныеСНДС)		 	  		КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС)		 	  		КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(СтоимостьТоваров.ПостатейныеПеременныеСНДС)                   КАК ПостатейныеПеременныеСНДС,
	|	СУММА(СтоимостьТоваров.ПостатейныеПеременныеБезНДС)                 КАК ПостатейныеПеременныеБезНДС,
	|
	|	СУММА(СтоимостьТоваров.СтоимостьРегл)		 	  					КАК СтоимостьРегл,
	|	СУММА(СтоимостьТоваров.СтоимостьЗабалансоваяРегл)		 	  		КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(СтоимостьТоваров.ПостояннаяРазница)		 	  				КАК ПостояннаяРазница,
	|	СУММА(СтоимостьТоваров.ВременнаяРазница)		 	  				КАК ВременнаяРазница,
	|	СУММА(СтоимостьТоваров.ДопРасходыРегл)		 	  					КАК ДопРасходыРегл,
	|	СУММА(СтоимостьТоваров.ТрудозатратыРегл)		 	  				КАК ТрудозатратыРегл,
	|	СУММА(СтоимостьТоваров.ПостатейныеПостоянныеРегл) 					КАК ПостатейныеПостоянныеРегл,
	|	СУММА(СтоимостьТоваров.ПостатейныеПеременныеРегл) 					КАК ПостатейныеПеременныеРегл,
	|
	|	СУММА(СтоимостьТоваров.СтоимостьУпр)                         		КАК СтоимостьУпр,
	|	СУММА(СтоимостьТоваров.ДопРасходыУпр)                      			КАК ДопРасходыУпр,
	|	СУММА(СтоимостьТоваров.ТрудозатратыУпр)                         	КАК ТрудозатратыУпр,
	|	СУММА(СтоимостьТоваров.ПостатейныеПостоянныеУпр)                    КАК ПостатейныеПостоянныеУпр,
	|	СУММА(СтоимостьТоваров.ПостатейныеПеременныеУпр)                    КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьТоваров.ДокументДвижения								КАК ДокументДвижения,
	|		СтоимостьТоваров.Период 										КАК Период,
	|
	|		СтоимостьТоваров.Организация 									КАК Организация,
	|		СтоимостьТоваров.АналитикаУчетаНоменклатуры 					КАК АналитикаУчетаНоменклатуры,
	|		СтоимостьТоваров.ВидЗапасов 									КАК ВидЗапасов,
	|		СтоимостьТоваров.РазделУчета 									КАК РазделУчета,
	|		СтоимостьТоваров.Партия					 	  					КАК Партия,
	|		СтоимостьТоваров.АналитикаУчетаПартий		  					КАК АналитикаУчетаПартий,
	|		СтоимостьТоваров.АналитикаФинансовогоУчета	  					КАК АналитикаФинансовогоУчета,
	|		СтоимостьТоваров.ВидДеятельностиНДС		 	  					КАК ВидДеятельностиНДС,
	|
	|		СтоимостьТоваров.Стоимость		 	  							КАК Стоимость,
	|		СтоимостьТоваров.СтоимостьБезНДС		 	  					КАК СтоимостьБезНДС,
	|		СтоимостьТоваров.СтоимостьЗабалансовая		 	  				КАК СтоимостьЗабалансовая,
	|		СтоимостьТоваров.СтоимостьДопРасходы		 	  				КАК СтоимостьДопРасходы,
	|		СтоимостьТоваров.СтоимостьДопРасходыБезНДС		 	  			КАК СтоимостьДопРасходыБезНДС,
	|		СтоимостьТоваров.Трудозатраты		 	  						КАК Трудозатраты,
	|		СтоимостьТоваров.ПостатейныеПостоянныеСНДС		 	  			КАК ПостатейныеПостоянныеСНДС,
	|		СтоимостьТоваров.ПостатейныеПостоянныеБезНДС		 	  		КАК ПостатейныеПостоянныеБезНДС,
	|		СтоимостьТоваров.ПостатейныеПеременныеСНДС                   	КАК ПостатейныеПеременныеСНДС,
	|		СтоимостьТоваров.ПостатейныеПеременныеБезНДС                 	КАК ПостатейныеПеременныеБезНДС,
	|
	|		СтоимостьТоваров.СтоимостьРегл		 	  						КАК СтоимостьРегл,
	|		СтоимостьТоваров.СтоимостьЗабалансоваяРегл		 	  			КАК СтоимостьЗабалансоваяРегл,
	|		СтоимостьТоваров.ПостояннаяРазница		 	  					КАК ПостояннаяРазница,
	|		СтоимостьТоваров.ВременнаяРазница		 	  					КАК ВременнаяРазница,
	|		СтоимостьТоваров.ДопРасходыРегл		 	  						КАК ДопРасходыРегл,
	|		СтоимостьТоваров.ТрудозатратыРегл		 	  					КАК ТрудозатратыРегл,
	|		СтоимостьТоваров.ПостатейныеПостоянныеРегл		 	  			КАК ПостатейныеПостоянныеРегл,
	|		СтоимостьТоваров.ПостатейныеПеременныеРегл                   	КАК ПостатейныеПеременныеРегл,
	|
	|		СтоимостьТоваров.СтоимостьУпр                         			КАК СтоимостьУпр,
	|		СтоимостьТоваров.ДопРасходыУпр		 	  						КАК ДопРасходыУпр,
	|		СтоимостьТоваров.ТрудозатратыУпр                         		КАК ТрудозатратыУпр,
	|		СтоимостьТоваров.ПостатейныеПостоянныеУпр                    	КАК ПостатейныеПостоянныеУпр,
	|		СтоимостьТоваров.ПостатейныеПеременныеУпр                    	КАК ПостатейныеПеременныеУпр
	|	ИЗ
	|		ВТСтоимостьПартийТоваровВременная КАК СтоимостьТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СтоимостьТоваров.ДокументДвижения								КАК ДокументДвижения,
	|		СтоимостьТоваров.Период 										КАК Период,
	|
	|		СтоимостьТоваров.Организация 									КАК Организация,
	|		СтоимостьТоваров.АналитикаУчетаНоменклатуры 					КАК АналитикаУчетаНоменклатуры,
	|		СтоимостьТоваров.ВидЗапасов 									КАК ВидЗапасов,
	|		СтоимостьТоваров.РазделУчета 									КАК РазделУчета,
	|		СтоимостьТоваров.Партия					 	  					КАК Партия,
	|		СтоимостьТоваров.АналитикаУчетаПартий		  					КАК АналитикаУчетаПартий,
	|		СтоимостьТоваров.АналитикаФинансовогоУчета	  					КАК АналитикаФинансовогоУчета,
	|		СтоимостьТоваров.ВидДеятельностиНДС		 	  					КАК ВидДеятельностиНДС,
	|
	|		СтоимостьТоваров.Стоимость		 	  							КАК Стоимость,
	|		СтоимостьТоваров.СтоимостьБезНДС		 	  					КАК СтоимостьБезНДС,
	|		СтоимостьТоваров.СтоимостьЗабалансовая		 	  				КАК СтоимостьЗабалансовая,
	|		СтоимостьТоваров.СтоимостьДопРасходы		 	  				КАК СтоимостьДопРасходы,
	|		СтоимостьТоваров.СтоимостьДопРасходыБезНДС		 	  			КАК СтоимостьДопРасходыБезНДС,
	|		СтоимостьТоваров.Трудозатраты		 	  						КАК Трудозатраты,
	|		СтоимостьТоваров.ПостатейныеПостоянныеСНДС		 	  			КАК ПостатейныеПостоянныеСНДС,
	|		СтоимостьТоваров.ПостатейныеПостоянныеБезНДС		 	  		КАК ПостатейныеПостоянныеБезНДС,
	|		СтоимостьТоваров.ПостатейныеПеременныеСНДС                   	КАК ПостатейныеПеременныеСНДС,
	|		СтоимостьТоваров.ПостатейныеПеременныеБезНДС                 	КАК ПостатейныеПеременныеБезНДС,
	|
	|		СтоимостьТоваров.СтоимостьРегл		 	  						КАК СтоимостьРегл,
	|		СтоимостьТоваров.СтоимостьЗабалансоваяРегл		 	  			КАК СтоимостьЗабалансоваяРегл,
	|		СтоимостьТоваров.ПостояннаяРазница		 	  					КАК ПостояннаяРазница,
	|		СтоимостьТоваров.ВременнаяРазница		 	  					КАК ВременнаяРазница,
	|		СтоимостьТоваров.ДопРасходыРегл		 	  						КАК ДопРасходыРегл,
	|		СтоимостьТоваров.ТрудозатратыРегл		 	  					КАК ТрудозатратыРегл,
	|		СтоимостьТоваров.ПостатейныеПостоянныеРегл		 	  			КАК ПостатейныеПостоянныеРегл,
	|		СтоимостьТоваров.ПостатейныеПеременныеРегл                   	КАК ПостатейныеПеременныеРегл,
	|
	|		СтоимостьТоваров.СтоимостьУпр                         			КАК СтоимостьУпр,
	|		СтоимостьТоваров.ДопРасходыУпр		 	  						КАК ДопРасходыУпр,
	|		СтоимостьТоваров.ТрудозатратыУпр                         		КАК ТрудозатратыУпр,
	|		СтоимостьТоваров.ПостатейныеПостоянныеУпр                    	КАК ПостатейныеПостоянныеУпр,
	|		СтоимостьТоваров.ПостатейныеПеременныеУпр                    	КАК ПостатейныеПеременныеУпр
	|	ИЗ
	|		ВТСтоимостьТоваров КАК СтоимостьТоваров
	|	) КАК СтоимостьТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьТоваров.ДокументДвижения,
	|	СтоимостьТоваров.Период,
	|	СтоимостьТоваров.Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.ВидЗапасов,
	|	СтоимостьТоваров.РазделУчета,
	|	СтоимостьТоваров.Партия,
	|	СтоимостьТоваров.АналитикаУчетаПартий,
	|	СтоимостьТоваров.АналитикаФинансовогоУчета,
	|	СтоимостьТоваров.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СтоимостьТоваров.ДокументДвижения														КАК ДокументДвижения,
	|	СтоимостьТоваров.Период 																КАК Период,
	|
	|	СтоимостьТоваров.Организация 															КАК Организация,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры 											КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.ВидЗапасов 															КАК ВидЗапасов,
	|	СтоимостьТоваров.РазделУчета 															КАК РазделУчета,
	|
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.Стоимость * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Стоимость,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьБезНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансовая * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансовая,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходы * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходы,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходыБезНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.Трудозатраты * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Трудозатраты,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеСНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеСНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостояннаяРазница * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостояннаяРазница,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ВременнаяРазница * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ВременнаяРазница,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеРегл * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеРегл,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьУпр * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьУпр,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыУпр * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыУпр,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыУпр * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыУпр,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеУпр * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеУпр,
	|	СУММА(
	|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеУпр * СтоимостьТоваров.Количество
	|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВТСтоимостьТоваров КАК СтоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОборотыКоличествоБезПартий КАК Обороты
	|			ПО СтоимостьТоваров.АналитикаУчетаНоменклатуры  = Обороты.АналитикаУчетаНоменклатуры
	|			И СтоимостьТоваров.РазделУчета 					= Обороты.РазделУчета
	|			И СтоимостьТоваров.ВидЗапасов 					= Обороты.ВидЗапасов
	|			И СтоимостьТоваров.Организация 					= Обороты.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьТоваров.ДокументДвижения,
	|	СтоимостьТоваров.Период,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.РазделУчета,
	|	СтоимостьТоваров.ВидЗапасов,
	|	СтоимостьТоваров.Организация,
	|	Обороты.Количество
	|";
	
	// Сформируем движения по регистру сведений СтоимостьТоваров (без партий)
	РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
		ПараметрыРасчета,
		Метаданные.РегистрыСведений.СтоимостьТоваров.Имя,
		Запрос);
	
	// Добавим в протокол информацию об узлах с переполнением поля
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(ПараметрыРасчета, "ВТУзлыСПереполнениемПоля")
	 И РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТУзлыСПереполнениемПоля") > 0 Тогда
		
		СтрокаПротокола = "";
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Организация КАК Организация,
		|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Т.Партия КАК Партия,
		|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС
		|ИЗ
		|	ВТУзлыСПереполнениемПоля КАК Т
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	Партия,
		|	ВидДеятельностиНДС";
		
		Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаПротокола = СтрокаПротокола + ?(СтрокаПротокола = "", "", Символы.ПС)
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Организация: ""%1"", Аналитика номенклатуры: ""%2"", Партия: ""%3"", Вид деятельности НДС: ""%4"",'"),
					Выборка.Организация,
					Выборка.АналитикаУчетаНоменклатуры,
					Выборка.Партия,
					Выборка.ВидДеятельностиНДС);
					
		КонецЦикла;
		
		СтрокаПротокола =
			НСтр("ru='Стоимость некоторых аналитик номенклатуры не может быть рассчитана при решении СЛУ.
				|Возможные причины: превышение расходов над приходами и начальными остатками или зацикливание движений.'")
			+ Символы.ПС + СтрокаПротокола;
		
		РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
		
	КонецЕсли;
	
	// Завершим расчет
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТОборотыКоличествоСПартиями, ВТОстаткиСтоимости, ВТСтоимостьТоваровБезВидаУчета,
		|ВТОборотыКоличествоБезПартий, ВТСтоимостьТоваров, ВТСтоимостьПартийТоваровВременная");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры


// Этап 3.10
// Формирует временную таблицу узлов корректировки - ВтУзлыКорректировки.
//
Процедура СформироватьУзлыКорректировкиСписанияСтоимостиРегл(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьУзлыКорректировкиСписанияСтоимостиРегл");
	
	ТекстЗапроса =
	"
	// Данные об аналитике для расчета.
	|//ПредварительныйРасчет ВЫБРАТЬ РАЗЛИЧНЫЕ
	|//ПредварительныйРасчет	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПредварительныйРасчет	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПредварительныйРасчет	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПредварительныйРасчет ПОМЕСТИТЬ ВтАналитикаНоменклатуры
	|//ПредварительныйРасчет ИЗ
	|//ПредварительныйРасчет	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|//ПредварительныйРасчет
	|//ПредварительныйРасчет ОБЪЕДИНИТЬ
	|//ПредварительныйРасчет 
	|//ПредварительныйРасчет ВЫБРАТЬ
	|//ПредварительныйРасчет	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПредварительныйРасчет	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПредварительныйРасчет	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПредварительныйРасчет ИЗ
	|//ПредварительныйРасчет	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|//ПредварительныйРасчет		РазделУчета = Значение(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|//ПредварительныйРасчет		И Организация В (&МассивОрганизаций)
	|//ПредварительныйРасчет	) КАК УчетСебестоимости
	|//ПредварительныйРасчет ;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// Данные о движении товаров за период.
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация                КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.РазделУчета                КАК РазделУчета,
	|	ВложенныйЗапрос.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Партия
	|	КОНЕЦ									   КАК Партия,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаУчетаПартий
	|	КОНЕЦ									   КАК АналитикаУчетаПартий,
	|	ВложенныйЗапрос.КодСтрокиПродукция         КАК КодСтрокиПродукция,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаФинансовогоУчета
	|	КОНЕЦ									   КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.ВидДеятельностиНДС
	|	КОНЕЦ									   КАК ВидДеятельностиНДС,
	|	ВложенныйЗапрос.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов             КАК СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов          КАК АналитикаРасходов,
	|	СУММА(ВложенныйЗапрос.ВесГраф_1)		   КАК ВесГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.СтоимостьГраф_1) < 0 И СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			- ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДопРасходыГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ТрудозатратыГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПостоянныеГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПеременныеГраф_1) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеГраф_1,
	|	(ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.СтоимостьГраф_1) < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК СтоимостьЗнакГраф_1,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьЗабалансовая) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ПостояннаяРазница) < 0 И СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				-ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостояннаяРазница) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостояннаяРазница) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.ПостояннаяРазница) < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК ПостояннаяРазницаЗнак,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.ВременнаяРазница) < 0 И СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				-ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ВременнаяРазница) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			КОГДА СУММА(ВложенныйЗапрос.ВесГраф_1) <> 0 ТОГДА
	|				ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ВременнаяРазница) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_1)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(28,10))  КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.ВременнаяРазница) < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК ВременнаяРазницаЗнак,
	
	|	СУММА(ВложенныйЗапрос.ВесГраф_2) КАК ВесГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.СтоимостьГраф_2) < 0 И СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			- ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.СтоимостьГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК СтоимостьГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДопРасходыГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ДопРасходыГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ТрудозатратыГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ТрудозатратыГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПостоянныеГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА СУММА(ВложенныйЗапрос.ВесГраф_2) <> 0 ТОГДА
	|			ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ПостатейныеПеременныеГраф_2) КАК ЧИСЛО(28,10)) / СУММА(ВложенныйЗапрос.ВесГраф_2)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеГраф_2,
	|	(ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.СтоимостьГраф_2) < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК СтоимостьЗнакГраф_2
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|
	|	(ВЫБРАТЬ
			// Данные по всем движениям за период. По "внешним" приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		(ВЫБОР
	|			КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И УчетСебестоимости.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|				ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ) КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0										     КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	// Показатели узла 1го графа. Данные для расчета ресурса СтоимостьРегл.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВесГраф_1,
	|		
	|		ВЫБОР КОГДА НЕ &УчитыватьКорректировкиСтоимости
	|		  И УчетСебестоимости.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости), ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
	|			ТОГДА 0
	|		КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.РасчетСебестоимости
	|				ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.Количество <> 0 ИЛИ &СредняяЗаМесяц ИЛИ &ПартионныйУчетВерсии22)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК СтоимостьГраф_1,
	|		
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход И &ПартионныйУчетВерсии22
	|				ТОГДА УчетСебестоимости.ДопРасходыРегл
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|				И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|				И УчетСебестоимости.Количество = 0
	|				И НЕ &СредняяЗаМесяц
	|				И НЕ УчетСебестоимости.РасчетСебестоимости
	|			ТОГДА
	|				УчетСебестоимости.СтоимостьРегл
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ДопРасходыГраф_1,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ТрудозатратыРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ТрудозатратыГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостатейныеПостоянныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостатейныеПеременныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьЗабалансоваяРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СтоимостьЗабалансовая,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостояннаяРазница,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВременнаяРазница,

	// Показатели узла 2го графа. Данные для расчета ресурса СтоимостьУпр.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВесГраф_2,
	
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.РасчетСебестоимости
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.Количество <> 0 ИЛИ &СредняяЗаМесяц ИЛИ &ПартионныйУчетВерсии22)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК СтоимостьГраф_2,
	|
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход И &ПартионныйУчетВерсии22
	|				ТОГДА УчетСебестоимости.ДопРасходыУпр
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|				И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|				И УчетСебестоимости.Количество = 0
	|				И НЕ &СредняяЗаМесяц
	|				И НЕ УчетСебестоимости.РасчетСебестоимости
	|			ТОГДА
	|				УчетСебестоимости.СтоимостьУпр
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ДопРасходыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ТрудозатратыУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ТрудозатратыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|	ГДЕ
	|		 НЕ (&ПредварительныйРасчет И УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.КорректировкаПриобретения))
	|		//ПредварительныйРасчет    	И
	|		//ПредварительныйРасчет    		(УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет			УчетСебестоимости.РазделУчета,
	|		//ПредварительныйРасчет			УчетСебестоимости.ВидЗапасов)
	|		//ПредварительныйРасчет				В
	|		//ПредварительныйРасчет				(ВЫБРАТЬ
	|		//ПредварительныйРасчет					АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет					РазделУчета,
	|		//ПредварительныйРасчет					ВидЗапасов
	|		//ПредварительныйРасчет			 	ИЗ ВтАналитикаНоменклатуры)
	|	
	////////////////////// Эта часть для предварительного расчета стоимости.
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные по всем движениям за период. По "внешним" приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		(ВЫБОР
	|			КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			 И УчетСебестоимости.Количество < 0
	|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|				ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ) КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0										     КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	// Показатели узла 1го графа. Данные для расчета ресурса СтоимостьРегл.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВесГраф_1,
	|		
	|		ВЫБОР КОГДА НЕ &УчитыватьКорректировкиСтоимости
	|		  И УчетСебестоимости.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости), ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
	|			ТОГДА 0
	|		КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.РасчетСебестоимости
	|				ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.Количество <> 0 ИЛИ &СредняяЗаМесяц ИЛИ &ПартионныйУчетВерсии22)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК СтоимостьГраф_1,
	|		
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход И &ПартионныйУчетВерсии22
	|				ТОГДА УчетСебестоимости.ДопРасходыРегл
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|				И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|				И УчетСебестоимости.Количество = 0
	|				И НЕ &СредняяЗаМесяц
	|				И НЕ УчетСебестоимости.РасчетСебестоимости
	|			ТОГДА
	|				УчетСебестоимости.СтоимостьРегл
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ДопРасходыГраф_1,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ТрудозатратыРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ТрудозатратыГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостатейныеПостоянныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостатейныеПеременныеГраф_1,
	
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.СтоимостьЗабалансоваяРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СтоимостьЗабалансовая,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостояннаяРазница,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВременнаяРазница,

	// Показатели узла 2го графа. Данные для расчета ресурса СтоимостьУпр.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			 И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|				ТОГДА УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВесГраф_2,
	
	|		ВЫБОР КОГДА (УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|		 И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		 И УчетСебестоимости.Количество = 0
	|		 И (НЕ &ПредварительныйРасчет
	|				ИЛИ УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)) ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.РасчетСебестоимости
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|
	|		КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|			И УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И (УчетСебестоимости.Количество <> 0 ИЛИ &СредняяЗаМесяц ИЛИ &ПартионныйУчетВерсии22)
	|		ТОГДА
	|			УчетСебестоимости.СтоимостьУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК СтоимостьГраф_2,
	|
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход И &ПартионныйУчетВерсии22
	|				ТОГДА УчетСебестоимости.ДопРасходыУпр
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&МассивОперацийПоступление)
	|				И УчетСебестоимости.СлужебноеВидДвиженияПриход
	|				И УчетСебестоимости.Количество = 0
	|				И НЕ &СредняяЗаМесяц
	|				И НЕ УчетСебестоимости.РасчетСебестоимости
	|			ТОГДА
	|				УчетСебестоимости.СтоимостьУпр
	|			КОГДА УчетСебестоимости.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|			ТОГДА
	|				-УчетСебестоимости.ДопРасходыУпр
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ДопРасходыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ТрудозатратыУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ТрудозатратыГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПостоянныеУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПостоянныеГраф_2,
	
	|		ВЫБОР КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход ТОГДА
	|				УчетСебестоимости.ПостатейныеПеременныеУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТПромежуточнаяСебестоимостьТоваров КАК УчетСебестоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|			ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|			И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|	ГДЕ
	|		 УчетСебестоимости.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
	|		//ПредварительныйРасчет    		И (УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет			УчетСебестоимости.РазделУчета,
	|		//ПредварительныйРасчет			УчетСебестоимости.ВидЗапасов)
	|		//ПредварительныйРасчет				В
	|		//ПредварительныйРасчет				(ВЫБРАТЬ
	|		//ПредварительныйРасчет					АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет					РазделУчета,
	|		//ПредварительныйРасчет					ВидЗапасов
	|		//ПредварительныйРасчет			 	ИЗ ВтАналитикаНоменклатуры)
	|
	// Уменьшение количества в узле при встречных перемещениях в один и тот же узел.
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                   КАК Организация,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.КорРазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.КорВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.КорПартия                     КАК Партия,
	|		УчетСебестоимости.КорАналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0       									    КАК КодСтрокиПродукция,
	|		УчетСебестоимости.КорАналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.КорВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	// Показатели граф 1.
	|		-УчетСебестоимости.Количество КАК ВесГраф_1,
	|		0 КАК СтоимостьГраф_1,
	|		0 КАК ДопРасходыГраф_1,
	|		0 КАК ТрудозатратыГраф_1,
	|		0 КАК ПостатейныеПостоянныеГраф_1,
	|		0 КАК ПостатейныеПеременныеГраф_1,
	|		0 КАК СтоимостьЗабалансовая,
	|		0 КАК ПостояннаяРазница,
	|		0 КАК ВременнаяРазница,
	// Показатели граф 2.
	|		-УчетСебестоимости.Количество КАК ВесГраф_2,
	|		0 КАК СтоимостьГраф_2,
	|		0 КАК ДопРасходыГраф_2,
	|		0 КАК ТрудозатратыГраф_2,
	|		0 КАК ПостатейныеПостоянныеГраф_2,
	|		0 КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|	ГДЕ
	|		 УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|		 И УчетСебестоимости.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		 И УчетСебестоимости.КорАналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		 И УчетСебестоимости.КорРазделУчета = УчетСебестоимости.РазделУчета
	|		 И УчетСебестоимости.КорВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		 И УчетСебестоимости.КорПартия = УчетСебестоимости.Партия
	|		 И УчетСебестоимости.КорАналитикаУчетаПартий = УчетСебестоимости.АналитикаУчетаПартий
	|		 И УчетСебестоимости.КорАналитикаФинансовогоУчета = УчетСебестоимости.АналитикаФинансовогоУчета
	|		 И УчетСебестоимости.КорВидДеятельностиНДС = УчетСебестоимости.ВидДеятельностиНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные по всем движениям за период. По "внешним" приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|		0										     КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	        // Показатели граф 1.
	|		УчетСебестоимости.Количество 					КАК ВесГраф_1,
	|		УчетСебестоимости.СтоимостьРегл 				КАК СтоимостьГраф_1,
	|		УчетСебестоимости.ДопРасходыРегл 				КАК ДопРасходыГраф_1,
	|		УчетСебестоимости.ТрудозатратыРегл 				КАК ТрудозатратыГраф_1,
	|		УчетСебестоимости.ПостатейныеПостоянныеРегл 	КАК ПостатейныеПостоянныеГраф_1,
	|		УчетСебестоимости.ПостатейныеПеременныеРегл 	КАК ПостатейныеПеременныеГраф_1,
	|		УчетСебестоимости.СтоимостьЗабалансоваяРегл 	КАК СтоимостьЗабалансовая,
	|		УчетСебестоимости.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|		УчетСебестоимости.ВременнаяРазница 				КАК ВременнаяРазница,
	        // Показатели граф 2.
	|		УчетСебестоимости.Количество                 	КАК ВесГраф_2,
	|		УчетСебестоимости.СтоимостьУпр               	КАК СтоимостьГраф_2,
	|		УчетСебестоимости.ДопРасходыУпр              	КАК ДопРасходыГраф_2,
	|		УчетСебестоимости.ТрудозатратыУпр            	КАК ТрудозатратыГраф_2,
	|		УчетСебестоимости.ПостатейныеПостоянныеУпр  	КАК ПостатейныеПостоянныеГраф_2,
	|		УчетСебестоимости.ПостатейныеПеременныеУпр   	КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		ВТВозвраты КАК УчетСебестоимости
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Доп. расходы
	|	ВЫБРАТЬ
	|		Таблица.Организация                							КАК Организация,
	|		Таблица.АналитикаУчетаНоменклатуры 							КАК АналитикаУчетаНоменклатуры,
	|		Таблица.РазделУчета                							КАК РазделУчета,
	|		Таблица.ВидЗапасов                 							КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО                     			 				КАК Партия,
	|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|		0										    				КАК КодСтрокиПродукция,
	|		НЕОПРЕДЕЛЕНО  								 				КАК АналитикаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	        // Показатели граф 1.
	|		0                                  							КАК ВесГраф_1,
	|		0                                  							КАК СтоимостьГраф_1,
	|		Таблица.ДопРасходыРегл             							КАК ДопРасходыГраф_1,
	|		0                                  							КАК ТрудозатратыГраф_1,
	|		0                                  							КАК ПостатейныеПостоянныеГраф_1,
	|		0                                  							КАК ПостатейныеПеременныеГраф_1,
	|		0                                  							КАК СтоимостьЗабалансовая,
	|		0                                  							КАК ПостояннаяРазница,
	|		0                                  							КАК ВременнаяРазница,
	        // Показатели граф 2.
	|		0                                  							КАК ВесГраф_2,
	|		0                                  							КАК СтоимостьГраф_2,
	|		Таблица.ДопРасходыУпр             							КАК ДопРасходыГраф_2,
	|		0                                  							КАК ТрудозатратыГраф_2,
	|		0                                  							КАК ПостатейныеПостоянныеГраф_2,
	|		0                                  							КАК ПостатейныеПеременныеГраф_2
	|
	|	ИЗ
	|		ВТДопРасходов КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Данные по остаткам на начало расчетного периода.
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                           	КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры            	КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                           	КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                            	КАК ВидЗапасов,
	|		УчетСебестоимости.Партия                     				КАК Партия,
	|		УчетСебестоимости.АналитикаУчетаПартий       				КАК АналитикаУчетаПартий,
	|		0										    				КАК КодСтрокиПродукция,
	|		УчетСебестоимости.АналитикаФинансовогоУчета  				КАК АналитикаФинансовогоУчета,
	|		УчетСебестоимости.ВидДеятельностиНДС         				КАК ВидДеятельностиНДС,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                       							КАК АналитикаРасходов,
	        // Показатели граф 1.
	|		УчетСебестоимости.КоличествоОстаток 				КАК ВесГраф_1,
	|		УчетСебестоимости.СтоимостьРеглОстаток 				КАК СтоимостьГраф_1,
	|		УчетСебестоимости.ДопРасходыРеглОстаток 			КАК ДопРасходыГраф_1,
	|		УчетСебестоимости.ТрудозатратыРеглОстаток 			КАК ТрудозатратыГраф_1,
	|		УчетСебестоимости.ПостатейныеПостоянныеРеглОстаток 	КАК ПостатейныеПостоянныеГраф_1,
	|		УчетСебестоимости.ПостатейныеПеременныеРеглОстаток 	КАК ПостатейныеПеременныеГраф_1,
	|		УчетСебестоимости.СтоимостьЗабалансоваяРеглОстаток 	КАК СтоимостьЗабалансовая,
	|		УчетСебестоимости.ПостояннаяРазницаОстаток 			КАК ПостояннаяРазница,
	|		УчетСебестоимости.ВременнаяРазницаОстаток 			КАК ВременнаяРазница,
	        // Показатели граф 2.
	|		УчетСебестоимости.КоличествоОстаток					КАК ВесГраф_2,
	|		УчетСебестоимости.СтоимостьУпрОстаток 				КАК СтоимостьГраф_2,
	|		УчетСебестоимости.ДопРасходыУпрОстаток 				КАК ДопРасходыГраф_2,
	|		УчетСебестоимости.ТрудозатратыУпрОстаток			КАК ТрудозатратыГраф_2,
	|		УчетСебестоимости.ПостатейныеПостоянныеУпрОстаток 	КАК ПостатейныеПостоянныеГраф_2,
	|		УчетСебестоимости.ПостатейныеПеременныеУпрОстаток 	КАК ПостатейныеПеременныеГраф_2
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&ГраницаНачалоПериода,
	|			Организация В (&МассивОрганизаций)
	|			//ПредварительныйРасчет И (АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов)
	|			//ПредварительныйРасчет В
	|			//ПредварительныйРасчет (ВЫБРАТЬ
	|			//ПредварительныйРасчет 	АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов
	|			//ПредварительныйРасчет	ИЗ ВтАналитикаНоменклатуры)
	|		) КАК УчетСебестоимости
	|	ГДЕ
	|		УчетСебестоимости.КоличествоОстаток <> 0
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.РазделУчета,
	|	ВложенныйЗапрос.Организация,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Партия
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаУчетаПартий
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КодСтрокиПродукция,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.АналитикаФинансовогоУчета
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &РегламентноеЗадание
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ ВложенныйЗапрос.ВидДеятельностиНДС
	|	КОНЕЦ,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов
	|";
	
	ТекстЗапроса = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПредварительныйРасчет", "");
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВтУзлыКорректировки");
	
	Если НЕ ПараметрыРасчета.ПредварительныйРасчет
	 И ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОВзвешеннаяОценка Тогда
		ПодготовитьДанныеДляРасчетаСтоимостиРеглПоФИФО(ПараметрыРасчета, Запрос); // корректировка ВтУзлыКорректировки
	КонецЕсли;

	Если НЕ ПараметрыРасчета.ПредварительныйРасчет Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтАналитикаНоменклатуры");
	КонецЕсли;
	
	ПараметрыНумерации = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"АналитикаУчетаНоменклатуры", // разделитель
		, // без группировки
		"АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
			|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС", // порядок
		"НомерУзла", // поле номера
		"АналитикаУчетаНоменклатуры"); // индекс
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВтУзлыКорректировки");
	
	ПараметрыРасчета.КоличествоУзловРегл =
		РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВтУзлыКорректировки");

	ПодготовитьДанныеДляРаспределенияРезервов(ПараметрыРасчета, Истина);
	
КонецПроцедуры


// Этап 3.14
// Процедура рассчитывает отклонения в суммах движений по регистру СебестоимостьТоваров от рассчитанной себестоимости 
// и производит корректировку движений следующих регистров:
// СебестоимостьТоваров, ПрочиеРасходы
//
Процедура СкорректироватьСтоимостьСписанияЗапасов(ПараметрыРасчета)

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьСписанияЗапасов");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Организация,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
	|ПОМЕСТИТЬ
	|	ЕстьВозвратныеОтходы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И ДД.Количество < 0
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор,
	|	ДД.РазделУчета,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ВидЗапасов,
	|	ДД.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорВидЗапасов,
	|	ДД.АналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
	|	ИСТИНА КАК РаботаДляДавальца
	|ПОМЕСТИТЬ
	|	РаботыДляДавальца
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	КорАналитикаУчетаНоменклатуры,
	|	КорВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетСебестоимости.Период                        	КАК Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                   							КАК ВидДвижения,
	|	УчетСебестоимости.Регистратор                   	КАК ДокументДвижения,
	|	УчетСебестоимости.Организация                   	КАК Организация,
	|	АналитикаНоменклатуры.МестоХранения             	КАК Склад,
	|	АналитикаНоменклатуры.Номенклатура             		КАК Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры    	КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|		ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ) КАК РазделУчета,
	|	УчетСебестоимости.ВидЗапасов                    	КАК ВидЗапасов,
	|	УчетСебестоимости.ВидЗапасов.ТипЗапасов            	КАК ТипЗапасов,
	|	УчетСебестоимости.ХозяйственнаяОперация         	КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры 	КАК КорАналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения          	КАК КорСклад,
	|	КорАналитикаНоменклатуры.Номенклатура           	КАК КорНоменклатура,
	|	УчетСебестоимости.КорРазделУчета                	КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов                 	КАК КорВидЗапасов,
	|	УчетСебестоимости.КорВидЗапасов.ТипЗапасов         	КАК КорТипЗапасов,
	|	УчетСебестоимости.КорОрганизация                	КАК КорОрганизация,
	|	УчетСебестоимости.Подразделение                 	КАК Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам     	КАК АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента                  	КАК ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов            		КАК АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания        	КАК СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр		  КАК ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл		  КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ) КАК ПринятиеКНалоговомуУчету,
	|	УчетСебестоимости.СтатьяДоходов                 	КАК СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов              	КАК АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов         	КАК СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов      	КАК АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки           	КАК ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки                     	КАК КодСтроки,
	|	УчетСебестоимости.ПериодПродажи                 	КАК ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции               	КАК ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	УчетСебестоимости.КорНаправлениеДеятельности        КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL
	|	 И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 												КАК СторноОтчетПоКомиссии,
	|	УчетСебестоимости.Партия                          	КАК Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия                 		КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий           КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета      КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС             КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи                 		КАК ТипЗаписи,
	|	УчетСебестоимости.ДокументИсточник                 	КАК ДокументИсточник,
	|	ЕСТЬNULL(РаботыДляДавальца.РаботаДляДавальца, ЛОЖЬ) КАК ПродукцияДавальца,
	|	ЛОЖЬ												КАК РаботаДляДавальца,
	|	СУММА(УчетСебестоимости.Количество)        			КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость)              	КАК Стоимость,
	|	СУММА(УчетСебестоимости.СтоимостьБезНДС)        	КАК СтоимостьБезНДС,
	|	СУММА(УчетСебестоимости.СтоимостьРегл)          	КАК СтоимостьРегл,
	|	СУММА(УчетСебестоимости.ПостояннаяРазница)      	КАК ПостояннаяРазница,
	|	СУММА(УчетСебестоимости.ВременнаяРазница)       	КАК ВременнаяРазница,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансовая)      КАК СтоимостьЗабалансовая,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансоваяРегл)  КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(УчетСебестоимости.КорСтоимость)           	КАК КорСтоимость,
	|	СУММА(УчетСебестоимости.НДСРегл)           			КАК НДСРегл,
	|	СУММА(УчетСебестоимости.СтоимостьУпр)              	КАК СтоимостьУпр,
	|	СУММА(УчетСебестоимости.НДСУпр)           			КАК НДСУпр
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО УчетСебестоимости.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитикаНоменклатуры
	|		ПО УчетСебестоимости.КорАналитикаУчетаНоменклатуры = КорАналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ СторноОтчетыКомиссионера КАК СторноОтчетыКомиссионера
	|		ПО СторноОтчетыКомиссионера.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И СторноОтчетыКомиссионера.РазделУчета = УчетСебестоимости.РазделУчета
	|		И СторноОтчетыКомиссионера.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И СторноОтчетыКомиссионера.Организация = УчетСебестоимости.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Назначения.Ссылка = АналитикаНоменклатуры.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|		ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|		И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РаботыДляДавальца КАК РаботыДляДавальца
	|		ПО РаботыДляДавальца.Регистратор = УчетСебестоимости.Регистратор
	|		И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = УчетСебестоимости.КорАналитикаУчетаНоменклатуры
	|		И РаботыДляДавальца.КорВидЗапасов = УчетСебестоимости.КорВидЗапасов
	|		И РаботыДляДавальца.КорАналитикаУчетаПартий = УчетСебестоимости.КорАналитикаУчетаПартий
	|ГДЕ
	|	(НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		И НЕ УчетСебестоимости.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|		ИЛИ (УчетСебестоимости.Количество <> 0
	|			 И УчетСебестоимости.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))))
	|	И УчетСебестоимости.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	УчетСебестоимости.Регистратор,
	|	УчетСебестоимости.Организация,
	|	АналитикаНоменклатуры.МестоХранения,
	|	АналитикаНоменклатуры.Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ),
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.ВидЗапасов.ТипЗапасов,
	|	УчетСебестоимости.ХозяйственнаяОперация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения,
	|	КорАналитикаНоменклатуры.Номенклатура,
	|	УчетСебестоимости.КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов,
	|	УчетСебестоимости.КорВидЗапасов.ТипЗапасов,
	|	УчетСебестоимости.КорОрганизация,
	|	УчетСебестоимости.Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ),
	|	УчетСебестоимости.СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки,
	|	УчетСебестоимости.ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	УчетСебестоимости.КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL
	|	 И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	УчетСебестоимости.Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи,
	|	УчетСебестоимости.ДокументИсточник,
	|	ЕСТЬNULL(РаботыДляДавальца.РаботаДляДавальца, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	УчетСебестоимости.Период                        	КАК Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                   							КАК ВидДвижения,
	|	УчетСебестоимости.Регистратор                   	КАК ДокументДвижения,
	|	УчетСебестоимости.Организация                   	КАК Организация,
	|	АналитикаНоменклатуры.МестоХранения             	КАК Склад,
	|	АналитикаНоменклатуры.Номенклатура             		КАК Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры    	КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|		ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ) КАК РазделУчета,
	|	УчетСебестоимости.ВидЗапасов                    	КАК ВидЗапасов,
	|	УчетСебестоимости.ВидЗапасов.ТипЗапасов            	КАК ТипЗапасов,
	|	УчетСебестоимости.ХозяйственнаяОперация         	КАК ХозяйственнаяОперация,
	|	РаботыДляДавальца.АналитикаУчетаНоменклатуры 		КАК КорАналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения          	КАК КорСклад,
	|	КорАналитикаНоменклатуры.Номенклатура           	КАК КорНоменклатура,
	|	РаботыДляДавальца.РазделУчета                		КАК КорРазделУчета,
	|	РаботыДляДавальца.ВидЗапасов                 		КАК КорВидЗапасов,
	|	РаботыДляДавальца.ТипЗапасов         				КАК КорТипЗапасов,
	|	УчетСебестоимости.КорОрганизация                	КАК КорОрганизация,
	|	УчетСебестоимости.Подразделение                 	КАК Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам     	КАК АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента                  	КАК ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов            		КАК АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания        	КАК СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр		  КАК ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл		  КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ) КАК ПринятиеКНалоговомуУчету,
	|	УчетСебестоимости.СтатьяДоходов                 	КАК СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов              	КАК АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов         	КАК СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов      	КАК АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки           	КАК ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки                     	КАК КодСтроки,
	|	УчетСебестоимости.ПериодПродажи                 	КАК ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции               	КАК ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	УчетСебестоимости.КорНаправлениеДеятельности        КАК КорНаправлениеДеятельности,
	|	ЛОЖЬ 												КАК СторноОтчетПоКомиссии,
	|	УчетСебестоимости.Партия                          	КАК Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия                 		КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий           КАК КорАналитикаУчетаПартий,
	|	РаботыДляДавальца.АналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС             КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи                 		КАК ТипЗаписи,
	|	УчетСебестоимости.ДокументИсточник                 	КАК ДокументИсточник,
	|	ЛОЖЬ												КАК ПродукцияДавальца,
	|	ИСТИНА												КАК РаботаДляДавальца,
	|	СУММА(УчетСебестоимости.Количество)        			КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость)              	КАК Стоимость,
	|	СУММА(УчетСебестоимости.СтоимостьБезНДС)        	КАК СтоимостьБезНДС,
	|	СУММА(УчетСебестоимости.СтоимостьРегл)          	КАК СтоимостьРегл,
	|	СУММА(УчетСебестоимости.ПостояннаяРазница)      	КАК ПостояннаяРазница,
	|	СУММА(УчетСебестоимости.ВременнаяРазница)       	КАК ВременнаяРазница,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансовая)      КАК СтоимостьЗабалансовая,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансоваяРегл)  КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(УчетСебестоимости.КорСтоимость)           	КАК КорСтоимость,
	|	СУММА(УчетСебестоимости.НДСРегл)           			КАК НДСРегл,
	|	СУММА(УчетСебестоимости.СтоимостьУпр)              	КАК СтоимостьУпр,
	|	СУММА(УчетСебестоимости.НДСУпр)           			КАК НДСУпр
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаботыДляДавальца КАК РаботыДляДавальца
	|		ПО РаботыДляДавальца.Регистратор = УчетСебестоимости.Регистратор
	|		И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = УчетСебестоимости.КорАналитикаУчетаНоменклатуры
	|		И РаботыДляДавальца.КорВидЗапасов = УчетСебестоимости.КорВидЗапасов
	|		И РаботыДляДавальца.КорАналитикаУчетаПартий = УчетСебестоимости.КорАналитикаУчетаПартий
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО УчетСебестоимости.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитикаНоменклатуры
	|		ПО РаботыДляДавальца.АналитикаУчетаНоменклатуры = КорАналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Назначения.Ссылка = АналитикаНоменклатуры.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|		ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|		И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|ГДЕ
	|	НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	УчетСебестоимости.Регистратор,
	|	УчетСебестоимости.Организация,
	|	АналитикаНоменклатуры.МестоХранения,
	|	АналитикаНоменклатуры.Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ),
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.ВидЗапасов.ТипЗапасов,
	|	УчетСебестоимости.ХозяйственнаяОперация,
	|	РаботыДляДавальца.АналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения,
	|	КорАналитикаНоменклатуры.Номенклатура,
	|	РаботыДляДавальца.РазделУчета,
	|	РаботыДляДавальца.ВидЗапасов,
	|	РаботыДляДавальца.ТипЗапасов,
	|	УчетСебестоимости.КорОрганизация,
	|	УчетСебестоимости.Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ),
	|	УчетСебестоимости.СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки,
	|	УчетСебестоимости.ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	УчетСебестоимости.КорНаправлениеДеятельности,
	|	УчетСебестоимости.Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий,
	|	РаботыДляДавальца.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи,
	|	УчетСебестоимости.ДокументИсточник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация,
	|	РазделУчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ТаблицаКорректировки.РазделУчета КОНЕЦ) КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ЕСТЬNULL(ТаблицаКорректировки.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ЕСТЬNULL(ТаблицаКорректировки.КорТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями))
	|			И (ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьРегл) < 0
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаРасходов КОНЕЦ) КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями))
	|			И (ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьРегл) < 0
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяРасходовСписания КОНЕЦ) КАК СтатьяРасходовСписания,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписанияУпр,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями))
	|			И (ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьРегл) > 0
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяДоходов КОНЕЦ) КАК СтатьяДоходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями))
	|			И (ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2))
	|				+ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьРегл) > 0
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаДоходов КОНЕЦ) КАК АналитикаДоходов,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходовУпр,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаКорректировки.ТипЗаписи                 	   КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	//++ Локализация
	//-- Локализация
	|	
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаКорректировки.ВидЗапасов
	|		ИНАЧЕ 
	|			ТаблицаКорректировки.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаКорректировки.КорВидЗапасов
	|		ИНАЧЕ 
	|			ТаблицаКорректировки.КорНоменклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (&МассивОперацийПередачи) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                              КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА - ТаблицаКорректировки.Стоимость
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.Стоимость, 0) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.Стоимость
	|	КОНЕЦ) КАК Стоимость,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.РаботаДляДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.СтоимостьЗабалансовая
	|	КОНЕЦ) КАК СтоимостьЗабалансовая,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА - ТаблицаКорректировки.СтоимостьБезНДС
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьБезНДС, 0) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.СтоимостьБезНДС
	|	КОНЕЦ) КАК СтоимостьБезНДС,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(
	|			ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьТоваров.ПостояннаяРазница, 0)  КАК ЧИСЛО(31,2))
	|		 	- ТаблицаКорректировки.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(
	|			ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьТоваров.ВременнаяРазница, 0)  КАК ЧИСЛО(31,2))
	|		 	- ТаблицаКорректировки.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьДопРасходы, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ДопРасходы,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.СтоимостьДопРасходыБезНДС, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ДопРасходыБезНДС,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.Трудозатраты, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК Трудозатраты,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеСНДС, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеСНДС, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеБезНДС, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ДопРасходыРегл,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ТрудозатратыРегл,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА - ТаблицаКорректировки.СтоимостьРегл
	|		ИНАЧЕ ВЫРАЗИТЬ(
	|			ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|		 	- ТаблицаКорректировки.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.РаботаДляДавальца ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(
	|			ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансоваяРегл, 0) КАК ЧИСЛО(31,2))
	|	 		- ТаблицаКорректировки.СтоимостьЗабалансоваяРегл КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА - ТаблицаКорректировки.СтоимостьУпр
	|		ИНАЧЕ ВЫРАЗИТЬ(
	|			ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпр, 0) КАК ЧИСЛО(31,2))
	|		 	- ТаблицаКорректировки.СтоимостьУпр КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпр, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	КОГДА ТаблицаКорректировки.ПродукцияДавальца ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество * ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(31,2))
	|	КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|
	|	ТаблицаКорректировки.НДСРегл КАК НДСРегл,
	|	ТаблицаКорректировки.НДСУпр КАК НДСУпр,
	|	ТаблицаКорректировки.Стоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.СтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.СтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьРегл КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество
	|
	|ПОМЕСТИТЬ ВтДанныеТаблицаКорректировки
	|
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТСтоимостьПартийТоваров КАК СтоимостьТоваров
	|	ПО 
	|		СтоимостьТоваров.АналитикаУчетаНоменклатуры 	= ТаблицаКорректировки.АналитикаУчетаНоменклатуры
	|		И СтоимостьТоваров.ВидЗапасов               	= ТаблицаКорректировки.ВидЗапасов
	|		И СтоимостьТоваров.Организация              	= ТаблицаКорректировки.Организация
	|		И СтоимостьТоваров.РазделУчета              	= ТаблицаКорректировки.РазделУчета
	|		И СтоимостьТоваров.Партия 						= ТаблицаКорректировки.Партия
	|		И СтоимостьТоваров.АналитикаУчетаПартий 		= ТаблицаКорректировки.АналитикаУчетаПартий
	|		И СтоимостьТоваров.АналитикаФинансовогоУчета 	= ТаблицаКорректировки.АналитикаФинансовогоУчета
	|		И СтоимостьТоваров.ВидДеятельностиНДС 			= ТаблицаКорректировки.ВидДеятельностиНДС
	|		И (ТаблицаКорректировки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление))
	|	
	|ГДЕ
	|	НЕ ТаблицаКорректировки.СторноОтчетПоКомиссии
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаКорректировки.КорТипЗапасов КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаКорректировки.СтатьяРасходовСписанияУпр     КАК СтатьяРасходовСписанияУпр,
	|	ТаблицаКорректировки.АналитикаРасходовУпр          КАК АналитикаРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаКорректировки.СтатьяДоходовУпр              КАК СтатьяДоходовУпр,
	|	ТаблицаКорректировки.АналитикаДоходовУпр           КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаКорректировки.ТипЗаписи                 	   КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	//++ Локализация
	//-- Локализация
	|	
	|	ТаблицаКорректировки.ИсточникГФУНоменклатуры КАК ИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.КорИсточникГФУНоменклатуры КАК КорИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.ЭтоПередачаМеждуОрганизациями КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|	ТаблицаКорректировки.Стоимость КАК Стоимость,
	|	ТаблицаКорректировки.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ТаблицаКорректировки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаКорректировки.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ТаблицаКорректировки.ВременнаяРазница КАК ВременнаяРазница,
	|
	|	ТаблицаКорректировки.ДопРасходы КАК ДопРасходы,
	|
	|	ТаблицаКорректировки.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ТаблицаКорректировки.Трудозатраты КАК Трудозатраты,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	ТаблицаКорректировки.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ТаблицаКорректировки.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	ТаблицаКорректировки.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	ТаблицаКорректировки.СтоимостьРегл КАК СтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ТаблицаКорректировки.СтоимостьУпр КАК СтоимостьУпр,
	|	ТаблицаКорректировки.ДопРасходыУпр КАК ДопРасходыУпр,
	|	ТаблицаКорректировки.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	ТаблицаКорректировки.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|
	|	ТаблицаКорректировки.НДСРегл КАК НДСРегл,
	|	ТаблицаКорректировки.НДСУпр КАК НДСУпр,
	|	ТаблицаКорректировки.ИсходнаяСтоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьУпр КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество,
	|
	|	ВЫБОР
	//++ Устарело_Производство21
	//-- Устарело_Производство21
	|		КОГДА ИСТИНА ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ ЭтоВыпускПродукции,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ ЭтоВозвратМеждуОрганизациями,
	|	
	|	ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС КАК ПолнаяСуммаСНДС,
	|	
	|	ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС КАК ПолнаяСуммаБезНДС,
	|
	|	ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл КАК ПолнаяСуммаРегл,
	|
	|	ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр КАК ПолнаяСуммаУпр,
	|
	|	(ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС)
	|	- ТаблицаКорректировки.КорСтоимость КАК ПолнаяСуммаПереоценки,
	|
	|	Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС КАК СуммаСНДС,
	|	СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС КАК СуммаБезНДС,
	|	СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл КАК СуммаРегл,
	|	СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|			И НачалоПериода(ПериодПродажи, МЕСЯЦ) < НачалоПериода(Период, МЕСЯЦ) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|
	|	ВЫБОР 
	|		КОГДА 
	|			ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС <> 0
	|			
	|			ИЛИ ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС  <> 0
	|		
	|			ИЛИ ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл  <> 0
	|		
	|			ИЛИ ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр  <> 0 ТОГДА
	|			
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ		
	|	
	|	КОНЕЦ КАК ЕстьНенулеваяПолнаяСумма
	|
	|
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировки
	|
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозяйственнаяОперация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтДанныеТаблицаКорректировки
	|";
	
	// Формируются движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
	// Корректировка списания товаров
	СформироватьДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	// Если есть кор. раздел - необходимо скорректировать стоимость в кор. части.
	СформироватьКорДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	СформироватьКорДвиженияСебестоимостьТоваровНеПередачаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
		
	// Сторнирование себестоимости товаров по управленческой организации.
	СформироватьДвиженияСебестоимостьТоваровСторноВУпрУчетеЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	// Корректировка списания товаров на затраты в регистре учет прочих расходов.
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
		
		УсловиеГДЕ = "(
		|	(
		|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУХранителя)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
		|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				И (НЕ СтатьяРасходовСписания ЕСТЬ NULL И СтатьяРасходовСписания <> Неопределено И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
		|				И (НЕ КорОрганизация ЕСТЬ NULL И КорОрганизация <> Неопределено И КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|			)
		|	)
		|)
		| И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		| И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|";
	
		УсловиеГДЕПрочиеАктивыПассивы = УсловиеГДЕ + "
		| И НЕ (СтатьяАктивовПассивов ЕСТЬ NULL ИЛИ СтатьяАктивовПассивов = Неопределено ИЛИ СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		|";
		
		СформироватьДвиженияПрочиеАктивыПассивыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, УсловиеГДЕПрочиеАктивыПассивы);

		УсловиеГДЕПрочиеРасходы = УсловиеГДЕ + "
		| И (СтатьяАктивовПассивов ЕСТЬ NULL ИЛИ СтатьяАктивовПассивов = Неопределено ИЛИ СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		|";
		
		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "(СуммаСНДС + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимость ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "(СуммаБезНДС + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьБезНДС ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "(СуммаРегл + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьРегл ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "(СуммаУпр + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьУпр ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
		
		СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыНаЗатраты", СоответствиеВременныхТаблицДвижений, УсловиеГДЕПрочиеРасходы,
			СтруктураТекстовСуммовыхПоказателей);

	КонецЕсли;
	
	// Формирование прочих доходов\расходов при пересортице
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
	
		УсловиеГДЕ = "
		|	ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|	";

		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "СуммаСНДС - КорСтоимость");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "СуммаБезНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "СуммаРегл");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "СуммаУпр");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
		
		СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыПоПересортице", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "И (СуммаСНДС - КорСтоимость) > 0", СтруктураТекстовСуммовыхПоказателей);
			
		СформироватьДвиженияПрочиеДоходыЗапросом(ПараметрыРасчета, "ВтПрочиеДоходыПоПересортице", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "И (СуммаСНДС - КорСтоимость) < 0",
			"- (СуммаСНДС - КорСтоимость)",
			"- СуммаРегл",
			"- СуммаУпр");

	КонецЕсли;

	// Формирование прочих расходов при порче
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда

		УсловиеГДЕ = "
		|	ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|	";
	
		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "СуммаСНДС - КорСтоимость");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "СуммаБезНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "СуммаРегл");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "СуммаУпр");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
		
		СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыПриПорче", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "И (СуммаСНДС - КорСтоимость) <> 0", СтруктураТекстовСуммовыхПоказателей);

	КонецЕсли;
	
	// Формирование прочих доходов/расходов при возврате товаров поставщику
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
		
		УсловиеГДЕ = "
		|	(
		|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
		|		ИЛИ ЭтоВозвратМеждуОрганизациями
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад)
		|	)
		|	";
		
		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "СуммаСНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "СуммаБезНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "СуммаУпр");
		
		СформироватьДвиженияПрочиеРасходыВУпрУчетеЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыВозвратПоставщикуУпр", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "
				|	И СуммаСНДС > 0
				|	И (НЕ СтатьяРасходовСписанияУпр ЕСТЬ NULL 
				|		И СтатьяРасходовСписанияУпр <> Неопределено 
				|		И СтатьяРасходовСписанияУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
				|		И СтатьяРасходовСписанияУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
				|	)"
				,
			СтруктураТекстовСуммовыхПоказателей);

		СформироватьДвиженияПрочиеДоходыВУпрУчетеЗапросом(ПараметрыРасчета, "ВтПрочиеДоходыВозвратПоставщикуУпр", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "
				|	И СуммаСНДС < 0
				|	И (НЕ СтатьяДоходовУпр ЕСТЬ NULL 
				|		И СтатьяДоходовУпр <> Неопределено 
				|		И СтатьяДоходовУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
				|	)"
				,
			"-СуммаСНДС",
			"- СуммаУпр");
	
		// Формирование прочих доходов/расходов при возврате товаров поставщику (в регламентированном учете).
		Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
			
			СтруктураТекстовСуммовыхПоказателей = Новый Структура;
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "СуммаРегл");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
			
			СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыВозвратПоставщику", СоответствиеВременныхТаблицДвижений, 
				УсловиеГДЕ + "
					|	И СуммаРегл > 0
					|	И (НЕ СтатьяРасходовСписания ЕСТЬ NULL 
					|		И СтатьяРасходовСписания <> Неопределено 
					|		И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
					|		И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
					|	)"
					,
				СтруктураТекстовСуммовыхПоказателей);

			СформироватьДвиженияПрочиеДоходыЗапросом(ПараметрыРасчета, "ВтПрочиеДоходыВозвратПоставщику", СоответствиеВременныхТаблицДвижений, 
				УсловиеГДЕ + "
					|	И СуммаРегл < 0
					|	И (НЕ СтатьяДоходов ЕСТЬ NULL 
					|		И СтатьяДоходов <> Неопределено 
					|		И СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
					|	)"
					,
				"0",
				"- СуммаРегл",
				"0");

		КонецЕсли;
				
	КонецЕсли;			
	
	// Корректировка движений по оборотным регистрам управленческого учета.
	СформироватьДвиженияПоОборотнымРегистрамУпрУчетаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	МассивЛокальныхВт = Новый Массив;
	МассивЛокальныхВт.Добавить("ДвиженияТаблицаКорректировки");
	Для Каждого КлючЗначение Из СоответствиеВременныхТаблицДвижений Цикл
		МассивЛокальныхВт.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтТаблицаКорректировки, ЕстьВозвратныеОтходы, РаботыДляДавальца"
		+ СтрСоединить(МассивЛокальныхВт, ","));
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваров";
	
	// Кор. стоимость не включается в список полей.
	КопируемыеПоля = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
	|ХозяйственнаяОперация,
	|КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов,КорОрганизация,
	|АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания, СтатьяДоходов, АналитикаДоходов,
	|СтатьяАктивовПассивов, АналитикаАктивовПассивов,
	|ИдентификаторСтроки, КодСтроки, ДокументДвижения, ПериодПродажи, ГруппаПродукции,
	|КорНаправлениеДеятельности,
	|Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, ДопРасходы, ДопРасходыБезНДС,
	|ПостояннаяРазница, ВременнаяРазница, СтоимостьРегл, СтоимостьЗабалансоваяРегл,
	|КорПартия, КорАналитикаУчетаПартий, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС,
	|НДСРегл, НДСУпр, СтатьяКалькуляции, ТипЗаписи, ДокументИсточник
	|";
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		КопируемыеПоля = КопируемыеПоля + ",
		|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС,
		|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
		|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
		|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
		|";
	КонецЕсли;

	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ВидДвижения");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьКорДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровКор";
	
	КопируемыеПоля = "
	|Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки,
	|Подразделение, ГруппаПродукции,
	|Стоимость, СтоимостьЗабалансовая, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтоимостьРегл, СтоимостьЗабалансоваяРегл, ПостояннаяРазница, ВременнаяРазница";
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		КопируемыеПоля = КопируемыеПоля + ",
		|СтатьяКалькуляции, ТипЗаписи,
		|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
		|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
		|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр, НДСУпр";
	КонецЕсли;
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаНоменклатуры", "КорАналитикаУчетаНоменклатуры");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РазделУчета", "КорРазделУчета");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидЗапасов", "КорВидЗапасов");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", 
			"ВЫБОР 
			|	КОГДА КорОрганизация ЕСТЬ NULL ИЛИ КорОрганизация = Неопределено 
			|		ИЛИ КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА 
			|		Организация 
			|	ИНАЧЕ 
			|		КорОрганизация 
			|КОНЕЦ"); 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Партия", "КорПартия");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПартий", "КорАналитикаУчетаПартий");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета", "КорАналитикаФинансовогоУчета");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДеятельностиНДС", "КорВидДеятельностиНДС");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорАналитикаФинансовогоУчета", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
		|		ВЫБОР 
		|			КОГДА АналитикаФинансовогоУчета ССЫЛКА Справочник.ГруппыАналитическогоУчетаНоменклатуры ТОГДА
		|				АналитикаФинансовогоУчета
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|		КОНЕЦ
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорАналитикаФинансовогоУчета") + "
		|КОНЕЦ");
				
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
		|		КорАналитикаФинансовогоУчета
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции") + "
		|КОНЕЦ");
		
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл",
		"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ СтоимостьРегл КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансоваяРегл",
		"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ СтоимостьЗабалансоваяРегл КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", 
		"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ПостояннаяРазница КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", 
		"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ВременнаяРазница КОНЕЦ");
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
	
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыРегл",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ДопРасходыРегл КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыРегл",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ТрудозатратыРегл КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеРегл",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ПостатейныеПостоянныеРегл КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеРегл",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ПостатейныеПеременныеРегл КОНЕЦ");
		
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ СтоимостьУпр КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыУпр",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ДопРасходыУпр КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыУпр",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ТрудозатратыУпр КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеУпр",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ПостатейныеПостоянныеУпр КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеУпр",
			"ВЫБОР КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ ПостатейныеПеременныеУпр КОНЕЦ");
		
	КонецЕсли;
	
	УсловиеГДЕ = "
	|	НЕ КорРазделУчета ЕСТЬ NULL 
	|	И КорРазделУчета <> Неопределено
	|	И КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|	И НЕ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И НЕ (
	|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) 
	|		И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьКорДвиженияСебестоимостьТоваровНеПередачаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровНеПередача";

	КопируемыеПоля = " Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки, Подразделение, Организация";
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		КопируемыеПоля = КопируемыеПоля + ", СтатьяКалькуляции, ТипЗаписи, ДокументИсточник";
	КонецЕсли;
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
		
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаНоменклатуры", "КорАналитикаУчетаНоменклатуры");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РазделУчета", "КорРазделУчета");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидЗапасов", "КорВидЗапасов");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация",
		"ВЫБОР 
		|	КОГДА КорОрганизация ЕСТЬ NULL ИЛИ КорОрганизация = Неопределено ИЛИ КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА 
		|		Организация 
		|	ИНАЧЕ 
		|		КорОрганизация 
		|КОНЕЦ"); 
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
	
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Партия", "КорПартия");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПартий", "КорАналитикаУчетаПартий");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета", "КорАналитикаФинансовогоУчета");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДеятельностиНДС", "КорВидДеятельностиНДС");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорАналитикаФинансовогоУчета", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
		|		ВЫБОР 
		|			КОГДА КорАналитикаФинансовогоУчета ССЫЛКА Справочник.ГруппыАналитическогоУчетаНоменклатуры ТОГДА
		|				КорАналитикаФинансовогоУчета
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|		КОНЕЦ
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорАналитикаФинансовогоУчета") + "
		|КОНЕЦ");
				
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
		|		КорАналитикаФинансовогоУчета
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции") + "
		|КОНЕЦ");
		
	КонецЕсли;
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл", "НДСРегл");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр", "НДСУпр");
	
	УсловиеГДЕ = "
	|	НЕ КорРазделУчета ЕСТЬ NULL 
	|	И КорРазделУчета <> Неопределено
	|	И КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|	И НЕ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И НЕ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|		И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию))
	|	И НЕ ЭтоПередачаМеждуОрганизациями
	|	И (НДСРегл <> 0 ИЛИ НДСУпр <> 0)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровСторноВУпрУчетеЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)

	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровСторноУпр";
	
	КопируемыеПоля = "
	|Период, Организация, РазделУчета,
	|ХозяйственнаяОперация, ДокументДвижения, Регистратор,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания,
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник,
	|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаНоменклатуры", "КорАналитикаУчетаНоменклатуры");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидЗапасов", "КорВидЗапасов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РазделУчета", "
	|ВЫБОР
	|	КОГДА РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "РазделУчета") + "
	|КОНЕЦ
	|");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Партия", "КорПартия");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПартий", "КорАналитикаУчетаПартий");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета", "КорАналитикаФинансовогоУчета");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДеятельностиНДС", "КорВидДеятельностиНДС");
	
	ОписаниеПолей = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьОписаниеПолейЗапроса(ТаблицаОписанияПолей, ОписаниеПриемника.Таблица);
	
	УсловиеГДЕ = "
	|	ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|	ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ЭтоДоход = Ложь, ХозяйственнаяОперация = Неопределено, СтруктураКорректировкиСумм = Неопределено)

	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения";
	
	СуммовыеПоля = "
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, 
	|СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьЗабалансовая, СтоимостьЗабалансоваяРегл,
	|ПостояннаяРазница, ВременнаяРазница,
	|НДСРегл, НДСУпр, 
	|КорСтоимость,
	|ПолнаяСуммаПереоценки, ПолнаяСуммаСНДС, ПолнаяСуммаБезНДС, ПолнаяСуммаРегл, ПолнаяСуммаУпр,
	|ЕстьНенулеваяПолнаяСумма";
	
	КопируемыеПоля = КопируемыеПоля + ", " + СуммовыеПоля;

	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", "&ХозяйственнаяОперация");
	КонецЕсли;
	
	Если ЭтоДоход Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходовРасходов", "СтатьяДоходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаДоходов", "АналитикаДоходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиНоменклатуры", "НаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиСтатьи", "КорНаправлениеДеятельности");
		
	Иначе
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходовРасходов", "СтатьяРасходовСписания");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "АналитикаРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиСтатьи", "КорНаправлениеДеятельности");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиНоменклатуры", "
		|ВЫБОР
		|	КОГДА " + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация") 
					+ " = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) И КорТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
		|		КорНаправлениеДеятельности
		|	ИНАЧЕ
		|		НаправлениеДеятельности
		|	КОНЕЦ");
		
	КонецЕсли;
	
	Если СтруктураКорректировкиСумм <> Неопределено Тогда
		
		МассивПолей = СтрРазделить(СуммовыеПоля, ",");
		Для Каждого Поле Из МассивПолей Цикл
			
			мПоле = СтрЗаменить(СтрЗаменить(СокрЛП(Поле), Символы.ПС, ""), Символы.Таб, "");
			НовоеПоле = СкорректироватьСуммовоеПолеДвиженияНоменклатурыЗапросом(мПоле, СтруктураКорректировкиСумм);
			
			РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, мПоле, НовоеПоле);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
			
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ, ТекстХозяйственнаяОперация)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|КорАналитикаУчетаНоменклатуры,КорСклад,КорТипЗапасов,КорВидЗапасов,
	|ИсточникГФУНоменклатуры, КорИсточникГФУНоменклатуры, ДокументДвижения, КорОрганизация";

	СуммовыеПоля = "
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, 
	|СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьЗабалансовая, СтоимостьЗабалансоваяРегл,
	|ПостояннаяРазница, ВременнаяРазница,
	|НДСРегл, НДСУпр, 
	|КорСтоимость,
	|ПолнаяСуммаПереоценки, ПолнаяСуммаСНДС, ПолнаяСуммаБезНДС, ПолнаяСуммаРегл, ПолнаяСуммаУпр,
	|ЕстьНенулеваяПолнаяСумма";
	
	КопируемыеПоля = КопируемыеПоля + ", " + СуммовыеПоля;

	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение", "
	|ВЫБОР
	|	КОГДА Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ТОГДА Подразделение
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|		ТОГДА АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|	ИНАЧЕ КорАналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "
	|АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "
	|КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", ТекстХозяйственнаяОперация);
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА " + ТекстХозяйственнаяОперация + " В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорОрганизация", "
	|ВЫБОР
	|	КОГДА " + ТекстХозяйственнаяОперация + " В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров), 
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)) ТОГДА
	|		Организация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорОрганизация") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "
	|ВЫБОР
	|	КОГДА Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Количество
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Количество") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
	|		НаправлениеДеятельности
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОборотнымРегистрамУпрУчетаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ТекстЕстьНенулеваяПолнаяСумма = "
	|	ВЫБОР 
	|		КОГДА СуммаСНДС <> 0 ИЛИ СуммаБезНДС  <> 0 ИЛИ СуммаРегл  <> 0 ИЛИ СуммаУпр <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ
	|";
	
	УсловиеЗапроса = ТекстЕстьНенулеваяПолнаяСумма + "
	|	И ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакрытиеМесяца),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУХранителя)
	|	)";

	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыСписаниеТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса);
			
	УсловиеЗапроса = ТекстЕстьНенулеваяПолнаяСумма + "
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|";
		
	Если ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка Тогда
		СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыСторноСписанияНаРасходы", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса);
	Иначе
		
		СтруктураКорректировкиСумм = Новый Структура();
		СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", -1);
		СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", -1);
		СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", -1);
		СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", -1);
		СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 0);
		
		СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыСторноСписанияНаРасходы", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, , , СтруктураКорректировкиСумм);
		
	КонецЕсли;
	
	УсловиеЗапроса = ТекстЕстьНенулеваяПолнаяСумма + "
	|	И (
	|		(
	|			(
	|				ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|				ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)
	|				ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)
	|			)
	|			И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		)
	|		
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаОбособленногоУчета)
	|		ИЛИ ((ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров) ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатов) ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями)) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	)
	|
	|	И НЕ ((КорАналитикаУчетаНоменклатуры ЕСТЬ NULL ИЛИ КорАналитикаУчетаНоменклатуры = Неопределено ИЛИ КорАналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка))
	|		И (
	|			ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|		 	ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		)	
	|	)
	|";
			
	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураПеремещение"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапроса
		,"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности)
		|	ИНАЧЕ
		|		ХозяйственнаяОперация
		|КОНЕЦ");
				
	УсловиеЗапросаВнутреннееПоступлениеТоваров = УсловиеЗапроса + "
	|	И (
	|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)
	|	)";

	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураВнутреннееПоступлениеТоваров"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапросаВнутреннееПоступлениеТоваров
		,"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров)");
	
	УсловиеЗапросаВнутреннееПоступлениеРабот = УсловиеЗапроса + "
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)";

	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураВнутреннееПоступлениеРабот"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапросаВнутреннееПоступлениеРабот
		,"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)");
	
	УсловиеЗапроса = "
	|	ПолнаяСуммаПереоценки > 0
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
	|";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 1);
	
	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыРасходыОтПереоценкиТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, 
		Ложь, 
		Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров, 
		СтруктураКорректировкиСумм);
	
	УсловиеЗапроса = "
	|	ПолнаяСуммаПереоценки < 0
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
	|";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 1);
	
	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыДоходыОтПереоценкиТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, 
		Истина, 
		Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров, 
		СтруктураКорректировкиСумм);
	
	УсловиеЗапроса = "
	|	ПолнаяСуммаПереоценки <> 0
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой)
	|";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 1);
	
	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыПорчаТоваровСПереоценкой", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, 
		Ложь, 
		Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров, 
		СтруктураКорректировкиСумм);
				
	// Переоценка заполняется по старому
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК ДвиженияТаблицаКорректировки
	|ГДЕ
	|	(ДвиженияТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику) И ДвиженияТаблицаКорректировки.КорСтоимость <> 0)
	|	ИЛИ ДвиженияТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары)
	|	ИЛИ ДвиженияТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	ИЛИ ДвиженияТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары)
	|	ИЛИ ДвиженияТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад)
	|";
	
	ЕстьДвижения = Ложь;
	
	ДанныеДвижения =  Запрос.Выполнить().Выбрать();
	Пока ДанныеДвижения.Следующий() Цикл
		
		ДанныеСумм = ПолучитьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеДвижения);
		
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 0, 0, 1, 1, 0);
		Иначе
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 0);
		КонецЕсли;
		
		Если СкорректированныеСуммы.ПолнаяСуммаСНДС > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр > 0 Тогда 

		 	ЕстьДвижения = Истина;
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		ИначеЕсли СкорректированныеСуммы.ПолнаяСуммаСНДС < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр < 0 Тогда 

		 	ЕстьДвижения = Истина;
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(СкорректированныеСуммы, -1, -1, -1, -1, 0);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Истина,
				Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьДвижения Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	КонецЕсли;
	
КонецПроцедуры

Функция СкорректироватьСуммовоеПолеДвиженияНоменклатурыЗапросом(Поле, СтруктураКорректировкиСумм)
	
	ИменаПолейСНДС   = Новый Структура("Стоимость, ДопРасходы, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС");
	ИменаПолейБезНДС = Новый Структура("СтоимостьБезНДС, ДопРасходыБезНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС");
	ИменаПолейРегл   = Новый Структура("СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	ИменаПолейУпр 	 = Новый Структура("СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	ИменаПолейУменьшаемойСтоимости = Новый Структура("Стоимость, СтоимостьБезНДС");
	
	НовоеПоле = Поле;
	
	Если ИменаПолейСНДС.Свойство(Поле) Тогда
		
		Если ИменаПолейУменьшаемойСтоимости.Свойство(Поле) Тогда
			НовоеПоле = "(" + Поле + " - КорСтоимость * " + Формат(СтруктураКорректировкиСумм.КоэффициентКорСуммы, "ЧРД=.; ЧН=0; ЧГ=0") + ") * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыСНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		Иначе
			НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыСНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		КонецЕсли;
		
	ИначеЕсли ИменаПолейБезНДС.Свойство(Поле) Тогда
		
		Если ИменаПолейУменьшаемойСтоимости.Свойство(Поле) Тогда
			НовоеПоле = "(" + Поле + " - КорСтоимость * " + Формат(СтруктураКорректировкиСумм.КоэффициентКорСуммы, "ЧРД=.; ЧН=0; ЧГ=0") + ") * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыБезНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		Иначе
			НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыБезНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		КонецЕсли;
	
	ИначеЕсли ИменаПолейРегл.Свойство(Поле) Тогда
		
		НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыРегл, "ЧРД=.; ЧН=0; ЧГ=0");
	
	ИначеЕсли ИменаПолейУпр.Свойство(Поле) Тогда
		
		НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыУпр, "ЧРД=.; ЧН=0; ЧГ=0");
		
	КонецЕсли;
		
	Возврат НовоеПоле;
	
КонецФункции

Процедура СформироватьДвиженияПрочиеАктивыПассивыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, УсловиеГде)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	ИмяВременнойТаблицы = "ВтПрочиеАктивыПассивы";

	КопируемыеПоля = "
	|Период, Организация";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Статья", "СтатьяАктивовПассивов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Аналитика", "АналитикаАктивовПассивов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "СуммаСНДС + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимость ИНАЧЕ 0 КОНЕЦ"); 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыВУпрУчетеЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			СтруктураТекстовСуммовыхПоказателей)
			
	ТекстСумма = СтруктураТекстовСуммовыхПоказателей.ТекстСумма;
	ТекстСуммаБезНДС = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаБезНДС;
	ТекстСуммаУпр = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаУпр;

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения";

	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписанияУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "АналитикаРасходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + " 
	|КОНЕЦ");

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		ВЫБОР
	|			КОГДА НЕ &УправленческийУчетОрганизаций ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|				0
	|			КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4 ТОГДА
	|				0
	|			ИНАЧЕ
	|				Знак * (" + ТекстСуммаУпр + ")
	|		КОНЕЦ
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаУпр") + " 
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользуетсяУправлениеВНА_2_4", ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Кор движения
	СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			СтруктураТекстовСуммовыхПоказателей)
			
	ТекстСумма = СтруктураТекстовСуммовыхПоказателей.ТекстСумма;
	ТекстСуммаБезНДС = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаБезНДС;
	ТекстСуммаРегл = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаРегл;
	ТекстСуммаУпр = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаУпр;
	ТекстПостояннаяРазница = СтруктураТекстовСуммовыхПоказателей.ТекстПостояннаяРазница;
	ТекстВременнаяРазница = СтруктураТекстовСуммовыхПоказателей.ТекстВременнаяРазница;

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения";

	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + " 
	|КОНЕЦ");

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		ВЫБОР
	|			КОГДА НЕ &УправленческийУчетОрганизаций ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|				0
	|			КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4 ТОГДА
	|				0
	|			ИНАЧЕ
	|				Знак * (" + ТекстСуммаУпр + ")
	|		КОНЕЦ
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаУпр") + " 
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользуетсяУправлениеВНА_2_4", ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	// СуммаРегл
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ) ТОГДА
	|		0
	|	ИНАЧЕ
	|		Знак * (" + ТекстСуммаРегл + ")
	|КОНЕЦ");
	
	// ПостояннаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	//++ Локализация
	//-- Локализация
	|	ИНАЧЕ
	|		ВЫБОР 
	|			КОГДА НЕ ПринятиеКНалоговомуУчету ТОГДА
	|				Знак * (" + ТекстСуммаРегл + ") - Знак * (" + ТекстВременнаяРазница + ")
	|			ИНАЧЕ
	|				Знак * " + ТекстПостояннаяРазница + "
	|		КОНЕЦ
	|КОНЕЦ");
	
	// ВременнаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	//++ Локализация
	//-- Локализация
	|	ИНАЧЕ
	|		Знак * (" + ТекстВременнаяРазница + ")
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Кор движения
	СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения";
	
	УсловиеГДЕКор = УсловиеГДЕ + "
	|	И (НЕ КорОрганизация ЕСТЬ NULL И КорОрганизация <> Неопределено И КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|	И КорОрганизация <> Организация
	|	И ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|";
	 
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	// СторнированиеРасходовУУ
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "Истина");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "-(" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "-(" + ТекстСуммаУпр + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация",
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ)");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "КорСторнированиеРасходовУУ", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "КорСторнированиеРасходовУУ", ИмяРегистра);
	
	// РегистрацияРасходовУУ
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "Истина");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", ТекстСуммаУпр);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "0");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация",
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ)");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "КорРегистрацияРасходовУУ", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "КорРегистрацияРасходовУУ", ИмяРегистра);
	
	
	// Добавим движения по регистру "Активы и пассивы".
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, НаправлениеДеятельности";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Статья", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Аналитика", "Организация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Приход", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Приход", ИмяРегистра);
	
	// Добавим движение и заполним его основные свойства
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ЛОЖЬ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Статья", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Аналитика", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Расход", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Расход", ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеДоходыВУпрУчетеЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаУпр)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходов", "СтатьяДоходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаДоходов", "АналитикаДоходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", ТекстСуммаУпр);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеДоходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаРегл, ТекстСуммаУпр)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Регистратор", "
	|ВЫБОР
	|	КОГДА ДокументДвижения ЕСТЬ NULL ИЛИ ДокументДвижения = Неопределено 
	|	ИЛИ ДокументДвижения В(" + РасчетСебестоимостиПрикладныеАлгоритмы.ПустыеРегистраторыРегистра(ИмяРегистра) + ") ТОГДА
	|		&ДокументРасчетаПоОрганизациям
	|	ИНАЧЕ
	|		ДокументДвижения
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ДокументДвижения) В (" + РасчетСебестоимостиПрикладныеАлгоритмы.ДоступныеТипыДокумента(ИмяРегистра, "ДокументДвижения") + ") ТОГДА
	|		ДокументДвижения
	|	ИНАЧЕ
	|		Неопределено
	|КОНЕЦ");
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", ТекстСуммаУпр);
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", ТекстСуммаРегл);
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры


// Этап 3.17
Процедура СкорректироватьСтоимостьПродаж(ПараметрыРасчета)

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьПродаж");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Продажи.Период                     КАК Период,
	|	Продажи.Регистратор                КАК ДокументДвижения,
	|	АналитикаПартнеров.Организация     КАК Организация,
	|	Продажи.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Продажи.ЗаказКлиента               КАК ЗаказКлиента,
	|	Продажи.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|	АналитикаПартнеров.Партнер         КАК Партнер,
	|	АналитикаПартнеров.Контрагент      КАК Контрагент,
	|	Продажи.Подразделение              КАК Подразделение,
	|	Продажи.ТипЗапасов                 КАК ТипЗапасов,
	|	Продажи.ВидЗапасов                 КАК ВидЗапасов,
	|	Продажи.Менеджер                   КАК Менеджер,
	|	Продажи.Склад                      КАК Склад,
	|	Продажи.Соглашение                 КАК Соглашение,
	|	Продажи.Договор                    КАК Договор,
	|	Продажи.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	Продажи.НалогообложениеНДС         КАК НалогообложениеНДС,
	|	Продажи.ВалютаВзаиморасчетов       КАК ВалютаВзаиморасчетов,
	|	Продажи.ВалютаДокумента            КАК ВалютаДокумента,
	|	Продажи.ИсточникГФУНоменклатуры    КАК ИсточникГФУНоменклатуры,
	|	Продажи.ИсточникГФУРасчетов        КАК ИсточникГФУРасчетов,
	|	Продажи.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	Продажи.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|		Продажи.РазделУчета
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	Продажи.Партия 					   КАК Партия,
	|	Продажи.АналитикаУчетаПартий 	   КАК АналитикаУчетаПартий,
	|	Продажи.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Продажи.ВидДеятельностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КОНЕЦ) КАК ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Продажи.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|	СУММА(Продажи.Количество)          КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК Продажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Продажи.АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПартнеров
	|			ПО Продажи.АналитикаУчетаПоПартнерам = АналитикаПартнеров.КлючАналитики
	|
	|ГДЕ
	|	Продажи.ХозяйственнаяОперация В (&МассивОперацийРеализации)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Период,
	|	Продажи.Регистратор,
	|	Продажи.АналитикаУчетаНоменклатуры,
	|	Продажи.ЗаказКлиента,
	|	Продажи.АналитикаУчетаПоПартнерам,
	|	АналитикаПартнеров.Партнер,
	|	АналитикаПартнеров.Контрагент,
	|	Продажи.Подразделение,
	|	Продажи.ТипЗапасов,
	|	Продажи.ВидЗапасов,
	|	Продажи.Менеджер,
	|	Продажи.Склад,
	|	Продажи.Соглашение,
	|	Продажи.Договор,
	|	Продажи.ХозяйственнаяОперация,
	|	Продажи.НалогообложениеНДС,
	|	Продажи.ВалютаВзаиморасчетов,
	|	Продажи.ВалютаДокумента,
	|	Продажи.ИсточникГФУНоменклатуры,
	|	Продажи.ИсточникГФУРасчетов,
	|	Продажи.НаправлениеДеятельностиКонтрагента,
	|	Продажи.НаправлениеДеятельностиНоменклатуры,
	|	АналитикаПартнеров.Организация,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|		Продажи.РазделУчета
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ,
	|	Продажи.Партия,
	|	Продажи.АналитикаУчетаПартий,
	|	Продажи.АналитикаФинансовогоУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Продажи.ВидДеятельностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Продажи.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) // Знак
	|
	|ИМЕЮЩИЕ
	|
	|	СУММА(Продажи.Количество) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация,
	|	РазделУчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаКорректировки.Период,
	|	ТаблицаКорректировки.ДокументДвижения КАК ДокументДвижения
	|ПОМЕСТИТЬ ВтРегистраторыПродаж
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Период,
	|	Себестоимость.Регистратор КАК ДокументДвижения,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|	СУММА(Себестоимость.Количество) КАК Количество,
	|	СУММА(Себестоимость.Стоимость) КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.ДопРасходы) КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Себестоимость.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.Трудозатраты) КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл) КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
	|	СУММА(Себестоимость.СтоимостьУпр) КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр) КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВтСебестоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРегистраторыПродаж КАК РегистраторыПродаж
	|		ПО РегистраторыПродаж.Период = Себестоимость.Период
	|		И РегистраторыПродаж.ДокументДвижения = Себестоимость.Регистратор
	|ГДЕ
	|	НЕ Себестоимость.СлужебноеВидДвиженияПриход
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	Себестоимость.Регистратор,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) // Знак
	|";
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#Область РаспределениеДанных
	
	// Инициализируем распределение
	ПоляСвязи = "Период, ДокументДвижения, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, Партия, АналитикаУчетаПартий,
		|АналитикаФинансовогоУчета, ВидДеятельностиНДС, ЗаказКлиента, АналитикаУчетаПоПартнерам, Знак";
	ПараметрыРаспределения = РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьПараметрыРаспределенияМетодомУменьшаемогоОстатка(
		"ВтСебестоимость",
		"ВтТаблицаКорректировки",
		ПоляСвязи);
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя]; // описание регистра
	
	РаспределяемыеРесурсы = РасчетСебестоимостиУниверсальныеАлгоритмы.УдалитьЭлементыИзСтрокиШаблона(
		ОписаниеРегистра.РесурсыРегистра,
		"%1Количество");
	
	РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьЧисловыеПоляРаспределенияМетодомУменьшаемогоОстатка(
		ПараметрыРаспределения,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(РаспределяемыеРесурсы, ""));
		
	ПрочиеПоляБазы = "Партнер, Контрагент, Подразделение, ТипЗапасов, Менеджер, Склад, Соглашение, Договор, ХозяйственнаяОперация,
		|НалогообложениеНДС, ВалютаВзаиморасчетов, ВалютаДокумента, ИсточникГФУНоменклатуры, ИсточникГФУРасчетов,
		|НаправлениеДеятельностиКонтрагента, НаправлениеДеятельностиНоменклатуры";
		
	РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьПрочиеПоляРаспределенияМетодомУменьшаемогоОстатка(
		ПараметрыРаспределения,
		,
		ПрочиеПоляБазы);
		
	// Распределяем
	РасчетСебестоимостиУниверсальныеАлгоритмы.РаспределитьМетодомУменьшаемогоОстатка(Запрос.МенеджерВременныхТаблиц, ПараметрыРаспределения);
	
	#КонецОбласти
	
	#Область ФормированиеДвижений
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                     КАК Период,
	|	ТаблицаКорректировки.ДокументДвижения           КАК ДокументДвижения,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.ЗаказКлиента               КАК ЗаказКлиента,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.Организация                КАК Организация,
	|	ТаблицаКорректировки.РазделУчета 			    КАК РазделУчета,
	|	ТаблицаКорректировки.Партия 					КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий 	    КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС 		КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.Партнер                    КАК Партнер,
	|	ТаблицаКорректировки.Контрагент                 КАК Контрагент,
	|	ТаблицаКорректировки.Подразделение              КАК Подразделение,
	|	ТаблицаКорректировки.ТипЗапасов                 КАК ТипЗапасов,
	|	ТаблицаКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаКорректировки.Менеджер                   КАК Менеджер,
	|	ТаблицаКорректировки.Склад                      КАК Склад,
	|	ТаблицаКорректировки.Соглашение                 КАК Соглашение,
	|	ТаблицаКорректировки.Договор                    КАК Договор,
	|	ТаблицаКорректировки.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.НалогообложениеНДС         КАК НалогообложениеНДС,
	|	ТаблицаКорректировки.ВалютаВзаиморасчетов       КАК ВалютаВзаиморасчетов,
	|	ТаблицаКорректировки.ВалютаДокумента            КАК ВалютаДокумента,
	|	ТаблицаКорректировки.ИсточникГФУНоменклатуры    КАК ИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.ИсточникГФУРасчетов        КАК ИсточникГФУРасчетов,
	|	ТаблицаКорректировки.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	ТаблицаКорректировки.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	ТаблицаКорректировки.Стоимость,
	|	ТаблицаКорректировки.СтоимостьБезНДС,
	|	ТаблицаКорректировки.ПостояннаяРазница,
	|	ТаблицаКорректировки.ВременнаяРазница,
	|	ТаблицаКорректировки.ДопРасходы,
	|	ТаблицаКорректировки.ДопРасходыБезНДС,
	|	ТаблицаКорректировки.СтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьЗабалансовая,
	|	ТаблицаКорректировки.Трудозатраты,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеБезНДС,
	|	ТаблицаКорректировки.СтоимостьЗабалансоваяРегл,
	|	ТаблицаКорректировки.ДопРасходыРегл,
	|	ТаблицаКорректировки.ТрудозатратыРегл,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеРегл,
	|	ТаблицаКорректировки.ПостатейныеПеременныеРегл,
	|	ТаблицаКорректировки.СтоимостьУпр,
	|	ТаблицаКорректировки.ДопРасходыУпр,
	|	ТаблицаКорректировки.ТрудозатратыУпр,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеУпр,
	|	ТаблицаКорректировки.ПостатейныеПеременныеУпр,
	|
	|	0 КАК НДСРегл,
	|	0 КАК НДСУпр
	|ИЗ
	|	ВТРезультатРаспределения КАК ТаблицаКорректировки
	|";
	
	// Формируются движения по регистрам:
	// - ВыручкаИСебестоимостьПродаж
	// - Закупки
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	Пока Выборка.Следующий() Цикл
		
		// Корректировка себестоимости продаж по хоз операциям продажи.
		СформироватьДвиженияВыручкаИСебестоимостьПродаж(ПараметрыРасчета, Выборка);
		
		Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда	
			
			СформироватьДвиженияЗакупки(ПараметрыРасчета, Выборка);
				
		КонецЕсли;

	КонецЦикла;
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтТаблицаКорректировки, ВтРегистраторыПродаж, ВтСебестоимость");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 3.19
Процедура СписатьОшибкиОкругленияРасчетаСебестоимости(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СписатьОшибкиОкругленияРасчетаСебестоимости");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	
	// Списываем только те остатки, в которых все "суммовые" ресурсы имеют значения, укладывающиеся в пределы погрешности. 
	// Если хоть один "суммовой" ресурс превышает величину погрешности, то такой остаток ошибкой округления не считаем.
	// Для регистра ПрочиеРасходы подход отличается: для него проверка ведется остатка для каждого ресурса по-отдельности.
	// Если какой-то ресурс укладывается в пределы погрешности, то списываем только его.
	
	// Списание ошибок округления в регистре СебестоимостьТоваров
	// Также создадим пустую временную таблицу ВТОкруглениеПрочиеРасходы для УТ - там не будет ошибок округления в регистре ПрочиеРасходы.
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК ДокументДвижения,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|
	|	Себестоимость.Организация 					КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета 					КАК РазделУчета,
	|	Себестоимость.ВидЗапасов 					КАК ВидЗапасов,
	|	Себестоимость.Партия                        КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА Аналитика.Подразделение
	|		ИНАЧЕ Аналитика.СкладскаяТерритория.Подразделение
	|	КОНЕЦ 										КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости)	КАК СтатьяРасходовСписания,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	(ВЫБОР
	|		КОГДА ЛОЖЬ ТОГДА НЕОПРЕДЕЛЕНО // Для удобства расстановки тегов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления) КОНЕЦ) КАК ХозяйственнаяОперация,
	|	Себестоимость.Стоимость 					КАК Стоимость,
	|	Себестоимость.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|	Себестоимость.ДопРасходы 					КАК ДопРасходы,
	|	Себестоимость.ДопРасходыБезНДС 				КАК ДопРасходыБезНДС,
	|	Себестоимость.СтоимостьРегл 				КАК СтоимостьРегл,
	|	Себестоимость.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|	Себестоимость.ВременнаяРазница 				КАК ВременнаяРазница,
	|	Себестоимость.СтоимостьЗабалансовая         КАК СтоимостьЗабалансовая,
	|	Себестоимость.Трудозатраты       		    КАК Трудозатраты,
	|	Себестоимость.ПостатейныеПостоянныеСНДС     КАК ПостатейныеПостоянныеСНДС,
	|	Себестоимость.ПостатейныеПостоянныеБезНДС   КАК ПостатейныеПостоянныеБезНДС,
	|	Себестоимость.ПостатейныеПеременныеСНДС     КАК ПостатейныеПеременныеСНДС,
	|	Себестоимость.ПостатейныеПеременныеБезНДС   КАК ПостатейныеПеременныеБезНДС,
	|	Себестоимость.СтоимостьЗабалансоваяРегл     КАК СтоимостьЗабалансоваяРегл,
	|	Себестоимость.ДопРасходыРегл                КАК ДопРасходыРегл,
	|	Себестоимость.ТрудозатратыРегл              КАК ТрудозатратыРегл,
	|	Себестоимость.ПостатейныеПостоянныеРегл     КАК ПостатейныеПостоянныеРегл,
	|	Себестоимость.ПостатейныеПеременныеРегл     КАК ПостатейныеПеременныеРегл,
	|	Себестоимость.СтоимостьУпр     				КАК СтоимостьУпр,
	|	Себестоимость.ДопРасходыУпр     			КАК ДопРасходыУпр,
	|	Себестоимость.ТрудозатратыУпр     			КАК ТрудозатратыУпр,
	|	Себестоимость.ПостатейныеПостоянныеУпр     	КАК ПостатейныеПостоянныеУпр,
	|	Себестоимость.ПостатейныеПеременныеУпр     	КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВТОкруглениеСебестоимостьТоваров
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО Себестоимость.Организация = ДокументыРасчетаСебестоимости.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Себестоимость.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Себестоимость.Количество = 0
	|	И (Себестоимость.Стоимость МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходы МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходыБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьЗабалансовая МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.Трудозатраты МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьЗабалансоваяРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ДопРасходыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ТрудозатратыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ПостатейныеПостоянныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ПостатейныеПеременныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ТрудозатратыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК ДокументДвижения,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|
	|	Себестоимость.Организация 					КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета 					КАК РазделУчета,
	|	Себестоимость.ВидЗапасов 					КАК ВидЗапасов,
	|	Себестоимость.Партия                        КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА Аналитика.Подразделение
	|		ИНАЧЕ Аналитика.СкладскаяТерритория.Подразделение
	|	КОНЕЦ 										КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости)	КАК СтатьяРасходовСписания,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления) КАК ХозяйственнаяОперация,
	|	(ВЫБОР
	|		КОГДА Себестоимость.Стоимость МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходы МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходы,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьЗабалансовая МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьЗабалансовая,
	|	(ВЫБОР
	|		КОГДА Себестоимость.Трудозатраты МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК Трудозатраты,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьЗабалансоваяРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ТрудозатратыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ТрудозатратыРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ТрудозатратыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ТрудозатратыУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО Себестоимость.Организация = ДокументыРасчетаСебестоимости.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Себестоимость.АналитикаУчетаНоменклатуры
	|
	|ГДЕ
	|	Себестоимость.Количество > 0
	|	И (
	|		(Себестоимость.Стоимость
	|		+ Себестоимость.ДопРасходы
	|		+ Себестоимость.Трудозатраты
	|		+ Себестоимость.ПостатейныеПостоянныеСНДС
	|		+ Себестоимость.ПостатейныеПеременныеСНДС) < 0
	|	ИЛИ (Себестоимость.СтоимостьБезНДС
	|		+ Себестоимость.ДопРасходыБезНДС
	|		+ Себестоимость.Трудозатраты
	|		+ Себестоимость.ПостатейныеПостоянныеБезНДС
	|		+ Себестоимость.ПостатейныеПеременныеБезНДС) < 0 
	|	ИЛИ (Себестоимость.СтоимостьРегл
	|		+ Себестоимость.ДопРасходыРегл
	|		+ Себестоимость.ТрудозатратыРегл
	|		+ Себестоимость.ПостатейныеПостоянныеРегл
	|		+ Себестоимость.ПостатейныеПеременныеРегл) < 0
	|	ИЛИ (Себестоимость.СтоимостьУпр
	|		+ Себестоимость.ДопРасходыУпр
	|		+ Себестоимость.ТрудозатратыУпр
	|		+ Себестоимость.ПостатейныеПостоянныеУпр
	|		+ Себестоимость.ПостатейныеПеременныеУпр) < 0
	|	)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ		 КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	0 			 КАК Сумма,
	|	0 			 КАК СуммаБезНДС,
	|	0 			 КАК СуммаРегл,
	|	0 			 КАК СуммаУпр,
	|	0 			 КАК ПостояннаяРазница,
	|	0 			 КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ         КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПартияПроизводства,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	НЕОПРЕДЕЛЕНО КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ПравилоОтнесенияНаВыпуск,
	|	0            КАК Стоимость,
	|	0            КАК СтоимостьБезНДС,
	|	0            КАК СтоимостьРегл,
	|	0            КАК СтоимостьУпр,
	|	0            КАК ПостояннаяРазница,
	|	0            КАК ВременнаяРазница,
	|	0            КАК ДоляСтоимости
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходыНЗП
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ         КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидРезервов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектУчетаРезервов,
	|	0            КАК СуммаУпр,
	|	0            КАК СуммаРегл
	|ПОМЕСТИТЬ ВТОкруглениеРезервыПредстоящихРасходов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.ДокументДвижения КАК ДокументДвижения,
	|	Т.Период КАК Период,
	|	Т.ВидДвижения КАК ВидДвижения,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.Подразделение КАК Подразделение,
	|	Т.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.ДопРасходы КАК ДопРасходы,
	|	Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.Трудозатраты КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	Т.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	Т.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|	Т.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	Т.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	Т.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	Т.СтоимостьУпр КАК СтоимостьУпр,
	|	Т.ДопРасходыУпр КАК ДопРасходыУпр,
	|	Т.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	Т.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	Т.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВТОкруглениеСебестоимостьТоваров КАК Т
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
		ПараметрыРасчета,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя,
		Запрос,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя);
	
	
	// Формирование кор. движений в регистре ПрочиеРасходы
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.ДокументДвижения 																КАК ДокументДвижения,
	|	&КонецПериода 																	КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 											КАК ВидДвижения,
	|	Т.Организация 																	КАК Организация,
	|	Т.Подразделение																	КАК Подразделение,
	|	Т.НаправлениеДеятельности														КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости) КАК СтатьяРасходов,
	|	СУММА(Т.Сумма) 																	КАК Сумма,
	|	СУММА(Т.СуммаРегл) 																КАК СуммаРегл,
	|	СУММА(Т.СуммаУпр) 																КАК СуммаУпр
	|ПОМЕСТИТЬ ВТКорДвиженияПрочиеРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.ДокументДвижения 				 КАК ДокументДвижения,
	|		Т.Организация 					 КАК Организация,
	|		Т.Подразделение 				 КАК Подразделение,
	|		Т.НаправлениеДеятельности 		 КАК НаправлениеДеятельности,
	|		Т.Стоимость
	|			+ Т.ДопРасходы
	|			+ Т.Трудозатраты
	|			+ Т.ПостатейныеПостоянныеСНДС
	|			+ Т.ПостатейныеПеременныеСНДС КАК Сумма,
	|		Т.СтоимостьРегл
	|			+ Т.ДопРасходыРегл
	|			+ Т.ТрудозатратыРегл
	|			+ Т.ПостатейныеПостоянныеРегл
	|			+ Т.ПостатейныеПеременныеРегл КАК СуммаРегл,
	|		Т.СтоимостьУпр
	|			+ Т.ДопРасходыУпр
	|			+ Т.ТрудозатратыУпр
	|			+ Т.ПостатейныеПостоянныеУпр
	|			+ Т.ПостатейныеПеременныеУпр КАК СуммаУпр
	|	ИЗ
	|		ВТОкруглениеСебестоимостьТоваров КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения,
	|		Т.Организация,
	|		Т.Подразделение,
	|		Т.НаправлениеДеятельности,
	|		Т.Сумма,
	|		Т.СуммаРегл,
	|		Т.СуммаУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходы КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения,
	|		Т.Организация,
	|		Т.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|		Т.Стоимость,
	|		Т.СтоимостьРегл,
	|		Т.СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходыНЗП КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения,
	|		Т.Организация,
	|		Т.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|		Т.СуммаУпр,
	|		Т.СуммаРегл,
	|		Т.СуммаУпр
	|	ИЗ
	|		ВТОкруглениеРезервыПредстоящихРасходов КАК Т) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ДокументДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Сумма) <> 0
	|	ИЛИ СУММА(Т.СуммаРегл) <> 0
	|	ИЛИ СУММА(Т.СуммаУпр) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.ДокументДвижения КАК ДокументДвижения,
	|	Т.Период КАК Период,
	|	Т.ВидДвижения КАК ВидДвижения,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.Сумма КАК Сумма,
	|	Т.СуммаРегл КАК СуммаРегл,
	|	Т.СуммаУпр КАК СуммаУпр
	|ИЗ
	|	ВТКорДвиженияПрочиеРасходы КАК Т
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
		ПараметрыРасчета,
		Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя,
		Запрос,
		Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя);
		
	// Корректировка движений по оборотным регистрам управленческого учета.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&КонецПериода 					КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакрытиеМесяца) КАК ХозяйственнаяОперация,
	|	Т.ДокументДвижения 				КАК ДокументДвижения,
	|	Т.Организация 					КАК Организация,
	|	Т.Подразделение 				КАК Подразделение,
	|	Т.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Т.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	Т.НаправлениеДеятельности		КАК КорНаправлениеДеятельности,
	|	Т.Склад 						КАК Склад,
	|	Т.ТипЗапасов 					КАК ТипЗапасов,
	|	Т.ВидЗапасов 					КАК ВидЗапасов,
	|	Т.СтатьяРасходовСписания 		КАК СтатьяРасходовСписания,
	|	Т.АналитикаРасходов 			КАК АналитикаРасходов,
	|	Т.ИсточникГФУНоменклатуры		КАК ИсточникГФУНоменклатуры,
	|	СУММА(Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) 		КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.СтоимостьУпр) 			КАК СтоимостьУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.ДокументДвижения 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		НЕОПРЕДЕЛЕНО 												КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		Т.АналитикаУчетаНоменклатуры 								КАК АналитикаУчетаНоменклатуры,
	|		АналитикаНоменклатуры.МестоХранения							КАК Склад,
	|		Т.ВидЗапасов.ТипЗапасов 									КАК ТипЗапасов,
	|		Т.ВидЗапасов 												КАК ВидЗапасов,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости) КАК СтатьяРасходовСписания,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаРасходов,
	|		ВЫБОР
	|			КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|				ТОГДА Т.ВидЗапасов
	|			ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|		КОНЕЦ 														КАК ИсточникГФУНоменклатуры,
	|		-(Т.Стоимость + Т.ДопРасходы)								КАК Стоимость,
	|		-(Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС)					КАК СтоимостьБезНДС,
	|		-Т.СтоимостьРегл 											КАК СтоимостьРегл,
	|		-Т.СтоимостьУпр 											КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеСебестоимостьТоваров КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		Т.Подразделение 											КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		Т.СтатьяРасходов 											КАК СтатьяДоходовРасходов,
	|		Т.АналитикаРасходов 										КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		-Т.Сумма 													КАК Стоимость,
	|		-Т.СуммаБезНДС 												КАК СтоимостьБезНДС,
	|		-Т.СуммаРегл 												КАК СтоимостьРегл,
	|		-Т.СуммаУпр 												КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходы КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		Т.Подразделение 											КАК Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		Т.СтатьяРасходов 											КАК СтатьяДоходовРасходов,
	|		Т.АналитикаРасходов 										КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		-Т.Стоимость												КАК Стоимость,
	|		-Т.СтоимостьБезНДС											КАК СтоимостьБезНДС,
	|		-Т.СтоимостьРегл											КАК СтоимостьРегл,
	|		-Т.СтоимостьУпр												КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходыНЗП КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		НЕОПРЕДЕЛЕНО 												КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости) КАК СтатьяДоходовРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		Т.Сумма 													КАК Стоимость,
	|		0 															КАК СтоимостьБезНДС,
	|		0 															КАК СтоимостьРегл,
	|		0 															КАК СтоимостьУпр
	|	ИЗ
	|		ВТКорДвиженияПрочиеРасходы КАК Т) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ДокументДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Склад,
	|	Т.ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.ИсточникГФУНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Т.Стоимость) <> 0
	|		ИЛИ СУММА(Т.СтоимостьБезНДС) <> 0
	|		ИЛИ СУММА(Т.СтоимостьРегл) <> 0
	|		ИЛИ СУММА(Т.СтоимостьУпр) <> 0)";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, НСтр("ru='Регистры упр. учета'"));
	
	Пока Выборка.Следующий() Цикл
		СформироватьДвиженияПоОборотнымРегистрамУпрУчета(ПараметрыРасчета, Выборка);
	КонецЦикла;
	
	РасчетСебестоимостиЛокализация.СписатьОшибкиОкругленияРасчетаСебестоимости(ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТОкруглениеСебестоимостьТоваров, ВТОкруглениеПрочиеРасходы, ВТОкруглениеПрочиеРасходыНЗП, ВТОкруглениеРезервыПредстоящихРасходов, ВТКорДвиженияПрочиеРасходы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры


// Этап 4.1
// Процедура выполняет распределение выручки и себестоимости продаж по направлениям деятельности.
// Параметры:
// НачалоПериода - дата, начало периода для сбора данных о продажах.
// КонецПериода - дата, окончание периода для сбора данных о продажах.
//
Процедура РаспределитьВыручкуПоНаправлениямДеятельности(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РаспределитьВыручкуПоНаправлениямДеятельности");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимость.Подразделение             		 КАК Подразделение,
	|	АналитикаПоПартнерам.Организация                		 КАК Организация,
	|	АналитикаПоПартнерам.Партнер                    		 КАК Партнер,
	|	АналитикаПоПартнерам.НаправлениеДеятельности      		 КАК НаправлениеДеятельности,
	|	АналитикаНоменклатуры.Номенклатура              		 КАК Номенклатура,
	|	СУММА(ВыручкаИСебестоимость.СуммаВыручки)				 КАК СуммаВыручки,
	|	СУММА(ВыручкаИСебестоимость.Стоимость
	|		+ ВыручкаИСебестоимость.ДопРасходы
	|		+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|		+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|		+ ВыручкаИСебестоимость.Трудозатраты) КАК Себестоимость
	|ПОМЕСТИТЬ ВТТаблицаВыручки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|ГДЕ
	|	ВыручкаИСебестоимость.ТипЗапасов В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.Подразделение,
	|	АналитикаПоПартнерам.Организация,
	|	АналитикаПоПартнерам.Партнер,
	|	АналитикаПоПартнерам.НаправлениеДеятельности,
	|	АналитикаНоменклатуры.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВыручкаИСебестоимость.СуммаВыручки) <> 0
	|	ИЛИ СУММА(ВыручкаИСебестоимость.Стоимость + ВыручкаИСебестоимость.ДопРасходы) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВыручки.Подразделение               КАК Подразделение,
	|	ТаблицаВыручки.Организация                 КАК Организация,
	|	ТаблицаВыручки.Номенклатура                КАК Номенклатура,
	|	ТаблицаВыручки.Партнер                     КАК Партнер,
	|	ТаблицаВыручки.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТаблицаВыручки.СуммаВыручки                КАК СуммаВыручки,
	|	ТаблицаВыручки.Себестоимость               КАК Себестоимость,
	|	НастройкаРаспределения.СпособРаспределения КАК СпособРаспределения,
	|	ВЫБОР
	|		КОГДА ТаблицаВыручки.Партнер = НастройкаРаспределения.Партнер ТОГДА
	|			1000
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Подразделение = НастройкаРаспределения.Подразделение ТОГДА
	|			100
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Номенклатура = НастройкаРаспределения.Номенклатура ТОГДА
	|			10
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Организация = НастройкаРаспределения.Организация ТОГДА
	|			1
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                      КАК Приоритет
	|ПОМЕСТИТЬ ВтТаблицаРаспределения
	|
	|ИЗ
	|	ВТТаблицаВыручки КАК ТаблицаВыручки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаРаспределенияПоНаправлениямДеятельности.СрезПоследних(
	|			&КонецПериода,
	|		) КАК НастройкаРаспределения
	|		ПО
	|			НастройкаРаспределения.Используется
	|			И ТаблицаВыручки.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И (ТаблицаВыручки.Организация              = НастройкаРаспределения.Организация
	|				ИЛИ НастройкаРаспределения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Партнер              = НастройкаРаспределения.Партнер
	|				ИЛИ НастройкаРаспределения.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Подразделение              = НастройкаРаспределения.Подразделение
	|				ИЛИ НастройкаРаспределения.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Номенклатура              = НастройкаРаспределения.Номенклатура
	|				ИЛИ НастройкаРаспределения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Партнер,
	|	Подразделение,
	|	Номенклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 								 КАК ДокументДвижения,
	|	&КонецПериода                                                        КАК Период,
	|	ТаблицаФинансовыхРезультатов.Организация                             КАК Организация,
	|	ТаблицаФинансовыхРезультатов.Подразделение                           КАК Подразделение,
	|	ТаблицаФинансовыхРезультатов.СпособРаспределения                     КАК СпособРаспределения,
	|	СУММА(ТаблицаФинансовыхРезультатов.СуммаВыручки)                     КАК СуммаВыручки,
	|	СУММА(ТаблицаФинансовыхРезультатов.Себестоимость)                    КАК Себестоимость,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ВыручкаОтПродаж)       КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж)  КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			ТаблицаФинансовыхРезультатов.СпособРаспределения
	|		ИНАЧЕ
	|			СпособыРаспределения.НаправлениеДеятельности
	|	КОНЕЦ                                                                КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			1
	|		ИНАЧЕ
	|			ЕСТЬNULL(СпособыРаспределения.Коэффициент, 1)
	|	КОНЕЦ                                                                КАК КоэффициентРаспределения
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаРаспределения.Организация                   КАК Организация,
	|		ТаблицаРаспределения.Подразделение                 КАК Подразделение,
	|		СУММА(ТаблицаРаспределения.СуммаВыручки)           КАК СуммаВыручки,
	|		СУММА(ТаблицаРаспределения.Себестоимость)          КАК Себестоимость,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения, НЕОПРЕДЕЛЕНО) КАК СпособРаспределения
	|	ИЗ
	|		ВтТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|	ГДЕ
	|		ТаблицаРаспределения.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		И ТаблицаРаспределения.Приоритет В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(Таб.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВтТаблицаРаспределения КАК Таб
	|				ГДЕ
	|					Таб.Организация        = ТаблицаРаспределения.Организация
	|					И Таб.Партнер            = ТаблицаРаспределения.Партнер
	|					И Таб.Подразделение      = ТаблицаРаспределения.Подразделение
	|					И Таб.Номенклатура         = ТаблицаРаспределения.Номенклатура)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРаспределения.Организация,
	|		ТаблицаРаспределения.Подразделение,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения, НЕОПРЕДЕЛЕНО)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаРаспределения.Организация                   КАК Организация,
	|		ТаблицаРаспределения.Подразделение                 КАК Подразделение,
	|		СУММА(ТаблицаРаспределения.СуммаВыручки)           КАК СуммаВыручки,
	|		СУММА(ТаблицаРаспределения.Себестоимость)          КАК Себестоимость,
	|		ТаблицаРаспределения.НаправлениеДеятельности       КАК СпособРаспределения
	|	ИЗ
	|		ВтТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|	ГДЕ
	|		ТаблицаРаспределения.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРаспределения.Организация,
	|		ТаблицаРаспределения.Подразделение,
	|		ТаблицаРаспределения.НаправлениеДеятельности
	|
	|	) КАК ТаблицаФинансовыхРезультатов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СпособыРаспределенияПоНаправлениямДеятельности.НаправленияДеятельности КАК СпособыРаспределения
	|		ПО ТаблицаФинансовыхРезультатов.СпособРаспределения = СпособыРаспределения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО ТаблицаФинансовыхРезультатов.Организация = ДокументыРасчетаСебестоимости.Организация
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДокументыРасчетаСебестоимости.Ссылка,
	|	ТаблицаФинансовыхРезультатов.Организация,
	|	ТаблицаФинансовыхРезультатов.Подразделение,
	|	ТаблицаФинансовыхРезультатов.СпособРаспределения,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			ТаблицаФинансовыхРезультатов.СпособРаспределения
	|		ИНАЧЕ
	|			СпособыРаспределения.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			1
	|		ИНАЧЕ
	|			ЕСТЬNULL(СпособыРаспределения.Коэффициент, 1)
	|	КОНЕЦ
	|
	|ИТОГИ
	|	МАКСИМУМ(СуммаВыручки),
	|	МАКСИМУМ(Себестоимость),
	|	СУММА(КоэффициентРаспределения)
	|
	|ПО
	|	Организация,
	|	Подразделение,
	|	СпособРаспределения
	|";
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ФинансовыеРезультаты.Имя;
	
	РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Организация");
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		
		ВыборкаПодразделение = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
		
		Пока ВыборкаПодразделение.Следующий() Цикл
			
			ВыборкаСпособыРаспределения = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СпособРаспределения");
			
			Пока ВыборкаСпособыРаспределения.Следующий() Цикл
				
				ВсегоДолей            = ВыборкаСпособыРаспределения.КоэффициентРаспределения;
				РасходыКРаспределению = ВыборкаСпособыРаспределения.Себестоимость;
				ДоходыКРаспределению  = ВыборкаСпособыРаспределения.СуммаВыручки;
				
				ВыборкаДетали = ВыборкаСпособыРаспределения.Выбрать(ОбходРезультатаЗапроса.Прямой);
				
				РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
					ПараметрыРасчета,
					ВыборкаДетали.Количество());
				
				Пока ВыборкаДетали.Следующий() Цикл

					Если ВсегоДолей <> 0 Тогда
						Расходы = Окр(РасходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
										2, РежимОкругления.Окр15как20);
					Иначе
						Расходы = 0;
					КонецЕсли;

					Если ВсегоДолей <> 0 Тогда
						Доходы = Окр(ДоходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
										2, РежимОкругления.Окр15как20);
					Иначе
						Доходы = 0;
					КонецЕсли;

					РасходыКРаспределению = РасходыКРаспределению - Расходы;
					ДоходыКРаспределению  = ДоходыКРаспределению  - Доходы;
					ВсегоДолей            = ВсегоДолей            - ВыборкаДетали.КоэффициентРаспределения;

					// Формирование движений по финансовому результату.
					ДанныеДвижения = Новый Структура(
						"Период, ДокументДвижения, Организация, Подразделение, НаправлениеДеятельности, СпособРаспределения");
					
					ЗаполнитьЗначенияСвойств(ДанныеДвижения, ВыборкаДетали);
					
					Если Доходы <> 0 Тогда
						ДанныеДвижения.Вставить("Доходы", 		 Доходы);
						ДанныеДвижения.Вставить("СтатьяДоходов", ВыборкаДетали.СтатьяДоходов);
					КонецЕсли;

					Если Расходы <> 0 Тогда
						ДанныеДвижения.Вставить("Расходы", 		  Расходы);
						ДанныеДвижения.Вставить("СтатьяРасходов", ВыборкаДетали.СтатьяРасходов);
					КонецЕсли;
					
					Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТТаблицаВыручки, ВтТаблицаРаспределения");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);

КонецПроцедуры

// Этап 4.3
Процедура ОтразитьПрибылиИУбытки(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОтразитьПрибылиИУбытки");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Организация				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период 								КАК Период,
	|		АналитикаПоПартнерам.Организация                			КАК Организация,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВЫБОР КОГДА ВыручкаИСебестоимость.ТипЗапасов В (
	|			Значение(Перечисление.ТипыЗапасов.Товар),
	|			Значение(Перечисление.ТипыЗапасов.Услуга))
	|		ТОГДА
	|			ВыручкаИСебестоимость.СуммаВыручки
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ 														КАК Сумма
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|				ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Организация,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Организация				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 						  КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период 							  КАК Период,
	|		АналитикаПоПартнерам.Организация 						  КАК Организация,
	|		ВыручкаИСебестоимость.Подразделение						  КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельности,
	|		ВЫБОР КОГДА ВыручкаИСебестоимость.ТипЗапасов В (
	|			Значение(Перечисление.ТипыЗапасов.Товар),
	|			Значение(Перечисление.ТипыЗапасов.Услуга))
	|		ТОГДА
	|			ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ
	|			ВыручкаИСебестоимость.ДопРасходы
	|		КОНЕЦ 													  КАК Сумма
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|				ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Организация,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица2
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.СуммаВыручки							КАК Сумма
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры
	|			<> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы 
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС КАК Сумма
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.СуммаВыручки							КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ВыручкаИСебестоимость.Активность
	|		И ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры
	|			<> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ АналитикаПоПартнерам.Организация В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ВыручкаИСебестоимость.Активность
	|		И ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ АналитикаПоПартнерам.Организация В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатков)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	 КАК ВидДвижения,
	|	ПрочиеДоходы.Регистратор				 КАК ДокументДвижения,
	|	ПрочиеДоходы.Период						 КАК Период,
	|	ПрочиеДоходы.Организация				 КАК Организация,
	|	ПрочиеДоходы.Подразделение				 КАК Подразделение,
	|	ПрочиеДоходы.НаправлениеДеятельности	 КАК НаправлениеДеятельности,
	|	СУММА(ПрочиеДоходы.Сумма)				 КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица3
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеДоходы КАК ПрочиеДоходы
	|ГДЕ
	|	НЕ &ФормироватьФинансовыйРезультат
	|	И ПрочиеДоходы.РасчетСебестоимости
	|	И НЕ ПрочиеДоходы.СлужебноеВидДвиженияПриход
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеДоходы.Регистратор,
	|	ПрочиеДоходы.Период,
	|	ПрочиеДоходы.Организация,
	|	ПрочиеДоходы.Подразделение,
	|	ПрочиеДоходы.НаправлениеДеятельности
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	  КАК ВидДвижения,
	|	ПрочиеРасходы.Регистратор				  КАК ДокументДвижения,
	|	ПрочиеРасходы.Период					  КАК Период,
	|	ПрочиеРасходы.Организация				  КАК Организация,
	|	ПрочиеРасходы.Подразделение				  КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности	  КАК НаправлениеДеятельности,
	|	СУММА(ПрочиеРасходы.Сумма) 			      КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица4
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	НЕ &ФормироватьФинансовыйРезультат
	|	И ПрочиеРасходы.РасчетСебестоимости
	|	И НЕ ПрочиеРасходы.СлужебноеВидДвиженияПриход
	|	И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДанныеДвижений.ДокументДвижения 	 								  КАК ДокументДвижения,
	|	ДанныеДвижений.Период				 								  КАК Период,
	|	ДанныеДвижений.Организация			 								  КАК Организация,
	|	ДанныеДвижений.Подразделение			 							  КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО			 											  КАК Аналитика,
	|	ДанныеДвижений.НаправлениеДеятельности			 					  КАК НаправлениеДеятельности,
	|	ДанныеДвижений.ВидДвижения			 								  КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	СУММА(ДанныеДвижений.Сумма)			 								  КАК Сумма
	|ИЗ
	|
	|	(ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица1 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица2 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица3 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица4 КАК Т
	|
	|	) КАК ДанныеДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДвижений.ДокументДвижения,
	|	ДанныеДвижений.Период,
	|	ДанныеДвижений.Организация,
	|	ДанныеДвижений.Подразделение,
	|	ДанныеДвижений.НаправлениеДеятельности,
	|	ДанныеДвижений.ВидДвижения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеДвижений.Сумма) <> 0
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
		ПараметрыРасчета,
		Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя,
		Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТПромежуточнаяТаблица1, ВТПромежуточнаяТаблица2, ВТПромежуточнаяТаблица3, ВТПромежуточнаяТаблица4");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 4.4
Процедура ОтразитьВУправленческомБалансе(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОтразитьВУправленческомБалансе");
	
	// Дополним перечень измененных документов документами внеоборотных активов.
	// Для полученного перечня документов установим признак необходимости повторного отражения в учете.
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ТекстЗапросаУправленческогоБаланса
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизаций.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ВТВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыОрганизаций.Активность
	|	И ТоварыОрганизаций.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ТоварыОрганизаций.Организация В(&МассивОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СебестоимостьТоваров.АналитикаРасходов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|ГДЕ
	|	СебестоимостьТоваров.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.КорВидЗапасов КАК КорВидЗапасов,
	|	Т.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Стоимость КАК Стоимость,
	|	Т.ДопРасходы КАК ДопРасходы,
	|	Т.Трудозатраты КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости
	|ПОМЕСТИТЬ ВТСебестоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТПрочиеДоходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеДоходы КАК Т
	|ГДЕ
	|	Т.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Т.Сумма КАК Сумма,
	|	Т.СуммаУпр КАК СуммаУпр
	|ПОМЕСТИТЬ ВТПрочиеРасходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК Т
	|ГДЕ
	|	Т.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.Стоимость КАК Стоимость
	|ПОМЕСТИТЬ ВТПартииПрочихРасходов
	|ИЗ
	|	ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК Т
	|ГДЕ
	|	Т.Стоимость <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.Статья КАК Статья,
	|	Т.Аналитика КАК Аналитика,
	|	Т.Сумма КАК Сумма,
	|	Т.ВидИсточника КАК ВидИсточника,
	|	Т.Источник КАК Источник,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости
	|ПОМЕСТИТЬ ВТАктивыПассивы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеАктивыПассивы КАК Т
	|ГДЕ
	|	Т.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОтражению.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СебестоимостьТоваров.Регистратор КАК Ссылка
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|	ГДЕ
	|		НЕ(СебестоимостьТоваров.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПартииПрочихРасходов.Регистратор
	|	ИЗ
	|		ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ПартииПрочихРасходов
	//++ Локализация
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ПартииПрочихРасходов.Регистратор) <> ТИП(Документ.СчетФактураНалоговыйАгент)
	//-- Локализация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеАктивыПассивы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|	ГДЕ
	|		ПрочиеАктивыПассивы.Организация В(&МассивОрганизаций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеДоходы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеДоходы КАК ПрочиеДоходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеРасходы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеРасходы КАК ПрочиеРасходы
	|
	|) КАК ДокументыКОтражению
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ДокументыКОтражению");
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ДокументыКОтражению") > 0 Тогда
		
		// Передадим временную таблицу ДокументыКОтражению
		ПараметрыДвижений = Новый Структура;
		ПараметрыДвижений.Вставить("ВидОтложенногоРасчета", Перечисления.ВидыИсточниковДвижений.РасчетСебестоимости);
		ПараметрыДвижений.Вставить("ДокументыКОтражению",   ПараметрыРасчета.МенеджерВременныхТаблиц);
		ПараметрыДвижений.Вставить("Период", ПараметрыРасчета.РасчетныйПериод.НачалоПериода);
		ПараметрыДвижений.Вставить("ИмяВременнойТаблицыРезультата", "ВТДвиженияАктивыПассивы");
		
		ЗапросДвижений = УправленческийУчетПроведениеСервер.ЗапросДвиженийАктивовПассивов(ПараметрыДвижений);
		
		#Область ВычтемОнлайновыеДвижения
		ТекстВычитания = 
		"ВЫБРАТЬ
		|	Т.ВидДвижения КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	Т.Сумма КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	Т.РасчетСебестоимости КАК РасчетСебестоимости
		|ПОМЕСТИТЬ ВТГруппировкаАктивыПассивы
		|ИЗ
		|	ВТДвиженияАктивыПассивы КАК Т
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	-Т.Сумма КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	Т.РасчетСебестоимости КАК РасчетСебестоимости
		|ИЗ
		|	ВТКэшРасчетныеОборотыПрочиеАктивыПассивы КАК Т
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО Т.Регистратор = ДокументыКОтражению.Регистратор
		|ГДЕ
		|	Т.Сумма <> 0
		|	И НЕ Т.РасчетСебестоимости
		|	И Т.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.РасчетСебестоимости)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ВидДвижения КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	СУММА(Т.Сумма) КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	МИНИМУМ(Т.РасчетСебестоимости) КАК РасчетСебестоимости,
		|	Т.Регистратор КАК ДокументДвижения
		|ИЗ
		|	ВТГруппировкаАктивыПассивы КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.ВидДвижения,
		|	Т.Регистратор,
		|	Т.Период,
		|	Т.Организация,
		|	Т.Подразделение,
		|	Т.НаправлениеДеятельности,
		|	Т.Статья,
		|	Т.Аналитика,
		|	Т.ВидИсточника,
		|	Т.Источник
		|
		|ИМЕЮЩИЕ
		|	СУММА(Т.Сумма) <> 0";
		ЗапросДвижений.Текст = ЗапросДвижений.Текст + ТекстВычитания;
		#КонецОбласти
		
		РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
			ПараметрыРасчета,
			Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя,
			ЗапросДвижений);
			
		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
			ЗапросДвижений.Параметры.ИменаВременныхТаблиц);
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ДокументыКОтражению, ВТВнеоборотныеАктивы, ВТСебестоимость, ВТПрочиеДоходы, ВТПрочиеРасходы, ВТПартииПрочихРасходов, "
		+ "ВТТрудозатратыНЗП, ВТПрочиеРасходыНЗП, ВТАктивыПассивы, ВТГруппировкаАктивыПассивы, ВТДвиженияАктивыПассивы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаВтТаблицаРасходовПоОстаткам()
	
	ТекстЗапроса = "
	| ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасходы.ПравилоРаспределения КАК ПравилоРаспределения,
	|	ТаблицаРасходы.Сумма КАК Сумма,
	|	ТаблицаРасходы.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасходы.СуммаУпр КАК СуммаУпр,
	|	ТаблицаРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ТаблицаРасходы.ВременнаяРазница КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРасходов
	|ИЗ
	|	&ТаблицаРасходов КАК ТаблицаРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаТаблицаСпособовРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.ПравилоРаспределения КАК ПравилоРаспределения,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР КОГДА ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК АналитикаЗаполнена,
	|	МАКСИМУМ(ТаблицаРасходы.НомерСтроки) КАК ИндексБазы
	|ПОМЕСТИТЬ ТаблицаСпособовРаспределения
	|ИЗ
	|	ВтТаблицаРасходов КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.ПравилоРаспределения,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ВЫБОР КОГДА ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИЛИ ТаблицаРасходы.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаТаблицаДокументов()
	
	ТекстЗапроса = "
	// Приобретение товаров по конкретным документам закупки или по заказам поставщикам.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаЗаполнена
	|		И (ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|       	ИЛИ ТаблицаТовары.ЗаказПоставщику = ТаблицаСпособовРаспределения.АналитикаРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приобретения товаров по любым документам закупки.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (ТаблицаТовары.ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		И ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещения товаров по конкретным документам перемещения или по заказам на перемещение.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаЗаполнена
	|		И (ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|       	ИЛИ ДанныеДокумента.ЗаказНаПеремещение = ТаблицаСпособовРаспределения.АналитикаРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещения товаров по любым документам перемещения или по любым заказам на перемещение.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (ДанныеДокумента.ЗаказНаПеремещение <> ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка) И ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|		ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передачи товаров между организациями.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаСпособовРаспределения.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаТаблицаПоступленияТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	УчетСебестоимости.КоличествоОстаток КАК Количество,
	|	УчетСебестоимости.СтоимостьОстаток КАК Стоимость
	|ПОМЕСТИТЬ ВтПоступленияТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|		РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути))
	|		И Организация В(&МассивОрганизаций)
	|	) КАК УчетСебестоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	СУММА(
	|		ВЫБОР КОГДА УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА
	|			0
	|		ИНАЧЕ
	|			УчетСебестоимости.Количество
	|		КОНЕЦ
	|	) КАК Количество,
	|	СУММА(
	|		ВЫБОР КОГДА УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА
	|			0
	|		ИНАЧЕ
	|			УчетСебестоимости.Стоимость
	|		КОНЕЦ
	|	) КАК Стоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|ГДЕ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И УчетСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути))
	|	И (УчетСебестоимости.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.СборкаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.РазделУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	СУММА(
	|		ВЫБОР КОГДА УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА
	|			0
	|		ИНАЧЕ
	|			УчетСебестоимости.Количество
	|		КОНЕЦ
	|	) КАК Количество,
	|	СУММА(
	|		ВЫБОР КОГДА УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА
	|			0
	|		ИНАЧЕ
	|			УчетСебестоимости.Стоимость
	|		КОНЕЦ
	|	) КАК Стоимость
	|ИЗ
	|	ВТПромежуточнаяСебестоимостьТоваров КАК УчетСебестоимости
	|ГДЕ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И УчетСебестоимости.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути))
	|	И (УчетСебестоимости.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		ИЛИ УчетСебестоимости.Регистратор ССЫЛКА Документ.СборкаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.РазделУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	РазделУчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.ИндексБазы КАК ИндексБазы,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	СУММА(УчетСебестоимости.Количество) КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ ТаблицаПоступленияТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|			ПО УчетСебестоимости.Регистратор = ТаблицаДокументов.Ссылка
	|	
	|ГДЕ
	// движения прошлых периодов
	|	УчетСебестоимости.Период < &НачалоПериода
	|	И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И УчетСебестоимости.Активность
	|	И УчетСебестоимости.Организация В (&МассивОрганизаций)
	|	И (УчетСебестоимости.АналитикаУчетаНоменклатуры, УчетСебестоимости.ВидЗапасов, УчетСебестоимости.РазделУчета) В (
	|		ВЫБРАТЬ
	|       	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|           ВтПоступленияТоваров.ВидЗапасов,
	|			ВтПоступленияТоваров.РазделУчета
	|		ИЗ
	|			ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.ИндексБазы,
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.РазделУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.ИндексБазы КАК ИндексБазы,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	СУММА(УчетСебестоимости.Количество) КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость) КАК Стоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|			ПО УчетСебестоимости.Регистратор = ТаблицаДокументов.Ссылка
	|	
	|ГДЕ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И (УчетСебестоимости.АналитикаУчетаНоменклатуры, УчетСебестоимости.ВидЗапасов, УчетСебестоимости.РазделУчета) В (
	|		ВЫБРАТЬ
	|       	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|           ВтПоступленияТоваров.ВидЗапасов,
	|			ВтПоступленияТоваров.РазделУчета
	|		ИЗ
	|			ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.ИндексБазы,
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.РазделУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.ИндексБазы КАК ИндексБазы,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	СУММА(УчетСебестоимости.Количество) КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость) КАК Стоимость
	|ИЗ
	|	ВТПромежуточнаяСебестоимостьТоваров КАК УчетСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|			ПО УчетСебестоимости.Регистратор = ТаблицаДокументов.Ссылка
	|	
	|ГДЕ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И (УчетСебестоимости.АналитикаУчетаНоменклатуры, УчетСебестоимости.ВидЗапасов, УчетСебестоимости.РазделУчета) В (
	|		ВЫБРАТЬ
	|       	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|           ВтПоступленияТоваров.ВидЗапасов,
	|			ВтПоступленияТоваров.РазделУчета
	|		ИЗ
	|			ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.ИндексБазы,
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.РазделУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы,
	|	ВтПоступленияТоваров.Организация КАК Организация,
	|	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтПоступленияТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ВтПоступленияТоваров.РазделУчета КАК РазделУчета,
	|	СУММА(ВтПоступленияТоваров.Количество) КАК Количество,
	|	СУММА(ВтПоступленияТоваров.Стоимость) КАК Стоимость
	|ИЗ
	|	ВтПоступленияТоваров КАК ВтПоступленияТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО ВтПоступленияТоваров.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|			ПО ВтПоступленияТоваров.Организация = ТаблицаСпособовРаспределения.Организация
	|			И (ТаблицаСпособовРаспределения.АналитикаРасходов = АналитикаНоменклатуры.МестоХранения
	|				ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = АналитикаНоменклатуры.Номенклатура
	|				ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ИЛИ ТаблицаСпособовРаспределения.АналитикаРасходов = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСпособовРаспределения.ИндексБазы,
	|	ВтПоступленияТоваров.Организация,
	|	ВтПоступленияТоваров.АналитикаУчетаНоменклатуры,
	|	ВтПоступленияТоваров.ВидЗапасов,
	|	ВтПоступленияТоваров.РазделУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИндексБазы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаТаблицаБазыРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы,
	|	ТаблицаСпособовРаспределения.Организация КАК Организация,
	|	ТаблицаСпособовРаспределения.ПравилоРаспределения КАК ПравилоРаспределения,
	|	ТаблицаСпособовРаспределения.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаПоступленияТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПоступленияТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаПоступленияТоваров.РазделУчета КАК РазделУчета,
	|	(ВЫБОР
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения
	|				= ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству)
	|			ТОГДА ЕСТЬNULL(ТаблицаПоступленияТоваров.Количество, 0)
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения
	|				= ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу)
	|			ТОГДА ЕСТЬNULL(&Вес * ТаблицаПоступленияТоваров.Количество, 0)
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения
	|				= ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему)
	|			ТОГДА ЕСТЬNULL(&Объем * ТаблицаПоступленияТоваров.Количество, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаПоступленияТоваров.Стоимость, 0)
	|	КОНЕЦ) КАК База
	|
	|ИЗ
	|	ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаПоступленияТоваров КАК ТаблицаПоступленияТоваров
	|	ПО
	|		ТаблицаСпособовРаспределения.ИндексБазы = ТаблицаПоступленияТоваров.ИндексБазы
	|		И ТаблицаСпособовРаспределения.Организация = ТаблицаПоступленияТоваров.Организация
	|ИТОГИ
	|	СУММА(База)
	|ПО
	|	ИндексБазы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат РасчетСебестоимостиПрикладныеАлгоритмы.ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса, "ТаблицаПоступленияТоваров.АналитикаУчетаНоменклатуры.Номенклатура");
	
КонецФункции

// Служебная, этап 3.2 (ТаблицаРаспределенияРасходовНаСебестоимостьТоваров)
Функция ТекстЗапросаТаблицаРасходов()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаРасходы.НомерСтроки) КАК НомерСтроки,
	|	&КонецПериода КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходовСписания,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаСпособовРаспределения.ИндексБазы КАК ИндексБазы,
	|	СУММА(ТаблицаРасходы.Сумма) КАК Сумма,
	|	СУММА(ТаблицаРасходы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаРасходы.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаРасходы.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ТаблицаРасходы.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.ВременнаяРазница) КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаРасходов КАК ТаблицаРасходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	|	ПО
	|		ТаблицаРасходы.ПравилоРаспределения = ТаблицаСпособовРаспределения.ПравилоРаспределения
	|		И ТаблицаРасходы.АналитикаРасходов = ТаблицаСпособовРаспределения.АналитикаРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ТаблицаСпособовРаспределения.ИндексБазы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


// Служебная, этап 3.7
Функция ТекстЗапросаДвиженияСтоимости(ПараметрыРасчета)

	ТекстЗапроса = 
	"
	// В качестве вектора решений на первой итерации берутся свободные коэффициенты.
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                             	КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_1 КАК ЧИСЛО(28,10))                КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_1 КАК ЧИСЛО(28,10))        		КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_1 КАК ЧИСЛО(28,10))  			КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПостоянныеГраф_1 КАК ЧИСЛО(28,10))  	КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПеременныеГраф_1 КАК ЧИСЛО(28,10))    КАК ПостатейныеПеременныеГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьЗабалансовая КАК ЧИСЛО(28,10))      	КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28,10))          	КАК ПостояннаяРазница,
	|	УзлыКорректировки.ПостояннаяРазницаЗнак                                 	КАК ПостояннаяРазницаЗнак,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница КАК ЧИСЛО(28,10))           	КАК ВременнаяРазница,
	|	УзлыКорректировки.ВременнаяРазницаЗнак                                  	КАК ВременнаяРазницаЗнак,
	|	УзлыКорректировки.СтоимостьЗнакГраф_1                                       КАК СтоимостьЗнакГраф_1,
	
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_2 КАК ЧИСЛО(28,10))   				КАК СтоимостьГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_2 КАК ЧИСЛО(28,10))   			КАК ДопРасходыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_2 КАК ЧИСЛО(28,10))   			КАК ТрудозатратыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПостоянныеГраф_2 КАК ЧИСЛО(28,10))   	КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПеременныеГраф_2 КАК ЧИСЛО(28,10))   	КАК ПостатейныеПеременныеГраф_2,
	|	УзлыКорректировки.СтоимостьЗнакГраф_2                                      	КАК СтоимостьЗнакГраф_2
	|ПОМЕСТИТЬ ВтТаблицаРешений
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.Партия КАК Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	УчетСебестоимости.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация КАК КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов КАК КорВидЗапасов,
	|	УчетСебестоимости.КорПартия КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
	|	УчетСебестоимости.АналитикаРасходов КАК АналитикаРасходов,
	|	УчетСебестоимости.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	УчетСебестоимости.Подразделение КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И
	|			(ЛОЖЬ
	|			) ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПродукцияДавальца,
	|	СУММА(УчетСебестоимости.Количество) КАК Количество
	|	
	|ПОМЕСТИТЬ ВтСебестоимостьТоваровСвернуто
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров.Товары КАК ПередачиВЭксплуатацию
	|	ПО ПередачиВЭксплуатацию.Ссылка = УчетСебестоимости.Регистратор
	|		И ПередачиВЭксплуатацию.ИдентификаторСтроки = УчетСебестоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК Категория
	|	ПО Категория.Ссылка = ПередачиВЭксплуатацию.КатегорияЭксплуатации
	|		И Категория.СпособПогашенияСтоимостиБУ = Категория.СпособПогашенияСтоимостиНУ
	//-- Локализация
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.РазделУчета,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС,
	|	УчетСебестоимости.ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов,
	|	УчетСебестоимости.КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяРасходовСписания,
	|	УчетСебестоимости.АналитикаРасходов,
	|	УчетСебестоимости.КорНаправлениеДеятельности,
	|	УчетСебестоимости.Подразделение,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И
	|			(ЛОЖЬ
	|			) ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) // ПродукцияДавальца
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	Партия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	УчетСебестоимости.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация КАК КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов КАК КорВидЗапасов,
	|	УчетСебестоимости.КорПартия КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.ПродукцияДавальца,
	|	УчетСебестоимости.Количество КАК Количество
	|		
	|ПОМЕСТИТЬ ВтСебестоимостьТоваровПеремещения
	|ИЗ
	|	ВтСебестоимостьТоваровСвернуто КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|	ПО УчетСебестоимости.АналитикаУчетаНоменклатуры = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.РазделУчета = УзлыКорректировкиИсточник.РазделУчета
	|		И УчетСебестоимости.ВидЗапасов = УзлыКорректировкиИсточник.ВидЗапасов
	|		И УчетСебестоимости.Организация = УзлыКорректировкиИсточник.Организация
	|		И УчетСебестоимости.Партия = УзлыКорректировкиИсточник.Партия
	|		И УчетСебестоимости.АналитикаУчетаПартий = УзлыКорректировкиИсточник.АналитикаУчетаПартий
	|		И УчетСебестоимости.АналитикаФинансовогоУчета = УзлыКорректировкиИсточник.АналитикаФинансовогоУчета
	|		И УчетСебестоимости.ВидДеятельностиНДС = УзлыКорректировкиИсточник.ВидДеятельностиНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|	ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|		И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|ГДЕ
	|	НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И НЕ(УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И УчетСебестоимости.Количество < 0
	|		И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КорАналитикаУчетаНоменклатуры,
	|	КорОрганизация,
	|	КорПартия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// Подготовим таблицу списаний за период (коэффициенты уравнения)
	|ВЫБРАТЬ
	|	УчетСебестоимости.НомерУзлаИсточник 				КАК НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник 				КАК НомерУзлаПриемник,
	|	ЛОЖЬ 												КАК ПередачаВЭксплуатацию,
	|	ИСТИНА												КАК ПринимаемыеВНУ,
	|	ЛОЖЬ 												КАК КосвенныеЗатратыНУ,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПостоянные)	КАК ПостатейныеПостоянныеГраф_1,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПеременные)	КАК ПостатейныеПеременныеГраф_1,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПостоянные)	КАК ПостатейныеПостоянныеГраф_2,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПеременные)	КАК ПостатейныеПеременныеГраф_2,
	|	МАКСИМУМ(УчетСебестоимости.РаботаДляДавальца)		КАК РаботаДляДавальца,
	|	МАКСИМУМ(УчетСебестоимости.ПродукцияДавальца)		КАК ПродукцияДавальца,
	|	СУММА(УчетСебестоимости.ВесДугиГраф_1)				КАК ВесДугиГраф_1,
	|	СУММА(УчетСебестоимости.ВесДугиГраф_2)				КАК ВесДугиГраф_2
	|
	|ПОМЕСТИТЬ ВтПеремещенияСписания
	|ИЗ (
	|	ВЫБРАТЬ
	|		УчетСебестоимости.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
	|			ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
	|		КОГДА УчетСебестоимости.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			УзлыКорректировкиПриемникПередачи.НомерУзла
	|		ИНАЧЕ
	|			УзлыКорректировкиПриемник.НомерУзла
	|		КОНЕЦ КАК НомерУзлаПриемник,
	|		УчетСебестоимости.Количество КАК ВесДугиГраф_1,
	|		УчетСебестоимости.Количество КАК ВесДугиГраф_2,
	|		ЛОЖЬ КАК ПостатейныеПостоянные,
	|		ЛОЖЬ КАК ПостатейныеПеременные,
	|		ЛОЖЬ КАК РаботаДляДавальца,
	|		УчетСебестоимости.ПродукцияДавальца КАК ПродукцияДавальца
	|	ИЗ
	|		ВтСебестоимостьТоваровПеремещения КАК УчетСебестоимости
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|		ПО
	|			УчетСебестоимости.КорАналитикаУчетаНоменклатуры  = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|			И УчетСебестоимости.КорРазделУчета 				 = УзлыКорректировкиПриемник.РазделУчета
	|			И УчетСебестоимости.КорВидЗапасов 				 = УзлыКорректировкиПриемник.ВидЗапасов
	|			И УчетСебестоимости.Организация 				 = УзлыКорректировкиПриемник.Организация
	|			И УчетСебестоимости.КорОрганизация 				 = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И УчетСебестоимости.КорПартия              	     = УзлыКорректировкиПриемник.Партия
	|			И УчетСебестоимости.КорАналитикаУчетаПартий      = УзлыКорректировкиПриемник.АналитикаУчетаПартий
	|			И (УчетСебестоимости.КорАналитикаФинансовогоУчета = УзлыКорректировкиПриемник.АналитикаФинансовогоУчета
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|			И (УчетСебестоимости.КорВидДеятельностиНДС        = УзлыКорректировкиПриемник.ВидДеятельностиНДС
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемникПередачи
	|		ПО
	|			УчетСебестоимости.КорАналитикаУчетаНоменклатуры  = УзлыКорректировкиПриемникПередачи.АналитикаУчетаНоменклатуры
	|			И УчетСебестоимости.КорРазделУчета 				 = УзлыКорректировкиПриемникПередачи.РазделУчета
	|			И УчетСебестоимости.КорВидЗапасов 				 = УзлыКорректировкиПриемникПередачи.ВидЗапасов
	|			И УчетСебестоимости.КорОрганизация 				 = УзлыКорректировкиПриемникПередачи.Организация
	|			И УчетСебестоимости.КорОрганизация 				 <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И УчетСебестоимости.РазделУчета 				 <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|			И УчетСебестоимости.КорПартия              	     = УзлыКорректировкиПриемникПередачи.Партия
	|			И УчетСебестоимости.КорАналитикаУчетаПартий      = УзлыКорректировкиПриемникПередачи.АналитикаУчетаПартий
	|			И (УчетСебестоимости.КорАналитикаФинансовогоУчета = УзлыКорректировкиПриемникПередачи.АналитикаФинансовогоУчета
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|			И (УчетСебестоимости.КорВидДеятельностиНДС        = УзлыКорректировкиПриемникПередачи.ВидДеятельностиНДС
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемникРеглУчет
	|		ПО
	|			УчетСебестоимости.КорАналитикаУчетаНоменклатуры  = УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаНоменклатуры
	|			И УчетСебестоимости.РазделУчета 				 = УзлыКорректировкиПриемникРеглУчет.РазделУчета
	|			И УчетСебестоимости.КорВидЗапасов 				 = УзлыКорректировкиПриемникРеглУчет.ВидЗапасов
	|			И УчетСебестоимости.КорОрганизация				 = УзлыКорректировкиПриемникРеглУчет.Организация
	|			И УчетСебестоимости.КорПартия 					 = УзлыКорректировкиПриемникРеглУчет.Партия
	|			И УчетСебестоимости.КорАналитикаУчетаПартий 	 = УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаПартий
	|			И (УчетСебестоимости.КорАналитикаФинансовогоУчета = УзлыКорректировкиПриемникРеглУчет.АналитикаФинансовогоУчета
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|			И (УчетСебестоимости.КорВидДеятельностиНДС 		 = УзлыКорректировкиПриемникРеглУчет.ВидДеятельностиНДС
	|				ИЛИ НЕ &ПартионныйУчетВерсии22)
	|	ГДЕ
	|		(УзлыКорректировкиПриемник.НомерУзла ЕСТЬ НЕ NULL
	|			ИЛИ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ НЕ NULL
	|			ИЛИ УзлыКорректировкиПриемникРеглУчет.НомерУзла ЕСТЬ НЕ NULL)
	// Исключим перемещения в тот же самый узел, кроме выпуска продукции
	|		И ((УчетСебестоимости.НомерУзлаИсточник <> 
	|			ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
	|				ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
	|			КОГДА УчетСебестоимости.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|				УзлыКорректировкиПриемникПередачи.НомерУзла
	|			ИНАЧЕ
	|				УзлыКорректировкиПриемник.НомерУзла
	|			КОНЕЦ)
	|			ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
	|		УчетСебестоимости.Количество		КАК ВесДугиГраф_1,
	|		УчетСебестоимости.Количество 		КАК ВесДугиГраф_2,
	|		ЛОЖЬ 								КАК ПостатейныеПостоянные,
	|		ЛОЖЬ 								КАК ПостатейныеПеременные,
	|		ЛОЖЬ 								КАК РаботаДляДавальца,
	|		ЛОЖЬ 								КАК ПродукцияДавальца
	|	ИЗ
	|		ВтПередачиТоваров КАК УчетСебестоимости
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|		ПО
	|			УчетСебестоимости.АналитикаУчетаНоменклатуры  = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|			И УчетСебестоимости.РазделУчета 			  = УзлыКорректировкиИсточник.РазделУчета
	|			И УчетСебестоимости.ВидЗапасов 				  = УзлыКорректировкиИсточник.ВидЗапасов
	|			И УчетСебестоимости.Организация 			  = УзлыКорректировкиИсточник.Организация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|		ПО
	|			УчетСебестоимости.КорАналитикаУчетаНоменклатуры  = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|			И УчетСебестоимости.КорРазделУчета 				 = УзлыКорректировкиПриемник.РазделУчета
	|			И УчетСебестоимости.КорВидЗапасов 				 = УзлыКорректировкиПриемник.ВидЗапасов
	|			И УчетСебестоимости.КорОрганизация 				 = УзлыКорректировкиПриемник.Организация
	|	ГДЕ
	|		УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	) КАК УчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник
	|";

	
	ТекстЗапроса = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	
	Возврат ТекстЗапроса;

КонецФункции

// Служебная, этап 3.11
Функция ТекстЗапросаДвиженияСтоимостиРегл(ПараметрыРасчета)

	ТекстЗапроса = 
	"
	// В качестве вектора решений на первой итерации берутся свободные коэффициенты.
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                            		КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_1 КАК ЧИСЛО(28,10))                КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_1 КАК ЧИСЛО(28,10))       		КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_1 КАК ЧИСЛО(28,10))  			КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПостоянныеГраф_1 КАК ЧИСЛО(28,10))    КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПеременныеГраф_1 КАК ЧИСЛО(28,10))    КАК ПостатейныеПеременныеГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28,10))         		КАК ПостояннаяРазница,
	|	УзлыКорректировки.ПостояннаяРазницаЗнак                                		КАК ПостояннаяРазницаЗнак,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница КАК ЧИСЛО(28,10))          		КАК ВременнаяРазница,
	|	УзлыКорректировки.ВременнаяРазницаЗнак                                 		КАК ВременнаяРазницаЗнак,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьЗабалансовая КАК ЧИСЛО(28,10))     		КАК СтоимостьЗабалансовая,
	|	УзлыКорректировки.СтоимостьЗнакГраф_1                                       КАК СтоимостьЗнакГраф_1,
	
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_2 КАК ЧИСЛО(28,10))           		КАК СтоимостьГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_2 КАК ЧИСЛО(28,10)) 				КАК ДопРасходыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_2 КАК ЧИСЛО(28,10))  			КАК ТрудозатратыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПостоянныеГраф_2 КАК ЧИСЛО(28,10))   	КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостатейныеПеременныеГраф_2 КАК ЧИСЛО(28,10))   	КАК ПостатейныеПеременныеГраф_2,
	|	УзлыКорректировки.СтоимостьЗнакГраф_2                                     	КАК СтоимостьЗнакГраф_2
	|ПОМЕСТИТЬ ВтТаблицаРешений
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	УчетСебестоимости.ВидЗапасов КАК ВидЗапасов,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.Партия КАК Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	УчетСебестоимости.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация КАК КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов КАК КорВидЗапасов,
	|	УчетСебестоимости.КорПартия КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
	|	УчетСебестоимости.АналитикаРасходов КАК АналитикаРасходов,
	|	УчетСебестоимости.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	УчетСебестоимости.Подразделение КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И
	|			(ЛОЖЬ
	|			) ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПродукцияДавальца,
	|	СУММА(УчетСебестоимости.Количество) КАК Количество
	|	
	|ПОМЕСТИТЬ ВтСебестоимостьТоваровСвернуто
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров.Товары КАК ПередачиВЭксплуатацию
	|	ПО ПередачиВЭксплуатацию.Ссылка = УчетСебестоимости.Регистратор
	|		И ПередачиВЭксплуатацию.ИдентификаторСтроки = УчетСебестоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК Категория
	|	ПО Категория.Ссылка = ПередачиВЭксплуатацию.КатегорияЭксплуатации
	|		И Категория.СпособПогашенияСтоимостиБУ = Категория.СпособПогашенияСтоимостиНУ
	//-- Локализация
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.СлужебноеВидДвиженияПриход,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.РазделУчета,
	|	УчетСебестоимости.ВидЗапасов,
	|	УчетСебестоимости.Организация,
	|	УчетСебестоимости.Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС,
	|	УчетСебестоимости.ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов,
	|	УчетСебестоимости.КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС,
	|	УчетСебестоимости.СтатьяРасходовСписания,
	|	УчетСебестоимости.АналитикаРасходов,
	|	УчетСебестоимости.КорНаправлениеДеятельности,
	|	УчетСебестоимости.Подразделение,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И
	|			(ЛОЖЬ
	|			) ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) // ПродукцияДавальца
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	Партия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|	УчетСебестоимости.Организация КАК Организация,
	|	УчетСебестоимости.РазделУчета КАК РазделУчета,
	|	УчетСебестоимости.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорОрганизация КАК КорОрганизация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	УчетСебестоимости.КорРазделУчета КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов КАК КорВидЗапасов,
	|	УчетСебестоимости.КорПартия КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.ПродукцияДавальца,
	|	УчетСебестоимости.Количество КАК Количество
	|		
	|ПОМЕСТИТЬ ВтСебестоимостьТоваровПеремещения
	|ИЗ
	|	ВтСебестоимостьТоваровСвернуто КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|	ПО УчетСебестоимости.АналитикаУчетаНоменклатуры = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.РазделУчета = УзлыКорректировкиИсточник.РазделУчета
	|		И УчетСебестоимости.ВидЗапасов = УзлыКорректировкиИсточник.ВидЗапасов
	|		И УчетСебестоимости.Организация = УзлыКорректировкиИсточник.Организация
	|		И УчетСебестоимости.Партия = УзлыКорректировкиИсточник.Партия
	|		И УчетСебестоимости.АналитикаУчетаПартий = УзлыКорректировкиИсточник.АналитикаУчетаПартий
	|		И УчетСебестоимости.АналитикаФинансовогоУчета = УзлыКорректировкиИсточник.АналитикаФинансовогоУчета
	|		И УчетСебестоимости.ВидДеятельностиНДС = УзлыКорректировкиИсточник.ВидДеятельностиНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|	ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|		И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|ГДЕ
	|	НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И НЕ(УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И УчетСебестоимости.Количество < 0
	|		И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КорАналитикаУчетаНоменклатуры,
	|	КорОрганизация,
	|	КорПартия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// Подготовим таблицу списаний за период (коэффициенты уравнения)
	|ВЫБРАТЬ
	|	УчетСебестоимости.НомерУзлаИсточник 			  		КАК НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник 			  		КАК НомерУзлаПриемник,
	|	УчетСебестоимости.ПередачаВЭксплуатацию           		КАК ПередачаВЭксплуатацию,
	|	МАКСИМУМ(УчетСебестоимости.ПринимаемыеВНУ)        		КАК ПринимаемыеВНУ,
	|	МАКСИМУМ(УчетСебестоимости.КосвенныеЗатратыНУ) 	  		КАК КосвенныеЗатратыНУ,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПостоянныеГраф_1)	КАК ПостатейныеПостоянныеГраф_1,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПеременныеГраф_1)	КАК ПостатейныеПеременныеГраф_1,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПостоянныеГраф_2)	КАК ПостатейныеПостоянныеГраф_2,
	|	МАКСИМУМ(УчетСебестоимости.ПостатейныеПеременныеГраф_2)	КАК ПостатейныеПеременныеГраф_2,
	|	МАКСИМУМ(УчетСебестоимости.РаботаДляДавальца)	  		КАК РаботаДляДавальца,
	|	МАКСИМУМ(УчетСебестоимости.ПродукцияДавальца)	  		КАК ПродукцияДавальца,
	|	СУММА(УчетСебестоимости.ВесДугиГраф_1) 			  		КАК ВесДугиГраф_1,
	|	СУММА(УчетСебестоимости.ВесДугиГраф_2) 			  		КАК ВесДугиГраф_2
	|ПОМЕСТИТЬ ВтПеремещенияСписания
	|ИЗ (
	|ВЫБРАТЬ
	|	УчетСебестоимости.НомерУзлаИсточник   КАК НомерУзлаИсточник,
	|	УзлыКорректировкиПриемник.НомерУзла   КАК НомерУзлаПриемник,
	|	УчетСебестоимости.Количество          КАК ВесДугиГраф_1,
	|	УчетСебестоимости.Количество          КАК ВесДугиГраф_2,
	|	ЛОЖЬ 								  КАК ПередачаВЭксплуатацию,
	|	ИСТИНА 								  КАК ПринимаемыеВНУ,
	|	ЛОЖЬ 								  КАК КосвенныеЗатратыНУ,
	|	ЛОЖЬ								  КАК ПостатейныеПостоянныеГраф_2,
	|	ЛОЖЬ								  КАК ПостатейныеПеременныеГраф_2,
	|	ЛОЖЬ								  КАК ПостатейныеПостоянныеГраф_1,
	|	ЛОЖЬ								  КАК ПостатейныеПеременныеГраф_1,
	|	ЛОЖЬ								  КАК РаботаДляДавальца,
	|	УчетСебестоимости.ПродукцияДавальца   КАК ПродукцияДавальца
	|ИЗ
	|	ВтСебестоимостьТоваровПеремещения КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|	ПО УчетСебестоимости.КорАналитикаУчетаНоменклатуры   = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.КорРазделУчета 			  	 = УзлыКорректировкиПриемник.РазделУчета
	|		И УчетСебестоимости.КорВидЗапасов 			  	 = УзлыКорректировкиПриемник.ВидЗапасов
	|		И УчетСебестоимости.Организация 			  	 = УзлыКорректировкиПриемник.Организация
	|		И УчетСебестоимости.КорПартия              	     = УзлыКорректировкиПриемник.Партия
	|		И УчетСебестоимости.КорАналитикаУчетаПартий      = УзлыКорректировкиПриемник.АналитикаУчетаПартий
	|		И (УчетСебестоимости.КорАналитикаФинансовогоУчета = УзлыКорректировкиПриемник.АналитикаФинансовогоУчета
	|			ИЛИ НЕ &ПартионныйУчетВерсии22)
	|		И (УчетСебестоимости.КорВидДеятельностиНДС        = УзлыКорректировкиПриемник.ВидДеятельностиНДС
	|			ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|ГДЕ
	|	УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	И УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|	И УчетСебестоимости.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	// Исключим перемещения в тот же самый узел, кроме выпуска продукции
	|	И (УчетСебестоимости.НомерУзлаИсточник <> УзлыКорректировкиПриемник.НомерУзла
	|		ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировкиИсточник.НомерУзла   КАК НомерУзлаИсточник,
	|	УзлыКорректировкиПриемник.НомерУзла   КАК НомерУзлаПриемник,
	|	УчетСебестоимости.Количество          КАК ВесДугиГраф_1,
	|	УчетСебестоимости.Количество          КАК ВесДугиГраф_2,
	|	ЛОЖЬ 								  КАК ПередачаВЭксплуатацию,
	|	ИСТИНА 								  КАК ПринимаемыеВНУ,
	|	ЛОЖЬ 								  КАК КосвенныеЗатратыНУ,
	|	ЛОЖЬ								  КАК ПостатейныеПостоянныеГраф_2,
	|	ЛОЖЬ								  КАК ПостатейныеПеременныеГраф_2,
	|	ЛОЖЬ								  КАК ПостатейныеПостоянныеГраф_1,
	|	ЛОЖЬ								  КАК ПостатейныеПеременныеГраф_1,
	|	ЛОЖЬ								  КАК РаботаДляДавальца,
	|	ЛОЖЬ								  КАК ПродукцияДавальца
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|	ПО УчетСебестоимости.АналитикаУчетаНоменклатуры   = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.РазделУчета  			  = УзлыКорректировкиИсточник.РазделУчета
	|		И УчетСебестоимости.ВидЗапасов  			  = УзлыКорректировкиИсточник.ВидЗапасов
	|		И УчетСебестоимости.Организация  			  = УзлыКорректировкиИсточник.Организация
	|		И УчетСебестоимости.Партия              	  = УзлыКорректировкиИсточник.Партия
	|		И УчетСебестоимости.АналитикаУчетаПартий      = УзлыКорректировкиИсточник.АналитикаУчетаПартий
	|		И УчетСебестоимости.АналитикаФинансовогоУчета = УзлыКорректировкиИсточник.АналитикаФинансовогоУчета
	|		И УчетСебестоимости.ВидДеятельностиНДС        = УзлыКорректировкиИсточник.ВидДеятельностиНДС
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|	ПО УчетСебестоимости.КорАналитикаУчетаНоменклатуры   = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.КорРазделУчета 				 = УзлыКорректировкиПриемник.РазделУчета
	|		И УчетСебестоимости.КорВидЗапасов 				 = УзлыКорректировкиПриемник.ВидЗапасов
	|		И УчетСебестоимости.КорОрганизация 				 = УзлыКорректировкиПриемник.Организация
	|		И УчетСебестоимости.КорПартия              	  	 = УзлыКорректировкиПриемник.Партия
	|		И УчетСебестоимости.КорАналитикаУчетаПартий      = УзлыКорректировкиПриемник.АналитикаУчетаПартий
	|		И (УчетСебестоимости.КорАналитикаФинансовогоУчета = УзлыКорректировкиПриемник.АналитикаФинансовогоУчета
	|			ИЛИ НЕ &ПартионныйУчетВерсии22)
	|		И (УчетСебестоимости.КорВидДеятельностиНДС        = УзлыКорректировкиПриемник.ВидДеятельностиНДС
	|			ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|ГДЕ
	|	НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|	И УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	И УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|	И УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И УчетСебестоимости.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	) КАК УчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник,
	|	УчетСебестоимости.ПередачаВЭксплуатацию
	|";
	
	ТекстЗапроса = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	
	Возврат ТекстЗапроса;

КонецФункции


Функция УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса)
	
	// В запросах, выполняющих расчеты во временных таблицах, установим максимально возможную разрядность.
	
	СтараяРазрядность 			  = 28;
	СтараяРазрядностьДробнойЧасти = 10;
	НоваяРазрядность 			  = ПараметрыРасчета.РешениеСЛУ.РазрядностьДляРасчетов;
	НоваяРазрядностьДробнойЧасти  = СтараяРазрядностьДробнойЧасти;
	ОписаниеДенежногоПоля 		  = ОбщегоНазначенияУТ.РазрядностьДенежногоПоля();
	
	Если ОписаниеДенежногоПоля.Разрядность - ОписаниеДенежногоПоля.РазрядностьДробнойЧасти > 13 Тогда
		
		// Уменьшим разрядность дробной части при расчете.
		// Общую разрядность, установленную в настройках, изменять не будем - чтобы не вызвать ошибку переполнения поля.
		ИзмерениеРазрядности = ОписаниеДенежногоПоля.Разрядность - ОписаниеДенежногоПоля.РазрядностьДробнойЧасти - 13;
		НоваяРазрядностьДробнойЧасти = Макс(НоваяРазрядностьДробнойЧасти - ИзмерениеРазрядности, 0);
		
	КонецЕсли;
	
	Если СтараяРазрядность <> НоваяРазрядность ИЛИ СтараяРазрядностьДробнойЧасти <> НоваяРазрядностьДробнойЧасти Тогда
		
		ТекстРазрядность = "(" + СокрЛП(НоваяРазрядность) + "," + СокрЛП(НоваяРазрядностьДробнойЧасти) + ")";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28,10)", ТекстРазрядность);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28, 10)", ТекстРазрядность); // с пробелом
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28,	10)", ТекстРазрядность); // с табуляцией
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвижений

#Область ДвиженияНоменклатура

// Служебная, этап 2.1, 3.3, 3.14, 3.19
Процедура СформироватьДвиженияПоОборотнымРегистрамУпрУчета(ПараметрыРасчета, ДанныеДвижения) Экспорт
	
	ДанныеСумм = ПолучитьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеДвижения);
	
	Если ДанныеСумм.ЕстьНенулеваяПолнаяСумма Тогда
		
		// Формирование движений Номенклатура - Доходы\Расходы.
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваров
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровУХранителя Тогда
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм);
			
		КонецЕсли;
		
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
			
			Если ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка Тогда
				
				СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм);
				
			Иначе
				
				СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, -1, -1, -1, -1, 0);
				
				СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, СкорректированныеСуммы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Формирование движений Номенклатура - Номенклатура.
		Если ((ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета
			ИЛИ ((ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями)
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваров
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваров
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
				И ДанныеДвижения.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда
			
			СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
				?(ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности,
					Перечисления.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности,
					Неопределено));
			
			Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами Тогда
				СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
					Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров);
			ИначеЕсли ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами Тогда
				СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
					Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих доходов\расходов при пересортице.
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой Тогда

		Если ДанныеСумм.ПолнаяСуммаПереоценки > 0 Тогда 
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		ИначеЕсли ДанныеСумм.ПолнаяСуммаПереоценки < 0 Тогда
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, -1, 1, -1, -1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Истина,
				Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих расходов при порче.
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой Тогда
		
		Если ДанныеСумм.ПолнаяСуммаПереоценки <> 0 Тогда
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих доходов/расходов возникших от переоценки товаров.
	Если (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику
			И ДанныеДвижения.КорСтоимость <> 0)
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТары Тогда
		
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 0, 0, 1, 1, 0);
		Иначе
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 0);
		КонецЕсли;
		
		Если СкорректированныеСуммы.ПолнаяСуммаСНДС > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр > 0 Тогда 

			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		ИначеЕсли СкорректированныеСуммы.ПолнаяСуммаСНДС < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр < 0 Тогда 
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(СкорректированныеСуммы, -1, -1, -1, -1, 0);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Истина,
				Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.3, 3.14 (СформироватьДвиженияПоОборотнымРегистрамУпрУчета)
Процедура СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
			ЭтоДоход = Ложь, ХозяйственнаяОперация = Неопределено)

	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения.
	ЗаполнитьЗначенияСвойств(Запись, ДанныеСумм);
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		Запись.ХозяйственнаяОперация = ХозяйственнаяОперация;
	КонецЕсли;
	
	Если ЭтоДоход Тогда
		Запись.СтатьяДоходовРасходов = ДанныеДвижения.СтатьяДоходов;
		Запись.АналитикаДоходов 	 = ДанныеДвижения.АналитикаДоходов;
		Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.НаправлениеДеятельности;
		Запись.НаправлениеДеятельностиСтатьи = ДанныеДвижения.КорНаправлениеДеятельности;
	Иначе
		Запись.СтатьяДоходовРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		Запись.АналитикаРасходов 	 = ДанныеДвижения.АналитикаРасходов;
		Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.НаправлениеДеятельности;
		Запись.НаправлениеДеятельностиСтатьи = ДанныеДвижения.КорНаправлениеДеятельности;
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
			И ДанныеДвижения.КорТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
			Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.КорНаправлениеДеятельности;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.3, 3.14 (СформироватьДвиженияПоОборотнымРегистрамУпрУчета)
Процедура СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм, ХозяйственнаяОперация)
	
	Если НЕ ЗначениеЗаполнено(ДанныеДвижения.КорАналитикаУчетаНоменклатуры)
	 И (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
	 	ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,НаправлениеДеятельности,
	|КорАналитикаУчетаНоменклатуры,КорСклад,КорТипЗапасов,КорВидЗапасов,КорНаправлениеДеятельности,
	|ИсточникГФУНоменклатуры, КорИсточникГФУНоменклатуры, ДокументДвижения, КорОрганизация";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения.
	ЗаполнитьЗначенияСвойств(Запись, ДанныеСумм);
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		Запись.ХозяйственнаяОперация = ХозяйственнаяОперация;
		Если Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров
			ИЛИ Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот Тогда
			Запись.Организация    = ДанныеДвижения.КорОрганизация;
			Запись.КорОрганизация = ДанныеДвижения.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДвижения.Склад) = Тип("СправочникСсылка.Партнеры") Тогда
		Запись.Количество = ДанныеДвижения.Количество;
	КонецЕсли;
	
	Если Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		Запись.КорНаправлениеДеятельности = ДанныеДвижения.НаправлениеДеятельности;
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.18
Процедура СформироватьДвиженияНоменклатураДоходыРасходыСписаниеНДС(ПараметрыРасчета) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля = "Период, ХозяйственнаяОперация, Организация,
	|НаправлениеДеятельностиНоменклатуры, НаправлениеДеятельностиСтатьи, АналитикаУчетаНоменклатуры,
	|Склад, Подразделение, СтатьяДоходовРасходов, АналитикаРасходов, ВидЗапасов, ТипЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения, СтоимостьРегл, СтоимостьУпр";
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.Период 														КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы) 	КАК ХозяйственнаяОперация,
	|	Партии.Организация 													КАК Организация,
	|	СпрНазначения.НаправлениеДеятельности 								КАК НаправлениеДеятельностиНоменклатуры,
	|	СпрНазначения.НаправлениеДеятельности 								КАК НаправлениеДеятельностиСтатьи,
	|	Партии.АналитикаУчетаНоменклатуры 									КАК АналитикаУчетаНоменклатуры,
	|	АналитикаНоменклатуры.МестоХранения									КАК Склад,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(СпрСклады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ 																КАК Подразделение,
	|	Партии.СтатьяСписанияНДС 											КАК СтатьяДоходовРасходов,
	|	Партии.АналитикаСписанияНДС 										КАК АналитикаРасходов,
	|	Партии.ВидЗапасов													КАК ВидЗапасов,
	|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	ИНАЧЕ
	|		ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ 																КАК ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА Партии.ВидЗапасов
	|		ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ 																КАК ИсточникГФУНоменклатуры,
	|	Партии.Регистратор 													КАК ДокументДвижения,
	|	СУММА(Партии.СписаниеНДС) 											КАК СтоимостьРегл,
	|	СУММА(Партии.СписаниеНДСУпр) 										КАК СтоимостьУпр
	|ИЗ
	|	ВтПартии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Партии.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|			ПО АналитикаНоменклатуры.СкладскаяТерритория = СпрСклады.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО АналитикаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		ПО Партии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = АналитикаНоменклатуры.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	АналитикаНоменклатуры.МестоХранения,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(СпрСклады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	СпрНазначения.НаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.ВидЗапасов,
	|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	ИНАЧЕ
	|		ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ,
	|	Партии.Регистратор,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА Партии.ВидЗапасов
	|		ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Партии.СписаниеНДС) <> 0
	|	ИЛИ СУММА(Партии.СписаниеНДСУпр) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, ИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		// Добавим движение и заполним его свойства.
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, КопируемыеПоля);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеЗаполнения)
	
	ДанныеСумм = Новый Структура;
	ДанныеСумм.Вставить("Стоимость", 			  		0);
	ДанныеСумм.Вставить("СтоимостьБезНДС", 		  		0);
	ДанныеСумм.Вставить("ДопРасходы", 	  		  		0);
	ДанныеСумм.Вставить("ДопРасходыБезНДС", 	  		0);
	ДанныеСумм.Вставить("Трудозатраты", 		  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеСНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеБезНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеСНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеБезНДС", 	0);
	ДанныеСумм.Вставить("СтоимостьРегл", 		  		0);
	ДанныеСумм.Вставить("ДопРасходыРегл", 		  		0);
	ДанныеСумм.Вставить("ТрудозатратыРегл", 	  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеРегл", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеРегл", 	0);
	ДанныеСумм.Вставить("СтоимостьУпр", 		  		0);
	ДанныеСумм.Вставить("ДопРасходыУпр", 		  		0);
	ДанныеСумм.Вставить("ТрудозатратыУпр", 		  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеУпр", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеУпр", 	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансовая", 		0);
	ДанныеСумм.Вставить("СтоимостьЗабалансоваяРегл", 	0);
	ДанныеСумм.Вставить("ПостояннаяРазница", 			0);
	ДанныеСумм.Вставить("ВременнаяРазница", 			0);
	ДанныеСумм.Вставить("НДСРегл", 			    		0);
	ДанныеСумм.Вставить("НДСУпр",	 			    	0);
	ДанныеСумм.Вставить("КорСтоимость", 			    0);
	
	ЗаполнитьЗначенияСвойств(ДанныеСумм, ДанныеЗаполнения);
	
	ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(ДанныеСумм);
	
	ДанныеСумм.Вставить("ПолнаяСуммаПереоценки", ДанныеСумм.ПолнаяСуммаСНДС - ДанныеСумм.КорСтоимость);
		
	Возврат ДанныеСумм;
	
КонецФункции

Функция СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм,
			КоэффициентСуммыСНДС, КоэффициентСуммыБезНДС, КоэффициентСуммыРегл, КоэффициентСуммыУпр, КоэффициентКорСуммы)
	
	ИменаПолейСНДС   = Новый Структура("Стоимость, ДопРасходы, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС");
	ИменаПолейБезНДС = Новый Структура("СтоимостьБезНДС, ДопРасходыБезНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС");
	ИменаПолейРегл   = Новый Структура("СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	ИменаПолейУпр 	 = Новый Структура("СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	ИменаПолейУменьшаемойСтоимости = Новый Структура("Стоимость, СтоимостьБезНДС");
	
	СкорректированныеСуммы = Новый Структура;
	
	Для Каждого КлючИЗначение Из ДанныеСумм Цикл
		
		Если ИменаПолейСНДС.Свойство(КлючИЗначение.Ключ) Тогда
			
			Если ИменаПолейУменьшаемойСтоимости.Свойство(КлючИЗначение.Ключ) Тогда
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ,
					(КлючИЗначение.Значение - ДанныеСумм.КорСтоимость * КоэффициентКорСуммы) * КоэффициентСуммыСНДС);
			Иначе
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыСНДС);
			КонецЕсли;
			
		ИначеЕсли ИменаПолейБезНДС.Свойство(КлючИЗначение.Ключ) Тогда
			
			Если ИменаПолейУменьшаемойСтоимости.Свойство(КлючИЗначение.Ключ) Тогда
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ,
					(КлючИЗначение.Значение - ДанныеСумм.КорСтоимость * КоэффициентКорСуммы) * КоэффициентСуммыБезНДС);
			Иначе
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыБезНДС);
			КонецЕсли;
		
		ИначеЕсли ИменаПолейРегл.Свойство(КлючИЗначение.Ключ) Тогда
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыРегл);
		
		ИначеЕсли ИменаПолейУпр.Свойство(КлючИЗначение.Ключ) Тогда
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыУпр);
			
		Иначе
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(СкорректированныеСуммы);
	
	Возврат СкорректированныеСуммы;
	
КонецФункции

Процедура ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(ДанныеСумм)
	
	ДанныеСумм.Вставить("ПолнаяСуммаСНДС",
		ДанныеСумм.Стоимость + ДанныеСумм.ДопРасходы + ДанныеСумм.Трудозатраты
		+ ДанныеСумм.ПостатейныеПостоянныеСНДС + ДанныеСумм.ПостатейныеПеременныеСНДС);
	ДанныеСумм.Вставить("ПолнаяСуммаБезНДС",
		ДанныеСумм.СтоимостьБезНДС + ДанныеСумм.ДопРасходыБезНДС + ДанныеСумм.Трудозатраты
		+ ДанныеСумм.ПостатейныеПостоянныеБезНДС + ДанныеСумм.ПостатейныеПеременныеБезНДС);
	ДанныеСумм.Вставить("ПолнаяСуммаРегл",
		ДанныеСумм.СтоимостьРегл + ДанныеСумм.ДопРасходыРегл + ДанныеСумм.ТрудозатратыРегл
		+ ДанныеСумм.ПостатейныеПостоянныеРегл + ДанныеСумм.ПостатейныеПеременныеРегл);
	ДанныеСумм.Вставить("ПолнаяСуммаУпр",
		ДанныеСумм.СтоимостьУпр + ДанныеСумм.ДопРасходыУпр + ДанныеСумм.ТрудозатратыУпр
		+ ДанныеСумм.ПостатейныеПостоянныеУпр + ДанныеСумм.ПостатейныеПеременныеУпр);
	
	ДанныеСумм.Вставить("ЕстьНенулеваяПолнаяСумма",
		ДанныеСумм.ПолнаяСуммаСНДС <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаБезНДС <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаРегл <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаУпр <> 0);
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияСебестоимостьТоваров

// Служебная, этап 2.1, 3.3, 3.14
Процедура СформироватьДвиженияСебестоимостьТоваров(ПараметрыРасчета, ДанныеДвижения, ВидДвижения)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	
	// Кор. стоимость не включается в список полей.
	КопируемыеПоля = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
	|ХозяйственнаяОперация,
	|КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов,КорОрганизация,
	|АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания, СтатьяДоходов, АналитикаДоходов,
	|СтатьяАктивовПассивов, АналитикаАктивовПассивов,
	|ИдентификаторСтроки, КодСтроки, ДокументДвижения, ПериодПродажи, ГруппаПродукции,
	|КорНаправлениеДеятельности,
	|Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, ДопРасходы, ДопРасходыБезНДС,
	|ПостояннаяРазница, ВременнаяРазница, СтоимостьРегл, СтоимостьЗабалансоваяРегл,
	|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС,
	|КорПартия, КорАналитикаУчетаПартий, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС,
	|НДСРегл, СтатьяКалькуляции, ТипЗаписи, ДокументИсточник,
	|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр, НДСУпр
	|";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения = ВидДвижения;
	Запись.Количество  = 0;

КонецПроцедуры

// Служебная, этап 2.1, 3.1, 3.14
Процедура СформироватьКорДвиженияСебестоимостьТоваров(ПараметрыРасчета, ДанныеДвижения, ПромежуточнаяСебестоимость = Ложь) Экспорт
	
	Если ПромежуточнаяСебестоимость Тогда
		ТаблицаПриемник = "ВТПромежуточнаяСебестоимостьТоваров";
	Иначе
		ТаблицаПриемник = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	КонецЕсли;
	
	КопируемыеПоля = "
	|Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки,
	|Подразделение, ГруппаПродукции,
	|Стоимость, СтоимостьЗабалансовая, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтоимостьРегл, СтоимостьЗабалансоваяРегл, ПостояннаяРазница, ВременнаяРазница,
	|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник,
	|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр, НДСУпр";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения                = ВидДвиженияНакопления.Приход;
	Запись.АналитикаУчетаНоменклатуры = ДанныеДвижения.КорАналитикаУчетаНоменклатуры;
	Запись.РазделУчета                = ДанныеДвижения.КорРазделУчета;
	Запись.ВидЗапасов                 = ДанныеДвижения.КорВидЗапасов;
	Запись.Организация                = ?(ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация), ДанныеДвижения.КорОрганизация, ДанныеДвижения.Организация);
	Запись.Количество 				  = 0;
	
	Запись.Партия                 	  = ДанныеДвижения.КорПартия;
	Если ЗначениеЗаполнено(ДанныеДвижения.КорПартия) Тогда
		Запись.АналитикаУчетаПартий   = ДанныеДвижения.КорАналитикаУчетаПартий;
	КонецЕсли;
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		Запись.АналитикаФинансовогоУчета = ДанныеДвижения.КорАналитикаФинансовогоУчета;
		Запись.ВидДеятельностиНДС   	 = ДанныеДвижения.КорВидДеятельностиНДС;
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции Тогда
			Если ТипЗнч(ДанныеДвижения.АналитикаФинансовогоУчета) = Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры") Тогда
				Запись.КорАналитикаФинансовогоУчета = ДанныеДвижения.АналитикаФинансовогоУчета;
			Иначе
				Запись.КорАналитикаФинансовогоУчета = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
			КонецЕсли;
			Запись.ГруппаПродукции = ДанныеДвижения.АналитикаФинансовогоУчета;
		КонецЕсли;
	КонецЕсли;
	Если Запись.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение Тогда
		Запись.КорВидЗапасов             = ДанныеДвижения.КорВидЗапасов;
	КонецЕсли;

	Если ДанныеДвижения.ЭтоПередачаМеждуОрганизациями Тогда
		
		Запись.СтоимостьРегл = 0;
		Запись.СтоимостьЗабалансоваяРегл = 0;
		Запись.ПостояннаяРазница = 0;
		Запись.ВременнаяРазница = 0;
		
		Запись.ДопРасходыРегл = 0;
		Запись.ТрудозатратыРегл = 0;
		Запись.ПостатейныеПостоянныеРегл = 0;
		Запись.ПостатейныеПеременныеРегл = 0;
		
		Запись.СтоимостьУпр = 0;
		Запись.ДопРасходыУпр = 0;
		Запись.ТрудозатратыУпр = 0;
		Запись.ПостатейныеПостоянныеУпр = 0;
		Запись.ПостатейныеПеременныеУпр = 0;
		
	ИначеЕсли ДанныеДвижения.НДСРегл <> 0 ИЛИ ДанныеДвижения.НДСУпр <> 0 Тогда // это не передача
		
		КопируемыеПоля = " Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки, Подразделение, Организация,
			|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник";
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения 				  	 = ВидДвиженияНакопления.Приход;
		Запись.АналитикаУчетаНоменклатуры 	 = ДанныеДвижения.КорАналитикаУчетаНоменклатуры;
		Запись.РазделУчета 				  	 = ДанныеДвижения.КорРазделУчета;
		Запись.ВидЗапасов 				  	 = ДанныеДвижения.КорВидЗапасов;
		Запись.Организация                	 = ?(ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация), ДанныеДвижения.КорОрганизация, ДанныеДвижения.Организация);
		
		Запись.Партия                 	     = ДанныеДвижения.КорПартия;
		Запись.АналитикаУчетаПартий   	     = ДанныеДвижения.КорАналитикаУчетаПартий;
		
		Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
			Запись.АналитикаФинансовогоУчета = ДанныеДвижения.КорАналитикаФинансовогоУчета;
			Запись.ВидДеятельностиНДС   	 = ДанныеДвижения.КорВидДеятельностиНДС;
			Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции Тогда
				Если ТипЗнч(ДанныеДвижения.АналитикаФинансовогоУчета) = Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры") Тогда
					Запись.КорАналитикаФинансовогоУчета = ДанныеДвижения.АналитикаФинансовогоУчета;
				Иначе
					Запись.КорАналитикаФинансовогоУчета = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
				КонецЕсли;
				Запись.ГруппаПродукции = ДанныеДвижения.АналитикаФинансовогоУчета;
			КонецЕсли;
		КонецЕсли;
		
		Запись.СтоимостьРегл 			  	 = ДанныеДвижения.НДСРегл;
		Запись.СтоимостьУпр 			  	 = ДанныеДвижения.НДСУпр;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ДвиженияПрочиеРасходы

// Служебная, этап 2.1, 3.18
Процедура СформироватьДвиженияПрочиеРасходыСписаниеНДС(ПараметрыРасчета) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля =
		"Период, ВидДвижения, ХозяйственнаяОперация, Организация, АналитикаУчетаНоменклатуры, НаправлениеДеятельности,
		|Подразделение, СтатьяРасходов, АналитикаРасходов, ДокументДвижения, СуммаРегл, СуммаУпр";
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.Период 														КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 								КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы) 	КАК ХозяйственнаяОперация,
	|	Партии.Организация 													КАК Организация,
	|	Партии.АналитикаУчетаНоменклатуры 									КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) 					КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(Склады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ 																КАК Подразделение,
	|	Партии.СтатьяСписанияНДС 											КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС 										КАК АналитикаРасходов,
	|	Партии.Регистратор 													КАК ДокументДвижения,
	|	СУММА(Партии.СписаниеНДС) 											КАК СуммаРегл,
	|	СУММА(Партии.СписаниеНДСУпр) 										КАК СуммаУпр
	|ИЗ
	|	ВтПартии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Партии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО АналитикаНоменклатуры.СкладскаяТерритория = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = АналитикаНоменклатуры.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(Склады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	СпрНазначения.НаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.Регистратор
	|
	|ИМЕЮЩИЕ
	|	СУММА(Партии.СписаниеНДС) <> 0
	|	ИЛИ СУММА(Партии.СписаниеНДСУпр) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, ИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		// Добавим движение и заполним его свойства.
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, КопируемыеПоля);
	КонецЦикла;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.1, 3.3, 3.14
Процедура СформироватьДвиженияПрочиеРасходы(ПараметрыРасчета, ДанныеДвижения, СуммовыеПоказатели) Экспорт

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения";
	
	Сумма = СуммовыеПоказатели.СуммаСНДС;
	СуммаБезНДС = СуммовыеПоказатели.СуммаБезНДС;
	СуммаРегл = СуммовыеПоказатели.СуммаРегл;
	СуммаУпр = СуммовыеПоказатели.СуммаУпр;
	ПостояннаяРазница = СуммовыеПоказатели.ПостояннаяРазница;
	ВременнаяРазница = СуммовыеПоказатели.ВременнаяРазница;

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы
	 И НачалоМесяца(ДанныеДвижения.ПериодПродажи) < НачалоМесяца(ДанныеДвижения.Период) Тогда
		Знак = -1;
	Иначе
		Знак = 1;
	КонецЕсли;
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения       = ВидДвиженияНакопления.Приход;
	Запись.Сумма             = Знак * Сумма;
	Запись.СтатьяРасходов    = ДанныеДвижения.СтатьяРасходовСписания;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		Запись.Организация = ДанныеДвижения.КорОрганизация;
	КонецЕсли;
	Если ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты Тогда
		Запись.СуммаБезНДС = Знак * СуммаБезНДС;
	КонецЕсли;
	
	Если НЕ ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы Тогда
		Если НЕ ПараметрыРасчета.УправленческийУчетОрганизаций
		 ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
			Запись.СуммаУпр = 0;
		ИначеЕсли ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
		 И НЕ ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4 Тогда
			Запись.СуммаУпр = 0;
		Иначе
			Запись.СуммаУпр = Знак * СуммаУпр;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл
	 ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию
	 ИЛИ ДанныеДвижения.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы
	 ИЛИ (ДанныеДвижения.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
	 	И НЕ ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4) Тогда
		Запись.СуммаРегл = 0;
		Запись.ПостояннаяРазница = 0;
		Запись.ВременнаяРазница = 0;
	Иначе
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
			Запись.СуммаРегл = 0;
			//++ Локализация
			Запись.ПостояннаяРазница = ?(ДанныеДвижения.СписаниеПриПередачеНУ,
				?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, СуммаРегл - ВременнаяРазница - ПостояннаяРазница, 0), 0);
			Запись.ВременнаяРазница = ?(ДанныеДвижения.СписаниеПриПередачеНУ,
				?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, -(СуммаРегл - ВременнаяРазница - ПостояннаяРазница),
					-(СуммаРегл - ВременнаяРазница - ПостояннаяРазница)), 0);
			//-- Локализация
		ИначеЕсли ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ Тогда
			Запись.СуммаРегл = 0;
			Запись.ПостояннаяРазница = 0;
			Запись.ВременнаяРазница = 0;
		Иначе
			Запись.СуммаРегл = Знак * СуммаРегл;
			Запись.ПостояннаяРазница = ?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, Знак * СуммаРегл - Знак * ВременнаяРазница, Знак * ПостояннаяРазница);
			Запись.ВременнаяРазница  = Знак * ВременнаяРазница;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация)
	 И ДанныеДвижения.КорОрганизация <> ДанныеДвижения.Организация
	 И ДанныеДвижения.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
	 
		ЗаписьУпр = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		ЗаписьУпр.СтатьяРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		ЗаписьУпр.Сумма = -Запись.Сумма;
		ЗаписьУпр.СуммаУпр = -Запись.СуммаУпр;
		ЗаписьУпр.СуммаРегл = 0;
		ЗаписьУпр.ПостояннаяРазница = 0;
		ЗаписьУпр.ВременнаяРазница  = 0;
		ЗаписьУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ;
		
		ЗаписьУпр = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		ЗаписьУпр.Организация = ДанныеДвижения.КорОрганизация;
		ЗаписьУпр.СтатьяРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		ЗаписьУпр.Сумма = Запись.Сумма;
		ЗаписьУпр.СуммаУпр = Запись.СуммаУпр;
		ЗаписьУпр.СуммаРегл = 0;
		ЗаписьУпр.ПостояннаяРазница = 0;
		ЗаписьУпр.ВременнаяРазница  = 0;
		ЗаписьУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ;
		
		// Добавим движения по регистру "Активы и пассивы".
		ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
		КопируемыеПоля = "
		|Период, Организация, Подразделение, НаправлениеДеятельности";
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
		Запись.Статья      = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки;
		Запись.Аналитика   = ДанныеДвижения.Организация;
		Запись.Сумма 	   = Знак * Сумма;
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
		Запись.Организация = ДанныеДвижения.КорОрганизация;
		Запись.Статья      = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки;
		Запись.Аналитика   = ДанныеДвижения.КорОрганизация;
		Запись.Сумма 	   = Знак * Сумма;
	 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияПрочиеДоходы

// Служебная, этап 2.1, 3.3, 3.14
Процедура СформироватьДвиженияПрочиеДоходы(ПараметрыРасчета, ДанныеДвижения,
			Сумма, СуммаРегл, СуммаУпр) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;
	Запись.Сумма	   = Сумма;
	Запись.СуммаУпр	   = СуммаУпр;
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		Запись.СуммаРегл = СуммаРегл;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияВыручкаИСебестоимостьПродаж

// Служебная, этап 2.2, 3.17, 3.18
Процедура СформироватьДвиженияВыручкаИСебестоимостьПродаж(ПараметрыРасчета, ДанныеДвижения) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = "
	|Период, Подразделение, АналитикаУчетаНоменклатуры, Менеджер, РазделУчета,
	|АналитикаУчетаПоПартнерам, ТипЗапасов, ВидЗапасов, ЗаказКлиента, ХозяйственнаяОперация,
	|Склад, Соглашение, Договор, ВалютаВзаиморасчетов, ВалютаДокумента,
	|ИсточникГФУНоменклатуры, ИсточникГФУРасчетов, НаправлениеДеятельностиНоменклатуры,
	|НаправлениеДеятельностиКонтрагента, 
	|НалогообложениеНДС, ДокументДвижения,
	|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	ПоляРесурсов = "
		|Стоимость, СтоимостьБезНДС, ПостояннаяРазница, ВременнаяРазница,
		|СтоимостьРегл, ДопРасходы, ДопРасходыБезНДС,
		|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС,
		|ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС,
		|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр";
	
	ЗаполнитьЗначенияСвойств(Запись, ДанныеДвижения, ПоляРесурсов);
	
	Если ДанныеДвижения.НДСРегл <> 0 Тогда
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.СтоимостьРегл = ДанныеДвижения.НДСРегл;
		
	КонецЕсли;
	
	Если ДанныеДвижения.НДСУпр <> 0 Тогда
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.СтоимостьУпр = ДанныеДвижения.НДСУпр;
		
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 3.3
Процедура СформироватьДвиженияВыручкаИСебестоимостьПродажВозврат(ПараметрыРасчета, ДанныеДвижения)

	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = "
	|Период, Подразделение, АналитикаУчетаПоПартнерам, ЗаказКлиента, ТипЗапасов, ВидЗапасов,
	|ХозяйственнаяОперация, Менеджер, Склад, Соглашение, Договор, ДокументДвижения,
	|РазделУчета, Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС,
	|ИсточникГФУНоменклатуры, ИсточникГФУРасчетов";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);

	// Заполним дополнительные свойства движения
	Запись.АналитикаУчетаНоменклатуры = ДанныеДвижения.АналитикаУчетаНоменклатуры;

	ПоляРесурсов = "
		|Стоимость, СтоимостьБезНДС, ПостояннаяРазница, ВременнаяРазница,
		|СтоимостьРегл, ДопРасходы, ДопРасходыБезНДС,
		|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС,
		|ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС,
		|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр";
	
	Для Каждого КлючИЗначение Из Новый Структура(ПоляРесурсов) Цикл
		Запись[КлючИЗначение.Ключ] = - ДанныеДвижения[КлючИЗначение.Ключ];
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияЗакупки

// Служебная, этап 2.2, 3.17
Процедура СформироватьДвиженияЗакупки(ПараметрыРасчета, ДанныеДвижения)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.Закупки.Имя;
	
	КопируемыеПоля = "
	|Период, Подразделение, Менеджер, АналитикаУчетаНоменклатуры,
	|Склад, ТипЗапасов, ВидЗапасов, Партнер, Соглашение, Договор,
	|ВалютаДокумента, ВалютаВзаиморасчетов, ИсточникГФУНоменклатуры, ИсточникГФУРасчетов, ДокументДвижения,
	|Стоимость, СтоимостьБезНДС";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	Запись.Стоимость = Запись.Стоимость + ДанныеДвижения.ДопРасходы;
	Запись.СтоимостьБезНДС = Запись.СтоимостьБезНДС + ДанныеДвижения.ДопРасходыБезНДС;
	
	Запись.Стоимость 	   = Запись.Стоимость + ДанныеДвижения.Трудозатраты
		+ ДанныеДвижения.ПостатейныеПостоянныеСНДС + ДанныеДвижения.ПостатейныеПеременныеСНДС;
	Запись.СтоимостьБезНДС = Запись.СтоимостьБезНДС + ДанныеДвижения.Трудозатраты
		+ ДанныеДвижения.ПостатейныеПостоянныеБезНДС + ДанныеДвижения.ПостатейныеПеременныеБезНДС;
	
	// Заполним дополнительные свойства движения
	Запись.Организация 			 = ДанныеДвижения.Контрагент;
	Запись.Контрагент 			 = ДанныеДвижения.Организация;
	Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУДругойОрганизации;
	
КонецПроцедуры

#КонецОбласти


#Область ДвиженияПрочиеАктивыПассивы

// Служебная, этап 2.1
Процедура СформироватьДвиженияПрочиеАктивыПассивы(ПараметрыРасчета, ДанныеДвижения, Сумма) Экспорт

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
	Запись.Сумма 	   = Сумма;
	Запись.Статья 	   = ДанныеДвижения.СтатьяАктивовПассивов;
	Запись.Аналитика   = ДанныеДвижения.АналитикаАктивовПассивов;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РаспределениеСтоимости

// Служебная, этап 2.1, 2.2, 3.1, 3.18
Процедура РаспределитьСтоимость(ЗаписьРаспределения, СтрокаОстатка, Выборка, Знач КоличествоКРаспределению) Экспорт
	
	СуммыОстатка 	= ПолучитьСуммовыеПоказателиРаспределения(СтрокаОстатка);
	СуммыКСписанию 	= ПолучитьСуммовыеПоказателиРаспределения();
	
	Если КоличествоКРаспределению >= СтрокаОстатка.Количество Тогда
		
		ЗаполнитьЗначенияСвойств(СуммыКСписанию, СуммыОстатка);
		
		КоличествоКРаспределению = КоличествоКРаспределению - СтрокаОстатка.Количество;
		КоличествоКСписанию	     = СтрокаОстатка.Количество;
		

	ИначеЕсли КоличествоКРаспределению < СтрокаОстатка.Количество Тогда
		
		Для Каждого КлючИЗначение Из СуммыОстатка Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] =
				Окр((КоличествоКРаспределению * СуммыОстатка[КлючИЗначение.Ключ] / СтрокаОстатка.Количество), 2);
				
			СуммыОстатка[КлючИЗначение.Ключ] = СуммыОстатка[КлючИЗначение.Ключ] - СуммыКСписанию[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		КоличествоКСписанию		 = КоличествоКРаспределению;
		КоличествоКРаспределению = 0;
		СтрокаОстатка.Количество = СтрокаОстатка.Количество - КоличествоКСписанию;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, Выборка);
	
	Если Выборка.ИсходноеКоличество < 0 Тогда
		
		Для Каждого КлючИЗначение Из СуммыКСписанию Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] = -СуммыКСписанию[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		ЗаписьРаспределения.Количество = -КоличествоКСписанию;
		
	Иначе
		
		СуммыВыборки = ПолучитьСуммовыеПоказателиРаспределения(Выборка);
		
		Для Каждого КлючИЗначение Из СуммыКСписанию Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] = СуммыКСписанию[КлючИЗначение.Ключ] - СуммыВыборки[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		ЗаписьРаспределения.Количество = КоличествоКСписанию;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, СуммыКСписанию);
	ЗаполнитьЗначенияСвойств(СтрокаОстатка, СуммыОстатка);
	
КонецПроцедуры

// Служебная, этап 2.1, 3.1
Процедура ДополнитьСуммыРаспределения(ЗаписьРаспределения, СуммыРаспределения) Экспорт
	
	СуммыЗаписи 	= ПолучитьСуммовыеПоказателиРаспределения(ЗаписьРаспределения);
	СуммыДополнения = ПолучитьСуммовыеПоказателиРаспределения(СуммыРаспределения);
	
	Для Каждого КлючИЗначение Из СуммыЗаписи Цикл
		СуммыЗаписи[КлючИЗначение.Ключ] =
			СуммыЗаписи[КлючИЗначение.Ключ] + СуммыДополнения[КлючИЗначение.Ключ];
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, СуммыЗаписи);
	
КонецПроцедуры

Функция ПолучитьСуммовыеПоказателиРаспределения(ДанныеЗаполнения = Неопределено)
	
	ДанныеСумм = Новый Структура;
	ДанныеСумм.Вставить("Стоимость", 			  	0);
	ДанныеСумм.Вставить("СтоимостьБезНДС", 		  	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансовая", 	0);
	ДанныеСумм.Вставить("ДопРасходы", 	  		  	0);
	ДанныеСумм.Вставить("ДопРасходыБезНДС", 	  	0);
	ДанныеСумм.Вставить("СтоимостьРегл", 		  	0);
	ДанныеСумм.Вставить("ДопРасходыРегл", 		  	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансоваяРегл",0);
	ДанныеСумм.Вставить("НДСРегл", 			    	0);
	ДанныеСумм.Вставить("ПостояннаяРазница", 		0);
	ДанныеСумм.Вставить("ВременнаяРазница", 		0);
	ДанныеСумм.Вставить("СтоимостьУпр", 		  	0);
	ДанныеСумм.Вставить("ДопРасходыУпр",  		  	0);
	ДанныеСумм.Вставить("НДСУпр",	 			    0);
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ДанныеСумм, ДанныеЗаполнения);
	КонецЕсли;
	
	Возврат ДанныеСумм;
	
КонецФункции

// Служебная, этап 3.2
// Формирует таблицу расходов, распределенных на себестоимость товаров
// по указанному в статьях расходов правилу распределения.
//
// Параметры:
//	Дата - Дата, на которую выполняется получение остатка расходов
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица распределения расходов на себестоимость
//
Функция ТаблицаРаспределенияРасходовНаСебестоимостьТоваров(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	0                               КАК НомерСтроки,
	|	ПрочиеРасходы.Организация       КАК Организация,
	|	ПрочиеРасходы.Подразделение     КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходы.СтатьяРасходов.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА ПрочиеРасходы.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА ПрочиеРасходы.СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА ПрочиеРасходы.СтоимостьРегл +
	|			(ВЫБОР
	|				КОГДА ПрочиеРасходы.АналитикаУчетаПартий.НалогообложениеНДС В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|						ТОГДА ПрочиеРасходы.НДСРегл
	|				ИНАЧЕ 0 КОНЕЦ)
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		 И ПрочиеРасходы.АналитикаУчетаПартий.НалогообложениеНДС В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|			ТОГДА ПрочиеРасходы.НДСУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА ПрочиеРасходы.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПартииПрочихРасходов КАК ПрочиеРасходы
	|ГДЕ
	|	(ПрочиеРасходы.Стоимость > 0 ИЛИ ПрочиеРасходы.СтоимостьБезНДС > 0 ИЛИ ПрочиеРасходы.СтоимостьРегл > 0)
	|	И ПрочиеРасходы.СтатьяРасходов.ПравилоРаспределенияНаСебестоимость <> ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка)
	|	И (ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|";
	
	РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
	ТаблицаРасходов = РезультатЗапроса.Выгрузить();
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасходов Цикл
		СтрокаТаблицы.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаРасходов", ТаблицаРасходов);
	
	Запрос.Текст = ""
		+ ТекстЗапросаВтТаблицаРасходовПоОстаткам()
		+ ТекстЗапросаТаблицаСпособовРаспределения()
		+ ТекстЗапросаТаблицаДокументов()
		+ ТекстЗапросаТаблицаПоступленияТоваров()
		+ ТекстЗапросаТаблицаБазыРаспределения()
		+ ТекстЗапросаТаблицаРасходов();
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// МассивРезультатов[0] - временная таблица "ВтТаблицаРасходов"
	// МассивРезультатов[1] - временная таблица "ТаблицаСпособовРаспределения"
	// МассивРезультатов[2] - временная таблица "ТаблицаДокументов"
	// МассивРезультатов[3] - временная таблица "ВтПоступленияТоваров"
	// МассивРезультатов[4] - временная таблица "ТаблицаПоступленияТоваров"
	РезультатЗапросаПоБазе = МассивРезультатов[5];
	ТаблицаРасходов = МассивРезультатов[6].Выгрузить();
	
	// Сформируем таблицу распределения расходов.
	ТаблицаРаспределенияРасходов = Новый ТаблицаЗначений;
	Колонки = ТаблицаРаспределенияРасходов.Колонки;
	Колонки.Добавить("Организация",                Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Колонки.Добавить("Подразделение",              Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Колонки.Добавить("СтатьяРасходовСписания",     Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	Колонки.Добавить("АналитикаРасходов");
	Колонки.Добавить("АналитикаУчетаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	Колонки.Добавить("ВидЗапасов",                 Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	Колонки.Добавить("РазделУчета",                Новый ОписаниеТипов("ПеречислениеСсылка.РазделыУчетаСебестоимостиТоваров"));
	
	Колонки.Добавить("ДопРасходы",           ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Колонки.Добавить("ДопРасходыБезНДС",     ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Колонки.Добавить("ДопРасходыРегл",       ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Колонки.Добавить("ДопРасходыУпр",        ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Колонки.Добавить("ПостояннаяРазница",    ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Колонки.Добавить("ВременнаяРазница",     ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	СтруктураОтбора = Новый Структура("ИндексБазы");

	// Выборка строк базы распределения по индексу аналитики.
	ВыборкаПоИндексу = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоИндексу.Следующий() Цикл
		
		Если ВыборкаПоИндексу.База = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора.ИндексБазы = ВыборкаПоИндексу.ИндексБазы;

		// Получаем массив расходов, имеющих одинаковый индекс аналитики, соответствующий текущей выборки базы распределения.
		// Данные затраты будут распределены по одинаковой базе распределения.
		МассивРасходов = ТаблицаРасходов.НайтиСтроки(СтруктураОтбора);
		Если МассивРасходов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = ВыборкаПоИндексу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Для Каждого СтрокаРасходов Из МассивРасходов Цикл
		
			СуммаКРаспределению				= СтрокаРасходов.Сумма;
			СуммаБезНДСКРаспределению		= СтрокаРасходов.СуммаБезНДС;
			СуммаРеглКРаспределению			= СтрокаРасходов.СуммаРегл;
			СуммаУпрКРаспределению			= СтрокаРасходов.СуммаУпр;
			ПостояннаяРазницаКРаспределению	= СтрокаРасходов.ПостояннаяРазница;
			ВременнаяРазницаКРаспределению	= СтрокаРасходов.ВременнаяРазница;
			БазаВсего						= ВыборкаПоИндексу.База;
		
			// Выборка строк базы распределения по индексу базы распределения
			Выборка.Сбросить();
			Пока Выборка.Следующий() Цикл

				Если БазаВсего <> 0 Тогда
					Стоимость			= Окр(СуммаКРаспределению * Выборка.База / БазаВсего, 2, 1); 
					СтоимостьБезНДС		= Окр(СуммаБезНДСКРаспределению * Выборка.База / БазаВсего, 2, 1);
					СтоимостьРегл		= Окр(СуммаРеглКРаспределению * Выборка.База / БазаВсего, 2, 1);
					СтоимостьУпр 		= Окр(СуммаУпрКРаспределению * Выборка.База / БазаВсего, 2, 1);
					ПостояннаяРазница	= Окр(ПостояннаяРазницаКРаспределению * Выборка.База / БазаВсего, 2, 1);
					ВременнаяРазница	= Окр(ВременнаяРазницаКРаспределению * Выборка.База / БазаВсего, 2, 1);
				Иначе
					Стоимость			= 0;
					СтоимостьБезНДС		= 0;
					СтоимостьРегл		= 0;
					СтоимостьУпр		= 0;
					ПостояннаяРазница	= 0;
					ВременнаяРазница	= 0;
				КонецЕсли;

				СуммаКРаспределению = СуммаКРаспределению - Стоимость;
				СуммаБезНДСКРаспределению = СуммаБезНДСКРаспределению - СтоимостьБезНДС;
				СуммаРеглКРаспределению = СуммаРеглКРаспределению - СтоимостьРегл;
				ПостояннаяРазницаКРаспределению = ПостояннаяРазницаКРаспределению - ПостояннаяРазница;
				ВременнаяРазницаКРаспределению = ВременнаяРазницаКРаспределению - ВременнаяРазница;
				БазаВсего = БазаВсего - Выборка.База;

				НоваяСтрока = ТаблицаРаспределенияРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасходов);
				НоваяСтрока.АналитикаУчетаНоменклатуры = Выборка.АналитикаУчетаНоменклатуры;
				НоваяСтрока.ВидЗапасов                 = Выборка.ВидЗапасов;
				НоваяСтрока.РазделУчета                = Выборка.РазделУчета;
				НоваяСтрока.Организация                = Выборка.Организация;
				НоваяСтрока.ДопРасходы           	   = Стоимость;
				НоваяСтрока.ДопРасходыБезНДС     	   = СтоимостьБезНДС;
				НоваяСтрока.ДопРасходыРегл             = СтоимостьРегл;
				НоваяСтрока.ДопРасходыУпр              = СтоимостьУпр;
				НоваяСтрока.ПостояннаяРазница          = ПостояннаяРазница;
				НоваяСтрока.ВременнаяРазница           = ВременнаяРазница;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтТаблицаРасходов, ТаблицаСпособовРаспределения,
		|ТаблицаДокументов, ВтПоступленияТоваров, ТаблицаПоступленияТоваров");
	
	РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		ТаблицаРаспределенияРасходов.Количество());
	
	Возврат ТаблицаРаспределенияРасходов;
	
КонецФункции

#КонецОбласти

#Область ПодготовкаИРешениеСЛУ

// Служебная, этап 3.6
// Функция выполняет корректировку стоимости и количества внешних приходов в узлах при расчете стоимости по ФИФО (Скользящая оценка).
//
// Параметры:
// Запрос - запрос по формированию узлов корректировки.
//
// Возвращаемое значение
// Таблица значений - узлы корректировки стоимости.
//
Процедура ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета, Запрос)

	// Формирование таблицы узлов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.КоличествоОстаток
	|ПОМЕСТИТЬ ВТНачальныеОстатки
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|			Организация В (&МассивОрганизаций)
	|				И (АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						Таблица.АналитикаУчетаНоменклатуры,
	|						Таблица.РазделУчета,
	|						Таблица.ВидЗапасов
	|					ИЗ
	|						ВтАналитикаНоменклатуры КАК Таблица)) КАК Себестоимость
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.Количество 			 		КАК КоличествоОстаток,
	|	Себестоимость.ДопРасходы 		 	 		КАК ДопРасходыОстаток,
	|	Себестоимость.ДопРасходыБезНДС 		 		КАК ДопРасходыБезНДСОстаток,
	|	Себестоимость.Трудозатраты 			 		КАК ТрудозатратыОстаток,
	|	Себестоимость.ПостатейныеПостоянныеСНДС 	КАК ПостатейныеПостоянныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПостоянныеБезНДС 	КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеСНДС 	КАК ПостатейныеПеременныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеБезНДС 	КАК ПостатейныеПеременныеБезНДСОстаток
	|ПОМЕСТИТЬ ВТКонечныеОстатки
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтАналитикаНоменклатуры КАК Таблица
	|		ПО Себестоимость.АналитикаУчетаНоменклатуры = Таблица.АналитикаУчетаНоменклатуры
	|		И Себестоимость.РазделУчета = Таблица.РазделУчета
	|		И Себестоимость.ВидЗапасов = Таблица.ВидЗапасов
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	СУММА(Себестоимость.Количество) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТПриходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтАналитикаНоменклатуры КАК Таблица
	|		ПО Себестоимость.АналитикаУчетаНоменклатуры = Таблица.АналитикаУчетаНоменклатуры
	|			И Себестоимость.РазделУчета = Таблица.РазделУчета
	|			И Себестоимость.ВидЗапасов = Таблица.ВидЗапасов
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И (Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период,
	|	КонечныеОстатки.Организация,
	|	КонечныеОстатки.АналитикаУчетаНоменклатуры,
	|	КонечныеОстатки.РазделУчета,
	|	КонечныеОстатки.ВидЗапасов,
	|	КонечныеОстатки.Партия,
	|	КонечныеОстатки.АналитикаУчетаПартий,
	|	КонечныеОстатки.АналитикаФинансовогоУчета,
	|	КонечныеОстатки.ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстаток,
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстатокНаКонецПериода,
	|	ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) КАК КоличествоПриход,
	|
	|	0 КАК СтоимостьОстаток,
	|	0 КАК СтоимостьБезНДСОстаток,
	|	0 КАК СтоимостьЗабалансоваяОстаток,
	|	0 КАК ПостояннаяРазницаОстаток,
	|	0 КАК ВременнаяРазницаОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыБезНДСОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДСОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ВТКонечныеОстатки КАК КонечныеОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстатки КАК НачальныеОстатки
	|		ПО КонечныеОстатки.Организация = НачальныеОстатки.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = НачальныеОстатки.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = НачальныеОстатки.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = НачальныеОстатки.ВидЗапасов
	|		И КонечныеОстатки.Партия = НачальныеОстатки.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = НачальныеОстатки.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = НачальныеОстатки.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = НачальныеОстатки.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПриходы КАК Приходы
	|		ПО КонечныеОстатки.Организация = Приходы.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = Приходы.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = Приходы.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = Приходы.ВидЗапасов
	|		И КонечныеОстатки.Партия = Приходы.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = Приходы.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = Приходы.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = Приходы.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТНачальныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТКонечныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТПриходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	СебестоимостьТоваров.Партия 							   КАК Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий 				   КАК АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета 			   КАК АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС 				   КАК ВидДеятельностиНДС,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|			ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|				И СебестоимостьТоваров.РазделУчета 				 = ТаблицаОстатков.РазделУчета
	|				И СебестоимостьТоваров.ВидЗапасов  				 = ТаблицаОстатков.ВидЗапасов
	|				И СебестоимостьТоваров.Организация 				 = ТаблицаОстатков.Организация
	|				И СебестоимостьТоваров.Партия 					 = ТаблицаОстатков.Партия
	|				И СебестоимостьТоваров.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|				И СебестоимостьТоваров.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|				И СебестоимостьТоваров.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|				И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.СлужебноеВидДвиженияПриход
	|	И СебестоимостьТоваров.Стоимость <> 0
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Период                                КАК Период,
	|	Себестоимость.Организация                           КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                           КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                            КАК ВидЗапасов,
	|	Себестоимость.Партия 							    КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий 				    КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета 			КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС 				    КАК ВидДеятельностиНДС,
	|	СУММА(Себестоимость.Количество)        				КАК Количество,
	|	СУММА(Себестоимость.Стоимость)         				КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)   				КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)   		КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.ПостояннаяРазница) 				КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница)  				КАК ВременнаяРазница
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыПартий.Период                                КАК Период,
	|		ПериодыПартий.Организация                           КАК Организация,
	|		ПериодыПартий.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|		ПериодыПартий.РазделУчета                           КАК РазделУчета,
	|		ПериодыПартий.ВидЗапасов                            КАК ВидЗапасов,
	|		ПериодыПартий.Партия 							    КАК Партия,
	|		ПериодыПартий.АналитикаУчетаПартий 				    КАК АналитикаУчетаПартий,
	|		ПериодыПартий.АналитикаФинансовогоУчета 			КАК АналитикаФинансовогоУчета,
	|		ПериодыПартий.ВидДеятельностиНДС 				    КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(Себестоимость.Количество, 0)        		КАК Количество,
	|		ЕСТЬNULL(Себестоимость.Стоимость, 0)         		КАК Стоимость,
	|		ЕСТЬNULL(Себестоимость.СтоимостьБезНДС, 0)   		КАК СтоимостьБезНДС,
	|		ЕСТЬNULL(Себестоимость.СтоимостьЗабалансовая, 0)   	КАК СтоимостьЗабалансовая,
	|		ЕСТЬNULL(Себестоимость.ПостояннаяРазница, 0) 		КАК ПостояннаяРазница,
	|		ЕСТЬNULL(Себестоимость.ВременнаяРазница, 0)  		КАК ВременнаяРазница
	|	ИЗ
	|		ТаблицаПериодыПартий КАК ПериодыПартий
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|			ПО ПериодыПартий.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
	|				И ПериодыПартий.РазделУчета               = Себестоимость.РазделУчета
	|				И ПериодыПартий.ВидЗапасов                = Себестоимость.ВидЗапасов
	|				И ПериодыПартий.Организация               = Себестоимость.Организация
	|				И ПериодыПартий.Партия 					  = Себестоимость.Партия
	|				И ПериодыПартий.АналитикаУчетаПартий 	  = Себестоимость.АналитикаУчетаПартий
	|				И ПериодыПартий.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
	|				И ПериодыПартий.ВидДеятельностиНДС 		  = Себестоимость.ВидДеятельностиНДС
	|				И Себестоимость.СлужебноеВидДвиженияПриход
	|				И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|				И (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступлениеВнешнее))
	|				И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	) КАК Себестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВнешнихПоступлений.Период КАК Период,
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов,
	|	ТаблицаОстатков.Партия,
	|	ТаблицаОстатков.АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаОстатков.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода,
	|	ТаблицаОстатков.КоличествоПриход,
	|
	|	ТаблицаОстатков.СтоимостьОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьОстаток,
	|
	|	ТаблицаОстатков.СтоимостьБезНДСОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьБезНДСОстаток,
	|
	|	ТаблицаОстатков.СтоимостьЗабалансоваяОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьЗабалансоваяОстаток,
	|
	|	ТаблицаОстатков.ПостояннаяРазницаОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.ПостояннаяРазница, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.ПостояннаяРазница, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяПостояннаяРазницаОстаток,
	|
	|	ТаблицаОстатков.ВременнаяРазницаОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.ВременнаяРазница, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.ВременнаяРазница, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяВременнаяРазницаОстаток,
	|
	|	ТаблицаОстатков.СтоимостьДопРасходыОстаток 		 	КАК НоваяСтоимостьДопРасходыОстаток,
	|	ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток 	КАК НоваяСтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаОстатков.ТрудозатратыОстаток 			 	КАК НоваяТрудозатратыОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток 	КАК НоваяПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток 	КАК НоваяПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток 	КАК НоваяПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток 	КАК НоваяПостатейныеПеременныеБезНДСОстаток
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры 	= ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация 				= ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета 				= ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  				= ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.Партия 					= ТаблицаВнешнихПоступлений.Партия
	|			И ТаблицаОстатков.АналитикаУчетаПартий 	  	= ТаблицаВнешнихПоступлений.АналитикаУчетаПартий
	|			И ТаблицаОстатков.АналитикаФинансовогоУчета = ТаблицаВнешнихПоступлений.АналитикаФинансовогоУчета
	|			И ТаблицаОстатков.ВидДеятельностиНДС 		= ТаблицаВнешнихПоступлений.ВидДеятельностиНДС
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Период,
	|	ТаблицаНовыхОстатков.Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов,
	|	ТаблицаНовыхОстатков.Партия,
	|	ТаблицаНовыхОстатков.АналитикаУчетаПартий,
	|	ТаблицаНовыхОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаНовыхОстатков.ВидДеятельностиНДС,
	|
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.КоличествоПриход,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьОстаток КАК СтоимостьОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьБезНДСОстаток КАК СтоимостьБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяОстаток КАК СтоимостьЗабалансоваяОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостояннаяРазницаОстаток КАК ПостояннаяРазницаОстаток,
	|	ТаблицаНовыхОстатков.НоваяВременнаяРазницаОстаток КАК ВременнаяРазницаОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыОстаток КАК СтоимостьДопРасходыОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыБезНДСОстаток КАК СтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыОстаток КАК ТрудозатратыОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеСНДСОстаток КАК ПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеБезНДСОстаток КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеСНДСОстаток КАК ПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеБезНДСОстаток КАК ПостатейныеПеременныеБезНДСОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	
	Пока Истина Цикл 
		
		// Максимальное количество выполнений запроса = максимальному количеству поступлений товара на склад.
		РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ТаблицаОстатков"));
		
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Партия 					КАК Партия,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаПартий 		КАК АналитикаУчетаПартий,
	|	ТаблицаУзлыКорректировки.КодСтрокиПродукция 		КАК КодСтрокиПродукция,
	|	ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета 	КАК АналитикаФинансовогоУчета,
	|	ТаблицаУзлыКорректировки.ВидДеятельностиНДС 		КАК ВидДеятельностиНДС,
	|	ТаблицаУзлыКорректировки.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ТаблицаУзлыКорректировки.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаУзлыКорректировки.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаУзлыКорректировки.СтоимостьЗнакГраф_1      	КАК СтоимостьЗнакГраф_1,
	|	ТаблицаУзлыКорректировки.СтоимостьЗнакГраф_2    	КАК СтоимостьЗнакГраф_2,
	|	ТаблицаУзлыКорректировки.ВесГраф_1
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК ВесГраф_1,
	|	ТаблицаУзлыКорректировки.ВесГраф_2
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК ВесГраф_2,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК СтоимостьГраф_1,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК СтоимостьГраф_2,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.СтоимостьЗабалансовая * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК СтоимостьЗабалансовая,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостояннаяРазница * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостояннаяРазницаОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК ПостояннаяРазница,
	|	ТаблицаУзлыКорректировки.ПостояннаяРазницаЗнак,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ВременнаяРазница * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ВременнаяРазницаОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК ВременнаяРазница,
	|	ТаблицаУзлыКорректировки.ВременнаяРазницаЗнак,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ДопРасходыГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ДопРасходыГраф_1,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ДопРасходыГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ДопРасходыГраф_2,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ТрудозатратыГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ТрудозатратыГраф_1,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ТрудозатратыГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ТрудозатратыГраф_2,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПостоянныеГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПостоянныеГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПеременныеГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеГраф_1,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПеременныеГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеГраф_2
	|ПОМЕСТИТЬ ВтУзлыКорректировкиВременная
	|ИЗ
	|	ВтУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета               = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов                = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация               = ТаблицаОстатков.Организация
	|			И ТаблицаУзлыКорректировки.Партия 					 = ТаблицаОстатков.Партия
	|			И ТаблицаУзлыКорректировки.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|			И ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|			И ТаблицаУзлыКорректировки.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.КодСтрокиПродукция 		КАК КодСтрокиПродукция,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.СтоимостьЗнакГраф_1 КАК СтоимостьЗнакГраф_1,
	|	Т.СтоимостьЗнакГраф_2 КАК СтоимостьЗнакГраф_2,
	|	Т.ВесГраф_1 КАК ВесГраф_1,
	|	Т.ВесГраф_2 КАК ВесГраф_2,
	|	Т.СтоимостьГраф_1 КАК СтоимостьГраф_1,
	|	Т.СтоимостьГраф_2 КАК СтоимостьГраф_2,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ПостояннаяРазницаЗнак КАК ПостояннаяРазницаЗнак,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	|	Т.ВременнаяРазницаЗнак КАК ВременнаяРазницаЗнак,
	|	Т.ДопРасходыГраф_1 КАК ДопРасходыГраф_1,
	|	Т.ДопРасходыГраф_2 КАК ДопРасходыГраф_2,
	|	Т.ТрудозатратыГраф_1 КАК ТрудозатратыГраф_1,
	|	Т.ТрудозатратыГраф_2 КАК ТрудозатратыГраф_2,
	|	Т.ПостатейныеПостоянныеГраф_1 КАК ПостатейныеПостоянныеГраф_1,
	|	Т.ПостатейныеПостоянныеГраф_2 КАК ПостатейныеПостоянныеГраф_2,
	|	Т.ПостатейныеПеременныеГраф_1 КАК ПостатейныеПеременныеГраф_1,
	|	Т.ПостатейныеПеременныеГраф_2 КАК ПостатейныеПеременныеГраф_2
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|	ВтУзлыКорректировкиВременная КАК Т
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировкиВременная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|";
	
	Запрос.Текст = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Служебная, этап 3.10
Процедура ПодготовитьДанныеДляРасчетаСтоимостиРеглПоФИФО(ПараметрыРасчета, Запрос)

	// Формирование таблицы узлов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	Себестоимость.КоличествоОстаток
	|ПОМЕСТИТЬ ВТНачальныеОстатки
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|		Организация В (&МассивОрганизаций)
	|		И (АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов) В (
	|			ВЫБРАТЬ
	|				Таблица.АналитикаУчетаНоменклатуры,
	|				Таблица.РазделУчета,
	|				Таблица.ВидЗапасов
	|			ИЗ ВтАналитикаНоменклатуры КАК Таблица)
	|	) КАК Себестоимость
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	Себестоимость.Количество КАК КоличествоОстаток,
	|	Себестоимость.ДопРасходыРегл КАК ДопРасходыРеглОстаток,
	|	Себестоимость.ТрудозатратыРегл КАК ТрудозатратыРеглОстаток,
	|	Себестоимость.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРеглОстаток,
	|	Себестоимость.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРеглОстаток,
	|	Себестоимость.ДопРасходыУпр КАК ДопРасходыУпрОстаток,
	|	Себестоимость.ТрудозатратыУпр КАК ТрудозатратыУпрОстаток,
	|	Себестоимость.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпрОстаток,
	|	Себестоимость.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпрОстаток
	|ПОМЕСТИТЬ ВТКонечныеОстатки
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтАналитикаНоменклатуры КАК Таблица
	|		ПО Себестоимость.АналитикаУчетаНоменклатуры = Таблица.АналитикаУчетаНоменклатуры
	|		И Себестоимость.РазделУчета = Таблица.РазделУчета
	|		И Себестоимость.ВидЗапасов = Таблица.ВидЗапасов
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	СУММА(Себестоимость.Количество) КАК КоличествоПриход,
	|	СУММА(ВЫБОР
	|		КОГДА Себестоимость.Количество = 0
	|		 И НЕ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|		 И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
	|			ВЫБОР
	|				КОГДА &ПартионныйУчетВерсии22 ТОГДА Себестоимость.ДопРасходыРегл
	|				ИНАЧЕ Себестоимость.СтоимостьРегл КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьДопРасходы,
	|	СУММА(ВЫБОР
	|		КОГДА Себестоимость.Количество = 0
	|		 И НЕ Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|		 И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
	|			ВЫБОР
	|				КОГДА &ПартионныйУчетВерсии22 ТОГДА Себестоимость.ДопРасходыУпр
	|				ИНАЧЕ Себестоимость.СтоимостьУпр КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК ДопРасходыУпр
	|ПОМЕСТИТЬ ВТПриходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтАналитикаНоменклатуры КАК Таблица
	|		ПО Себестоимость.АналитикаУчетаНоменклатуры = Таблица.АналитикаУчетаНоменклатуры
	|			И Себестоимость.РазделУчета = Таблица.РазделУчета
	|			И Себестоимость.ВидЗапасов = Таблица.ВидЗапасов
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И (Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период,
	|	КонечныеОстатки.Организация,
	|	КонечныеОстатки.АналитикаУчетаНоменклатуры,
	|	КонечныеОстатки.РазделУчета,
	|	КонечныеОстатки.ВидЗапасов,
	|	КонечныеОстатки.Партия,
	|	КонечныеОстатки.АналитикаУчетаПартий,
	|	КонечныеОстатки.АналитикаФинансовогоУчета,
	|	КонечныеОстатки.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) КАК КоличествоОстаток,
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) КАК КоличествоОстатокНаКонецПериода,
	|	ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) КАК КоличествоПриход,
	|
	|	0 КАК СтоимостьРеглОстаток,
	|	0 КАК СтоимостьУпрОстаток,
	|	0 КАК СтоимостьЗабалансоваяРеглОстаток,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		КОГДА НЕ &ПартионныйУчетВерсии22 
	|		 И ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * ЕСТЬNULL(Приходы.СтоимостьДопРасходы, 0) /
	|					(ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыУпрОстаток /
	|					(ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпрОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ВТКонечныеОстатки КАК КонечныеОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстатки КАК НачальныеОстатки
	|		ПО КонечныеОстатки.Организация 				 = НачальныеОстатки.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = НачальныеОстатки.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета 				 = НачальныеОстатки.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов 				 = НачальныеОстатки.ВидЗапасов
	|		И КонечныеОстатки.Партия 					 = НачальныеОстатки.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий 		 = НачальныеОстатки.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета  = НачальныеОстатки.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС 		 = НачальныеОстатки.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПриходы КАК Приходы
	|		ПО КонечныеОстатки.Организация 				 = Приходы.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = Приходы.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета 				 = Приходы.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов 				 = Приходы.ВидЗапасов
	|		И КонечныеОстатки.Партия 					 = Приходы.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий 		 = Приходы.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета  = Приходы.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС 		 = Приходы.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТНачальныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТКонечныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТПриходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	СебестоимостьТоваров.Партия                          	   КАК Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры 		= ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И СебестоимостьТоваров.РазделУчета 					= ТаблицаОстатков.РазделУчета
	|			И СебестоимостьТоваров.ВидЗапасов  					= ТаблицаОстатков.ВидЗапасов
	|			И СебестоимостьТоваров.Организация 					= ТаблицаОстатков.Организация
	|			И СебестоимостьТоваров.Партия 						= ТаблицаОстатков.Партия
	|			И СебестоимостьТоваров.АналитикаУчетаПартий 		= ТаблицаОстатков.АналитикаУчетаПартий
	|			И СебестоимостьТоваров.АналитикаФинансовогоУчета 	= ТаблицаОстатков.АналитикаФинансовогоУчета
	|			И СебестоимостьТоваров.ВидДеятельностиНДС 			= ТаблицаОстатков.ВидДеятельностиНДС
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.СлужебноеВидДвиженияПриход
	|	И НЕ СебестоимостьТоваров.РасчетСебестоимости
	|	И (СебестоимостьТоваров.СтоимостьРегл <> 0 ИЛИ СебестоимостьТоваров.СтоимостьУпр <> 0)
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПериодыПартий.Организация                         			 КАК Организация,
	|	ПериодыПартий.АналитикаУчетаНоменклатуры          			 КАК АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета                         			 КАК РазделУчета,
	|	ПериодыПартий.ВидЗапасов                          			 КАК ВидЗапасов,
	|	ПериодыПартий.Партия                          	  			 КАК Партия,
	|	ПериодыПартий.АналитикаУчетаПартий                			 КАК АналитикаУчетаПартий,
	|	ПериодыПартий.АналитикаФинансовогоУчета           			 КАК АналитикаФинансовогоУчета,
	|	ПериодыПартий.ВидДеятельностиНДС                  			 КАК ВидДеятельностиНДС,
	|	ПериодыПартий.Период                              			 КАК Период,
	|
	|	СУММА(ЕСТЬNULL(Себестоимость.Количество, 0))             	 КАК Количество,
	|	СУММА(
	|		ВЫБОР КОГДА ЕСТЬNULL(Себестоимость.Количество, 0) <> 0 ТОГДА ЕСТЬNULL(Себестоимость.СтоимостьРегл, 0)
	|		ИНАЧЕ 0 КОНЕЦ
	|	) КАК СтоимостьРегл,
	|	СУММА(ЕСТЬNULL(Себестоимость.СтоимостьЗабалансоваяРегл, 0))  КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(
	|		ВЫБОР КОГДА ЕСТЬNULL(Себестоимость.Количество, 0) <> 0 ТОГДА ЕСТЬNULL(Себестоимость.СтоимостьУпр, 0)
	|		ИНАЧЕ 0 КОНЕЦ
	|	) КАК СтоимостьУпр
	|
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|
	|ИЗ
	|	ТаблицаПериодыПартий КАК ПериодыПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|		ПО ПериодыПартий.АналитикаУчетаНоменклатуры 	= Себестоимость.АналитикаУчетаНоменклатуры
	|			И ПериодыПартий.РазделУчета             	= Себестоимость.РазделУчета
	|			И ПериодыПартий.ВидЗапасов              	= Себестоимость.ВидЗапасов
	|			И ПериодыПартий.Организация             	= Себестоимость.Организация
	|			И ПериодыПартий.Партия 						= Себестоимость.Партия
	|			И ПериодыПартий.АналитикаУчетаПартий 		= Себестоимость.АналитикаУчетаПартий
	|			И ПериодыПартий.АналитикаФинансовогоУчета 	= Себестоимость.АналитикаФинансовогоУчета
	|			И ПериодыПартий.ВидДеятельностиНДС 			= Себестоимость.ВидДеятельностиНДС
	|			И Себестоимость.СлужебноеВидДвиженияПриход
	|			И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|			И (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступлениеВнешнее))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПартий.АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета,
	|	ПериодыПартий.ВидЗапасов,
	|	ПериодыПартий.Организация,
	|	ПериодыПартий.Партия,
	|	ПериодыПартий.АналитикаУчетаПартий,
	|	ПериодыПартий.АналитикаФинансовогоУчета,
	|	ПериодыПартий.ВидДеятельностиНДС,
	|	ПериодыПартий.Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВнешнихПоступлений.Период КАК Период,
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов,
	|	ТаблицаОстатков.Партия,
	|	ТаблицаОстатков.АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаОстатков.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода,
	|	ТаблицаОстатков.КоличествоПриход,
	|
	|	ТаблицаОстатков.СтоимостьРеглОстаток +
	|	ВЫБОР КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0) ТОГДА
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ КАК НоваяСтоимостьРеглОстаток,
	|	ТаблицаОстатков.СтоимостьУпрОстаток +
	|	ВЫБОР КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0) ТОГДА
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ КАК НоваяСтоимостьУпрОстаток,
	|	ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток +
	|	ВЫБОР КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0) ТОГДА
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ КАК НоваяСтоимостьЗабалансоваяРеглОстаток,
	|
	|	ТаблицаОстатков.СтоимостьДопРасходыОстаток КАК НоваяСтоимостьДопРасходыОстаток,
	|	ТаблицаОстатков.ТрудозатратыРеглОстаток    КАК НоваяТрудозатратыРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток КАК НоваяПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток КАК НоваяПостатейныеПеременныеРеглОстаток,
	|
	|	ТаблицаОстатков.ДопРасходыУпрОстаток КАК НоваяДопРасходыУпрОстаток,
	|	ТаблицаОстатков.ТрудозатратыУпрОстаток    КАК НоваяТрудозатратыУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток КАК НоваяПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток КАК НоваяПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры 	= ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация 				= ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета 				= ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  				= ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.Партия 					= ТаблицаВнешнихПоступлений.Партия
	|			И ТаблицаОстатков.АналитикаУчетаПартий 		= ТаблицаВнешнихПоступлений.АналитикаУчетаПартий
	|			И ТаблицаОстатков.АналитикаФинансовогоУчета = ТаблицаВнешнихПоступлений.АналитикаФинансовогоУчета
	|			И ТаблицаОстатков.ВидДеятельностиНДС 		= ТаблицаВнешнихПоступлений.ВидДеятельностиНДС
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Период,
	|	ТаблицаНовыхОстатков.Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов,
	|	ТаблицаНовыхОстатков.Партия,
	|	ТаблицаНовыхОстатков.АналитикаУчетаПартий,
	|	ТаблицаНовыхОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаНовыхОстатков.ВидДеятельностиНДС,
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток          		КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода 		КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.КоличествоПриход				 		КАК КоличествоПриход,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьРеглОстаток       		КАК СтоимостьРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьУпрОстаток       		КАК СтоимостьУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяРеглОстаток 	КАК СтоимостьЗабалансоваяРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыОстаток 		КАК СтоимостьДопРасходыОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыРеглОстаток 	 		КАК ТрудозатратыРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеРеглОстаток  КАК ПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеРеглОстаток  КАК ПостатейныеПеременныеРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяДопРасходыУпрОстаток 				КАК ДопРасходыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыУпрОстаток 	 		КАК ТрудозатратыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеУпрОстаток   КАК ПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеУпрОстаток   КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	
	Пока Истина Цикл 
		
		// Максимальное количество выполнений запроса = максимальному количеству поступлений товара на склад.
		РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ТаблицаОстатков"));
		
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Партия 					КАК Партия,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаПартий 		КАК АналитикаУчетаПартий,
	|	ТаблицаУзлыКорректировки.КодСтрокиПродукция 		КАК КодСтрокиПродукция,
	|	ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	ТаблицаУзлыКорректировки.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	ТаблицаУзлыКорректировки.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ТаблицаУзлыКорректировки.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаУзлыКорректировки.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаУзлыКорректировки.СтоимостьЗнакГраф_1       	КАК СтоимостьЗнакГраф_1,
	|	ТаблицаУзлыКорректировки.СтоимостьЗнакГраф_2    	КАК СтоимостьЗнакГраф_2,
	|	ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК ВесГраф_1,
	|	ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК ВесГраф_2,
	|
	|	(ВЫБОР КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|	ТОГДА
	|		0
	|	КОГДА (ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|		И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|		ТОГДА 0	
	|	ИНАЧЕ
	|		(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0))
	|		/(ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ)
	|	+ (
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА 0
	|	КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|	ТОГДА
	|		0
	|	КОГДА (ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|		И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|		ТОГДА 0	
	|	ИНАЧЕ
	|		(ТаблицаУзлыКорректировки.ДопРасходыГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыОстаток, 0))
	|		/(ТаблицаУзлыКорректировки.ВесГраф_1
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ) КАК СтоимостьГраф_1,
	|
	|	(ВЫБОР КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|	ТОГДА
	|		0
	|	КОГДА (ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|		И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|		ТОГДА 0	
	|	ИНАЧЕ
	|		(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0))
	|		/(ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		+ ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ)
	|	+ (
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА 0
	|	КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|	ТОГДА
	|		0
	|	КОГДА (ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|		И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|		ТОГДА 0	
	|	ИНАЧЕ
	|		(ТаблицаУзлыКорректировки.ДопРасходыГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.ДопРасходыУпрОстаток, 0))
	|		/(ТаблицаУзлыКорректировки.ВесГраф_2
	|		- ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ) КАК СтоимостьГраф_2,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.СтоимостьЗабалансовая * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК СтоимостьЗабалансовая,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22 ТОГДА 0
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ДопРасходыГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                              КАК ДопРасходыГраф_1,
	
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22 ТОГДА 0
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ДопРасходыГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ДопРасходыУпрОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                              КАК ДопРасходыГраф_2,
	|
	|	ТаблицаУзлыКорректировки.ПостояннаяРазница         КАК ПостояннаяРазница,
	|	ТаблицаУзлыКорректировки.ПостояннаяРазницаЗнак,
	|	ТаблицаУзлыКорректировки.ВременнаяРазница          КАК ВременнаяРазница,
	|	ТаблицаУзлыКорректировки.ВременнаяРазницаЗнак,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ТрудозатратыГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыРеглОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ТрудозатратыГраф_1,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПостоянныеГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеГраф_1,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПеременныеГраф_1 * ТаблицаУзлыКорректировки.ВесГраф_1
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_1
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеГраф_1,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ТрудозатратыГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыУпрОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ТрудозатратыГраф_2,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПостоянныеГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеГраф_2,
	
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаУзлыКорректировки.СтоимостьГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				- ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0) КАК ЧИСЛО(28,10))) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.ПостатейныеПеременныеГраф_2 * ТаблицаУзлыКорректировки.ВесГраф_2
	|			 - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.ВесГраф_2
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0))
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеГраф_2
	|ПОМЕСТИТЬ ВтУзлыКорректировкиВременная
	|ИЗ
	|	ВтУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры 	 = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета             	 = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов              	 = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация           	 = ТаблицаОстатков.Организация
	|			И ТаблицаУзлыКорректировки.Партия 					 = ТаблицаОстатков.Партия
	|			И ТаблицаУзлыКорректировки.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|			И ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|			И ТаблицаУзлыКорректировки.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.КодСтрокиПродукция КАК КодСтрокиПродукция,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.СтоимостьЗнакГраф_1 КАК СтоимостьЗнакГраф_1,
	|	Т.СтоимостьЗнакГраф_2 КАК СтоимостьЗнакГраф_2,
	|	Т.ВесГраф_1 КАК ВесГраф_1,
	|	Т.ВесГраф_2 КАК ВесГраф_2,
	|	Т.СтоимостьГраф_1 КАК СтоимостьГраф_1,
	|	Т.СтоимостьГраф_2 КАК СтоимостьГраф_2,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.ДопРасходыГраф_1 КАК ДопРасходыГраф_1,
	|	Т.ДопРасходыГраф_2 КАК ДопРасходыГраф_2,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ПостояннаяРазницаЗнак КАК ПостояннаяРазницаЗнак,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	|	Т.ВременнаяРазницаЗнак КАК ВременнаяРазницаЗнак,
	|	Т.ТрудозатратыГраф_1 КАК ТрудозатратыГраф_1,
	|	Т.ПостатейныеПостоянныеГраф_1 КАК ПостатейныеПостоянныеГраф_1,
	|	Т.ПостатейныеПеременныеГраф_1 КАК ПостатейныеПеременныеГраф_1,
	|	Т.ТрудозатратыГраф_2 КАК ТрудозатратыГраф_2,
	|	Т.ПостатейныеПостоянныеГраф_2 КАК ПостатейныеПостоянныеГраф_2,
	|	Т.ПостатейныеПеременныеГраф_2 КАК ПостатейныеПеременныеГраф_2
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|	ВтУзлыКорректировкиВременная КАК Т
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировкиВременная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|";
	
	Запрос.Текст = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляРаспределенияРезервов(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	ТекстРезервыПоУзлам = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК НомерУзла,
		|	0 КАК РезервГраф_1,
		|	0 КАК РезервГраф_2
		|ПОМЕСТИТЬ РезервыПоУзлам";
	
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстРезервыПоУзлам);
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, Символы.ПС + ";" + Символы.ПС);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ПриемникиРезервов");
	
КонецПроцедуры

// Служебная, этап 3.7, 3.11
// Процедура выполняет расчет себестоимости аналитики номенклатуры в узлах корректировки стоимости списания.
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений", содержащая себестоимость
// в каждом узле корректировки.
//
Процедура РешитьСЛУ(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	СчетчикИтераций   = 1;
	ТекущееОтклонение = 1;
	
	РазмерТаблицыРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВтТаблицаРешений");
	
	Запрос.Текст = 
	"
	// 0 Расчет коэффициентов (количество перехода из состояния в состояние) уравнения.
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                      КАК НомерУзла,
	
		// Показатели графа 1. Стоимость, Стоимость регл.
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|				* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_1,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ДопРасходыГраф_1,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ТрудозатратыГраф_1,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Резервы.РезервГраф_1, 0) = 0 ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0) > 0) ТОГДА
	|							ВЫБОР
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)) > &ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|										+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)) < -&ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								ИНАЧЕ
	|									ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)
	|							КОНЕЦ
	|					ИНАЧЕ
	|					 	0
	|				КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ 
	|				ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ * ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Резервы.РезервГраф_1, 0) = 0 ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0) > 0) ТОГДА
	|							ВЫБОР
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)) > &ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)) < -&ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								ИНАЧЕ
	|									ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_1, 0)
	|							КОНЕЦ
	|					ИНАЧЕ
	|					 	0
	|				КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ 
	|				ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ * ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|       (ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))	
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) > &ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))	
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) < -&ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						ИНАЧЕ
	|							ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))	
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|					КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|				* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|		КОНЕЦ) * ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	
	|	ВЫРАЗИТЬ(СУММА(
	|       (ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ)
	| 				И НЕ ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) ТОГДА	
	|				 	ВЫБОР
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.СтоимостьГраф_1, 0) 
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) > &ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.СтоимостьГраф_1, 0) 
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) < -&ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						ИНАЧЕ
	|							ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.СтоимостьГраф_1, 0) 
	|								* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(-ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|					КОНЕЦ
	|			ИНАЧЕ 0 КОНЕЦ
	|       + ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
	|				ТОГДА 
	|				 	ВЫБОР
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) > &ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						КОГДА &ЗащитаОтПереполненияПоля > 0
	|							И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|								* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|								- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|									* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))) < -&ЗащитаОтПереполненияПоля
	|							ТОГДА 0
	|						ИНАЧЕ
	|							ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_1, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10))
	|							- ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазница, 0)
	|								* ЕСТЬNULL(ВтТаблицаРешений.ПостояннаяРазницаЗнак, 0) КАК ЧИСЛО(28,10))
	|					КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазница, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ВременнаяРазницаЗнак, 0) КАК ЧИСЛО(1,0))
	|			КОНЕЦ)
	|		* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ВременнаяРазница,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.РаботаДляДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗабалансовая, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗабалансовая, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10))
	|		КОНЕЦ) КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансовая,
	|
		// Показатели графа 2. Стоимость без НДС, Стоимость упр.
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_2,
	|
	|	ВЫРАЗИТЬ(СУММА(
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ДопРасходыГраф_2,
	|			
	|	ВЫРАЗИТЬ(СУММА(
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|				* ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) КАК ЧИСЛО(28,10))
	|			КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ТрудозатратыГраф_2,
	|			
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Резервы.РезервГраф_2, 0) = 0 
	|						ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0) > 0) ТОГДА
	|							ВЫБОР
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)) > &ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)) < -&ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								ИНАЧЕ
	|									ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)
	|							КОНЕЦ

	|					ИНАЧЕ
	|					 	0
	|				КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ 
	|				ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ * ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_2,
	|		
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Резервы.РезервГраф_2, 0) = 0 
	|						ИЛИ (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|						+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0) > 0) ТОГДА
	|							ВЫБОР
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)) > &ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								КОГДА &ЗащитаОтПереполненияПоля > 0
	|									И ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|										* (ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|											+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)) < -&ЗащитаОтПереполненияПоля 
	|									ТОГДА 0
	|								ИНАЧЕ
	|									ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.СтоимостьГраф_2, 0) * ЕСТЬNULL(ВтТаблицаРешений.СтоимостьЗнакГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ТрудозатратыГраф_2, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ДопРасходыГраф_2, 0) КАК ЧИСЛО(28,10))
	|									+ ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) КАК ЧИСЛО(28,10)) - ЕСТЬNULL(Резервы.РезервГраф_2, 0)
	|							КОНЕЦ

	|					ИНАЧЕ
	|					 	0
	|				КОНЕЦ
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) > &ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			КОГДА &ЗащитаОтПереполненияПоля > 0 И ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) < -&ЗащитаОтПереполненияПоля 
	|				ТОГДА 0
	|			ИНАЧЕ 
	|				ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ * ВЫРАЗИТЬ(ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0) КАК ЧИСЛО(28,10))) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_2
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаРешений
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений КАК ВтТаблицаРешений
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешений.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК Резервы
	|		ПО ВтТаблицаРешений.НомерУзла = Резервы.НомерУзла
	|	
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// 1 Расчет ошибки расчета.
	|ВЫБРАТЬ
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_1 * ТаблицаРешений.СтоимостьЗнакГраф_1, 0)
	|			 			- УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_1 * ТаблицаРешений.СтоимостьЗнакГраф_1, 0)
	|						- УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|						ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_1 * ТаблицаРешений.СтоимостьЗнакГраф_1, 0)
	|							- УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1
	|							- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|					 )
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеСтоимостьГраф_1,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_1, 0) - УзлыКорректировки.ДопРасходыГраф_1
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_1, 0) - УзлыКорректировки.ДопРасходыГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_1, 0) - УзлыКорректировки.ДопРасходыГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеДопРасходыГраф_1,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_1, 0) - УзлыКорректировки.ТрудозатратыГраф_1
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_1, 0) - УзлыКорректировки.ТрудозатратыГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_1, 0) - УзлыКорректировки.ТрудозатратыГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеТрудозатратыГраф_1,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_1
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеПостатейныеПостоянныеГраф_1,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_1
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_1
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеПостатейныеПеременныеГраф_1,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ПостояннаяРазница * ТаблицаРешений.ПостояннаяРазницаЗнак, 0)
	|			 			- УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ПостояннаяРазница * ТаблицаРешений.ПостояннаяРазницаЗнак, 0)
	|						- УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|						ЕСТЬNULL(ТаблицаРешений.ПостояннаяРазница * ТаблицаРешений.ПостояннаяРазницаЗнак, 0)
	|							- УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак
	|							- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|					 )
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеПостояннаяРазница,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ВременнаяРазница * ТаблицаРешений.ВременнаяРазницаЗнак, 0)
	|			 			- УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ВременнаяРазница * ТаблицаРешений.ВременнаяРазницаЗнак, 0)
	|						- УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|						ЕСТЬNULL(ТаблицаРешений.ВременнаяРазница * ТаблицаРешений.ВременнаяРазницаЗнак, 0)
	|							- УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак
	|							- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|					 )
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеВременнаяРазница,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансовая, 0) - УзлыКорректировки.СтоимостьЗабалансовая
	|					- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьЗабалансовая / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансовая, 0) - УзлыКорректировки.СтоимостьЗабалансовая
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьЗабалансовая / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|						ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансовая, 0) - УзлыКорректировки.СтоимостьЗабалансовая
	|							- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьЗабалансовая / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
	|					 )
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеЗабалансовая,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_2 * ТаблицаРешений.СтоимостьЗнакГраф_2, 0)
	|			 			- УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_2 * ТаблицаРешений.СтоимостьЗнакГраф_2, 0)
	|						- УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|						ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_2 * ТаблицаРешений.СтоимостьЗнакГраф_2, 0)
	|							- УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2
	|							- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|					 )
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеСтоимостьГраф_2,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_2, 0) - УзлыКорректировки.ДопРасходыГраф_2
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_2, 0) - УзлыКорректировки.ДопРасходыГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_2, 0) - УзлыКорректировки.ДопРасходыГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеДопРасходыГраф_2,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_2, 0) - УзлыКорректировки.ТрудозатратыГраф_2
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_2, 0) - УзлыКорректировки.ТрудозатратыГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_2, 0) - УзлыКорректировки.ТрудозатратыГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеТрудозатратыГраф_2,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_2
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПостоянныеГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеПостатейныеПостоянныеГраф_2,
	
	|	ЕСТЬNULL(
	|		МАКСИМУМ(
	|			ВЫБОР 
	|				КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|					0
	|				КОГДА ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_2
	|					 - ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) > 0 ТОГДА
	|
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|
	|				ИНАЧЕ
	|					-(
	|					ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_2, 0) - УзлыКорректировки.ПостатейныеПеременныеГраф_2
	|						- ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
	|				 	)
	|			КОНЕЦ
	|			)
	|		,0) КАК ОтклонениеПостатейныеПеременныеГраф_2
	|ИЗ
	|	ВременнаяТаблицаРешений КАК ВременнаяТаблицаРешений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений КАК ТаблицаРешений
	|		ПО ВременнаяТаблицаРешений.НомерУзла = ТаблицаРешений.НомерУзла
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
	|		ПО ВременнаяТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// 2 Удаление таблиц.
	|УНИЧТОЖИТЬ ВтТаблицаРешений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// 3 Суммирование коэффициентов.
	|ВЫБРАТЬ
	|	ВременнаяТаблицаРешений.НомерУзла  КАК НомерУзла,
	|	ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|		КОГДА УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
    |	КОНЕЦ КАК ВременнаяРазницаЗнак,
	|	ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|		КОГДА УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -1
	|			ИНАЧЕ 1
    |	КОНЕЦ КАК ПостояннаяРазницаЗнак,
	
	|	ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -1
	|			ИНАЧЕ 1
    |	КОНЕЦ КАК СтоимостьЗнакГраф_1,
	
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -(УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)))
	|			ИНАЧЕ УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.СтоимостьЗнакГраф_1 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
    |	КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_1,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ДопРасходыГраф_1
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ДопРасходыГраф_1,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ТрудозатратыГраф_1
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ТрудозатратыГраф_1,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ПостатейныеПостоянныеГраф_1
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ПостатейныеПостоянныеГраф_1,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ПостатейныеПеременныеГраф_1
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_1 / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ПостатейныеПеременныеГраф_1,
	
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -(УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)))
	|			ИНАЧЕ УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВременнаяРазницаЗнак + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ВременнаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
    |	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак	+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -(УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак	+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)))
	|			ИНАЧЕ УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ПостояннаяРазницаЗнак	+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостояннаяРазница / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))
    |	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.СтоимостьЗабалансовая
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьЗабалансовая / УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК СтоимостьЗабалансовая,
	
	|	ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -1
	|			ИНАЧЕ 1
    |	КОНЕЦ КАК СтоимостьЗнакГраф_2,
	
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|			0
	|	 	КОГДА УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) < 0
	|			ТОГДА -(УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)))
	|			ИНАЧЕ УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.СтоимостьЗнакГраф_2 + ВЫРАЗИТЬ(ВременнаяТаблицаРешений.СтоимостьГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))
    |	КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_2,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ДопРасходыГраф_2
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ДопРасходыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ДопРасходыГраф_2,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ТрудозатратыГраф_2
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ТрудозатратыГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ТрудозатратыГраф_2,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ПостатейныеПостоянныеГраф_2
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПостоянныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ПостатейныеПостоянныеГраф_2,
	
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА
	|				0
	|			ИНАЧЕ
	|				УзлыКорректировки.ПостатейныеПеременныеГраф_2
	|					+ ВЫРАЗИТЬ(ВременнаяТаблицаРешений.ПостатейныеПеременныеГраф_2 / УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) 
	|		КОНЕЦ КАК ЧИСЛО(28,10))              КАК ПостатейныеПеременныеГраф_2
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений
	|
	|ИЗ
	|	ВременнаяТаблицаРешений КАК ВременнаяТаблицаРешений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
	|		ПО ВременнаяТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВременнаяТаблицаРешений";
	
	Запрос.Текст = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	Пока ТекущееОтклонение > ПараметрыРасчета.РешениеСЛУ.ТребуемаяТочность
	 И СчетчикИтераций <= ПараметрыРасчета.РешениеСЛУ.МаксимальноеКоличествоИтераций Цикл
		
		РасчетСебестоимостиПротоколРасчета.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "ВтТаблицаРешений");
		РезультатЗапроса = Запрос.ВыполнитьПакет()[1];
		РасчетСебестоимостиПротоколРасчета.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета, Истина);
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ТекущееОтклонение =	Макс(
				Выборка.ОтклонениеСтоимостьГраф_1,
				Выборка.ОтклонениеДопРасходыГраф_1,
				Выборка.ОтклонениеЗабалансовая,
				Выборка.ОтклонениеТрудозатратыГраф_1,
				Выборка.ОтклонениеПостатейныеПостоянныеГраф_1,
				Выборка.ОтклонениеПостатейныеПеременныеГраф_1,
				Выборка.ОтклонениеВременнаяРазница,
				Выборка.ОтклонениеПостояннаяРазница,
				Выборка.ОтклонениеСтоимостьГраф_2,
				Выборка.ОтклонениеДопРасходыГраф_2,
				Выборка.ОтклонениеТрудозатратыГраф_2,
				Выборка.ОтклонениеПостатейныеПостоянныеГраф_2,
				Выборка.ОтклонениеПостатейныеПеременныеГраф_2);
			
		Иначе
			
			ТекущееОтклонение = 0;
			
		КонецЕсли;
		
		// Добавим запись в протокол расчета
		СтрокаПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Отклонение на текущей итерации: %1'"),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ТекущееОтклонение));
			
		РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
		
		СчетчикИтераций = СчетчикИтераций + 1;
		
	КонецЦикла;
	
	// Добавим запись в протокол расчета
	СтрокаПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Выполнено решение СЛУ (итерации / итоговое отклонение): %1 / %2'"),
		РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(СчетчикИтераций - 1),
		РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ТекущееОтклонение));
		
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	// Для целей отладки сохраним СЛУ
	СохранитьДанныеСЛУ(ПараметрыРасчета, РасчетСтоимостиРегл);
	
КонецПроцедуры

#КонецОбласти

#Область РешениеСЛУПлатформой

// Служебная, этап 3.7, 3.11
// Процедура выполняет расчет себестоимости аналитики номенклатуры в узлах корректировки стоимости списания.
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений", содержащая себестоимость
// в каждом узле корректировки.
//
Процедура РешитьСЛУПлатформой(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	// Система линейных уравнений в простейшем виде выглядит так:
	//	a11*X1 + a12*X2 = b1*Y1
	//	a21*X1 + a22*X2 = b2*Y2
	//
	// Где:
	//	X1, X2		- переменные
	//	a11, a22	- веса переменных главной диагонали
	//  a12, a21	- веса обычных переменных
	//	Y1, Y2		- свободные коэффициенты
	//	b1, b2		- веса свободных коэффициентов
	//
	// В таблице ВтУзлыКорректировки расположены "Свободные коэффициенты" и их веса, 
	// которые равны "весам переменных главной диагонали" (a11=b1, a22=b2)
	//
	// В таблице ВтПеремещенияСписания находятся "веса обычных переменных"
	//
	// В результате решения СЛУ получается таблица ВтТаблицаРешений, содержащая значения X1, X2
	//
	// Подробное описание механизма см. https://its.1c.ru/db/v8314doc#bookmark:dev:TI000002121
	//
	
	// Решаются независимые системы уравнений графа 1
	РешитьСЛУПлатформойБазовыеЗначенияГраф_1(ПараметрыРасчета);
	
	// Решаются независимые системы уравнений графа 2
	РешитьСЛУПлатформойБазовыеЗначенияГраф_2(ПараметрыРасчета);
	
	// Решаются системы уравнений постатейных показателей графа 1.
	// Зависят от результата РешитьСЛУПлатформойБазовыеЗначенияГраф_1
	РешитьСЛУПлатформойПостатейныеГраф_1(ПараметрыРасчета);
	
	// Решаются системы уравнений постатейных показателей графа 2.
	// Зависят от результата РешитьСЛУПлатформойБазовыеЗначенияГраф_2
	РешитьСЛУПлатформойПостатейныеГраф_2(ПараметрыРасчета);
	
	// Объединяет постатейные расходы двух графов в одну таблицу
	РешитьСЛУПлатформойОбъединитьПостатейные(ПараметрыРасчета);
	
	
	// Решаются системы уравнений для временных и постоянных разниц.
	// Зависят от результатов РешитьСЛУПлатформойБазовыеЗначенияГраф_1 и РешитьСЛУПлатформойПостатейные
	РешитьСЛУПлатформойРазницы(ПараметрыРасчета, РасчетСтоимостиРегл);
	
	// Объединение решений всех систем в ВтТаблицаРешений
	РешитьСЛУПлатформойОбъединитьРешения(ПараметрыРасчета, РасчетСтоимостиРегл);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//		СтоимостьГраф_1, ДопРасходыГраф_1, ТрудозатратыГраф_1, СтоимостьЗабалансовая
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаБазовыхРешенийГраф_1"
//
Процедура РешитьСЛУПлатформойБазовыеЗначенияГраф_1(ПараметрыРасчета)
	
	ПояснениеДляЗамера = НСтр("ru='Решение для базовых значений (граф 1)'");
	
	ЗапросУзлы = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла																			КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_1 * УзлыКорректировки.ВесГраф_1 
	|				* УзлыКорректировки.СтоимостьЗнакГраф_1 КАК ЧИСЛО(28,10))								КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_1 * УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))			КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_1 * УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))		КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьЗабалансовая * УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10))	КАК СтоимостьЗабалансовая
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	                                          
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьГраф_1,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиДопРасходыГраф_1,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыГраф_1,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.РаботаДляДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК ВтУзлыКорректировки
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтУзлыКорректировки.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьГраф_1";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьГраф_1";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ДопРасходыГраф_1";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиДопРасходыГраф_1";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыГраф_1";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыГраф_1";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьЗабалансовая";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьЗабалансовая";
	
	// решение
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьГраф_1, ДопРасходыГраф_1, ТрудозатратыГраф_1, СтоимостьЗабалансовая");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ДопРасходыГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ДопРасходыГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ТрудозатратыГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансовая, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансовая,
	|	1 КАК СтоимостьЗнакГраф_1
	|
	|ПОМЕСТИТЬ ВтТаблицаБазовыхРешенийГраф_1
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешений 
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//		СтоимостьГраф_2, ДопРасходыГраф_2, ТрудозатратыГраф_2
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаБазовыхРешенийГраф_2"
//
Процедура РешитьСЛУПлатформойБазовыеЗначенияГраф_2(ПараметрыРасчета)
	
	ПояснениеДляЗамера = НСтр("ru='Решение для базовых значений (граф 2)'");
	
	ЗапросУзлы = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла																			КАК НомерУзла,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьГраф_2 * УзлыКорректировки.ВесГраф_2 
	|			* УзлыКорректировки.СтоимостьЗнакГраф_2 КАК ЧИСЛО(28,10))									КАК СтоимостьГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ДопРасходыГраф_2 * УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))			КАК ДопРасходыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ТрудозатратыГраф_2 * УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10))		КАК ТрудозатратыГраф_2
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	                                          
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_2, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10))) КАК ВесДугиСтоимостьГраф_2,
	|
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_2, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10))) КАК ВесДугиДопРасходыГраф_2,
	|
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_2, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10))) КАК ВесДугиТрудозатратыГраф_2
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК ВтУзлыКорректировки
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтУзлыКорректировки.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещенияСписания.НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) КАК ВесДугиДопРасходыГраф_2,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыГраф_2
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьГраф_2";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьГраф_2";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ДопРасходыГраф_2";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиДопРасходыГраф_2";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыГраф_2";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыГраф_2";
	
	// решение для базовых значений
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьГраф_2, ДопРасходыГраф_2, ТрудозатратыГраф_2",
		Новый Структура("СтоимостьЗнакГраф_2", "1"),
		"ВтТаблицаБазовыхРешенийГраф_2");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//		ПостатейныеПостоянныеГраф_1, ПостатейныеПеременныеГраф_1
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешенийПостатейныеГраф_1"
//
Процедура РешитьСЛУПлатформойПостатейныеГраф_1(ПараметрыРасчета)
	
	// Для постатейных затрат необходимо изменить свободные коэффициенты на величину
	// Стоимость+Трудозатраты+ДопРасходы (СТД), которая перетекает из базовых значений
	//
	// Изначально, уравнение для постатейных затрат выглядит:
	//  A11*X1 + A12*X2 + ... + A1n*Xn = B1*Y1
	//
	// Если для связи из таблицы ВтПеремещенияСписания указан признак Постатейные... = Истина,
	// то к переменной необходимо добавить СТД, например:
	//   A11*X1 + A12*(X2+СТД)+ ... + A1n*Xn = B1*Y1
	//
	// Чтобы такая система давала правильные решения, необходимо увеличить свободный коэффициент на эту же величину:
	//   A11*X1 + A12*(X2+СТД) +  ... A1n*Xn = B1*Y1 + A12*СТД
	//
	
	ПояснениеДляЗамера = НСтр("ru='Решение для постатейных (граф 1)'");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК НомерУзла,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1
	|
	|ПОМЕСТИТЬ ВтТаблицаРешенийПостатейныеГраф_1
	|";
	
	Запрос.Выполнить();
	
	// Для предварительного расчета показатели не считаются
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПостатейныеГраф_1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                      КАК НомерУзла,
	
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_1, ЛОЖЬ) ТОГДА
	|				(
	|				ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.СтоимостьГраф_1, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ТрудозатратыГраф_1, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ДопРасходыГраф_1, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|		) 
	|	КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1_Отклонение,
	
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_1, ЛОЖЬ) ТОГДА
	|				(
	|				ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.СтоимостьГраф_1, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ТрудозатратыГраф_1, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ДопРасходыГраф_1, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|		) 
	|	КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1_Отклонение
	
	|
	|ПОМЕСТИТЬ ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_1 КАК ВтТаблицаБазовыхРешенийГраф_1
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаБазовыхРешенийГраф_1.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ЗапросУзлы = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.ПостатейныеПостоянныеГраф_1 * УзлыКорректировки.ВесГраф_1
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1.ПостатейныеПостоянныеГраф_1_Отклонение, 0) КАК ПостатейныеПостоянныеГраф_1,
	|
	|	УзлыКорректировки.ПостатейныеПеременныеГраф_1 * УзлыКорректировки.ВесГраф_1
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1.ПостатейныеПеременныеГраф_1_Отклонение, 0) КАК ПостатейныеПеременныеГраф_1
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1 КАК ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1
	|		ПО УзлыКорректировки.НомерУзла = ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1.НомерУзла
	|";
	
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостатейные_1
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиПостатейные_1
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеГраф_1";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостатейные_1";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеГраф_1";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостатейные_1";
	
	// решение для постатейных
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеГраф_1, ПостатейныеПеременныеГраф_1");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1
	|
	|ПОМЕСТИТЬ ВтТаблицаРешенийПостатейныеГраф_1
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтклоненияСвободныхКоэффициентовПостатейныеГраф_1
	|";	
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//		ПостатейныеПостоянныеГраф_2, ПостатейныеПеременныеГраф_2
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешенийПостатейныеГраф_2"
//
Процедура РешитьСЛУПлатформойПостатейныеГраф_2(ПараметрыРасчета)
	
	// См. описание в РешитьСЛУПлатформойПостатейныеГраф_1
	
	ПояснениеДляЗамера = НСтр("ru='Решение для постатейных (граф 2)'");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК НомерУзла,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_2
	|
	|ПОМЕСТИТЬ ВтТаблицаРешенийПостатейныеГраф_2
	|";
	
	Запрос.Выполнить();
	
	// Для предварительного расчета показатели не считаются
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
		
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПостатейныеГраф_2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                      КАК НомерУзла,
	
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянныеГраф_2, ЛОЖЬ) ТОГДА
	|				(
	|				ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.СтоимостьГраф_2, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ТрудозатратыГраф_2, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ДопРасходыГраф_2, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|		) 
	|	КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_2_Отклонение,
	
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременныеГраф_2, ЛОЖЬ) ТОГДА
	|				(
	|				ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.СтоимостьГраф_2, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ТрудозатратыГраф_2, 0)
	|				+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ДопРасходыГраф_2, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_2, 0)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|		) 
	|	КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_2_Отклонение
	
	|
	|ПОМЕСТИТЬ ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_2 КАК ВтТаблицаБазовыхРешенийГраф_2
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаБазовыхРешенийГраф_2.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ЗапросУзлы = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.ПостатейныеПостоянныеГраф_2 * УзлыКорректировки.ВесГраф_2
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2.ПостатейныеПостоянныеГраф_2_Отклонение, 0) КАК ПостатейныеПостоянныеГраф_2,
	|
	|	УзлыКорректировки.ПостатейныеПеременныеГраф_2 * УзлыКорректировки.ВесГраф_2
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2.ПостатейныеПеременныеГраф_2_Отклонение, 0) КАК ПостатейныеПеременныеГраф_2
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2 КАК ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2
	|		ПО УзлыКорректировки.НомерУзла = ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2.НомерУзла
	|";
	
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_2, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостатейные_2
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_2 КАК ЧИСЛО(28,10)) КАК ВесДугиПостатейные_2
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеГраф_2";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостатейные_2";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеГраф_2";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостатейные_2";
	
	// решение для постатейных
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеГраф_2, ПостатейныеПеременныеГраф_2",
		,
		"ВтТаблицаРешенийПостатейныеГраф_2");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ОтклоненияСвободныхКоэффициентовПостатейныеГраф_2");
	
КонецПроцедуры

// Объединяет постатейные расходы двух графов в одну таблицу
Процедура РешитьСЛУПлатформойОбъединитьПостатейные(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Единая таблица постатейных расходов
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейныеГраф_1.ПостатейныеПостоянныеГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейныеГраф_1.ПостатейныеПеременныеГраф_1, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейныеГраф_2.ПостатейныеПостоянныеГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейныеГраф_2.ПостатейныеПеременныеГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_2
	|	
	|ПОМЕСТИТЬ
	|	ВтТаблицаРешенийПостатейные
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПостатейныеГраф_1 КАК ВтТаблицаРешенийПостатейныеГраф_1
	|		ПО ВтТаблицаРешенийПостатейныеГраф_1.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПостатейныеГраф_2 КАК ВтТаблицаРешенийПостатейныеГраф_2
	|		ПО ВтТаблицаРешенийПостатейныеГраф_2.НомерУзла = УзлыКорректировки.НомерУзла
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПостатейныеГраф_1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПостатейныеГраф_2
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры


// Выполняет шаг расчета систем уравнений для показателей:
//		ВременнаяРазница, ПостояннаяРазница
// Результатом работы данной процедуры будут временные таблицы "ВтТаблицаРешенийВР" И "ВтТаблицаРешенийПР"
//
Процедура РешитьСЛУПлатформойРазницыШаг(ПараметрыРасчета, РасчетСтоимостиРегл, НомерШага)
	
	ШаблонПояснениеДляЗамера = НСтр("ru='Решение для %1 (шаг %2)'");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Необходимо посчитать отклонения свободных коэффициентов. Описание см. в РешитьСЛУПлатформойБазовыеЗначенияГраф_1
	
	// Сначала считается постоянная разница, а затем временная
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                      КАК НомерУзла,
	
	|	ВЫРАЗИТЬ(СУММА
	|		(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА
	|					%1 - ЕСТЬNULL(ВтТаблицаРешенийВР.ВременнаяРазница, 0)
	|			ИНАЧЕ 
	|				0
	|		КОНЕЦ * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|		) 
	|	КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница_Отклонение
	
	|
	|ПОМЕСТИТЬ ОтклоненияСвободныхКоэффициентовПР
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_1 КАК ВтТаблицаБазовыхРешенийГраф_1
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаБазовыхРешенийГраф_1.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПостатейные КАК ВтТаблицаРешенийПостатейные
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешенийПостатейные.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийВР КАК ВтТаблицаРешенийВР
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешенийВР.НомерУзла
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	ТекстБУ = "
	|					ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.СтоимостьГраф_1, 0) 
	|					+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ДопРасходыГраф_1, 0)
	|					+ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ТрудозатратыГраф_1, 0)
	|					+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеГраф_1, 0)
	|					+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеГраф_1, 0)
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, ТекстБУ);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ЗапросУзлы = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.ПостояннаяРазница * УзлыКорректировки.ВесГраф_1 * УзлыКорректировки.ПостояннаяРазницаЗнак
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовПР.ПостояннаяРазница_Отклонение, 0) КАК ПостояннаяРазница
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтклоненияСвободныхКоэффициентовПР КАК ОтклоненияСвободныхКоэффициентовПР
	|		ПО УзлыКорректировки.НомерУзла = ОтклоненияСвободныхКоэффициентовПР.НомерУзла
	|";
	
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
	|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК ВтУзлыКорректировки
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтУзлыКорректировки.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	ПояснениеДляЗамера = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПояснениеДляЗамера, НСтр("ru='ПР'"), НомерШага);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостояннаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостояннаяРазница";
	
	// решение
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостояннаяРазница");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРешенийПР
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтклоненияСвободныхКоэффициентовПР
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	// Временная разница
	
	Запрос.Текст = " 
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                      КАК НомерУзла,
	|
	|	ВЫРАЗИТЬ(СУММА
	|       (
	|		(
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) ТОГДА	
	|				 -1 * (%1) + ЕСТЬNULL(ВтТаблицаРешенийПР.ПостояннаяРазница, 0)
	|			ИНАЧЕ
	|				0 
	|		КОНЕЦ +
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА) ТОГДА 
	|				%1 - ЕСТЬNULL(ВтТаблицаРешенийПР.ПостояннаяРазница, 0)
	|			ИНАЧЕ 
	|				0
	|		КОНЕЦ) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиГраф_1, 0)
	|		)
	|	КАК ЧИСЛО(28,10)) КАК ВременнаяРазница_Отклонение
	|
	|
	|ПОМЕСТИТЬ ОтклоненияСвободныхКоэффициентовВР
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_1 КАК ВтТаблицаБазовыхРешенийГраф_1
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаБазовыхРешенийГраф_1.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПостатейные КАК ВтТаблицаРешенийПостатейные
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешенийПостатейные.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПР КАК ВтТаблицаРешенийПР
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешенийПР.НомерУзла
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|
	|";	
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, ТекстБУ);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.ВременнаяРазница * УзлыКорректировки.ВесГраф_1 * УзлыКорректировки.ВременнаяРазницаЗнак
	|		+ ЕСТЬNULL(ОтклоненияСвободныхКоэффициентовВР.ВременнаяРазница_Отклонение, 0) КАК ВременнаяРазница
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтклоненияСвободныхКоэффициентовВР КАК ОтклоненияСвободныхКоэффициентовВР
	|		ПО УзлыКорректировки.НомерУзла = ОтклоненияСвободныхКоэффициентовВР.НомерУзла
	|";
	
	ЗапросСвязи = Новый Запрос();
	ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(
	|       ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) ТОГДА	
	|					ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|			ИНАЧЕ 0 
	|		КОНЕЦ
	|       + ВЫБОР
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.ПередачаВЭксплуатацию, ЛОЖЬ) ТОГДА 0
	|			КОГДА ЕСТЬNULL(ПеремещенияСписания.КосвенныеЗатратыНУ, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА) ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиГраф_1, 0)
	|		КОНЕЦ
	|			
	|	КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК ВтУзлыКорректировки
	|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтУзлыКорректировки.НомерУзла
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесГраф_1 КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	
	ПояснениеДляЗамера = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПояснениеДляЗамера, НСтр("ru='ВР'"), НомерШага);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='узлы'"));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru='связи'"));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ВременнаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиВременнаяРазница";
	
	// решение
	ТаблицаРешений = РасчетСистемЛинейныхУравнений.РассчитатьСистемыЛинейныхУравнений();
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ВременнаяРазница",
		Новый Структура("ВременнаяРазницаЗнак", "1"),
		"ВтТаблицаРешенийВР");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ОтклоненияСвободныхКоэффициентовВР");
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//		ВременнаяРазница, ПостояннаяРазница
// Результатом работы данной процедуры будут временные таблицы "ВтТаблицаРешенийВР" И "ВтТаблицаРешенийПР"
//
Процедура РешитьСЛУПлатформойРазницы(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК НомерУзла,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(1 КАК ЧИСЛО(1)) КАК ПостояннаяРазницаЗнак
	|	
	|ПОМЕСТИТЬ
	|	ВтТаблицаРешенийПР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК НомерУзла,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10)) КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(1 КАК ЧИСЛО(1)) КАК ВременнаяРазницаЗнак
	|	
	|ПОМЕСТИТЬ
	|	ВтТаблицаРешенийВР
	|";
	
	Запрос.Выполнить();
		
	// Показатели имеют смысл только для регламентированного учета в окончательном расчете
	Если НЕ РасчетСтоимостиРегл ИЛИ ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
	
	// Выполняется два шага расчета разниц, т.к. для одних случаев надо сначала посчитать ПР, а от нее ВР
	// для других - наоборот
	РешитьСЛУПлатформойРазницыШаг(ПараметрыРасчета, РасчетСтоимостиРегл, 1);
	РешитьСЛУПлатформойРазницыШаг(ПараметрыРасчета, РасчетСтоимостиРегл, 2)
	
КонецПроцедуры

// Объединяет все этапы решений в таблицу ВтТаблицаРешений
//
Процедура РешитьСЛУПлатформойОбъединитьРешения(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	ПояснениеДляЗамера = НСтр("ru='Объединить решения СЛАУ'");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|
	|УНИЧТОЖИТЬ ВтТаблицаРешений
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.СтоимостьГраф_1, 0) КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_1,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ТрудозатратыГраф_1, 0) КАК ЧИСЛО(28,10)) КАК ТрудозатратыГраф_1,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.ДопРасходыГраф_1, 0) КАК ЧИСЛО(28,10)) КАК ДопРасходыГраф_1,
	|	ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК СтоимостьЗнакГраф_1,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_1.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансовая,
	
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.СтоимостьГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьГраф_2,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ТрудозатратыГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыГраф_2,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаБазовыхРешенийГраф_2.ДопРасходыГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ДопРасходыГраф_2,
	|	ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ 1 КОНЕЦ  КАК СтоимостьЗнакГраф_2,
	
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеГраф_1, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_1,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеГраф_1, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_1,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеГраф_2,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_2 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеГраф_2, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеГраф_2,
	
	|	ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК ВременнаяРазницаЗнак,
	|	ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК ПостояннаяРазницаЗнак,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВтТаблицаРешенийПР.ПостояннаяРазница, 0) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА УзлыКорректировки.ВесГраф_1 = 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(ВтТаблицаРешенийВР.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|	
	|ПОМЕСТИТЬ ВтТаблицаРешенийПредварительная
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_1 КАК ВтТаблицаБазовыхРешенийГраф_1
	|		ПО ВтТаблицаБазовыхРешенийГраф_1.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаБазовыхРешенийГраф_2 КАК ВтТаблицаБазовыхРешенийГраф_2
	|		ПО ВтТаблицаБазовыхРешенийГраф_2.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПостатейные КАК ВтТаблицаРешенийПостатейные
	|		ПО ВтТаблицаРешенийПостатейные.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПР КАК ВтТаблицаРешенийПР
	|		ПО ВтТаблицаРешенийПР.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешенийВР КАК ВтТаблицаРешенийВР
	|		ПО ВтТаблицаРешенийВР.НомерУзла = УзлыКорректировки.НомерУзла
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаБазовыхРешенийГраф_1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаБазовыхРешенийГраф_2
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПостатейные
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаРешенийПР
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаРешенийВР
	|";
	
	Если ПараметрыРасчета.РешениеСЛУ.ЗащитаОтПереполненияПоля = 0 Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"ВтТаблицаРешенийПредварительная",
			"ВтТаблицаРешений");
		
	Иначе
		
		Запрос.Текст = Запрос.Текст
		+ "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = Запрос.Текст
		+ "ВЫБРАТЬ
		|	Т.НомерУзла,
		|	Т.Организация КАК Организация,
		|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета КАК РазделУчета,
		|	Т.ВидЗапасов КАК ВидЗапасов,
		|	Т.Партия КАК Партия,
		|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС
		|ПОМЕСТИТЬ ВТУзлыСПереполнениемПоля
		|ИЗ
		|	ВтУзлыКорректировки КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаРешенийПредварительная КАК Отбор
		|		ПО Т.НомерУзла = Отбор.НомерУзла
		|ГДЕ
		| НЕ (Отбор.СтоимостьГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ТрудозатратыГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ДопРасходыГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.СтоимостьЗабалансовая МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.СтоимостьГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ТрудозатратыГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ДопРасходыГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ПостатейныеПостоянныеГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ПостатейныеПеременныеГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ПостатейныеПостоянныеГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ПостатейныеПеременныеГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ПостояннаяРазница МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|	  И Отбор.ВременнаяРазница МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля)
		|ИНДЕКСИРОВАТЬ ПО
		|	Т.НомерУзла";
		
		Запрос.Текст = Запрос.Текст
		+ "
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = Запрос.Текст
		+ "ВЫБРАТЬ
		|	Т.НомерУзла 				КАК НомерУзла,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.СтоимостьГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.СтоимостьГраф_1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК СтоимостьГраф_1,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ТрудозатратыГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ТрудозатратыГраф_1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ТрудозатратыГраф_1,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ДопРасходыГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ДопРасходыГраф_1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ДопРасходыГраф_1,
		|	Т.СтоимостьЗнакГраф_1 		КАК СтоимостьЗнакГраф_1,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.СтоимостьЗабалансовая МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.СтоимостьЗабалансовая
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК СтоимостьЗабалансовая,
		|
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.СтоимостьГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.СтоимостьГраф_2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК СтоимостьГраф_2,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ТрудозатратыГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ТрудозатратыГраф_2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ТрудозатратыГраф_2,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ДопРасходыГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ДопРасходыГраф_2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ДопРасходыГраф_2,
		|	Т.СтоимостьЗнакГраф_2 		КАК СтоимостьЗнакГраф_2,
		|
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ПостатейныеПостоянныеГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ПостатейныеПостоянныеГраф_1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ПостатейныеПостоянныеГраф_1,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ПостатейныеПеременныеГраф_1 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ПостатейныеПеременныеГраф_1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ПостатейныеПеременныеГраф_1,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ПостатейныеПостоянныеГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ПостатейныеПостоянныеГраф_2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ПостатейныеПостоянныеГраф_2,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ПостатейныеПеременныеГраф_2 МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ПостатейныеПеременныеГраф_2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ПостатейныеПеременныеГраф_2,
		|
		|	Т.ВременнаяРазницаЗнак 		КАК ВременнаяРазницаЗнак,
		|	Т.ПостояннаяРазницаЗнак 	КАК ПостояннаяРазницаЗнак,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ПостояннаяРазница МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ПостояннаяРазница
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.ВременнаяРазница МЕЖДУ -&ЗащитаОтПереполненияПоля И &ЗащитаОтПереполненияПоля 
		|		ТОГДА Т.ВременнаяРазница
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧИСЛО(28,10)) 	КАК ВременнаяРазница
		|ПОМЕСТИТЬ ВтТаблицаРешений
		|ИЗ
		|	ВтТаблицаРешенийПредварительная КАК Т
		|ИНДЕКСИРОВАТЬ ПО
		|	Т.НомерУзла
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтТаблицаРешенийПредварительная
		|";
		
		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТУзлыСПереполнениемПоля");
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Для совместимости с платформой ниже 8.3.14
//
//
Функция ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета) Экспорт
	
	РасчетСистемЛинейныхУравнений = ОбщегоНазначения.ВычислитьВБезопасномРежиме("Новый РасчетСистемЛинейныхУравнений");
	
	РасчетСистемЛинейныхУравнений.КоличествоИтераций				  = ПараметрыРасчета.РешениеСЛУ.МаксимальноеКоличествоИтераций;
	РасчетСистемЛинейныхУравнений.ТребуемаяТочность					  = ПараметрыРасчета.РешениеСЛУ.ТребуемаяТочность;
	РасчетСистемЛинейныхУравнений.ИспользованиеВычислительныхРесурсов = ПараметрыРасчета.РешениеСЛУ.ИспользованиеВычислительныхРесурсов;
	
	Возврат РасчетСистемЛинейныхУравнений;
	
КонецФункции

#КонецОбласти

#Область Отладка

// Сохраняет временные таблицы, используемые для решения СЛУ, в файлы на диск.
//
Процедура СохранитьДанныеСЛУ(ПараметрыРасчета, РасчетСтоимостиРегл)
	
	ИмяКаталога = СокрЛП(ПараметрыРасчета.ВыгрузкаДанныхРасчета.КаталогДляСохраненияДанныхСЛУ);
	
	Если НЕ ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат; // выгрузка СЛУ не требуется
	КонецЕсли;
	
	Попытка
		ТекстОшибки = "";
		СоздатьКаталог(ИмяКаталога);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога);
	Каталог     = Новый Файл(ИмяКаталога);
	
	Если НЕ Каталог.Существует() ИЛИ НЕ Каталог.ЭтоКаталог() Тогда
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не найден каталог для сохранения данных СЛУ: ""%1""
				|%2'"),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ИмяКаталога),
			ТекстОшибки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
		Возврат; // каталог для выгрузки не найден
		
	КонецЕсли;
	
	ФорматВыгрузки = СокрЛП(НРег(ПараметрыРасчета.ВыгрузкаДанныхРасчета.ФорматСохраненияДанныхСЛУ));
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если ФорматВыгрузки = "mxl" Тогда
		
		// ВтУзлыКорректировки и ВтТаблицаРешений выгружаем в один файл "...Узлы".
		//	- одноименным колонкам этих таблиц присвоим префиксы "Узел" и "Решение" соответственно
		// ВтПеремещенияСписания выгружаем в файл "...Дуги".
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предв", "Факт") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_%1.mxl";													   // какую временную таблицу выгружаем
		
		// Получим данные из временных таблиц
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла					 	КАК НомерУзла,
		|	УзлыКорректировки.Организация                	КАК Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.РазделУчета                	КАК РазделУчета,
		|	УзлыКорректировки.ВидЗапасов                 	КАК ВидЗапасов,
		|	УзлыКорректировки.Партия					 	КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий		 	КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета	 	КАК АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС		 	КАК ВидДеятельностиНДС,
		|
		|	УзлыКорректировки.ВесГраф_1          		 	КАК ВесГраф_1,
		|	УзлыКорректировки.СтоимостьГраф_1
		|		* УзлыКорректировки.СтоимостьЗнакГраф_1 	КАК УзелСтоимостьГраф_1,
		|	УзлыКорректировки.ДопРасходыГраф_1 				КАК УзелДопРасходыГраф_1,
		|	УзлыКорректировки.ТрудозатратыГраф_1			КАК ТрудозатратыГраф_1,
		|	УзлыКорректировки.ПостатейныеПостоянныеГраф_1 	КАК УзелПостатейныеПостоянныеГраф_1,
		|	УзлыКорректировки.ПостатейныеПеременныеГраф_1 	КАК УзелПостатейныеПеременныеГраф_1,
		|	УзлыКорректировки.ПостояннаяРазница
		|		* УзлыКорректировки.ПостояннаяРазницаЗнак 	КАК УзелПостояннаяРазница,
		|	УзлыКорректировки.ВременнаяРазница
		|		* УзлыКорректировки.ВременнаяРазницаЗнак 	КАК УзелВременнаяРазница,
		|	УзлыКорректировки.СтоимостьЗабалансовая 		КАК УзелСтоимостьЗабалансовая,
		
		|	УзлыКорректировки.ВесГраф_2          		 	КАК ВесГраф_2,
		|	УзлыКорректировки.СтоимостьГраф_2
		|		* УзлыКорректировки.СтоимостьЗнакГраф_2 	КАК УзелСтоимостьГраф_2,
		|	УзлыКорректировки.ДопРасходыГраф_2 				КАК УзелДопРасходыГраф_2,
		|	УзлыКорректировки.ТрудозатратыГраф_2 			КАК ТрудозатратыГраф_2,
		|	УзлыКорректировки.ПостатейныеПостоянныеГраф_2 	КАК УзелПостатейныеПостоянныеГраф_2,
		|	УзлыКорректировки.ПостатейныеПеременныеГраф_2 	КАК УзелПостатейныеПеременныеГраф_2,
		|
		|	ТаблицаРешений.СтоимостьГраф_1
		|		* ТаблицаРешений.СтоимостьЗнакГраф_1 		КАК РешениеСтоимостьГраф_1,
		|	ТаблицаРешений.ДопРасходыГраф_1 				КАК РешениеДопРасходыГраф_1,
		|	ТаблицаРешений.ТрудозатратыГраф_1 				КАК РешениеТрудозатратыГраф_1,
		|	ТаблицаРешений.ПостатейныеПостоянныеГраф_1 		КАК РешениеПостатейныеПостоянныеГраф_1,
		|	ТаблицаРешений.ПостатейныеПеременныеГраф_1 		КАК РешениеПостатейныеПеременныеГраф_1,
		|	ТаблицаРешений.ПостояннаяРазница
		|		* ТаблицаРешений.ПостояннаяРазницаЗнак 		КАК РешениеПостояннаяРазница,
		|	ТаблицаРешений.ВременнаяРазница
		|		* ТаблицаРешений.ВременнаяРазницаЗнак 		КАК РешениеВременнаяРазница,
		|	ТаблицаРешений.СтоимостьЗабалансовая 			КАК РешениеСтоимостьЗабалансовая,
		
		|	ТаблицаРешений.СтоимостьГраф_2
		|		* ТаблицаРешений.СтоимостьЗнакГраф_2 		КАК РешениеСтоимостьГраф_2,
		|	ТаблицаРешений.ДопРасходыГраф_2 				КАК РешениеДопРасходыГраф_2,
		|	ТаблицаРешений.ТрудозатратыГраф_2 				КАК РешениеТрудозатратыГраф_2,
		|	ТаблицаРешений.ПостатейныеПостоянныеГраф_2 		КАК РешениеПостатейныеПостоянныеГраф_2,
		|	ТаблицаРешений.ПостатейныеПеременныеГраф_2 		КАК РешениеПостатейныеПеременныеГраф_2
		|ИЗ
		|	ВТУзлыКорректировки КАК УзлыКорректировки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаРешений КАК ТаблицаРешений
		|		ПО УзлыКорректировки.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзла
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник 		КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник 		КАК НомерУзлаПриемник,
		|	ПеремещенияСписания.ВесДугиГраф_1 			КАК ВесДугиГраф_1,
		|	ПеремещенияСписания.ВесДугиГраф_2 			КАК ВесДугиГраф_2,
		|	ПеремещенияСписания.ПередачаВЭксплуатацию	КАК ПередачаВЭксплуатацию,
		|	ПеремещенияСписания.ПринимаемыеВНУ			КАК ПринимаемыеВНУ,
		|	ПеремещенияСписания.КосвенныеЗатратыНУ		КАК КосвенныеЗатратыНУ
		|ИЗ
		|	ВТПеремещенияСписания КАК ПеремещенияСписания
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзлаПриемник,
		|	НомерУзлаИсточник
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		// Сохраним первый файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[0].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Узлы"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда  // ошибка записи файла
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
		// Сохраним второй файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[1].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Дуги"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
	ИначеЕсли ФорматВыгрузки = "csv" Тогда
		// ВтУзлыКорректировки - свободные члены
		// ВтПеремещенияСписания - коэффициенты; НомерУзлаИсточник - № уравнения, НомерУзлаПриемник - № элемента
		//
		// СЛУ из n неизвестных:
		// А(1,1)*Х1 + А(1,2)*Х2 + ... А(1,n)*Xn = B1
		// А(2,1)*Х1 + А(2,2)*Х2 + ... А(2,n)*Xn = B2
		// ...
		// А(n,1)*Х1 + А(n,2)*Х2 + ... А(n,n)*Xn = Bn
		//
		// Формат строки файла CSV:
		// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
		// Для каждого уравнения обязательно есть строка, при этом порядковый номер строки = номеру уравнения
		
		ФайлСЛУ = Новый ТекстовыйДокумент;
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предв", "Факт") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_СЛУ.csv";													   // какую временную таблицу выгружаем
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НомераУравнения.НомерУзла КАК НомерУравнения,
		|	ЕСТЬNULL(Коэффициенты.НомерУзлаПриемник, 0) КАК НомерНеизвестного,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Коэффициенты.ВесДугиГраф_1, 0) КАК ЧИСЛО(28,10)) КАК КоэффициентНеизвестного,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА НомераУравнения.ВесГраф_1 = 0
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.ПродукцияДавальца, ЛОЖЬ)
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.ПередачаВЭксплуатацию, ЛОЖЬ)
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.ПостатейныеПостоянныеГраф_1, ЛОЖЬ)
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.ПостатейныеПеременныеГраф_1, ЛОЖЬ)
		|				ТОГДА 0
		|			ИНАЧЕ НомераУравнения.СтоимостьГраф_1 / НомераУравнения.ВесГраф_1
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК СвободныйКоэффициент
		|ИЗ
		|	ВтУзлыКорректировки КАК НомераУравнения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК Коэффициенты
		|		ПО НомераУравнения.НомерУзла = Коэффициенты.НомерУзлаИсточник
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУравнения,
		|	НомерНеизвестного
		|ИТОГИ
		|	МИНИМУМ(СвободныйКоэффициент)
		|ПО
		|	НомерУравнения";
		
		Запрос.Текст = УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
		
		ВыборкаУравнений = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаУравнений.Следующий() Цикл
			
			СтрокаФайла = СокрЛП(Формат(ВыборкаУравнений.СвободныйКоэффициент, "ЧРД=.; ЧН=0; ЧГ=0"));
			
			ВыборкаНеизвестных = ВыборкаУравнений.Выбрать();
			
			Пока ВыборкаНеизвестных.Следующий() Цикл
				
				Если ВыборкаНеизвестных.НомерНеизвестного = NULL Тогда
					Прервать; // в этом уравнении нет ненулевых коэффициентов
				КонецЕсли;
				
				// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
				СтрокаФайла = СтрокаФайла
					+ ",("
					+ СокрЛП(Формат(ВыборкаНеизвестных.НомерНеизвестного, "ЧДЦ=; ЧН=0; ЧГ=0"))
					+ ","
					+ СокрЛП(Формат(ВыборкаНеизвестных.КоэффициентНеизвестного, "ЧРД=.; ЧН=0; ЧГ=0"))
					+ ")";
				
			КонецЦикла;
			
			ФайлСЛУ.ДобавитьСтроку(СтрокаФайла);
			
		КонецЦикла;
		
		Попытка
			ФайлСЛУ.Записать(ИмяКаталога + ШаблонИмениФайла);
		Исключение
			
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось записать файл ""%1""
					|%2'"),
				ИмяКаталога + ШаблонИмениФайла,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецПопытки;
		
	Иначе
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Неверный формат выгрузки СЛУ: %1'"),
			ФорматВыгрузки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область УниверсальныеПроцедурыРаботыСЗапросами

// Устанавливает общие параметры запроса из параметров расчета.
// Следует использовать для идентичности имен и значений параметров во всех запросах.
//
Процедура ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета, ИспользоватьОбщийМенеджерВТ = Истина) Экспорт
	
	// Общие параметры.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(
		Запрос,
		ПараметрыРасчета,
		ИспользоватьОбщийМенеджерВТ);
		
	СредняяЗаМесяц = (ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц);
	
	// Параметры, относящиеся только к расчету себестоимости.
	Запрос.УстановитьПараметр("ПредварительныйРасчет", 	  	   		  	ПараметрыРасчета.ПредварительныйРасчет);
	Запрос.УстановитьПараметр("УчитыватьКорректировкиСтоимости", 	  	ПараметрыРасчета.УчитыватьКорректировкиСтоимости);
	Запрос.УстановитьПараметр("СредняяЗаМесяц", 						СредняяЗаМесяц);
	
	Запрос.УстановитьПараметр("ЗначениеПогрешностиСебестоимостьРегл", 	ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьРегл);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиСебестоимостьУпр",  	ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРасходыРегл",  	  	ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыРегл);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРасходыУпр",  	  	ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиКоличество", 		  	ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиКоличество);
	
	Запрос.УстановитьПараметр("ЗащитаОтПереполненияПоля", 	   		  	Pow(10, ПараметрыРасчета.РешениеСЛУ.ЗащитаОтПереполненияПоля) - 1);
	
	// Отборы по хозяйственным операциям.
	Запрос.УстановитьПараметр("МассивОперацийРеализации",				МассивОперацийРеализации());
	Запрос.УстановитьПараметр("МассивОперацийВозвратыПрошлыхПериодов",  МассивОперацийВозвратыПрошлыхПериодов());
	Запрос.УстановитьПараметр("МассивОперацийПередачи",                 МассивОперацийПередачиТоваров());
	Запрос.УстановитьПараметр("МассивОперацийПоступление",              МассивОперацийВнешнееПоступление());
	Запрос.УстановитьПараметр("МассивОперацийПоступлениеВнешнее",       МассивОперацийДляОценкиОстаткаТоваровПоФИФО());
	
КонецПроцедуры

#Область ОтборыПоХозяйственнымОперациям

Функция МассивОперацийРеализации()
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.СторноРеализации);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем);
	
	Возврат МассивОпераций;
	
КонецФункции

Функция МассивОперацийПередачиТоваров()

	Массив = Новый Массив;
	
	Массив.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	Массив.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	
	Возврат Массив;
	
КонецФункции

Функция МассивОперацийВозвратыПрошлыхПериодов()

	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	
	Возврат МассивОпераций;
	
КонецФункции

Функция МассивОперацийВнешнееПоступление()

	// Формируется список всех хоз. операций, которые являются внешним поступлением (известна их стоимость).
	ХозОперации = Новый Массив;
	
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	
	// Таможенная декларация (старые и новые хоз. операции).
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией);
	
	// Возврат прошлого периода используется только для операций расчета по среднему,
	// т.к. оценивать остатки для ФИФО не корректно.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияПрошлогоПериода);
	
	// Операции по комиссионным и давальческим товарам.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	
	// Операции по товарам на ответственном хранении.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
	
	Возврат ХозОперации;

КонецФункции

Функция МассивОперацийДляОценкиОстаткаТоваровПоФИФО()

	ХозОперации = Новый Массив;
	
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика);
	
	// Таможенная декларация (старые и новые хоз. операции).
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией);
	
	// Операции по комиссионным и давальческим товарам.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	
	// Операции по товарам на ответственном хранении.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
	
	Возврат ХозОперации;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область УниверсальныеПроцедурыРаботыСДвижениями

// Добавляет новую строку в таблицу движений указанного регистра и заполняет служебные поля.
// Сделана экспортной для вызова из модуля универсальных механизмов расчетов.
//
Функция ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения,
			КопируемыеПоля = Неопределено, СлужебныеПоля = Неопределено) Экспорт
			
	Если ПараметрыРасчета.Движения.Свойство(ТаблицаПриемник) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ТаблицаПриемник];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ТаблицаПриемник];
	КонецЕсли;
	
	// Добавим запись универсальной процедурой, а потом дозаполним поля, относящиеся только к расчету себестоимости
	Запись = РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьЗаписьВТаблицуДвижений(
		ПараметрыРасчета,
		ОписаниеПриемника,
		ДанныеДвижения,
		КопируемыеПоля);
	
	// Заполним поле Регистратор из обязательного свойства ДокументДвижения источника ДанныеДвижения.
	Запись.Регистратор = ДанныеДвижения.ДокументДвижения;
	
	// Заполним пустой регистратор соответствующим документом расчета себестоимости
	Если ОписаниеПриемника.ЭтоОписаниеРегистра
	 И ПараметрыРасчета.Отладка.ИсправлятьПустойРегистратор И НЕ ЗначениеЗаполнено(Запись.Регистратор) Тогда
		
		Если ОписаниеПриемника.ЕстьОрганизация Тогда
			Запись.Регистратор = ПараметрыРасчета.ДокументыРасчетаПоОрганизациям.Получить(ДанныеДвижения.Организация);
		ИначеЕсли ОписаниеПриемника.ЕстьАналитикаПартнеров Тогда
			Запись.Регистратор = ПараметрыРасчета.ДокументыРасчетаПоОрганизациям.Получить(
				ПараметрыРасчета.ОрганизацияПоАналитикеПартнеров.Получить(ДанныеДвижения.АналитикаУчетаПоПартнерам));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.Регистратор) Тогда
			ТекстОшибки = НСтр("ru='Документ %1 установлен регистратором движения регистра %2 вместо %3,
				|который не может иметь движений по данному регистру.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				Запись.Регистратор,
				ТаблицаПриемник,
				ДанныеДвижения.ДокументДвижения);
			ЗаписьЖурналаРегистрации(
				РасчетСебестоимостиПрикладныеАлгоритмы.ИмяСобытияОшибкиДляЖурналаРегистрации(ПараметрыРасчета),
				УровеньЖурналаРегистрации.Предупреждение,
				,
				,
				ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	// Если регистратор не заполнен, то запомним информацию об ошибке
	Если ОписаниеПриемника.ЭтоОписаниеРегистра И НЕ ЗначениеЗаполнено(Запись.Регистратор) Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеДвижения.ДокументДвижения) Тогда
			// Ошибка в запросах - не заполнено обязательное поле ДокументДвижения.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не заполнено свойство ДокументДвижения для движения по регистру ""%1""'"),
				ТаблицаПриемник);
		Иначе
			// Ошибка в метаданных - документ не является регистратором для данного регистра.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ ""%1"" не может иметь движений по регистру ""%2""'"),
				СокрЛП(ДанныеДвижения.ДокументДвижения),
				ТаблицаПриемник);
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаФормированияДвиженийПоРегистрам,
			ТекстДляПротокола);
		
		Если ОписаниеПриемника.ЕстьОрганизация Тогда
			ОрганизацияСПроблемой = ДанныеДвижения.Организация;
		ИначеЕсли ОписаниеПриемника.ЕстьАналитикаПартнеров Тогда
			ОрганизацияСПроблемой = ПараметрыРасчета.ОрганизацияПоАналитикеПартнеров.Получить(ДанныеДвижения.АналитикаУчетаПоПартнерам);
		Иначе
			ОрганизацияСПроблемой = Неопределено;
		КонецЕсли;
			
		РасчетСебестоимостиПрикладныеАлгоритмы.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета,
			ОрганизацияСПроблемой,
			НСтр("ru='При формировании движений диагностированы ошибки'"),
			ТекстДляПротокола,
			ДанныеДвижения.ДокументДвижения);
		
		Для Каждого КлючИЗначение Из ПараметрыРасчета.ДокументыРасчетаПоОрганизациям Цикл
			// Заполним регистратор произвольным "первым" документом расчета себестоимости - чтобы движения можно было записать.
			// Расчет все равно в итоге будет завершен с ошибкой, но т.о. можно получить информацию о всех ошибочных регистраторах.
			Запись.Регистратор = КлючИЗначение.Ключ;
			Прервать;
		КонецЦикла;

	КонецЕсли;
	
	Возврат Запись;
	
КонецФункции

#КонецОбласти

#Область УниверсальныеПроцедурыОписанияДанныхМеханизма

// Возвращает перечень объектов метаданных, на основании данных которых выполняется расчет себестоимости.
// В перечень не включаются объекты, которые являются одновременно и исходящими данными механизмов расчета партий и себестоимости.
//
// Параметры:
//	ВходящиеДанные - Соответствие - уже инициализированное хранилище для описания входящих данных
//	ТолькоТребующиеПерерасчета - Булево - если установлен, то будет возвращен перечень только тех данных,
//		изменение которых влечет за собой необходимость перерасчета партий и себестоимости
//		При изменении этих данных должна создаваться запись в регистре сведений ЗаданияКРасчетуСебестоимости.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ВходящиеДанныеМеханизма(ВходящиеДанные = Неопределено, ТолькоТребующиеПерерасчета = Ложь) Экспорт
	
	Если ВходящиеДанные = Неопределено Тогда
		ВходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	Если ТолькоТребующиеПерерасчета Тогда
		Значение = Истина; // чтобы можно было проверить вхождение объекта метаданных в это соответствие
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	
	Если НЕ ТолькоТребующиеПерерасчета Тогда 
		
		ВходящиеДанные.Вставить(Метаданные.Документы.ВнутреннееПотреблениеТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровОтКлиента, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаРеализации, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетОРозничныхПродажах, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПеремещениеТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПриобретениеТоваровУслуг, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.РасчетСебестоимостиТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.РеализацияТоваровУслуг, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам, Значение);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НастройкаРаспределенияПоНаправлениямДеятельности, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.Справочники.КлючиАналитикиУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Назначения, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.СпособыРаспределенияПоНаправлениямДеятельности, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов, Значение);
		
	КонецЕсли;

	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизаций, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций, Значение);
	
	РасчетСебестоимостиЛокализация.ВходящиеДанныеМеханизма(ВходящиеДанные, ТолькоТребующиеПерерасчета);
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, обслуживаемых механизмом расчета себестоимости.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ИсходящиеДанныеМеханизма(ИсходящиеДанные = Неопределено) Экспорт
	
	// Перечень метаданных регистров, по которым формируются движения при расчете себестоимости.
	Если ИсходящиеДанные = Неопределено Тогда
		ИсходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров, 							Истина);
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж, 			Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.Закупки, 								Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы, 							Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, 							Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ФинансовыеРезультаты, 					Истина);
	
	Возврат ИсходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, рассчитываемых механизмом партионного учета версии 2.2, и используемых при расчете себестоимости.
//
Функция ИспользуемыеКэшиРегистровПартионногоУчета() Экспорт
	
	// Здесь перечислены регистры, которые (по И)
	// - рассчитываются механизмом партионного учета версии 2.2
	// - не рассчитываются механизмом расчета себестоимости
	// - являются входящими данными для механизма расчета себестоимости (используются кэши данных регистров)
	//
	// В случае, если выполняется отдельный запуск расчета себестоимости (не из партионного учета версии 2.2),
	// эти регистры не будут инициализированы - к их кэшам обращаться нельзя.
	//
	// Для этого делается следующее:
	// - перед началом расчета себестоимости "принудительно" инициализируются эти регистры (для того, чтобы сформировались их расчетные кэши)
	// - перед записью движений эти регистры удаляются из параметров расчета (записывать их не надо - движения по ним не формировались)
	
	ВходящиеДанные = Новый Соответствие;
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, 			  	  Истина);
	
	РасчетСебестоимостиЛокализация.ИспользуемыеКэшиРегистровПартионногоУчета(ВходящиеДанные);
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает название данного механизма и его номер версии.
//
Функция ТекущаяВерсияМеханизма() Экспорт
	Возврат НСтр("ru='Расчет себестоимости, версия 2.2'");
КонецФункции

#КонецОбласти

#КонецОбласти
