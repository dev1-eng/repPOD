
#Область ЗагрузкаОпераций

Процедура НачатьЗагрузкуОперацийПоЯндексКассе(Знач ПараметрыЗагрузки, Знач ОписаниеОповещения = Неопределено, ВыводитьОкноОжидания = Истина) Экспорт
	
	ДлительнаяОперация = ИнтеграцияСЯндексКассойУТВызовСервера.НачатьЗагрузкуОперацийПоЯндексКассе(ПараметрыЗагрузки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Загрузка операций по Яндекс.Кассе'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ЭлементФормыНастроекПриИзменении(Контекст, Элемент) Экспорт
	
	Форма = Контекст.Форма;
	Префикс = Контекст.Префикс;
	ДополнительныеПараметрыФормы = Форма[Префикс + "ДополнительныеПараметрыФормы"];
	
	Если Элемент.Имя = Префикс + "СтатьяРасходов" Тогда
		
		АналитикаРасходовЗаказРеализация = ДополнительныеПараметрыФормы.АналитикаРасходовЗаказРеализация;
		АналитикаРасходовОбязательна     = ДополнительныеПараметрыФормы.АналитикаРасходовОбязательна;
		КэшированныеЗначения             = ДополнительныеПараметрыФормы.КэшированныеЗначения;
		
		СтруктураДействий = Новый Структура(
			"ЗаполнитьПризнакАналитикаРасходовОбязательна, ЗаполнитьПризнакАналитикаРасходовЗаказРеализация");
		
		ДанныеОбъекта = Новый Структура;
		ДанныеОбъекта.Вставить("СтатьяРасходов", Форма[Элемент.Имя]);
		ДанныеОбъекта.Вставить("АналитикаРасходовОбязательна", АналитикаРасходовОбязательна);
		ДанныеОбъекта.Вставить("АналитикаРасходовЗаказРеализация", АналитикаРасходовЗаказРеализация);
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ДанныеОбъекта,
			СтруктураДействий, КэшированныеЗначения);
		
		ДополнительныеПараметрыФормы.АналитикаРасходовОбязательна = ДанныеОбъекта.АналитикаРасходовОбязательна;
		ДополнительныеПараметрыФормы.АналитикаРасходовЗаказРеализация = ДанныеОбъекта.АналитикаРасходовЗаказРеализация;
		ДополнительныеПараметрыФормы.КэшированныеЗначения = КэшированныеЗначения;
		
		Форма[Префикс + "АналитикаРасходов"] = ИнтеграцияСЯндексКассойУТВызовСервера.АналитикаРасходовПоУмолчанию(
			Контекст.Организация, Форма[Префикс + "Подразделение"], 
			Форма[Префикс + "СтатьяРасходов"], Форма[Префикс + "АналитикаРасходов"]);
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
			Префикс + "АналитикаРасходов",
			"ТолькоПросмотр",
			Не ЗначениеЗаполнено(Форма[Префикс + "СтатьяРасходов"]));
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭлементФормыНастроекНачалоВыбора(Контекст, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Форма = Контекст.Форма;
	Префикс = Контекст.Префикс;
	ДополнительныеПараметрыФормы = Форма[Префикс + "ДополнительныеПараметрыФормы"];
	
	Если Элемент.Имя = Префикс + "СтатьяДвиженияДенежныхСредствОплаты"
		Или Элемент.Имя = Префикс + "СтатьяДвиженияДенежныхСредствВозвраты" Тогда 
		
		Если Элемент.Имя = Префикс + "СтатьяДвиженияДенежныхСредствОплаты" Тогда 
			ХозяйственнаяОперация = 
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента");
		ИначеЕсли Элемент.Имя = Префикс + "СтатьяДвиженияДенежныхСредствВозвраты" Тогда 
			ХозяйственнаяОперация = 
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту");
		Иначе
			Возврат;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		Отбор = Новый Структура();
		Отбор.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Отбор",         Отбор);
		ПараметрыФормы.Вставить("ТекущаяСтрока", Форма[Элемент.Имя]);
		
		ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора", 
		ПараметрыФормы, Элемент, Форма.УникальныйИдентификатор);
		
	ИначеЕсли Элемент.Имя = Префикс + "СтатьяРасходов" Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		Отбор = Новый Структура();
		Отбор.Вставить("ВариантРаспределенияРасходов",
		ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности"));
		Отбор.Вставить("ХозяйственнаяОперация",
		ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОтчетБанкаПоОперациямЭквайринга"));
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Отбор", Отбор);
		
		ОткрытьФорму("ПланВидовХарактеристик.СтатьиРасходов.ФормаВыбора",
		ПараметрыФормы, Элемент, Форма.УникальныйИдентификатор);
		
	ИначеЕсли Элемент.Имя = Префикс + "АналитикаРасходов" Тогда 
		
		Если Не ДополнительныеПараметрыФормы.Свойство("АналитикаРасходовЗаказРеализация") Тогда 
			ДополнительныеПараметрыФормы.Вставить("АналитикаРасходовЗаказРеализация", Ложь);
		КонецЕсли;
		АналитикаРасходовЗаказРеализация = ДополнительныеПараметрыФормы.АналитикаРасходовЗаказРеализация;
		
		Если АналитикаРасходовЗаказРеализация Тогда
			ПродажиКлиент.НачалоВыбораАналитикиРасходов(Элемент, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭлементФормыНастроекОбработкаВыбора(Контекст, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Форма = Контекст.Форма;
	Префикс = Контекст.Префикс;
	
	Если Элемент.Имя = Префикс + "АналитикаРасходов" Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			СтандартнаяОбработка = Ложь;
			
			Форма.АналитикаРасходов = ВыбранноеЗначение.АналитикаРасходов;
			Форма.Модифицированность = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭлементФормыНастроекСоздание(Контекст, Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Основание", ИнтеграцияСЯндексКассойУТВызовСервера.ДанныеЭквайераПоУмолчанию());
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, Элемент, Контекст.Форма.УникальныйИдентификатор); 
	
КонецПроцедуры

#КонецОбласти

