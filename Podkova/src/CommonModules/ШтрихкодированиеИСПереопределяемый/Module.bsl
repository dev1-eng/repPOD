#Область ПрограммныйИнтерфейс

//Выделяет из переданного массива штрихкодов упаковок элементы, в составе которых (на любом уровне вложенности, 
//   в т.ч. частично) находится продукция требуемого вида.
//
//Параметры:
//   ШтрихкодыДляПроверки - Массив - проверяемые элементы типа СправочникСсылка.ШтрихкодыУпаковокТоваров.
//   ВидыПродукции - Массив, ПеречислениеСсылка.ВидыПродукцииИС, Неопределено - Вид отбираемой продукции.
Процедура ВыделитьШтрихкодыСодержащиеВидыПродукции(ШтрихкодыУпаковок, ВидыПродукцииИС) Экспорт
	
	//++ НЕ ГОСИС
	ШтрихкодыУпаковок = ИнтеграцияИСУТ.ШтрихкодыСодержащиеВидыПродукции(ШтрихкодыУпаковок, ВидыПродукцииИС);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет соответствие штрихкодов данными по номенклатуре, характеристике, маркируемой продукции.
// 
// Параметры:
//  Штрихкоды            - Соответствие - Список штрихкодов.
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
Процедура ЗаполнитьИнформациюПоШтрихкодам(Штрихкоды, КэшированныеЗначения) Экспорт
	
	//++ НЕ ГОСИС
	СписокШтрихкодов = Новый Массив;
	Для Каждого КлючЗначение Из Штрихкоды Цикл
		СписокШтрихкодов.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;
	
	РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьДанныеПоШтрихкодам(КэшированныеЗначения, СписокШтрихкодов);
	
	Для Каждого КлючЗначение Из КэшированныеЗначения.Штрихкоды Цикл
		Если Штрихкоды[КлючЗначение.Ключ] <> Неопределено Тогда
			Штрихкоды[КлючЗначение.Ключ].Номенклатура         = КлючЗначение.Значение.Номенклатура;
			Штрихкоды[КлючЗначение.Ключ].Характеристика       = КлючЗначение.Значение.Характеристика;
			Штрихкоды[КлючЗначение.Ключ].МаркируемаяПродукция = КлючЗначение.Значение.МаркируемаяПродукция;
		КонецЕсли;
	КонецЦикла;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//В процедуре нужно реализовать подготовку данных для дальнейшей обработки штрихкодов.
//
//Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма документа, в которой происходит обработка,
//   ДанныеШтрихкодов - Массив - полученные штрихкоды,
//   ПараметрыЗаполнения - см. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти.
//   СтруктураДействий - Структура - подготовленные данные.
//
Процедура ПодготовитьДанныеДляОбработкиШтрихкодов(Форма, ДанныеШтрихкодов, ПараметрыЗаполнения, СтруктураДействий) Экспорт
	
	//++ НЕ ГОСИС
	
	СтруктураДействийСДобавленнымиСтроками = Новый Структура;
	СтруктураДействийСИзмененнымиСтроками  = Новый Структура;
	
	Если ПараметрыЗаполнения.ЗаполнитьКодТНВЭД Тогда
		СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьКодТНВЭД");
	КонецЕсли;
		
	Если ПараметрыЗаполнения.ПересчитатьКоличествоЕдиниц Тогда
		
		СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьКоличествоЕдиниц");
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПересчитатьСумму Тогда
		
		СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСумму");
		СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСумму");
		
	КонецЕсли;
	
	СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьПризнакЕдиницаИзмерения",
		Новый Структура("Номенклатура", "ЕдиницаИзмерения"));
	
	Если ШтрихкодированиеИС.ПрисутствуетАлкогольнаяПродукция(ПараметрыЗаполнения.ВидыПродукцииИС) Тогда
		
		ПараметрыЗаполненияНоменклатурыЕГАИС = Новый Структура;
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ЗаполнитьФлагАлкогольнаяПродукция", Ложь);
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ИмяКолонки", "АлкогольнаяПродукция");
		СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИС);
		
		Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
			СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьИндексАкцизнойМарки");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ШтрихкодированиеИС.ПрисутствуетПродукцияИСМП(ПараметрыЗаполнения.ВидыПродукцииИС)
		Или ШтрихкодированиеИС.ПрисутствуетТабачнаяПродукция(ПараметрыЗаполнения.ВидыПродукцииИС) Тогда
		
		Если ПараметрыЗаполнения.ЗаполнитьGTIN Тогда
			СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьGTINВСтроке",
			
			Новый Структура("ДобавлятьЛидирующиеНули", Истина));
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураДействий = ШтрихкодированиеНоменклатурыКлиентСервер.ПараметрыОбработкиШтрихкодов();
	
	СтруктураДействий.Штрихкоды                              = ДанныеШтрихкодов;
	СтруктураДействий.СтруктураДействийСДобавленнымиСтроками = СтруктураДействийСДобавленнымиСтроками;
	СтруктураДействий.СтруктураДействийСИзмененнымиСтроками  = СтруктураДействийСИзмененнымиСтроками;
	СтруктураДействий.ТолькоТовары                           = Истина;
	СтруктураДействий.ШтрихкодыВТЧ                           = ПараметрыЗаполнения.ШтрихкодыВТЧ;
	СтруктураДействий.МаркируемаяПродукцияВТЧ                = ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре нужно реализовать обработку штрихкодов.
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма для которой будут обработаны введенные штрихкоды.
//   ДанныеДляОбработки - Структура - структура параметров обработки штрихкодов.
//                                    и заполняется данными из формы.
//   КэшированныеЗначения - Структура - кэш формы.
Процедура ОбработатьШтрихкоды(Форма, ДанныеДляОбработки, КэшированныеЗначения) Экспорт
	
	//++ НЕ ГОСИС
	ШтрихкодированиеНоменклатурыСервер.ОбработатьШтрихкоды(Форма, Форма.Объект, ДанныеДляОбработки, КэшированныеЗначения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре требуется реализовать алгоритм обработки полученных штрихкодов из ТСД.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма документа, в которой происходит обработка,
//  ДанныеДляОбработки - Структура - подготовленные ранее данные для обработки,
//  КэшированныеЗначения - Структура - используется механизмом обработки изменения реквизитов ТЧ.
Процедура ОбработатьДанныеИзТСД(Форма, ДанныеДляОбработки, КэшированныеЗначения) Экспорт
	
	//++ НЕ ГОСИС
	ШтрихкодированиеНоменклатурыСервер.ОбработатьШтрихкоды(
		Форма, Форма.Объект,
		ДанныеДляОбработки, КэшированныеЗначения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо реализовать заполнение таблицы ДанныеПоEAN на основании заполненной колонки ШтрихкодEAN.
//   Ожидаемое поведение:
//    Если для строки информации по штрихкоду выставляется флаг "ТребуетсяОбработкаШтрихкода", строка информации должна
//    быть уникальной для этого штрихкода.
//
// Параметры:
//  ДанныеПоШтрихкодамEAN - ТаблицаЗначений - передается с обязательной колонкой ШтрихкодEAN, возвращает:
//   * Номенклатура - ОпределяемыйТип.Номенклатура
//   * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - Характеристика номенклатуры
//   * Серия - ОпределяемыйТип.СерияНоменклатуры - Серия номенклатуры
//   * Упаковка - ОпределяемыйТип.Упаковка - Упаковка номенклатуры
//   * ПредставлениеНоменклатуры - Строка - Представление номенклатуры
//   * ШтрихкодEAN - Строка - Штрихкод
//   * ВидПродукцииИС - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции
//   * Маркируемая - Булево - Признак маркируемой продукции
//   * Коэффициент - Число - коэффициент вложенности стандартной упаковки, единиц
//   * ТребуетсяОбработкаШтрихкода - Булево - Истина если штрихкод не следует обрабатывать библиотекой
//   * ДанныеШтрихкода - Структура,Неопределено - Результат получения данных по штрихкоду (для обработки вне библиотеки)
Процедура ПриЗаполненииИнформацииПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN) Экспорт
	
	//++ НЕ ГОСИС
	ИнтеграцияИСУТ.ЗаполнитьДанныеПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо реализовать заполнение таблицы "ОстаткиМаркируемойПродукции" (по данным информационной базы).
//   На основании данных таблицы будет происходить контроль остатков, если в параметрах сканирования свойство
//   "ОперацияКонтроляАкцизныхМарок" будет заполнено значением "Продажа" или "Возврат", а прочий контроль выключен
//     (сейчас это продажа продукции ИС МП с выключенным контролем статусов).
// Первая операция контролю не подлежит (ранее не участвовавший в товародвижении КМ можно и продать, и вернуть).
// Отсутствие переопределения соответствует отсутствию контроля.
// 
// Параметры:
//  ОстаткиМаркируемойПродукции - (См. ШтрихкодированиеИС.ИнициализацияТаблицыПроверкиОстатков).
//  ПараметрыСканирования - (См. ШтрихкодированиеИС.ПараметрыСканирования).
Процедура ПриОпределенииОстатковМаркируемойПродукции(ОстаткиМаркируемойПродукции, ПараметрыСканирования) Экспорт
	
	//++ НЕ ГОСИС
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаркируемаяПродукция.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
	|	МаркируемаяПродукция.Доступно         КАК Доступно
	|ПОМЕСТИТЬ ВТМаркируемаяПродукция
	|ИЗ
	|	&МаркируемаяПродукция КАК МаркируемаяПродукция
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодУпаковки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМАкцизныеМарки.АкцизнаяМарка КАК ШтрихкодУпаковки,
	|	-1                                КАК Доступно
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.АкцизныеМарки КАК ЧекККМАкцизныеМарки
	|		ПО ВТМаркируемаяПродукция.ШтрихкодУпаковки = ЧекККМАкцизныеМарки.АкцизнаяМарка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО ОтчетОРозничныхПродажах.КассоваяСмена = ЧекККМАкцизныеМарки.Ссылка.КассоваяСмена
	|ГДЕ
	|	ЧекККМАкцизныеМарки.Ссылка.Организация = &Организация
	|	И ЧекККМАкцизныеМарки.Ссылка.Проведен
	|	И ЧекККМАкцизныеМарки.АкцизнаяМарка <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|   И ОтчетОРозничныхПродажах.Ссылка ЕСТЬ NULL
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахАкцизныеМарки.АкцизнаяМарка,
	|	-1
	|ИЗ
	|	ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.АкцизныеМарки КАК ОтчетОРозничныхПродажахАкцизныеМарки
	|		ПО ВТМаркируемаяПродукция.ШтрихкодУпаковки = ОтчетОРозничныхПродажахАкцизныеМарки.АкцизнаяМарка
	|ГДЕ
	|	ОтчетОРозничныхПродажахАкцизныеМарки.Ссылка.Организация = &Организация
	|	И ОтчетОРозничныхПродажахАкцизныеМарки.Ссылка.Проведен
	|	И ОтчетОРозничныхПродажахАкцизныеМарки.АкцизнаяМарка <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиентаШтрихкодыУпаковок.ШтрихкодУпаковки,
	|	1
	|ИЗ
	|	ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.ШтрихкодыУпаковок КАК
	|			ВозвратТоваровОтКлиентаШтрихкодыУпаковок
	|		ПО ВТМаркируемаяПродукция.ШтрихкодУпаковки = ВозвратТоваровОтКлиентаШтрихкодыУпаковок.ШтрихкодУпаковки
	|ГДЕ
	|	ВозвратТоваровОтКлиентаШтрихкодыУпаковок.Ссылка.Организация = &Организация
	|	И ВозвратТоваровОтКлиентаШтрихкодыУпаковок.Ссылка.Проведен
	|	И ВозвратТоваровОтКлиентаШтрихкодыУпаковок.ШтрихкодУпаковки <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЧекККМВозвратАкцизныеМарки.АкцизнаяМарка,
	|	1
	|ИЗ
	|	ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМВозврат.АкцизныеМарки КАК
	|			ЧекККМВозвратАкцизныеМарки
	|		ПО ВТМаркируемаяПродукция.ШтрихкодУпаковки = ЧекККМВозвратАкцизныеМарки.АкцизнаяМарка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО ОтчетОРозничныхПродажах.КассоваяСмена = ЧекККМВозвратАкцизныеМарки.Ссылка.КассоваяСмена
	|ГДЕ
	|	ЧекККМВозвратАкцизныеМарки.Ссылка.Организация = &Организация
	|	И ЧекККМВозвратАкцизныеМарки.Ссылка.Проведен
	|	И ЧекККМВозвратАкцизныеМарки.АкцизнаяМарка <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|   И ОтчетОРозничныхПродажах.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТМаркируемаяПродукция.ШтрихкодУпаковки,
	|	ВТМаркируемаяПродукция.Доступно
	|ИЗ
	|	ВТМаркируемаяПродукция КАК ВТМаркируемаяПродукция
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
	|	СУММА(ДанныеДокументов.Доступно)  КАК Доступно
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.ШтрихкодУпаковки";
	
	Запрос.УстановитьПараметр("Организация",          ПараметрыСканирования.Организация);
	Запрос.УстановитьПараметр("МаркируемаяПродукция", ОстаткиМаркируемойПродукции);
	
	ОстаткиМаркируемойПродукции = Запрос.Выполнить().Выгрузить();
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо реализовать заполнение колонки таблицы значений штрихкодами, соответствующми номенклатуре и характеристике.
//
// Параметры:
//  ДанныеПоШтрихкодамEAN - ТаблицаЗначений - содержит колонки:
//   * Номенклатура   - ОпределяемыйТип.Номенклатура               - входящий.
//   * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - входящий.
//   * Штрихкод       - Строка                                     - исходящий.
//  ИмяКолонкиЗаполнения - Строка - Имя колонки таблицы значений, которую требуется заполнить значением штрихкода.
Процедура ЗаполнитьШтрихкоды(ДанныеПоШтрихкодам, ИмяКолонкиЗаполнения = "Штрихкод") Экспорт
	
	//++ НЕ ГОСИС
	ИнтеграцияИСУТ.ЗаполнитьДанныеПоШтрихкодам(ДанныеПоШтрихкодам, ИмяКолонкиЗаполнения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо реализовать проверку необходимости выбора серии для номенклатуры.
// 
// Параметры:
//  ДанныеДляРасчетаСерии  - Структура, СтрокаТаблицыЗначений - Данные для расчета серий.
//  ПараметрыУказанияСерий - Структура                        - Параметры указания серий.
//  ТребуетсяВыбор         - Булево                           - Исходящий, признак необходимости выбора серии.
//  КэшированныеЗначения   - Произвольный                     - Кэшированные значения
//
Процедура ПриОпределенииНеобходимостиВыбораСерии(ДанныеДляРасчетаСерии, ПараметрыУказанияСерий, ТребуетсяВыбор, КэшированныеЗначения = Неопределено) Экспорт
	
	//++ НЕ ГОСИС
	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = Новый Структура;
	КонецЕсли;
	Если Не КэшированныеЗначения.Свойство("ПризнакУказанияСерий") Тогда
		КэшированныеЗначения.Вставить("ПризнакУказанияСерий", Новый Соответствие);
	КонецЕсли;
	
	КэшПоиск = КэшированныеЗначения.ПризнакУказанияСерий.Получить(ДанныеДляРасчетаСерии.Номенклатура);
	Если КэшПоиск <> Неопределено Тогда
		КэшПоиск = КэшПоиск.Получить(ДанныеДляРасчетаСерии.Характеристика);
	Иначе
		КэшированныеЗначения.ПризнакУказанияСерий.Вставить(ДанныеДляРасчетаСерии.Номенклатура, Новый Соответствие);
	КонецЕсли;
	Если КэшПоиск <> Неопределено Тогда
		ТребуетсяВыбор = КэшПоиск;
		Возврат;
	КонецЕсли;
	
	ПараметрыУказанияСерийКопия = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыУказанияСерий, Ложь);
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ПодобраннаяМаркируемаяПродукция" Тогда
		ПараметрыУказанияСерийКопия.ИмяТЧТовары = "Товары";
		ПараметрыУказанияСерийКопия.ИмяТЧСерии = "Товары";
		ПараметрыУказанияСерийКопия.ИменаПолейДополнительные.Удалить(
			ПараметрыУказанияСерийКопия.ИменаПолейДополнительные.Найти("КоличествоПодобрано"));
	КонецЕсли;
	ТекущаяСтрока = Новый Структура;
	
	ТекущаяСтрока.Вставить("Номенклатура",    ДанныеДляРасчетаСерии.Номенклатура);
	ТекущаяСтрока.Вставить("Характеристика",  ДанныеДляРасчетаСерии.Характеристика);
	ТекущаяСтрока.Вставить("Склад",           ДанныеДляРасчетаСерии.Склад);
	ТекущаяСтрока.Вставить("ТипНоменклатуры");
	ТекущаяСтрока.Вставить("НомерСтроки",             1);
	ТекущаяСтрока.Вставить("Количество",              1);
	ТекущаяСтрока.Вставить("КоличествоПодобрано",     1);
	ТекущаяСтрока.Вставить("СтатусУказанияСерий",     0);
	ТекущаяСтрока.Вставить("ХарактеристикиИспользуются");
	ТекущаяСтрока.Вставить("Серия");
	ТекущаяСтрока.Вставить("Назначение");
	
	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу",
		ТекущаяСтрока.Характеристика);
		
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",
		Новый Структура("Номенклатура", "ТипНоменклатуры"));

	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",
		Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерийКопия, ДанныеДляРасчетаСерии.Склад));
	
	Кэш = Неопределено;
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Кэш);
	
	ТребуетсяВыбор = Не НоменклатураКлиентСервер.ВЭтомСтатусеСерииНеУказываются(ТекущаяСтрока.СтатусУказанияСерий, ПараметрыУказанияСерийКопия);
	
	КэшированныеЗначения.ПризнакУказанияСерий.Получить(ДанныеДляРасчетаСерии.Номенклатура).Вставить(ДанныеДляРасчетаСерии.Характеристика, ТребуетсяВыбор);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре нужно реализовать заполнение массива ШтрихкодыУпаковок из данных документа.
// 
// Параметры:
//  Документ - ДокументСсылка - проверяемый документ.
//  ШтрихкодыУпаковок - Массив - Список штрихкодов.
Процедура ЗаполнитьШтрихкодыУпаковокДокумента(Документ, ШтрихкодыУпаковок) Экспорт
	
	//++ НЕ ГОСИС
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки") Тогда
		ШтрихкодыУпаковок = Документ.ШтрихкодыУпаковокФактЭДО.ВыгрузитьКолонку("ЗначениеШтрихкода");
	Иначе	
		ШтрихкодыУпаковок = Документ.ШтрихкодыУпаковок.ВыгрузитьКолонку("ЗначениеШтрихкода");
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре нужно реализовать заполнение таблицы данных данными документа основания.
// 
// Параметры:
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования и ШтрихкодированиеИС.ПараметрыСканирования).
//  ТаблицаДанных - ТаблицаЗначений - Данные из документа основания.
Процедура СформироватьДанныеДокументаОснования(ПараметрыСканирования, ТаблицаДанных) Экспорт
	
	//++ НЕ ГОСИС
	ИнтеграцияИСУТ.СформироватьДанныеДокументаОснования(ПараметрыСканирования, ТаблицаДанных);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо реализовать обработку данных штрихкода для общей формы. результат обработки штрихкода следует
// вернуть в параметре РезультатОбработки.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Общая форма.
//  ДанныеШтрихкода - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьДанныеШтрихкода).
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования и ШтрихкодированиеИС.ПараметрыСканирования).
//  ВложенныеШтрихкоды - (См. ШтрихкодированиеИС.ИнициализироватьДанныеШтрихкода).
//  РезультатОбработки - (См. ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода).
Процедура ОбработатьДанныеШтрихкодаДляОбщейФормы(Форма, ДанныеШтрихкода, ПараметрыСканирования, ВложенныеШтрихкоды, РезультатОбработки) Экспорт
	
	//++ НЕ ГОСИС
	РезультатОбработки = ИнтеграцияИСУТ.ОбработатьДанныеШтрихкодаДляОбщейФормы(Форма, ДанныеШтрихкода, ПараметрыСканирования, ВложенныеШтрихкоды);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В этой процедуре при необходимости следует реализовать дополнительные проверки на ошибки данных по штрихкодам.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, для которой выполняется обработка штрихкодов.
//  ДанныеПоШтрихкодам - (См. ШтрихкодированиеИС.ИнициализацияДанныхПоШтрихкодам). 
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования и ШтрихкодированиеИС.ПараметрыСканирования).
//  ЕстьОшибки - Булево - Истина, если выявлена ошибка.
Процедура ПриПроверкеДанныхПоШтрихкодам(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В данной процедуре требуется переопределить текст запроса, определяющий свойства маркируемой продукции.
// Номенклатура для запроса лежит во временной таблице "ДанныеШтрихкодовУпаковок". (ДанныеШтрихкодовУпаковок.Номенклатура).
// "ВидПродукции". Поле "Номенклатура" желательно индексировать.
//   Колонки временной таблицы "ДанныеШтрихкодовУпаковок":
//    * Номенклатура   - ОпределяемыйТип.Номенклатура
//    * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры
//    * Серия          - ОпределяемыйТип.СерияНоменклатуры
//   Ожидаемые действия:
//   * Создание временной таблицы "СвойстваМаркируемойПродукции" с колонками:
//     ** Номенклатура         - ОпределяемыйТип.Номенклатура
//     ** МаркируемаяПродукция - Булево
//     ** ВидПродукции         - ПеречислениеСсылка.ВидыПродукцииИС.
// Параметры:
//  ТекстЗапросаСвойстваМаркируемойПродукции - Строка - Переопределяемый текст запроса.
Процедура ПриОпределенииТекстаЗапросаСвойствМаркируемойПродукции(ТекстЗапросаСвойстваМаркируемойПродукции) Экспорт
	
	//++ НЕ ГОСИС
	ТекстЗапросаСвойстваМаркируемойПродукции = "
	|ВЫБРАТЬ
	|	ДанныеШтрихкодовУпаковок.Номенклатура   КАК Номенклатура,
	|	ДанныеШтрихкодовУпаковок.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЕСТЬNULL(ДанныеШтрихкодовУпаковок.Номенклатура.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ))
	|		ИЛИ ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета В (
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Шины),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Фотоаппараты),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Велосипеды),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КреслаКоляски),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак),
	|				ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.УпакованнаяВода)
	|	) КАК МаркируемаяПродукция,
	|	ВЫБОР
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.АлкогольнаяПродукция
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Алкогольная)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Табак)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувь)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ЛегкаяПромышленность)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Шины)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Шины)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Фотоаппараты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Фотоаппараты)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Духи)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КреслаКоляски)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.КреслаКоляски)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Велосипеды)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Велосипеды)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.АльтернативныйТабак)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.УпакованнаяВода)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.УпакованнаяВода)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидПродукции
	|ПОМЕСТИТЬ СвойстваМаркируемойПродукции
	|ИЗ
	|	ДанныеШтрихкодовУпаковок КАК ДанныеШтрихкодовУпаковок
	|СГРУППИРОВАТЬ ПО
	|	ДанныеШтрихкодовУпаковок.Номенклатура,
	|	ДанныеШтрихкодовУпаковок.Характеристика,
	|	ВЫБОР
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.АлкогольнаяПродукция
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Алкогольная)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Табак)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувь)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ЛегкаяПромышленность)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Шины)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Шины)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Фотоаппараты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Фотоаппараты)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Духи)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КреслаКоляски)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.КреслаКоляски)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Велосипеды)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Велосипеды)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.АльтернативныйТабак)
	|		КОГДА ДанныеШтрихкодовУпаковок.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.УпакованнаяВода)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.УпакованнаяВода)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В данной процедуре требуется переопределить сочетание клавиш для команды "Добавить без маркировки" в форме сканирования.
// 
// Параметры:
//  СочетаниеКлавиш - СочетаниеКлавиш - По умолчанию "Ctr + Z".
Процедура ПриОпределенииСочетанияКлавишДобавитьБезМаркировкиВФормеСканирования(СочетаниеКлавиш) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В случае учета серий в данной процедуре необходимо реализовать заполнение таблицы значений "ДанныеТаблицыТовары", 
//   содержащей (как минимум, без учета необходимости учета специфики в прикладных документах) колонки: 
//     "Номенклатура", "Характеристика", "Серия", "Количество".
// Если заданы параметры сканирования, таблицу необходимо положить во временное хранилище, адрес хранилища
//     - в ПараметрыСканирования.ДанныеТаблицыТовары. Иначе просто заполнить ДанныеТаблицыТовары по шаблону.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, для которой происходит обработка штрихкодов.
//  ДанныеТаблицыТовары - См. ШтрихкодированиеИС.ИнициализицияТаблицыДанныхДокумента.
//  ПараметрыСканирования - См. ШтрихкодированиеИСКлиент.ПараметрыСканирования.
//  СтандартнаяОбработка - Булево, Ложь - если требуется заполнение таблицы в данной процедуре, Истина - заполнение произойдет
//      по стандартному алгоритму.
Процедура ПриФормированииДанныхТабличнойЧастиТовары(Форма, ДанныеТаблицыТовары, ПараметрыСканирования, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В данной процедуре необходимо определить модуль для обработки данных штрихкода. Если модуль не будет определен оббработка
// будет выполнена в модуле менеджера. Процедура, в которой будует выполнена обработка должна называться "ОбработатьДанныеШтрихкода"
// с параметрами: "Форма", "ДанныеШтрихкода", "ПараметрыСканирования", "ВложенныеШтрихкоды".
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма объекта.
// 	МодульДляОбработки - Произвольный - Модуль, в котором будет выполнена обработка.
// 	СтандартнаяОбработка - Булево - Если требуется переопределеить модуль для обработки - требуется установить флаг в Ложь.
Процедура ОпределитьМодульДляОбработкиДанныхШтрихкода(Форма, МодульДляОбработки, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры


#КонецОбласти
