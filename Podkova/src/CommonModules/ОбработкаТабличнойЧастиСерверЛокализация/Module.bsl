#Область ПрограммныйИнтерфейс

// Заполняет служебные реквизиты в табличной части формы зависящие от локализации
//
// Параметры:
//   Форма               - ФормаКлиентскогоПриложения - заполняемая форма
//   ПараметрыЗаполнения - Произвольный     - сценарий и параметры заполнения
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ПараметрыЗаполнения = Неопределено) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	//++ Локализация
	
	
	ОбработкаТабличнойЧастиКлиентСерверЛокализация.ЗаполнитьПризнакиКатегорииЭксплуатации(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьПартиюТМЦВЭксплуатации(ТекущаяСтрока, СтруктураДействий);
	
	ЗаполнитьНоменклатуруЕГАИС(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьАлкогольнуюПродукцию(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(
		ТекущаяСтрока, СтруктураДействий);
	
	ЗаполнитьПродукциюВЕТИС(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	СнятьПризнакМаркируемаяПродукцияАлкоголь(ТекущаяСтрока, СтруктураДействий);
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, СтруктураДействийЗаполнения) Экспорт
	
	//++ Локализация
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПоддерживаемыеДействияЗаполненияТЧ(Действия) Экспорт
	
	//++ Локализация
	Действия.Добавить("ЗаполнитьПризнакМаркируемаяПродукция");
	Действия.Добавить("ЗаполнитьПризнакМаркируемаяПродукцияАлкогольная");
	Действия.Добавить("СнятьПризнакМаркируемаяПродукцияАлкоголь");
	Действия.Добавить("ЗаполнитьВидПродукцииИС");
	Действия.Добавить("ЗаполнитьПризнакПодакцизныйТовар");
	//-- Локализация
	
КонецПроцедуры

Процедура ПриОпределенииШаблонаПоляВыборкиПоКлючуДействия(КлючДействия, Шаблон) Экспорт
	
	//++ Локализация
	
	Если КлючДействия = "ЗаполнитьПризнакМаркируемаяПродукция" Тогда
		
		Шаблон =  ", " + ИнтеграцияИСУТ.ОпределениеПризнакаМаркируемаяПродукцияТекстаЗапроса("втТаблицаНоменклатуры.%Ключ%");
		Шаблон = Шаблон + " КАК %Значение%";
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьВидПродукцииИС" Тогда
		
		Шаблон = ",
		|	&ОпределениеВидаПродукции КАК %Значение%";
		ИнтеграцияИСУТ.ОпределитьВидПродукцииТекстаЗапроса(Шаблон, "втТаблицаНоменклатуры.%Ключ%");
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПодакцизныйТовар" Тогда
		Шаблон = ",
		|	втТаблицаНоменклатуры.%Ключ%.ПодакцизныйТовар КАК %Значение%";
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Процедура ЗаполнитьПартиюТМЦВЭксплуатации(ТекущаяСтрока, СтруктураДействий)
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПартиюТМЦВЭксплуатации", ПараметрыДействия)
		И (Не ПараметрыДействия.Свойство("ХозяйственнаяОперация")
			Или ПараметрыДействия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТМЦВЭксплуатацииОбороты.Партия
			|ИЗ
			|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
			|			,
			|			&Дата,
			|			,
			|			Партия = &Партия
			|				И Организация = &Организация
			|				И Подразделение = &Подразделение
			|				И ФизическоеЛицо = &ФизическоеЛицо
			|				И Номенклатура = &Номенклатура
			|				И Характеристика = &Характеристика) КАК ТМЦВЭксплуатацииОбороты
			|ГДЕ
			|	ТМЦВЭксплуатацииОбороты.КоличествоОборот > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТМЦВЭксплуатацииОбороты.Партия КАК ПартияТМЦВЭксплуатации,
			|	РАЗНОСТЬДАТ(ТМЦВЭксплуатацииОбороты.Партия.ДатаЗавершенияЭксплуатации, &Дата, ДЕНЬ) КАК РазностьДат,
			|	ТМЦВЭксплуатацииОбороты.Партия.ИнвентарныйУчет КАК ИнвентарныйУчет
			|ИЗ
			|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
			|			,
			|			&Дата,
			|			,
			|			Организация = &Организация
			|				И Подразделение = &Подразделение
			|				И ФизическоеЛицо = &ФизическоеЛицо
			|				И Номенклатура = &Номенклатура
			|				И Характеристика = &Характеристика) КАК ТМЦВЭксплуатацииОбороты
			|ГДЕ
			|	ТМЦВЭксплуатацииОбороты.КоличествоОборот > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	РазностьДат");
		
		Запрос.УстановитьПараметр("Партия", ТекущаяСтрока.ПартияТМЦВЭксплуатации);
		Запрос.УстановитьПараметр("Дата", ПараметрыДействия.Дата);
		Запрос.УстановитьПараметр("Организация", ПараметрыДействия.Организация);
		Запрос.УстановитьПараметр("Подразделение", ПараметрыДействия.Подразделение);
		Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("ФизическоеЛицо", ТекущаяСтрока.ФизическоеЛицо);
		
		Результат = Запрос.ВыполнитьПакет();
		
		Если Результат[0].Пустой() Тогда
			Если Результат[1].Пустой() Тогда
				ПустыеЗначения = Новый Структура("ПартияТМЦВЭксплуатации, ИнвентарныйУчет", Справочники.ПартииТМЦВЭксплуатации.ПустаяСсылка(), Ложь);
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПустыеЗначения);
			Иначе
				Выборка = Результат[1].Выбрать();
				Выборка.Следующий();
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
				
				СтруктураКоличества = Новый Структура("Количество, КоличествоУпаковок", 0, 0);
				ЗаполнитьЗначенияСвойств(СтруктураКоличества, ТекущаяСтрока);
				Если СтруктураКоличества.Количество = 0 Тогда
					СтруктураКоличества.Количество = 1;
				КонецЕсли;
				Если СтруктураКоличества.КоличествоУпаковок = 0 Тогда
					СтруктураКоличества.КоличествоУпаковок = 1;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураКоличества);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьНоменклатуруЕГАИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем Параметры;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруЕГАИС", Параметры) Тогда
		
		Если Параметры.Свойство("ИмяКолонки") Тогда
			ИмяКолонки = Параметры.ИмяКолонки;
		Иначе
			ИмяКолонки = "НоменклатураЕГАИС";
		КонецЕсли;
		
		Если Параметры.Свойство("Серии") Тогда
			Серии = Параметры.Серии.Выгрузить();
		Иначе
			Серии = Новый ТаблицаЗначений;
			Серии.Колонки.Добавить("Номенклатура"  , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
			Серии.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
			Серии.Колонки.Добавить("Серия"         , Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		КонецЕсли;
		
		Если Параметры.Свойство("ЗаполнитьФлагМаркируемаяПродукция") Тогда
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция = Параметры.ЗаполнитьФлагМаркируемаяПродукция;
		Иначе
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция = Ложь;
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	Серии
		|ИЗ
		|	&Серии КАК ТЧСерии
		|ГДЕ
		|	ТЧСерии.Номенклатура = &Номенклатура
		|	И ТЧСерии.Характеристика = &Характеристика;
		|
		|ВЫБРАТЬ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	ВтСерии
		|ИЗ
		|	Серии КАК ТЧСерии
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Серия КАК Серия,
		|	&Номенклатура КАК Номенклатура,
		|	&Характеристика КАК Характеристика
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК НоменклатураЕГАИС,
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый
		|				ИЛИ СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
		|			ТОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК МаркируемаяПродукция,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукция
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерии КАК ВтСерии
		|		ПО ВтСерии.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ВтСерии.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|			И ВтСерии.Серия = СоответствиеНоменклатурыЕГАИС.Серия
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия", ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("Серии", Серии);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		
		ТекущаяСтрока.НоменклатураДляВыбора = Новый СписокЗначений;
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока[ИмяКолонки] = Выборка.НоменклатураЕГАИС;
				Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция Тогда
					ТекущаяСтрока.МаркируемаяПродукция = Выборка.МаркируемаяПродукция;
				КонецЕсли;
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.НоменклатураЕГАИС);
		КонецЦикла;
		
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
		Если КоличествоСопоставлено <> 1 Тогда
			
			Если ТекущаяСтрока.НоменклатураДляВыбора.НайтиПоЗначению(ТекущаяСтрока[ИмяКолонки]) = Неопределено Тогда
				ТекущаяСтрока[ИмяКолонки] = Неопределено;
			КонецЕсли;
			Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяПродукция Тогда
				ТекущаяСтрока.МаркируемаяПродукция = Ложь;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
		|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия 
		|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
		|");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		Выборка = Результат.Выбрать();
		
		КоличествоСопоставлено = Выборка.Количество();
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
		КонецЕсли;
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПродукциюВЕТИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюВЕТИС", ПараметрыЗаполнения) Тогда
		Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
			Возврат
		КонецЕсли;
		
		Отбор = Неопределено;
		ПараметрыЗаполнения.Свойство("ОтборПродукция",Отбор);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		|	СоответствиеНоменклатурыВЕТИС.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		|ГДЕ
		|	СоответствиеНоменклатурыВЕТИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыВЕТИС.Характеристика = &Характеристика
		|	И (СоответствиеНоменклатурыВЕТИС.Серия = &Серия
		|	ИЛИ &СерияЗаполнена = ЛОЖЬ)
		|	И (СоответствиеНоменклатурыВЕТИС.Продукция.Производители.Производитель = &Предприятие
		|	ИЛИ &Предприятие = ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка))
		|	И (СоответствиеНоменклатурыВЕТИС.Продукция.ХозяйствующийСубъектПроизводитель = &ХозяйствующийСубъект
		|	ИЛИ &ХозяйствующийСубъект = ЗНАЧЕНИЕ(Справочник.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка))
		|	И (НЕ &ИсключатьПродукциюТретьегоУровня
		|	ИЛИ СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор <> """")");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
		Запрос.УстановитьПараметр("ИсключатьПродукциюТретьегоУровня",
			СтруктураДействий.ЗаполнитьПродукциюВЕТИС.ИсключатьПродукциюТретьегоУровня);
		
		Если ЗначениеЗаполнено(Отбор) Тогда
			Если Отбор.Свойство("Предприятие") Тогда
				Запрос.УстановитьПараметр("Предприятие", Отбор.Предприятие);
			Иначе
				Запрос.УстановитьПараметр("Предприятие", Справочники.ПредприятияВЕТИС.ПустаяСсылка());
			КонецЕсли;
			Если Отбор.Свойство("ХозяйствующийСубъект") Тогда
				Запрос.УстановитьПараметр("ХозяйствующийСубъект", Отбор.ХозяйствующийСубъект);
			Иначе
				Запрос.УстановитьПараметр("ХозяйствующийСубъект", Справочники.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка());
			КонецЕсли;
		Иначе
			Запрос.УстановитьПараметр("Предприятие", Справочники.ПредприятияВЕТИС.ПустаяСсылка());
			Запрос.УстановитьПараметр("ХозяйствующийСубъект", Справочники.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка());
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.Продукция = Выборка.Продукция;
				ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(ТекущаяСтрока);
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.Продукция);
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.Продукция = Неопределено;
		КонецЕсли;
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеТекст = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеТекст = "";
		Иначе
			ТекущаяСтрока.СопоставлениеТекст = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СнятьПризнакМаркируемаяПродукцияАлкоголь(ТекущаяСтрока, СтруктураДействий)
	Если СтруктураДействий.Свойство("СнятьПризнакМаркируемаяПродукцияАлкоголь")
		И ТекущаяСтрока.МаркируемаяПродукция
		И ТекущаяСтрока.ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Алкогольная Тогда
		ТекущаяСтрока.МаркируемаяПродукция = Ложь;
	КонецЕсли;
КонецПроцедуры

// Возвращает сведения о коэффициенте пересчета единицы измерения ВЕТИС.
//
// Параметры:
//	ЕдиницаИзмеренияВЕТИС	- СправочникСсылка.ЕдиницыИзмеренияВЕТИС	- Единица измерения ВЕТИС, коэффициент которой нужно 
//																		получить.
//	Номенклатура			- СправочникСсылка.Номенклатура				- Номенклатура для единицы хранения, которой осуществляется 
//																		получение коэффициента пересчета.
//	КэшированныеЗначения	- Структура									- Сохраненные значения параметров, используемых при обработке 
//																		строки таблицы.
//
// Возвращаемое значение:
//	Структура - см. описание модуля менеджера УпаковкиЕдиницы.КоэффициентЕдиницыИзмеренияПоВЕТИС.
//
Функция ДанныеЕдиницыИзмеренияВЕТИС(ЕдиницаИзмеренияВЕТИС, Номенклатура, КэшированныеЗначения) Экспорт
	
	ДанныеЕдиницыИзмеренияВЕТИС = ИнтеграцияВЕТИСУТ.КоэффициентЕдиницыИзмеренияПоВЕТИС(
									ЕдиницаИзмеренияВЕТИС, Номенклатура);
	
	Если ДанныеЕдиницыИзмеренияВЕТИС.КэшироватьДанные Тогда
		
		КлючКоэффициента = ОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Номенклатура, ЕдиницаИзмеренияВЕТИС);
		
		ИменаКлючей = "КодОшибки, Коэффициент, ТипИзмеряемойВеличины, НужноОкруглятьКоличество,"
						+ "НужноОкруглятьКоличествоВЕТИС";
		
		ДанныеКлюча = Новый Структура(ИменаКлючей);
		ЗаполнитьЗначенияСвойств(ДанныеКлюча, ДанныеЕдиницыИзмеренияВЕТИС);
		
		КэшированныеЗначения.КоэффициентыУпаковок.Вставить(КлючКоэффициента, ДанныеКлюча);
		
	КонецЕсли;
	
	Возврат ДанныеЕдиницыИзмеренияВЕТИС;
	
КонецФункции

//-- Локализация

#КонецОбласти
