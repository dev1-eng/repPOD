////////////////////////////////////////////////////////////////////////////////////////
// СопоставлениеНоменклатурыКонтрагентовСлужебныйКлиентСервер:
// механизм сопоставления номенклатуры контрагентов с номенклатурой информационной базы.
//
///////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Разделяет идентификатор на части по разделителю #.
//
// Параметры:
//  Идентификатор           - Строка    - идентификатор, который необходимо разбить на части по разделителю #.
//  НоменклатураКонтрагента - Структура - содержит:
//    *ИдентификаторНоменклатуры   - Строка - идентификатор номенклатуры.
//    *ИдентификаторХарактеристики - Строка - идентификатор характеристики.
//    *ИдентификаторУпаковки       - Строка - идентификатор упаковки.
//
Процедура РазделитьИдентификаторНаЧасти(Идентификатор, НоменклатураКонтрагента) Экспорт
	
	ЧастиИдентификаторов = СтрРазделить(Идентификатор, "#", Истина);
	ВсегоЧастей = ЧастиИдентификаторов.Количество();
	
	Если ВсегоЧастей = 3 Тогда
		НоменклатураКонтрагента.ИдентификаторНоменклатуры   = ЧастиИдентификаторов[0];
		НоменклатураКонтрагента.ИдентификаторХарактеристики = ЧастиИдентификаторов[1];
		НоменклатураКонтрагента.ИдентификаторУпаковки       = ЧастиИдентификаторов[2];
	ИначеЕсли ВсегоЧастей > 3 Тогда
		НоменклатураКонтрагента.ИдентификаторНоменклатуры   = ЧастиИдентификаторов[0];
		НоменклатураКонтрагента.ИдентификаторХарактеристики = ЧастиИдентификаторов[1];
		
		ДлинаИдентификатора = СтрДлина(Идентификатор);
		ДлинаЧастиИдентификатора = СтрДлина(ЧастиИдентификаторов[0] + "#" + ЧастиИдентификаторов[1] + "#");
		
		ПоследняяЧастьИдентификатора = Сред(Идентификатор, ДлинаЧастиИдентификатора + 1, ДлинаИдентификатора);
		
		НоменклатураКонтрагента.ИдентификаторУпаковки       = ПоследняяЧастьИдентификатора;
	Иначе
		НоменклатураКонтрагента.ИдентификаторНоменклатуры   = Идентификатор;
		НоменклатураКонтрагента.ИдентификаторХарактеристики = Идентификатор;
		НоменклатураКонтрагента.ИдентификаторУпаковки       = Идентификатор;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак разных данных между упаковкой и базовой единицей измерения.
//
// Параметры:
//  СвойтсваУпаковки - Структура - см. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НовыеСвойстваУпаковкиИБ.
//
// Возвращаемое значение:
//  Булево - признак обозначает, что упаковка отлична от базовой единицы измерения. 
//
Функция УпаковкаИБазоваяЕдиницаИзмеренияРазличны(СвойстваУпаковки) Экспорт
	
	Возврат Не (СвойстваУпаковки.КоличествоУпаковок = 1
		И СвойстваУпаковки.КоличествоБазовойЕдиницыИзмерения = 1
		И СвойстваУпаковки.НаименованиеУпаковки = СвойстваУпаковки.НаименованиеБазовойЕдиницыИзмерения);
	
КонецФункции

#КонецОбласти

