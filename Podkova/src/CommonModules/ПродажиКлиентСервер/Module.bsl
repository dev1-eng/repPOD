
#Область ПрограммныйИнтерфейс

// Рассчитывает итоговое показатели формы документа "Реализация товаров и услуг".
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма документа реализации.
//
Процедура РассчитатьИтоговыеПоказателиРеализации(Форма) Экспорт
	
	Форма.СуммаВсего = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		Форма.Объект.Товары.Итог("СуммаСНДС"),
		Форма.Объект.Товары.Итог("СуммаСНДСБезВозвратнойТары"));
	Форма.СуммаНДС = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		Форма.Объект.Товары.Итог("СуммаНДС"),
		Форма.Объект.Товары.Итог("СуммаНДСБезВозвратнойТары"));
	Форма.СуммаАвтоСкидки = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		Форма.Объект.Товары.Итог("СуммаАвтоматическойСкидки"),
		Форма.Объект.Товары.Итог("СуммаАвтоматическойСкидкиБезВозвратнойТары"));
	Форма.СуммаРучнойСкидки = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		Форма.Объект.Товары.Итог("СуммаРучнойСкидки"),
		Форма.Объект.Товары.Итог("СуммаРучнойСкидкиБезВозвратнойТары"));
	Форма.СуммаСкидки       = Форма.СуммаАвтоСкидки + Форма.СуммаРучнойСкидки;
	Форма.СуммаЗалогаЗаТару = ?(Форма.Объект.ТребуетсяЗалогЗаТару,Форма.Объект.Товары.Итог("СуммаСНДС")
			- Форма.Объект.Товары.Итог("СуммаСНДСБезВозвратнойТары"),0);
	
	Форма.СуммаСверхЗаказа = Форма.Объект.Товары.Итог("СуммаСверхЗаказа");

	Если Форма.СуммаВсего + Форма.СуммаСкидки > 0 Тогда
		
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / (Форма.СуммаВсего + Форма.СуммаСкидки);
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / (Форма.СуммаВсего + Форма.СуммаСкидки);
		Форма.ПроцентСкидки       = Форма.ПроцентАвтоСкидки + Форма.ПроцентРучнойСкидки;
		
	ИначеЕсли Форма.СуммаСкидки > 0 Тогда
		
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентСкидки       = 100;
		
	Иначе
		
		Форма.ПроцентАвтоСкидки   = 0;
		Форма.ПроцентРучнойСкидки = 0;
		Форма.ПроцентСкидки       = 0;
		
	КонецЕсли;
	
	Если УчетНДСУПКлиентСервер.ОтображатьНДСВИтогахДокументаПродажи(Форма.Объект.НалогообложениеНДС) Тогда
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
	Иначе
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет информацию по ТТН
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма документа реализации.
//	Параметры - Структура - дополнительные параметры.
//
Процедура ОбновитьИнформациюТранспортныхНакладных(Форма, Параметры, ПараметрыТТН) Экспорт
	
	Отступ = "  ";
	
	Форма.КоличествоТранспортныхНакладных = Параметры.КоличествоТранспортныхНакладных;
	
	ОформитьТТН = Новый ФорматированнаяСтрока(НСтр("ru='Оформить ТТН'"),
							,
							ОбщегоНазначенияВызовСервера.ЦветСтиля("ЦветГиперссылки"),
							,
							"СоздатьТранспортнуюНакладную");
	
	МассивСтрок = Новый Массив;
	
	Если Форма.КоличествоТранспортныхНакладных = 0 Тогда
		
		Если ПараметрыТТН.ИнтерактивноеДобавление Тогда
			ТекстТТН = Новый ФорматированнаяСтрока(ОформитьТТН);
		Иначе
			ТекстТТН = Новый ФорматированнаяСтрока(НСтр("ru = 'ТТН не введена'"));
		КонецЕсли;
		
		МассивСтрок.Добавить(ТекстТТН);
		
	Иначе
		
		Если Форма.КоличествоТранспортныхНакладных = 1 Тогда
			ТекстТТН = НСтр("ru='ТТН %СокращенноеНаименованиеТранспортнойНакладной%'");
			ТекстТТН = СтрЗаменить(ТекстТТН,
						"%СокращенноеНаименованиеТранспортнойНакладной%",
						Параметры.СокращенноеНаименованиеТранспортнойНакладной);
			
			Если ПараметрыТТН.Просмотр Тогда
				ТекстТТН = Новый ФорматированнаяСтрока(ТекстТТН,
									,
									ОбщегоНазначенияВызовСервера.ЦветСтиля("ЦветГиперссылки"),
									,
									ПолучитьНавигационнуюСсылку(Параметры.ТранспортнаяНакладная));
			КонецЕсли;
		Иначе
			
			ТекстТТН = НСтр("ru = 'ТТН (%КоличествоТранспортныхНакладных%)'");
			ТекстТТН = СтрЗаменить(ТекстТТН, "%КоличествоТранспортныхНакладных%", Форма.КоличествоТранспортныхНакладных);
			
			Если ПараметрыТТН.Просмотр Тогда
				ТекстТТН = Новый ФорматированнаяСтрока(ТекстТТН,
														,
														ОбщегоНазначенияВызовСервера.ЦветСтиля("ЦветГиперссылки"),
														,
														"ОткрытьСписокТранспортныхНакладных");
			КонецЕсли;
		КонецЕсли;	
		
		МассивСтрок.Добавить(ТекстТТН);
		
		Если ПараметрыТТН.ИнтерактивноеДобавление Тогда
			МассивСтрок.Добавить(Отступ);
			МассивСтрок.Добавить(ОформитьТТН);
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ТекстТТН = Новый ФорматированнаяСтрока(МассивСтрок);
	
	ПродажиКлиентСервер.СформироватьТекстДокументыНаОсновании(Форма);
	
КонецПроцедуры

// Формирует текст документа основания, 
// Для обратной совместимости при переходе на методы программного интерфейса УчетНДСУП
// введено деление алгоритмов заполнения на основании имен элементов формы:
//	ТекстДокументыНаОсновании - старая схема, предполагается наличие реквизитов формы ТекстСчетФактура, ТекстТТН
//	ТекстДокументыНаОснованииПодвал - новая схема, предполагается наличие реквизитов формы ТекстСчетаФактурыВыданные, ТекстТТН
// 
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма документа основания.
//
// Возвращаемое значение:
//   Строка - сформированный текст документа основания.
//
Функция СформироватьТекстДокументыНаОсновании(Форма) Экспорт
	
	Результат = Новый ФорматированнаяСтрока("");
	
	ИспользуетсяТТН         = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТекстТТН");
	ИспользуетсяСчетФактура = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТекстСчетФактура")
					Или ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТекстСчетаФактурыВыданные");
	ИспользоватьОтступ      = ИспользуетсяТТН
					И ИспользуетсяСчетФактура;
	
	ТекстТТН         = ?(ИспользуетсяТТН, Форма.ТекстТТН, "");
	ТекстСчетФактура = ?(ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТекстСчетФактура"),
				Форма.ТекстСчетФактура,
				?(ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТекстСчетаФактурыВыданные"),
					Форма.ТекстСчетаФактурыВыданные,
					""));
	Отступ           = ?(ИспользоватьОтступ, Новый ФорматированнаяСтрока("    "), Новый ФорматированнаяСтрока(""));
	
	Если Форма.Элементы.Найти("ТекстДокументыНаОсновании") <> Неопределено Тогда
		
		Форма.ТекстДокументыНаОсновании = Новый ФорматированнаяСтрока(ТекстСчетФактура, Отступ, ТекстТТН);
		Результат = Форма.ТекстДокументыНаОсновании;
		
	ИначеЕсли Форма.Элементы.Найти("ТекстДокументыНаОснованииПодвал") <> Неопределено Тогда
		
		Форма.ТекстДокументыНаОснованииПодвал = Новый ФорматированнаяСтрока(ТекстСчетФактура, Отступ, ТекстТТН);
		Результат = Форма.ТекстДокументыНаОснованииПодвал;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти




