
#Область ПрограммныйИнтерфейс

// Открыть форму предварительного просмотра чека ККМ.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧек(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаПослеЗаписиДокумента");
	
	ОбработатьРежимЗаписи(Истина, ДополнительныеПараметры);
	
КонецПроцедуры

// Пробить чек выемки денежных средств.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧекВыемкаДенежныхСредств(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаВыемкаДенежныхСредствПослеЗаписиДокумента");
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
		Форма,
		Новый ОписаниеОповещения("ОбработатьРежимЗаписи", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Пробить чек внесения денежных средств.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧекВнесениеДенежныхСредств(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаВнесениеДенежныхСредствПослеЗаписиДокумента");
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
		Форма,
		Новый ОписаниеОповещения("ОбработатьРежимЗаписи", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Процедура формирует очередь чеков для последующей фискализации
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура СформироватьОчередьЧеков(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "СформироватьОчередьЧековПослеЗаписиДокумента");
	
	ОбработатьРежимЗаписи(Истина, ДополнительныеПараметры);
	
КонецПроцедуры

// Открыть форму записи фискальной операции. Объединение с БПО
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ДокументОснование - ДокументСсылка - Ссылка на документ-основание
//
Процедура ОткрытьЗаписьФискальнойОперации(Форма, ДокументОснование, ТипРасчета = Неопределено) Экспорт
	
	Если ТипРасчета = Неопределено Тогда
		ДанныеФискальнойОперации = МенеджерОборудованияВызовСервера.ДанныеФискальнойОперации(ДокументОснование);
	Иначе
		ДанныеФискальнойОперации = МенеджерОборудованияВызовСервера.ДанныеФискальнойОперации(ДокументОснование, , , ТипРасчета);
	КонецЕсли;
	
	Если ДанныеФискальнойОперации = Неопределено Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
			
			ДанныеФискальнойОперации = ПодключаемоеОборудованиеУТВызовСервера.ДанныеФискальнойОперацииСУчетомКорректировкиРеализации(ДокументОснование);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеФискальнойОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("ИдентификаторЗаписи", ДанныеФискальнойОперации.ИдентификаторЗаписи);
	ПараметрыЗаписи.Вставить("ДокументОснование",   ДанныеФискальнойОперации.ДокументОснование);
	
	ЗначениеКлюча = Новый Массив;
	ЗначениеКлюча.Добавить(ПараметрыЗаписи);
	
	КлючЗаписи = Новый("РегистрСведенийКлючЗаписи.ФискальныеОперации", ЗначениеКлюча);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", КлючЗаписи);
	
	ОткрытьФорму("РегистрСведений.ФискальныеОперации.Форма.ФормаЗаписи", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Получить структуру реквизитов операции инкассации кассового узла.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Дата - Дата - Дата операции.
//   * ДокументОснование - ДокументСсылка - Ссылка на документ-основание.
//   * Организация - ОпределяемыйТип.ОрганизацияБПО - Организация.
//   * ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектБПО - Торговый объект.
//   * Устройство - СправочникСсылка.ПодключаемоеОборудование - Устройство.
//   * ТипОперации - ПеречислениеСсылка.ТипыОперацииКассовогоУзла - Тип операции.
//   * Сумма - Число - Сумма.
//   * ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Функция СтруктураРеквизитыОперацииИнкассацииКассовогоУзла() Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	
	Реквизиты = Новый Структура;
	
	Реквизиты.Вставить("Дата");
	Реквизиты.Вставить("ДокументОснование");
	Реквизиты.Вставить("Организация");
	Реквизиты.Вставить("ТорговыйОбъект");
	Реквизиты.Вставить("Устройство");
	
	Реквизиты.Вставить("ТипОперации");
	Реквизиты.Вставить("Сумма");
	
	Реквизиты.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Возврат Реквизиты;
	
КонецФункции

// Записать объект.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  РежимЗаписиДокумента - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ЗаписатьОбъект(Форма, РежимЗаписиДокумента, ОписаниеОповещения) Экспорт
	
	ОтветЧерезОписаниеОповещения = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "НеВыполнятьПроверкуПередЗаписью");
	
	Проведен = Ложь;
	Попытка
		
		Если ОтветЧерезОписаниеОповещения Тогда
			
			Форма.Записать(
				Новый Структура(
					"РежимЗаписи, ДействиеПослеЗаписи",
					РежимЗаписиДокумента,
					ОписаниеОповещения));
			
		Иначе
			
			Проведен = Форма.Записать(
				Новый Структура(
					"РежимЗаписи",
					РежимЗаписиДокумента));
			
		КонецЕсли;
		
	Исключение
		
		Проведен = Ложь;
		
	КонецПопытки;
	
	Если Не ОтветЧерезОписаниеОповещения Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Проведен);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПослеОтветаНаВопросОЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		ЗаписатьОбъект(
			ДополнительныеПараметры.Форма,
			ДополнительныеПараметры.РежимЗаписиДокумента,
			Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, ЭтотОбъект, ДополнительныеПараметры));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПробитиеЧекаПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось записать документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
		ОткрытьФорму(
			"Обработка.ПредпросмотрЧека.Форма",
			ДополнительныеПараметры.ПараметрыОперации,
			ДополнительныеПараметры.Форма,,,,
			ДополнительныеПараметры.ОповещениеПриЗавершении);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПробитиеЧекаВыемкаДенежныхСредствПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось записать документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
		ПараметрыОперации = Новый Структура;
		ПараметрыОперации.Вставить("ТипИнкассации", 0);
		ПараметрыОперации.Вставить("Сумма",         ДополнительныеПараметры.ПараметрыОперации.Сумма);
		ПараметрыОперации.Вставить("ДокументОснование", ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка);
		
		МенеджерОборудованияКлиент.НачатьИнкассациюНаФискальномУстройстве(
			Новый ОписаниеОповещения("ЗаписатьВЖурналВыемкуДенежныхСредствВКассуККМ", ЭтотОбъект, ДополнительныеПараметры),
			ДополнительныеПараметры.Форма.УникальныйИдентификатор,
			ПараметрыОперации,
			ДополнительныеПараметры.ПараметрыОперации.ПодключенноеОборудование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПробитиеЧекаВнесениеДенежныхСредствПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось записать документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
		ПараметрыОперации = Новый Структура;
		ПараметрыОперации.Вставить("ТипИнкассации", 1);
		ПараметрыОперации.Вставить("Сумма",         ДополнительныеПараметры.ПараметрыОперации.Сумма);
		ПараметрыОперации.Вставить("ДокументОснование", ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка);
		
		МенеджерОборудованияКлиент.НачатьИнкассациюНаФискальномУстройстве(
			Новый ОписаниеОповещения("ЗаписатьВЖурналВнесениеДенежныхСредствВКассуККМ", ЭтотОбъект, ДополнительныеПараметры),
			ДополнительныеПараметры.Форма.УникальныйИдентификатор,
			ПараметрыОперации,
			ДополнительныеПараметры.ПараметрыОперации.ПодключенноеОборудование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОчередьЧековПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось записать документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Не удалось провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если Не ДополнительныеПараметры.ПараметрыОперации.Свойство("ДокументОснование")
			Или Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументОснование) Тогда
			ДополнительныеПараметры.ПараметрыОперации.Вставить("ДокументОснование", ДополнительныеПараметры.Форма.Объект.Ссылка);
		КонецЕсли;
		
		ПодключаемоеОборудованиеУТВызовСервера.СформироватьОчередьЧеков(ДополнительныеПараметры.ПараметрыОперации.ДокументОснование);
		
		ОткрытьФорму("РегистрСведений.ОчередьЧековККТ.ФормаСписка",
			Новый Структура("Отбор", ДополнительныеПараметры.ПараметрыОперации),
			ДополнительныеПараметры.Форма,,,,
			ДополнительныеПараметры.ОповещениеПриЗавершении,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьВЖурналВнесениеДенежныхСредствВКассуККМ(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры.Вставить("РезультатВыполненияФискальнойОперации", РезультатВыполнения);
	КонецЕсли;
	
	Если РезультатВыполнения.Результат Тогда
		
		Форма = ДополнительныеПараметры.Форма;
		
		ПараметрыФискализации = Неопределено;
		// Если данные в регистр ФискальныеОперации не были записаны - произошла ошибка при записи.
		Если РезультатВыполнения.Свойство("ВыходныеПараметры") 
			 И РезультатВыполнения.ВыходныеПараметры.Количество() > 8 Тогда
			ПараметрыФискализации = РезультатВыполнения.ВыходныеПараметры[8];
		КонецЕсли;
		
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ЗакрытьФорму",                Ложь);
		ПараметрыЗавершения.Вставить("Форма",                       Форма);
		ПараметрыЗавершения.Вставить("ОповещениеПриЗавершении",     ДополнительныеПараметры.ОповещениеПриЗавершении);
		ПараметрыЗавершения.Вставить("ФискальнаяОперацияРеквизиты", ПараметрыФискализации);
		
		ВыполнитьДействиеПослеЗаписиФискальнойОперацииВЖурнал(
			Форма,
			Новый ОписаниеОповещения("ФискальнаяОперацияЗаписанаВЖурнал", ЭтотОбъект, ПараметрыЗавершения),
			НСтр("ru = 'Не удалось записать данные в журнал фискальных операций.'"));
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьВЖурналВыемкуДенежныхСредствВКассуККМ(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ДополнительныеПараметры.ОповещениеПриЗавершении.ДополнительныеПараметры.Вставить("РезультатВыполненияФискальнойОперации", РезультатВыполнения);
	КонецЕсли;
	
	Если РезультатВыполнения.Результат Тогда
		
		Форма = ДополнительныеПараметры.Форма;
		
		ПараметрыФискализации = Неопределено;
		// Если данные в регистр ФискальныеОперации не были записаны - произошла ошибка при записи.
		Если РезультатВыполнения.Свойство("ВыходныеПараметры") 
			 И РезультатВыполнения.ВыходныеПараметры.Количество() > 8 Тогда
			
			ПараметрыФискализации = РезультатВыполнения.ВыходныеПараметры[8];
		КонецЕсли;
		
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ЗакрытьФорму",                Ложь);
		ПараметрыЗавершения.Вставить("Форма",                       Форма);
		ПараметрыЗавершения.Вставить("ОповещениеПриЗавершении",     ДополнительныеПараметры.ОповещениеПриЗавершении);
		ПараметрыЗавершения.Вставить("ФискальнаяОперацияРеквизиты", ПараметрыФискализации);
		
		ВыполнитьДействиеПослеЗаписиФискальнойОперацииВЖурнал(
			Форма,
			Новый ОписаниеОповещения("ФискальнаяОперацияЗаписанаВЖурнал", ЭтотОбъект, ПараметрыЗавершения),
			НСтр("ru = 'Не удалось записать данные в журнал фискальных операций.'"));
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФискальнаяОперацияЗаписанаВЖурнал(Результат, ДополнительныеПараметры) Экспорт
	
	ФискальнаяОперацияРеквизиты = ДополнительныеПараметры.ФискальнаяОперацияРеквизиты;
	
	Если Результат.ВыполненаОперацияНаУстройстве
		И Результат.ИзмененныеДанныеЗаписаны Тогда
		
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			ДополнительныеПараметры.Форма.Закрыть(ФискальнаяОперацияРеквизиты);
		Иначе
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Истина);
		КонецЕсли;
		
	Иначе
		
		Если Результат.ВыполненаОперацияНаУстройстве И Не Результат.ИзмененныеДанныеЗаписаны Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Данные", ФискальнаяОперацияРеквизиты.ДокументОснование);
			ПараметрыФормы.Вставить("ДанныеДляЖурналаРегистрации", ФискальнаяОперацияРеквизиты);
			ПараметрыФормы.Вставить("ТекстСообщения",
				НСтр("ru = 'ВНИМАНИЕ! Произошла исключительная ситуация:
				           |Чек ККМ пробит, но не зафиксирован в системе.'"));
			
			ОткрытьФорму("Документ.ЧекККМ.Форма.ОшибкаЗаписи", ПараметрыФормы, ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРежимЗаписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
	КонецЕсли;
	
	Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись
		И (Не ЗначениеЗаполнено(ДополнительныеПараметры.Форма.Объект.Ссылка) Или ДополнительныеПараметры.Форма.Модифицированность) Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросОЗаписиДокумента", ЭтотОбъект, ДополнительныеПараметры),
			НСтр("ru = 'Операция возможна только после записи документа, записать документ?'"),
			РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Проведение
		И (Не ДополнительныеПараметры.Форма.Объект.Проведен Или ДополнительныеПараметры.Форма.Модифицированность) Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросОЗаписиДокумента", ЭтотОбъект, ДополнительныеПараметры),
			НСтр("ru = 'Операция возможна только после проведения документа, провести документ?'"),
			РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, ЭтотОбъект, ДополнительныеПараметры);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОшибкаПриПроведенииЧекаВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Отмена Тогда
		
		ТребуетсяПовторнаяПопыткаЗаписи = Ложь;
		Если ДополнительныеПараметры.ИмяПроцедуры = "ЗаписатьФискальнуюОперациюВТранзакции" Тогда
			РезультатОперации = ПодключаемоеОборудованиеУТВызовСервера.ЗаписатьФискальнуюОперациюВТранзакции(
				ТребуетсяПовторнаяПопыткаЗаписи,
				ДополнительныеПараметры.ОписаниеОповещения.ДополнительныеПараметры.ФискальнаяОперацияРеквизиты);
		КонецЕсли;
		
		Если (ТипЗнч(РезультатОперации) = Тип("Булево") И РезультатОперации) Тогда
			
			ВыполнитьОбработкуОповещения(
				ДополнительныеПараметры.ОписаниеОповещения,
				?(ДополнительныеПараметры.ВозвращатьРезультатФункции, РезультатОперации, ДополнительныеПараметры.РезультатПриУспешномПроведении));
			
		Иначе
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ОшибкаПриПроведенииЧекаВопросЗавершение", ЭтотОбъект, ДополнительныеПараметры),
				ДополнительныеПараметры.ТекстСообщения,
				РежимДиалогаВопрос.ПовторитьОтмена, 10, КодВозвратаДиалога.Повторить,,КодВозвратаДиалога.Повторить);
			
		КонецЕсли;
		
	Иначе
		
		ВыполнитьОбработкуОповещения(
			ДополнительныеПараметры.ОписаниеОповещения,
			?(ДополнительныеПараметры.ВозвращатьРезультатФункции, ДополнительныеПараметры.РезультатОперации, ДополнительныеПараметры.РезультатПриОтмене));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействиеПослеЗаписиФискальнойОперацииВЖурнал(Форма, ОповещениеПриЗавершении, ТекстСообщения) Экспорт
	
	ТребуетсяПовторнаяПопыткаЗаписи = Ложь;
	ИзмененныеДанныеЗаписаны = ПодключаемоеОборудованиеУТВызовСервера.ЗаписатьФискальнуюОперациюВТранзакции(
		ТребуетсяПовторнаяПопыткаЗаписи,
		ОповещениеПриЗавершении.ДополнительныеПараметры.ФискальнаяОперацияРеквизиты);
	
	Если Не ИзмененныеДанныеЗаписаны Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ОписаниеОповещения", ОповещениеПриЗавершении);
		ДополнительныеПараметры.Вставить("ТекстСообщения", ТекстСообщения);
		ДополнительныеПараметры.Вставить("ВозвращатьРезультатФункции", Ложь);
		ДополнительныеПараметры.Вставить("РезультатПриУспешномПроведении", Новый Структура("ВыполненаОперацияНаУстройстве, ИзмененныеДанныеЗаписаны", Истина, Истина));
		ДополнительныеПараметры.Вставить("РезультатПриОтмене", Новый Структура("ВыполненаОперацияНаУстройстве, ИзмененныеДанныеЗаписаны", Истина, Ложь));
		ДополнительныеПараметры.Вставить("ИмяПроцедуры", "ЗаписатьФискальнуюОперациюВТранзакции");
		ДополнительныеПараметры.Вставить("РезультатОперации", ИзмененныеДанныеЗаписаны);
		
		Если Не ТребуетсяПовторнаяПопыткаЗаписи Тогда
			ОшибкаПриПроведенииЧекаВопросЗавершение(КодВозвратаДиалога.Отмена, ДополнительныеПараметры);
			Возврат;
		КонецЕсли;
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОшибкаПриПроведенииЧекаВопросЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			ДополнительныеПараметры.ТекстСообщения,
			РежимДиалогаВопрос.ПовторитьОтмена, 10, КодВозвратаДиалога.Повторить,,КодВозвратаДиалога.Повторить);
		Возврат;
		
	Иначе
		
		ВыполнитьОбработкуОповещения(
			ОповещениеПриЗавершении,
			Новый Структура("ВыполненаОперацияНаУстройстве, ИзмененныеДанныеЗаписаны",
				Истина, Истина));
		
	КонецЕсли;
	
КонецПроцедуры

#Область РаботаСоСканеромШтрихкода

Функция ПреобразоватьДанныеСоСканераВМассив(Параметр) Экспорт
	
	МенеджерОборудованияУТКлиент.ОбработатьСобытие();
	
	Данные = Новый Массив;
	Данные.Добавить(ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
	
	Возврат Данные;
	
КонецФункции

Функция ПреобразоватьДанныеСоСканераВСтруктуру(Параметр) Экспорт
	
	МенеджерОборудованияУТКлиент.ОбработатьСобытие();
	
	Если Параметр[1] = Неопределено Тогда
		Данные = Новый Структура("Штрихкод, Количество", Параметр[0], 1); 	 // Достаем штрихкод из основных данных
	Иначе
		Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1], 1); // Достаем штрихкод из дополнительных данных
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти

#КонецОбласти
