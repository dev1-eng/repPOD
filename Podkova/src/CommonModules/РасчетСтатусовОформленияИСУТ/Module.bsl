// Механизм расчета статусов оформления документов ГосИС
//

#Область ПрограммныйИнтерфейс

#Область ВЕТИС

// Позволяет переопределить имена реквизитов документа-основания для документа ВЕТИС.
//   см. РасчетСтатусовОформленияВЕТИСПереопределяемый.ПриОпределенииИменРеквизитовДокументаДляРасчетаСтатусаОформленияДокументаВЕТИС.
//
Процедура ПриОпределенииРеквизитовОснованияДляВЕТИС(МетаданныеДокументаОснования, МетаданныеДокументаВЕТИС, Реквизиты) Экспорт
	
	// Зададим имена реквизитов по умолчанию.
	Реквизиты.Контрагент                        = "Организация";
	Реквизиты.ТорговыйИлиПроизводственныйОбъект = "Склад";
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Менеджер") <> Неопределено Тогда
		Реквизиты.Ответственный = "Менеджер";
	Иначе
		Реквизиты.Ответственный = "Ответственный";
	КонецЕсли;
	
	// Уточним имена реквизитов для конкретных документов.
	Если МетаданныеДокументаОснования = Метаданные.Документы.ВнутреннееПотреблениеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "Организация";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеИзлишковТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "Организация";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "Организация";
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СкладОтправитель";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СкладПолучатель";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПорчаТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваровУслуг Тогда
		
		Реквизиты.Ответственный = "Менеджер";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеНедостачТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
	
	КонецЕсли;
	
КонецПроцедуры

// Позволяет переопределить текст запроса выборки данных из документов-основания для расчета статуса оформления.
//   см. РасчетСтатусовОформленияВЕТИСПереопределяемый.ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформленияДокументаВЕТИС
//
Процедура ПриОпределенииЗапросаДляВЕТИС(
			МетаданныеДокументаОснования, МетаданныеДокументаВЕТИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
	ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента();
	ТабличныеЧастиДокумента = Новый Массив;
	ОтборНоменклатуры =
		"(СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
		|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС))";
	Если МетаданныеДокументаОснования = Метаданные.Документы.ВнутреннееПотреблениеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтКлиента Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Номенклатура ИНАЧЕ ТаблицаТовары.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Характеристика ИНАЧЕ ТаблицаТовары.ХарактеристикаОприходование КОНЕЦ";
			
			ТоварыПриход.ИмяПоляНоменклатураТЧСерии   = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Номенклатура ИНАЧЕ ТаблицаСерии.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧСерии = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Характеристика ИНАЧЕ ТаблицаСерии.ХарактеристикаОприходование КОНЕЦ";;
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		ТоварыРасход.ДопОтборы_Общие =
			СтрШаблон("И Не %1", КонтрагентФизЛицо());
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеИзлишковТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			// Товары - приход и расход в одной ТЧ
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ТаблицаТовары.НоменклатураОприходование";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ТаблицаТовары.ХарактеристикаОприходование";
			ТоварыПриход.ИмяПоляСерияТЧТовары          = "ТаблицаТовары.СерияОприходование";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыПриход);
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПорчаТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			// Товары - приход и расход в одной ТЧ
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ТаблицаТовары.НоменклатураОприходование";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ТаблицаТовары.ХарактеристикаОприходование";
			ТоварыПриход.ИмяПоляСерияТЧТовары          = "ТаблицаТовары.Серия";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыПриход);
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПриобретениеТоваровУслуг Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТоварыПриход.ДопОтборы_Общие = ТоварыПриход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПрочееОприходованиеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваровУслуг Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = СтрШаблон(
				"И ТаблицаДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
				|И Не %1", КонтрагентФизЛицо());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС Тогда
			
			// Номенклатура в шапке при сборке (приход)
			НоменклатураПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураПриход.ПостфиксВременнойТаблицы = "Приход";
			НоменклатураПриход.ДопОтборы_Общие =
				"И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)";
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ПостфиксВременнойТаблицы = "Расход";
			НоменклатураРасход.ДопОтборы_Общие =
				"И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
			
			// Товары при разборке (приход)
			ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("Товары", "Серии");
			ТоварыПриход.ПостфиксВременнойТаблицы = "Приход";
			ТоварыПриход.ДопОтборы_Общие =
				"И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
		
			// Товары при сборке (расход)
			ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("Товары", "Серии");
			ТоварыРасход.ПостфиксВременнойТаблицы = "Расход";
			ТоварыРасход.ДопОтборы_Общие =
				"И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураПриход);
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ТоварыПриход);
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеНедостачТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИСМП

//Позволяет переопределить имена реквизитов документа-основания для документа ИСМП.
//   См. РасчетСтатусовОформленияИСМППереопределяемый.ПриОпределенииИменРеквизитовДляРасчетаСтатусаОформления
//
Процедура ПриОпределенииРеквизитовОснованияДляИСМП(МетаданныеДокументаОснования, МетаданныеДокументаИСМП, Реквизиты) Экспорт
	
	// Зададим имена реквизитов по умолчанию.
	Если МетаданныеДокументаОснования = Метаданные.Документы.ПересчетТоваров Тогда
		Реквизиты.Контрагент = "";
	Иначе
		Реквизиты.Контрагент = "Организация";
	КонецЕсли;
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Менеджер") <> Неопределено Тогда
		Реквизиты.Ответственный = "Менеджер";
	ИначеЕсли МетаданныеДокументаОснования.Реквизиты.Найти("Кассир") <> Неопределено Тогда
		Реквизиты.Ответственный = "Кассир";
	Иначе
		Реквизиты.Ответственный = "Ответственный";
	КонецЕсли;
	
	// Уточним имена реквизитов для конкретных документов при необходимости.
	Если МетаданныеДокументаОснования = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС
		Или МетаданныеДокументаОснования = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
		Реквизиты.Контрагент = "";
	КонецЕсли;
	
КонецПроцедуры

//Позволяет переопределить текст запроса выборки данных из документов-оснований для расчета статуса оформления.
//   См. РасчетСтатусовОформленияИСМППереопределяемый.ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформленияДокумента
//
Процедура ПриОпределенииЗапросаДляИСМП(
			МетаданныеДокументаОснования, МетаданныеДокументаИСМП, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
	
	ОтборНоменклатуры = "СправочникНоменклатура.ОсобенностьУчета В(
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Шины),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Фотоаппараты),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Велосипеды),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КреслаКоляски),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.УпакованнаяВода),
	|	ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи))";
	
	ОтборНоменклатурыНеТабак = СтрЗаменить(ОтборНоменклатуры,  "ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция),", "");
	ОтборНоменклатурыНеВЕТИС = СтрЗаменить(ОтборНоменклатуры, "ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),", "");
	ОтборНоменклатурыВЕТИС = "СправочникНоменклатура.ОсобенностьУчета  = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)";
	
	ОтборНоменклатурыНеТабакНеАТП = СтрЗаменить(ОтборНоменклатурыНеТабак,  "ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак),", "");
	
	ТабличныеЧастиДокумента = Новый Массив;
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ЗаказПоставщику Тогда
		
		// Товары - нет серий
		ТоварыПриход.ИмяПоляСерияТЧТовары = "Неопределено";
		ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1 И %2", ХозяйственнаяОперацияИмпорт(), ДокументПроведен());
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ЗаказНаЭмиссиюКодовМаркировкиСУЗ Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеВЕТИС);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС Тогда
		ТоварыПриход.ДопОтборы_ТаблицаТовары = "И ТаблицаТовары.ВетеринарноСопроводительныйДокумент <> ЗНАЧЕНИЕ(Справочник.ВетеринарноСопроводительныйДокументВЕТИС.ПустаяСсылка)";
		ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
		Если МетаданныеДокументаИСМП = Метаданные.Документы.МаркировкаТоваровИСМП Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыВЕТИС);
		КонецЕсли;
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
		ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И ТаблицаДокумента.ГрузоотправительХозяйствующийСубъект = ЗНАЧЕНИЕ(Справочник.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка)";
		ТоварыПриход.ДопОтборы_ТаблицаТовары = "И ТаблицаТовары.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)";
		Если МетаданныеДокументаИСМП = Метаданные.Документы.МаркировкаТоваровИСМП Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыВЕТИС);
		КонецЕсли;
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПрочееОприходованиеТоваров Тогда
		Если МетаданныеДокументаИСМП = Метаданные.Документы.МаркировкаТоваровИСМП Тогда
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеВЕТИС);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.МаркировкаТоваровИСМП Тогда
			
			// Номенклатура в шапке при сборке
			НоменклатураПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураПриход.ПостфиксВременнойТаблицы = "Приход";
			НоменклатураПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
				|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураПриход);
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыНеВЕТИС);
			
		КонецЕсли;
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			// Номенклатура в шапке при разборке
			НоменклатураПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураПриход.ПостфиксВременнойТаблицы = "Приход";
			НоменклатураПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
				|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураПриход);
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПриобретениеТоваровУслуг Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.МаркировкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И (%1 ИЛИ %2) И %3",
				ХозяйственнаяОперацияИмпорт(),
				КонтрагентФизЛицо(),
				ДокументПроведен());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеВЕТИС);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И (1 В (ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка 
			|	ИЗ Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП ГДЕ ПриемкаТоваровИСМП.ДокументОснование = ТаблицаДокумента.Ссылка))";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ЧекККМ Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ИмяПоляНазначениеТЧТовары = "Помещение";
			ТоварыПриход.ИмяПоляНазначениеТЧСерии  = "Помещение";
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И ТаблицаДокумента.КассаККМ В(ВЫБРАТЬ Касса Из РегистрСведений.КассыНеПередающиеДанныеВИСМП)";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхПродажах Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ИмяПоляНазначениеТЧТовары = "Помещение";
			ТоварыПриход.ИмяПоляНазначениеТЧСерии  = "Помещение";
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И ТаблицаДокумента.КассаККМ В(ВЫБРАТЬ Касса Из РегистрСведений.КассыНеПередающиеДанныеВИСМП)";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваровУслуг Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И (%1 ИЛИ (%2 И %3)) И %4",
				"ТаблицаДокумента.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент)",
				КонтрагентФизЛицо(),
				"ТаблицаДокумента.Касса В(ВЫБРАТЬ Касса Из РегистрСведений.КассыНеПередающиеДанныеВИСМП)",
				ДокументПроведен());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1 И Не %2 И %3 И %4",
				"ТаблицаДокумента.Контрагент.ЮрФизЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент)",
				КонтрагентФизЛицо(),
				"НЕ(1 В (ВЫБРАТЬ 1 Из РегистрСведений.СостоянияЭД КАК СостоянияЭД 
				|	ГДЕ СостоянияЭД.СсылкаНаОбъект = ТаблицаДокумента.Ссылка 
				|	И СостоянияЭД.ЭлектронныйДокумент.СодержитДанныеОМаркируемыхТоварах))",
				ДокументПроведен());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1 И %2",
				ДокументПроведен(),
				КонтрагентФизЛицо());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И Не %1 И %2 И %3",
				КонтрагентФизЛицо(),
				"НЕ(1 В (ВЫБРАТЬ 1 Из РегистрСведений.СостоянияЭД КАК СостоянияЭД 
				|	ГДЕ СостоянияЭД.СсылкаНаОбъект = ТаблицаДокумента.Ссылка 
				|	И СостоянияЭД.ЭлектронныйДокумент.СодержитДанныеОМаркируемыхТоварах))",
				ДокументПроведен());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.КорректировкаРеализации Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
				|И НЕ(1 В (ВЫБРАТЬ 1 Из РегистрСведений.СостоянияЭД КАК СостоянияЭД 
				|	ГДЕ СостоянияЭД.СсылкаНаОбъект = ТаблицаДокумента.Ссылка 
				|	И СостоянияЭД.ЭлектронныйДокумент.СодержитДанныеОМаркируемыхТоварах))";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВнутреннееПотреблениеТоваров Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеНедостачТоваров Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ВыводИзОборотаИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтКлиента Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ПеремаркировкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1 И %2",
				ДокументПроведен(),
				КонтрагентФизЛицо());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабак);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И Не %1 И %2 И %3",
			КонтрагентФизЛицо(),
			"(1 В (ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка 
			|	ИЗ Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП ГДЕ ПриемкаТоваровИСМП.ДокументОснование = ТаблицаДокумента.Ссылка))",
			ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) +"
			|И (1 В (ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка 
			|	ИЗ Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП ГДЕ ПриемкаТоваровИСМП.ДокументОснование = ТаблицаДокумента.Ссылка))";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен());
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И (1 В (ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка 
			|	ИЗ Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП ГДЕ ПриемкаТоваровИСМП.ДокументОснование = ТаблицаДокумента.Ссылка))";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаИСМП = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И ТаблицаДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|	И ТаблицаДокумента.ОрганизацияПолучатель <> ТаблицаДокумента.Организация";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыНеТабакНеАТП);
			
		ИначеЕсли МетаданныеДокументаИСМП = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
			
			ТоварыПриход.ДопОтборы_Общие = СтрШаблон("И %1", ДокументПроведен()) + "
			|И ТаблицаДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|	И ТаблицаДокумента.ОрганизацияПолучатель <> ТаблицаДокумента.Организация
			|	И (1 В (ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка 
			|	ИЗ Документ.ПриемкаТоваровИСМП КАК ПриемкаТоваровИСМП ГДЕ ПриемкаТоваровИСМП.ДокументОснование = ТаблицаДокумента.Ссылка))";
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЕГАИС

// Позволяет переопределить имена реквизитов документа-основания для документа ЕГАИС.
//   (см. РасчетСтатусовОформленияЕГАИСПереопределяемый.ПриОпределенииРеквизитовОснования).
//
Процедура ПриОпределенииРеквизитовОснованияДляЕГАИС(МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС, Реквизиты) Экспорт
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Менеджер") <> Неопределено Тогда
		Реквизиты.Ответственный = "Менеджер";
	Иначе
		Реквизиты.Ответственный = "Ответственный";
	КонецЕсли;
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями
		Или МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			Реквизиты.ТорговыйОбъект = "СкладПолучатель";
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			Реквизиты.ТорговыйОбъект = "СкладОтправитель";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//Позволяет переопределить текст запроса выборки данных из документов-оснований для расчета статуса оформления.
//   См. РасчетСтатусовОформленияЕГАИСПереопределяемый.ПриОпределенииЗапросаТоварыДокументаОснования
//
Процедура ПриОпределенииЗапросаДляЕГАИС(
	МетаданныеДокументаОснования, МетаданныеДокументаЕГАИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
	ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента();
	ТабличныеЧастиДокумента = Новый Массив;
	ОтборНоменклатуры = "СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре";
	ОтборНоменклатурыТолькоМаркируемая = ОтборНоменклатуры + "
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	ОтборНоменклатурыТолькоНемаркируемая = ОтборНоменклатуры + "
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.ВнутреннееПотреблениеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие +"
				|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоМаркируемая);
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОтчетОРозничныхПродажах Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТоварыРасход.ИмяПоляНазначениеТЧТовары = "Помещение";
			ТоварыРасход.ИмяПоляНазначениеТЧСерии  = "Помещение";
			Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса() Тогда
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			Иначе
				ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатурыТолькоНемаркируемая);
			КонецЕсли;
		
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтКлиента Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Номенклатура ИНАЧЕ ТаблицаТовары.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ВЫБОР КОГДА ТаблицаТовары.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаТовары.Характеристика ИНАЧЕ ТаблицаТовары.ХарактеристикаОприходование КОНЕЦ";
			
			ТоварыПриход.ИмяПоляНоменклатураТЧСерии   = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Номенклатура ИНАЧЕ ТаблицаСерии.НоменклатураОприходование КОНЕЦ";
			ТоварыПриход.ИмяПоляХарактеристикаТЧСерии = "ВЫБОР КОГДА ТаблицаСерии.НоменклатураОприходование = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА ТаблицаСерии.Характеристика ИНАЧЕ ТаблицаСерии.ХарактеристикаОприходование КОНЕЦ";;
			
			ТоварыПриход.ДопОтборы_Общие = ТоварыПриход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатурыТолькоМаркируемая);
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеИзлишковТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
	
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			// не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		// Товары - приход и расход в одной ТЧ
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары   = "ТаблицаТовары.НоменклатураОприходование";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары = "ТаблицаТовары.ХарактеристикаОприходование";
			ТоварыПриход.ИмяПоляСерияТЧТовары          = "ТаблицаТовары.СерияОприходование";
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПриобретениеТоваровУслуг Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыПриход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваровУслуг Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ТТНИсходящаяЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыТТНИсходящаяЕГАИС",Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоМаркируемая);
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТоварыРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ТТНИсходящаяЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыТТНИсходящаяЕГАИС",Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатурыТолькоНемаркируемая);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие;
			НоменклатураРасход.ДопСоединения_Общие = ТоварыРасход.ДопСоединения_Общие;
			
			НоменклатураРасход.ДопОтборы_Общие = НоменклатураРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("ЧекЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыЧекЕГАИС",Документы.ЧекЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТабличныеЧастиДокумента, ОтборНоменклатуры);
		
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ДопОтборы_Общие = ТоварыРасход.ДопОтборы_Общие;
			НоменклатураРасход.ДопСоединения_Общие = ТоварыРасход.ДопСоединения_Общие;
			
			НоменклатураРасход.ДопОтборы_Общие = НоменклатураРасход.ДопОтборы_Общие + "
			|И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
			|И ТаблицаДокумента.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ШаблонОписанияСвязанныеДокументы("АктСписанияЕГАИС"));
			ДополнительныеПараметрыЗапроса.Вставить("КонечныеСтатусыАктСписанияЕГАИС",Документы.АктСписанияЕГАИС.КонечныеСтатусы());
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, НоменклатураРасход, ОтборНоменклатурыТолькоМаркируемая);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СписаниеНедостачТоваров Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТекстЗапроса = ТекстЗапросаТоварыДокументаОснования(МетаданныеДокументаОснования, ТоварыРасход, ОтборНоменклатуры);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Шаблоны

Функция ШаблонОписанияПриходнойТабличнойЧастиДокумента(ИмяТабличнойЧастиТовары = "Товары", ИмяТабличнойЧастиСерии = NULL, ПостфиксВременнойТаблицы = "")
	
	Возврат ШаблонОписанияТабличнойЧастиДокумента(Истина, ИмяТабличнойЧастиТовары, ИмяТабличнойЧастиСерии, ПостфиксВременнойТаблицы);
	
КонецФункции

Функция ШаблонОписанияРасходнойТабличнойЧастиДокумента(ИмяТабличнойЧастиТовары = "Товары", ИмяТабличнойЧастиСерии = NULL, ПостфиксВременнойТаблицы = "")
	
	Возврат ШаблонОписанияТабличнойЧастиДокумента(Ложь, ИмяТабличнойЧастиТовары, ИмяТабличнойЧастиСерии, ПостфиксВременнойТаблицы);
	
КонецФункции

Функция ШаблонОписанияСвязанныеДокументы(ИмяСвязанногоДокумента, ЭтоПриход = Ложь)

	Если ЭтоПриход Тогда
		Шаблон = ШаблонОписанияПриходнойТабличнойЧастиДокумента("", Неопределено);
	Иначе
		Шаблон = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", Неопределено);
	КонецЕсли;
	Шаблон.ДопСоединения_Общие = СтрШаблон("
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%1.Товары КАК СвязанныеДокументы
		|		ПО СвязанныеДокументы.Ссылка.ДокументОснование = ТаблицаДокумента.Ссылка
		|		И СвязанныеДокументы.Ссылка.Проведен
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС%1
		|		ПО СтатусыДокументовЕГАИС%1.Документ = СвязанныеДокументы.Ссылка",
		ИмяСвязанногоДокумента);
	
	Шаблон.ДопОтборы_Общие = СтрШаблон("И СтатусыДокументовЕГАИС%1.Статус НЕ В(&КонечныеСтатусы%1)", ИмяСвязанногоДокумента);
	
	Шаблон.ИмяПоляНоменклатураТЧТовары   = "СвязанныеДокументы.Номенклатура";
	Шаблон.ИмяПоляХарактеристикаТЧТовары = "СвязанныеДокументы.Характеристика";
	Шаблон.ИмяПоляСерияТЧТовары          = "СвязанныеДокументы.Серия";
	Шаблон.ИмяПоляКоличествоТЧТовары     = "-СвязанныеДокументы.Количество";
	
	Возврат Шаблон;

КонецФункции

Функция ШаблонОписанияТабличнойЧастиДокумента(
	ВидДвиженияПриход, ИмяТабличнойЧастиТовары, ИмяТабличнойЧастиСерии, ПостфиксВременнойТаблицы)
	
	ОписаниеТЧ = Новый Структура;
	// Вид движения
	ОписаниеТЧ.Вставить("ВидДвиженияПриход",             ВидДвиженияПриход);
	// ТЧ Товары
	ОписаниеТЧ.Вставить("ИмяТабличнойЧастиТовары",       ИмяТабличнойЧастиТовары);
	// ТЧ Серии
	ОписаниеТЧ.Вставить("ИмяТабличнойЧастиСерии",        ИмяТабличнойЧастиСерии);
	ОписаниеТЧ.Вставить("АвтоПоискСерий",                (ИмяТабличнойЧастиСерии = NULL));
	// Имена полей ТЧ Товары
	ОписаниеТЧ.Вставить("ИмяПоляНоменклатураТЧТовары",   "ТаблицаТовары.Номенклатура");
	ОписаниеТЧ.Вставить("ИмяПоляХарактеристикаТЧТовары", "ТаблицаТовары.Характеристика");
	ОписаниеТЧ.Вставить("ИмяПоляНазначениеТЧТовары",     "Назначение");
	ОписаниеТЧ.Вставить("ИмяПоляСерияТЧТовары",          "ТаблицаТовары.Серия");
	ОписаниеТЧ.Вставить("ИмяПоляКоличествоТЧТовары",     "ТаблицаТовары.Количество");
	// Имена полей ТЧ Серии
	ОписаниеТЧ.Вставить("ИмяПоляНоменклатураТЧСерии",    "ТаблицаСерии.Номенклатура");
	ОписаниеТЧ.Вставить("ИмяПоляХарактеристикаТЧСерии",  "ТаблицаСерии.Характеристика");
	ОписаниеТЧ.Вставить("ИмяПоляНазначениеТЧСерии",      "Назначение");
	ОписаниеТЧ.Вставить("ИмяПоляСерияТЧСерии",           "ТаблицаСерии.Серия");
	// Модификаторы текста запроса.
	ОписаниеТЧ.Вставить("ДопСоединения_Общие",           "");
	ОписаниеТЧ.Вставить("ДопСоединения_ТаблицаТовары",   "");
	ОписаниеТЧ.Вставить("ДопСоединения_ТаблицаСерии",    "");
	ОписаниеТЧ.Вставить("ДопОтборы_Общие",               "");
	ОписаниеТЧ.Вставить("ДопОтборы_ТаблицаТовары",       "");
	ОписаниеТЧ.Вставить("ДопОтборы_ТаблицаСерии",        "");
	// Номер таблицы по порядку.
	ОписаниеТЧ.Вставить("ПостфиксВременнойТаблицы",      ПостфиксВременнойТаблицы);
	
	Возврат ОписаниеТЧ;
	
КонецФункции

Функция ТекстЗапросаТоварыДокументаОснования(
	МетаданныеДокументаОснования,
	ОписаниеТабличныхЧастей,
	ОтборНоменклатуры)
	
	Если ТипЗнч(ОписаниеТабличныхЧастей) <> Тип("Массив") Тогда
		// Передано описание единственной табличной части
		ТабличныеЧастиОснования = Новый Массив;
		ТабличныеЧастиОснования.Добавить(ОписаниеТабличныхЧастей);
	Иначе
		ТабличныеЧастиОснования = ОписаниеТабличныхЧастей;
	КонецЕсли;
	
	КоличествоТЧ = ТабличныеЧастиОснования.Количество();
	Если КоличествоТЧ = 0 Тогда
		УточнениеОшибки = НСтр("ru = 'Некорректный вызов ТекстЗапросаДляРасчетаСтатусаОформления'");
		ВызватьИсключение ИнтеграцияИСКлиентСервер.ТекстОшибки(
			ИнтеграцияИСКлиентСервер.ПредставлениеПодсистемы(), УточнениеОшибки); // Некорректный вызов ТекстЗапросаДляРасчетаСтатусаОформления
	КонецЕсли;
	
	Для Каждого ОписаниеТЧ Из ТабличныеЧастиОснования Цикл
		
		Если ОписаниеТЧ.АвтоПоискСерий Тогда
			
			Если КоличествоТЧ = 1 И МетаданныеДокументаОснования.ТабличныеЧасти.Найти("Серии") <> Неопределено Тогда
				ОписаниеТЧ.ИмяТабличнойЧастиСерии = "Серии";
			ИначеЕсли МетаданныеДокументаОснования.ТабличныеЧасти.Найти(ОписаниеТЧ.ИмяТабличнойЧастиТовары + "Серии") <> Неопределено Тогда
				ОписаниеТЧ.ИмяТабличнойЧастиСерии = ОписаниеТЧ.ИмяТабличнойЧастиТовары + "Серии";
			Иначе
				ОписаниеТЧ.ИмяТабличнойЧастиСерии = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ШаблонВременнойТаблицыПодзапроса = 
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	%ИмяПоляНоменклатураТЧТовары% КАК Номенклатура,
	|	%ИмяПоляХарактеристикаТЧТовары% КАК Характеристика,
	|	ТаблицаТовары.%ИмяПоляНазначениеТЧТовары% КАК Назначение
	|ПОМЕСТИТЬ
	|	%ИмяВременнойТаблицы%
	|ИЗ
	|	Документ.%ИмяДокумента%%ИмяТабличнойЧастиТовары% КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В (&МассивДокументов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение";
	
	ШаблонЗапросаССериями =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	%ВидДвиженияПриход% КАК ЭтоДвижениеПриход,
	|	%ИмяПоляНоменклатураТЧТовары% КАК Номенклатура,
	|	%ИмяПоляХарактеристикаТЧТовары% КАК Характеристика,
	|	%ИмяПоляСерияТЧТовары% КАК Серия,
	|	%ИмяПоляКоличествоТЧТовары% КАК Количество
	|%СозданиеВременнойТаблицы%
	|ИЗ
	|	Документ.%ИмяДокумента%%ИмяТабличнойЧастиТовары% КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%ИмяДокумента% КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|%ДопСоединения_Общие%
	|%ДопСоединения_ТаблицаТовары%
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = %ИмяПоляНоменклатураТЧТовары%
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.%ИмяДокумента%%ИмяТабличнойЧастиСерии% КАК ТаблицаСерии
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|		И %ИмяПоляНоменклатураТЧСерии%   = %ИмяПоляНоменклатураТЧТовары%
	|		И %ИмяПоляХарактеристикаТЧСерии% = %ИмяПоляХарактеристикаТЧТовары%
	|		И ТаблицаСерии.%ИмяПоляНазначениеТЧСерии%     = ТаблицаТовары.%ИмяПоляНазначениеТЧТовары%
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	|	И %ИмяПоляНоменклатураТЧСерии% ЕСТЬ NULL
	|	И %ОтборНоменклатуры%
	|%ДопОтборы_Общие%
	|%ДопОтборы_ТаблицаТовары%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка КАК Ссылка,
	|	%ВидДвиженияПриход% КАК ЭтоДвижениеПриход,
	|	%ИмяПоляНоменклатураТЧСерии% КАК Номенклатура,
	|	%ИмяПоляХарактеристикаТЧСерии% КАК Характеристика,
	|	%ИмяПоляСерияТЧСерии% КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество
	|ИЗ
	|	Документ.%ИмяДокумента%%ИмяТабличнойЧастиСерии% КАК ТаблицаСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%ИмяДокумента% КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаСерии.Ссылка
	|%ДопСоединения_Общие%
	|%ДопСоединения_ТаблицаСерии%
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = %ИмяПоляНоменклатураТЧСерии%
	|	ЛЕВОЕ СОЕДИНЕНИЕ %ИмяВременнойТаблицы% КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|		И %ИмяПоляНоменклатураТЧСерии%   = ТаблицаТовары.Номенклатура
	|		И %ИмяПоляХарактеристикаТЧСерии% = ТаблицаТовары.Характеристика
	|		И ТаблицаСерии.%ИмяПоляНазначениеТЧСерии%     = ТаблицаТовары.Назначение
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура ЕСТЬ НЕ NULL
	|	И %ОтборНоменклатуры%
	|%ДопОтборы_Общие%
	|%ДопОтборы_ТаблицаСерии%
	|";
	
	ШаблонЗапросаБезСерий =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	%ВидДвиженияПриход% КАК ЭтоДвижениеПриход,
	|	%ИмяПоляНоменклатураТЧТовары% КАК Номенклатура,
	|	%ИмяПоляХарактеристикаТЧТовары% КАК Характеристика,
	|	%ИмяПоляСерияТЧТовары% КАК Серия,
	|	%ИмяПоляКоличествоТЧТовары% КАК Количество
	|%СозданиеВременнойТаблицы%
	|ИЗ
	|	Документ.%ИмяДокумента%%ИмяТабличнойЧастиТовары% КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%ИмяДокумента% КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|%ДопСоединения_Общие%
	|%ДопСоединения_ТаблицаТовары%
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = %ИмяПоляНоменклатураТЧТовары%
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	|	И %ОтборНоменклатуры%
	|%ДопОтборы_Общие%
	|%ДопОтборы_ТаблицаТовары%
	|";
	
	МассивТекстовСуммированияЗапросов = Новый Массив;
	МассивТекстовОсновногоЗапроса = Новый Массив;
	
	Для НомерТаблицы = 0 По КоличествоТЧ - 1 Цикл
		
		ОписаниеТЧ = ТабличныеЧастиОснования[НомерТаблицы];
		
		ИмяТабличнойЧастиТовары = ?(ОписаниеТЧ.ИмяТабличнойЧастиТовары = "", "", "." + ОписаниеТЧ.ИмяТабличнойЧастиТовары);
		
		Если ОписаниеТЧ.ИмяТабличнойЧастиСерии = Неопределено Тогда
			ТекстЗапросаПоТабличнойЧасти = ШаблонЗапросаБезСерий;
		Иначе
			ТекстЗапросаПоТабличнойЧасти = ШаблонЗапросаССериями;
		КонецЕсли;
		
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяДокумента%", МетаданныеДокументаОснования.Имя);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%СозданиеВременнойТаблицы%",
			?(НомерТаблицы = 0, "ПОМЕСТИТЬ " + РасчетСтатусовОформленияИС.ИмяВременнойТаблицыДляВыборкиДанныхДокумента(), ""));
		
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ВидДвиженияПриход%",
			Формат(ОписаниеТЧ.ВидДвиженияПриход, "БЛ=Ложь; БИ=Истина"));
		
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяТабличнойЧастиТовары%",       ИмяТабличнойЧастиТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляНоменклатураТЧТовары%",   ОписаниеТЧ.ИмяПоляНоменклатураТЧТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляХарактеристикаТЧТовары%", ОписаниеТЧ.ИмяПоляХарактеристикаТЧТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляНазначениеТЧТовары%",     ОписаниеТЧ.ИмяПоляНазначениеТЧТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляСерияТЧТовары%",          ОписаниеТЧ.ИмяПоляСерияТЧТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляКоличествоТЧТовары%",     ОписаниеТЧ.ИмяПоляКоличествоТЧТовары);
		
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопСоединения_Общие%",           ОписаниеТЧ.ДопСоединения_Общие);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопСоединения_ТаблицаТовары%",   ОписаниеТЧ.ДопСоединения_ТаблицаТовары);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопОтборы_Общие%",               ОписаниеТЧ.ДопОтборы_Общие);
		ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопОтборы_ТаблицаТовары%",       ОписаниеТЧ.ДопОтборы_ТаблицаТовары);
		
		Если ОписаниеТЧ.ИмяТабличнойЧастиСерии <> Неопределено Тогда
			
			ИмяВременнойТаблицы = МетаданныеДокументаОснования.Имя + ОписаниеТЧ.ИмяТабличнойЧастиТовары + ОписаниеТЧ.ПостфиксВременнойТаблицы;
			//Временная таблица - получение запроса из шаблона
			ТекстЗапросаВременнойТаблицы = ШаблонВременнойТаблицыПодзапроса;
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяДокумента%",                  МетаданныеДокументаОснования.Имя);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяВременнойТаблицы%",           ИмяВременнойТаблицы);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяПоляНоменклатураТЧТовары%",   ОписаниеТЧ.ИмяПоляНоменклатураТЧТовары);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяПоляХарактеристикаТЧТовары%", ОписаниеТЧ.ИмяПоляХарактеристикаТЧТовары);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяПоляНазначениеТЧТовары%",     ОписаниеТЧ.ИмяПоляНазначениеТЧТовары);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяПоляСерияТЧТовары%",          ОписаниеТЧ.ИмяПоляСерияТЧТовары);
			ТекстЗапросаВременнойТаблицы = СтрЗаменить(ТекстЗапросаВременнойТаблицы, "%ИмяТабличнойЧастиТовары%",       ИмяТабличнойЧастиТовары);
			МассивТекстовСуммированияЗапросов.Добавить(ТекстЗапросаВременнойТаблицы);
			
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяВременнойТаблицы%",           ИмяВременнойТаблицы);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяТабличнойЧастиСерии%",
				?(ОписаниеТЧ.ИмяТабличнойЧастиСерии = "", "", "." + ОписаниеТЧ.ИмяТабличнойЧастиСерии));
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляНоменклатураТЧСерии%",   ОписаниеТЧ.ИмяПоляНоменклатураТЧСерии);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляХарактеристикаТЧСерии%", ОписаниеТЧ.ИмяПоляХарактеристикаТЧСерии);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляНазначениеТЧСерии%",     ОписаниеТЧ.ИмяПоляНазначениеТЧСерии);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ИмяПоляСерияТЧСерии%",          ОписаниеТЧ.ИмяПоляСерияТЧСерии);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопСоединения_ТаблицаСерии%",   ОписаниеТЧ.ДопСоединения_ТаблицаСерии);
			ТекстЗапросаПоТабличнойЧасти = СтрЗаменить(ТекстЗапросаПоТабличнойЧасти, "%ДопОтборы_ТаблицаСерии%",       ОписаниеТЧ.ДопОтборы_ТаблицаСерии);
			
		КонецЕсли;
		
		МассивТекстовОсновногоЗапроса.Добавить(ТекстЗапросаПоТабличнойЧасти);
		
	КонецЦикла;
	
	ШаблонОбъединение = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	МассивТекстовСуммированияЗапросов.Добавить(СтрСоединить(МассивТекстовОсновногоЗапроса, ШаблонОбъединение));
	
	ШаблонСуммирование = "
	|
	|;
	|
	|";
	
	ОбщийЗапрос = СтрСоединить(МассивТекстовСуммированияЗапросов,ШаблонСуммирование);
	ОбщийЗапрос = СтрЗаменить(ОбщийЗапрос, "%ОтборНоменклатуры%", ОтборНоменклатуры);
	Возврат ОбщийЗапрос;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ХозяйственнаяОперацияИмпорт() Экспорт
	
	Возврат
	"ТаблицаДокумента.ХозяйственнаяОперация В (
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка))";
	
КонецФункции

Функция КонтрагентФизЛицо()
	
	Возврат
	"ТаблицаДокумента.Контрагент.ЮрФизлицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)";
	
КонецФункции

Функция ДокументПроведен()
	
	Возврат "ТаблицаДокумента.Проведен";
	
КонецФункции

#КонецОбласти

#КонецОбласти