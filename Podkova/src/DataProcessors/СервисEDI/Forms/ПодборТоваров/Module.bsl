
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторФормы = Параметры.ИдентификаторФормы;
	
	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	ЗагрузитьНастройкиОтбораПоУмолчанию(ИспользоватьХарактеристики);
	
	Элементы.ТоварыХарактеристика.Видимость = ИспользоватьХарактеристики;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	РеквизитыНоменклатуры = РеквизитыНоменклатуры(Элементы.Товары.ТекущиеДанные.Номенклатура);
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, РеквизитыНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТаблицуТоваров(Команда)
	
	Если Товары.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Таблица товаров будет перезаполнена. Продолжить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьТаблицуТоваровЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьТаблицуТоваровНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЭлектронныйДокумент(Команда)
	
	АдресВременногоХранилища = ВременноеХранилищеТовара(Товары, ИдентификаторФормы);
	ОповеститьОВыборе(АдресВременногоХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию(ИспользоватьХарактеристики)
	
	СхемаКомпоновки = Новый СхемаКомпоновкиДанных;
	
	Источник = СхемаКомпоновки.ИсточникиДанных.Добавить();
	Источник.Имя = "Источник";
	Источник.ТипИсточникаДанных = "local";
	
	Набор = СхемаКомпоновки.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	Набор.Имя = Источник.Имя;
	Набор.ИсточникДанных = Источник.Имя;
	Набор.АвтоЗаполнениеДоступныхПолей = Истина;
	Набор.Запрос = ТекстЗапросаПодборТоваров(ИспользоватьХарактеристики);
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки);
	АдресСхемыКомпоновки = ПоместитьВоВременноеХранилище(СхемаКомпоновки, ЭтотОбъект.УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновки));
	
	ТекНастройки = КомпоновщикНастроек.Настройки;
	
	// Выбранные поля
	Для Каждого Элемент Из ТекНастройки.Выбор.ДоступныеПоляВыбора.Элементы Цикл
		Если Не Элемент.Папка Тогда
			Поле = ТекНастройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			Поле.Использование = Истина;
			Поле.Поле = Элемент.Поле;
		КонецЕсли;
	КонецЦикла;
	Группа = ТекНастройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	Группа.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	
	ЭлементОтбора = ТекНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидНоменклатуры");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование  = Ложь;
	ЭлементОтбора.ПравоеЗначение = Справочники.Номенклатура.ПустаяСсылка();
	
	ЭлементОтбора = ТекНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Номенклатура");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВИерархии;
	ЭлементОтбора.Использование  = Ложь;
	ЭлементОтбора.ПравоеЗначение = Справочники.Номенклатура.ПустаяСсылка();

КонецПроцедуры

&НаСервере
Функция ТекстЗапросаПодборТоваров(ИспользоватьХарактеристики, ИспользоватьОтборПоНоменклатуре = Ложь)
	
	Если ИспользоватьХарактеристики Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.ВидНоменклатуры КАК ВидНоменклатуры,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Код КАК Код,
			|	ВложенныйЗапрос.Артикул КАК Артикул,
			|	ВложенныйЗапрос.Наименование КАК Наименование,
			|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС
			|ИЗ
			|	(ВЫБРАТЬ
			|		Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
			|		Номенклатура.Ссылка КАК Номенклатура,
			|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
			|		Номенклатура.Код КАК Код,
			|		Номенклатура.Артикул КАК Артикул,
			|		Номенклатура.Наименование КАК Наименование,
			|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		Номенклатура.СтавкаНДС КАК СтавкаНДС
			|	ИЗ
			|		Справочник.Номенклатура КАК Номенклатура
			|	ГДЕ
			|		НЕ Номенклатура.ПометкаУдаления
			|		И &УсловиеОтбораНоменклатуры
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Номенклатура.ВидНоменклатуры,
			|		Номенклатура.Ссылка,
			|		Характеристики.Ссылка,
			|		Номенклатура.Код,
			|		Номенклатура.Артикул,
			|		Номенклатура.Наименование,
			|		Номенклатура.ЕдиницаИзмерения,
			|		Номенклатура.СтавкаНДС
			|	ИЗ
			|		Справочник.ХарактеристикиНоменклатуры КАК Характеристики
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			|			ПО Характеристики.Владелец = Номенклатура.ВидНоменклатуры
			|				И (НЕ Номенклатура.ПометкаУдаления)
			|				И (НЕ Характеристики.ПометкаУдаления)
			|	ГДЕ
			|		&УсловиеОтбораНоменклатуры
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Номенклатура.ВидНоменклатуры,
			|		Номенклатура.Ссылка,
			|		Характеристики.Ссылка,
			|		Номенклатура.Код,
			|		Номенклатура.Артикул,
			|		Номенклатура.Наименование,
			|		Номенклатура.ЕдиницаИзмерения,
			|		Номенклатура.СтавкаНДС
			|	ИЗ
			|		Справочник.ХарактеристикиНоменклатуры КАК Характеристики
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			|			ПО Характеристики.Владелец = Номенклатура.Ссылка
			|				И (НЕ Номенклатура.ПометкаУдаления)
			|				И (НЕ Характеристики.ПометкаУдаления)) КАК ВложенныйЗапрос
			|ГДЕ
			|	&УсловиеОтбораНоменклатуры";
	Иначе
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
			|	Номенклатура.Ссылка КАК Номенклатура,
			|	Номенклатура.Код КАК Код,
			|	Номенклатура.Артикул КАК Артикул,
			|	Номенклатура.Наименование КАК Наименование,
			|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Номенклатура.СтавкаНДС КАК СтавкаНДС
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	НЕ Номенклатура.ПометкаУдаления
			|	И &УсловиеОтбораНоменклатуры";
	КонецЕсли;
	
	СтрокаОтбораНоменклатуры = ?(ИспользоватьОтборПоНоменклатуре, "Номенклатура.Ссылка = &Номенклатура", "ИСТИНА");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораНоменклатуры", СтрокаОтбораНоменклатуры);
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуТоваровЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Товары.Количество() = 0 ИЛИ КодВозвратаДиалога.Да = Результат Тогда
		ЗаполнитьТаблицуТоваровНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТоваровНаСервере(ПроверятьЗаполнение = Истина)
	
	СхемаКомпоновки = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновки);
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновки, КомпоновщикНастроек.Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаТоваров = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Товары.Загрузить(ТаблицаТоваров);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВременноеХранилищеТовара(Знач ВыбранныеТовары, Знач Идентификатор)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Наименование КАК Наименование,
		|	ТаблицаТоваров.Артикул КАК Артикул,
		|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Характеристика КАК Характеристика,
		|	ВТ_Товары.Характеристика.Наименование КАК ХарактеристикаНаименование,
		|	ВТ_Товары.Артикул КАК Артикул,
		|	ВТ_Товары.Наименование КАК Наименование,
		|	ВТ_Товары.ЕдиницаИзмерения КАК БазоваяЕдиницаСсылка,
		|	ЕСТЬNULL(ЕдиницыИзмерения.Код, """") КАК БазоваяЕдиницаКод,
		|	ЕСТЬNULL(ЕдиницыИзмерения.Наименование, """") КАК БазоваяЕдиницаНаименование,
		|	ЕСТЬNULL(ЕдиницыИзмерения.НаименованиеПолное, """") КАК БазоваяЕдиницаНаименованиеПолное,
		|	ЕСТЬNULL(ЕдиницыИзмерения.МеждународноеСокращение, """") КАК БазоваяЕдиницаМеждународноеСокращение,
		|	1 КАК ЕдиницаХраненияОстатковКоэффициент,
		|	ВТ_Товары.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО ВТ_Товары.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Штрихкоды.Штрихкод КАК Штрихкод,
		|	Штрихкоды.Номенклатура КАК Номенклатура,
		|	Штрихкоды.Характеристика КАК Характеристика,
		|	Штрихкоды.ЕдиницаИзмерения КАК БазоваяЕдиницаСсылка
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО (ВТ_Товары.Номенклатура = Штрихкоды.Номенклатура)
		|			И (ВТ_Товары.Характеристика = Штрихкоды.Характеристика)
		|			И (ВТ_Товары.ЕдиницаИзмерения = Штрихкоды.ЕдиницаИзмерения)";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ВыбранныеТовары.Выгрузить());
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаТоваров = МассивРезультатов[1].Выгрузить();
	
	Если НЕ МассивРезультатов[2].Пустой() Тогда
		ТаблицаТоваров.Колонки.Добавить("Штрихкоды");
		ТаблицаТоваров.Индексы.Добавить("Номенклатура,Характеристика,БазоваяЕдиницаСсылка");
		ПараметрыОтбора = Новый Структура("Номенклатура,Характеристика,БазоваяЕдиницаСсылка");
		ВыборкаТоваров = МассивРезультатов[2].Выбрать();
		Пока ВыборкаТоваров.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ВыборкаТоваров);
			МассивСтрокТовара = ТаблицаТоваров.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТовара Из МассивСтрокТовара Цикл
				Если СтрокаТовара.Штрихкоды = Неопределено Тогда
					ТаблицаШтрихкодов = Новый ТаблицаЗначений();
					ТаблицаШтрихкодов.Колонки.Добавить("Штрихкод");
					ТаблицаШтрихкодов.Колонки.Добавить("ЕдиницаИзмеренияКод");
					СтрокаТовара.Штрихкоды = ТаблицаШтрихкодов;
				КонецЕсли;
				СтрокаШтрихкода = СтрокаТовара.Штрихкоды.Добавить();
				СтрокаШтрихкода.Штрихкод = ВыборкаТоваров.Штрихкод;
				СтрокаШтрихкода.ЕдиницаИзмеренияКод = СтрокаТовара.БазоваяЕдиницаКод;
			КонецЦикла;
		КонецЦикла
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаТоваров, Идентификатор);
	
КонецФункции

&НаСервере
Функция РеквизитыНоменклатуры(Номенклатура)

	ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПодборТоваров(ИспользоватьХарактеристики, Истина);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Результат = Новый Структура;
	Для Каждого КолонкаТаблицы Из ТаблицаДанных.Колонки Цикл
		Результат.Вставить(КолонкаТаблицы.Имя, КолонкаТаблицы.ТипЗначения.ПривестиЗначение());
	КонецЦикла;
	
	Если ТаблицаДанных.Количество() Тогда
		ЗаполнитьЗначенияСвойств(Результат, ТаблицаДанных[0]);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти
