
// Очищает регистр сведений "Реестр документов" от битых ссылок.
//
// Параметры:
//  ТипыДокументов - Массив - Массив типов документов, для которых выполняется очистка;
//  РазмерПакета   - Число  - Ограничение количества типов объектов метаданных в одном
//                   пакете запроса.
//
// Возвращаемое значение:
//  Структура:
//   КоличествоСсылок - Число - Количество удаленных записей с битыми ссылками.
//
Функция ОчиститьНесуществующиеСсылкиВРеестреДокументов(ТипыДокументов = Неопределено, РазмерПакета = 10) Экспорт
	
	Если ТипыДокументов = Неопределено Тогда
		МетаданныеРегистра = Метаданные.НайтиПоПолномуИмени("РегистрСведений.РеестрДокументов");
		ТипыДокументов     = МетаданныеРегистра.Измерения.Ссылка.Тип.Типы();
	КонецЕсли;
	
	Счетчик = 0;
	ТипыКОбработке       = Новый Массив;
	НесуществующиеСсылки = Новый Массив;
	Для Каждого ТипДокумента Из ТипыДокументов Цикл
		
		Счетчик = Счетчик + 1;
		ТипыКОбработке.Добавить(ТипДокумента);
		
		Если ТипыКОбработке.Количество() % РазмерПакета = 0 Или Счетчик = ТипыДокументов.Количество() Тогда
			ТекстЗапроса = ТекстЗапросаНесуществующихСсылокРеестраДокументов(ТипыКОбработке);
			Запрос = Новый Запрос(ТекстЗапроса);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(НесуществующиеСсылки,
				Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
			
			ТипыКОбработке.Очистить();
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Ссылка Из НесуществующиеСсылки Цикл
		УдалитьНаборЗаписейВРеестре(Ссылка);
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("КоличествоСсылок", НесуществующиеСсылки.Количество());
	
	Возврат РезультатВыполнения;
	
КонецФункции

Функция ТекстЗапросаНесуществующихСсылокРеестраДокументов(ТипыДокументов) Экспорт
	
	ШаблонЗапроса = 
		"ВЫБРАТЬ
		|	РеестрДокументов.Ссылка
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|ГДЕ
		|	РеестрДокументов.Ссылка ССЫЛКА &ТаблицаДокумента
		|	И НЕ ИСТИНА В
		|				(ВЫБРАТЬ
		|					ИСТИНА
		|				ИЗ
		|					&ТаблицаДокумента КАК Документ
		|				ГДЕ
		|					РеестрДокументов.Ссылка = Документ.Ссылка)";
	
	ШаблонОбъединения = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	
	ТекстЗапроса = "";
	Для Каждого ТипДокумента Из ТипыДокументов Цикл
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
		ИмяДокумента        = МетаданныеДокумента.Имя;
		
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ШаблонОбъединения)
			+ СтрЗаменить(ШаблонЗапроса, "&ТаблицаДокумента", "Документ." + ИмяДокумента);
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УдалитьНаборЗаписейВРеестре(СсылкаНаДокумент)
	
	НаборЗаписей = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Ссылка.Установить(СсылкаНаДокумент);
	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	// записываем набор записей
	НаборЗаписей.Записать();
	
КонецПроцедуры
