
&НаСервере
Процедура ПриСозданииНаСервере()

	//ВыборкаВыплат=РегистрыСведений.ШМ_Затраты.Выбрать();      
	ВыборкаВыплат = ПолучитьШМ_Затраты(); 
	Если ВыборкаВыплат.Количество() > 0 Тогда 
		
		Для Каждого стр из ВыборкаВыплат Цикл
						
			СтрокаТаб = Затраты.Добавить();
			СтрокаТаб.Затрата=стр.Затрата;
			СтрокаТаб.Сумма=стр.Сумма;
			СтрокаТаб.Сотрудник=стр.Сотрудник;
			СтрокаТаб.Профессия=стр.Профессия;
			СтрокаТаб.Период = стр.Период; 
			
		КонецЦикла;  
		
	КонецЕсли;
	
	// Из этого условия следует, что если уже есть какие-то записи в ШМ_затраты за эту смену, то не будем добавлять сотрудников 
	// из текущей смены. Это нас не встраивает, тк мы используем этот  функционал для расчета ЗП(деньги, которые забирают 
	// сотрудники в конце смены
	//Если Затраты.Количество()=0 Тогда
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШМ_БригадыСрезПоследних.Должность КАК Должность,
	|	ШМ_БригадыСрезПоследних.Помощник КАК Помощник,
	|	ШМ_БригадыСрезПоследних.ИмяКомпьютера КАК ИмяКомпьютера,
	|	ШМ_БригадыСрезПоследних.Сотрудник КАК Сотрудник,
	|	ШМ_БригадыСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.ШМ_Бригады.СрезПоследних КАК ШМ_БригадыСрезПоследних
	|ГДЕ
	|	ШМ_БригадыСрезПоследних.ИмяКомпьютера = &ИмяКомпьютера";  
	
    ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	Запрос.УстановитьПараметр("ИмяКомпьютера", ТекущееРабочееМесто.Наименование);
	ВыборкаЗатрат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаВыборкаЗатрат Из ВыборкаЗатрат Цикл
		СтрокаТаб = Затраты.Добавить();
		СтрокаТаб.Затрата=Справочники.ШМ_Затраты.НайтиПоНаименованию("получил");
		СтрокаТаб.Сумма=0;
		СтрокаТаб.Сотрудник=СтрокаВыборкаЗатрат.Сотрудник;
		СтрокаТаб.Профессия=СтрокаВыборкаЗатрат.Должность;
		СтрокаТаб.Период = ТекущаяДата();
	КонецЦикла;
		
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НачалоСмены()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_СменыСрезПоследних.Период КАК Период,
		|	ШМ_СменыСрезПоследних.ИмяКомпьютера КАК ИмяКомпьютера,
		|	ШМ_СменыСрезПоследних.НомерСмены КАК НС
		|ИЗ
		|	РегистрСведений.ШМ_Смены.СрезПоследних(
		|			,
		|			ИмяКомпьютера = &ИмяКомпьютера
		|				И СменаЗакрыта = ЛОЖЬ) КАК ШМ_СменыСрезПоследних";

	//Запрос.УстановитьПараметр("Вчера",НачалоДня(ТекущаяДата())-1); 
	ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	Запрос.УстановитьПараметр("ИмяКомпьютера", ТекущееРабочееМесто.Наименование);
	Выборка = Запрос.Выполнить().Выгрузить();
				
    Если Выборка.Количество() > 0 Тогда 
		Возврат Выборка[0].Период;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
	//1softpro ---
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	ОКНаСервере();
	ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОКНаСервере()
	
	НачалоСмены=НачалоСмены();
	
	Для Сч=1 По 6 Цикл
	
	НовыйНаборЗаписей = РегистрыСведений.ШМ_Затраты.СоздатьНаборЗаписей();
	НовыйНаборЗаписей.Прочитать();
	Для Каждого СтрокаЗатрат Из НовыйНаборЗаписей Цикл
		Если СтрокаЗатрат.Период>=НачалоСмены Тогда
			НовыйНаборЗаписей.Удалить(СтрокаЗатрат);
		КонецЕсли;
	КонецЦикла;
	НовыйНаборЗаписей.Записать();
	
	КонецЦикла;
	
	//время = НачалоДня(ТекущаяДата());
	//время = ТекущаяДата();
	Для каждого стр из Затраты Цикл
		МенеджерЗатрат=РегистрыСведений.ШМ_Затраты.СоздатьМенеджерЗаписи();
		МенеджерЗатрат.Затрата = Стр.затрата;
		МенеджерЗатрат.Период = Стр.Период;;
		МенеджерЗатрат.Сотрудник=Стр.Сотрудник;
		МенеджерЗатрат.Профессия=Стр.Профессия;
		МенеджерЗатрат.Сумма = Стр.Сумма;
		МенеджерЗатрат.Записать();
		//время = время+1;
		//НовыйНаборЗаписей = РегистрыСведений.ШМ_Затраты.СоздатьНаборЗаписей();
		//НовыйНаборЗаписей.Отбор.затрата.Установить(Стр.затрата, Истина);
		//НовыйНаборЗаписей.Отбор.Период.Установить(время, Истина);
		//НовыйНаборЗаписей.Прочитать();
		//НоваяЗаписьНабора = НовыйНаборЗаписей.Добавить();
		//НоваяЗаписьНабора.затрата = Стр.затрата;
		//НоваяЗаписьНабора.Период = время;
		//НоваяЗаписьНабора.Сотрудник=Стр.Сотрудник;
		//НоваяЗаписьНабора.Сумма = Стр.Сумма;
		//НовыйНаборЗаписей.Записать();
		
		Если СокрЛП(стр.затрата.Наименование)="За стойку" Тогда
			СуммаНеЗабранного=Стр.Сумма;
			ВыборкаСтойки = РегистрыСведений.ШМ_Стойка.Выбрать();
			Пока ВыборкаСтойки.Следующий() Цикл
				Если ВыборкаСтойки.ДатаПродажи>=ВыборкаСтойки.ДатаПоступления Тогда
					Если (ВыборкаСтойки.Сотрудник1=Стр.Сотрудник) И (ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник1>0) Тогда
						СуммаНеЗабранного=СуммаНеЗабранного-ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник1;
						МенЗаписиСтойки=ВыборкаСтойки.ПолучитьМенеджерЗаписи();
						МенЗаписиСтойки.Прочитать();
						МенЗаписиСтойки.ДолженЗабратьДеньгиСотрудник1=0;
						МенЗаписиСтойки.Записать();
					КонецЕсли;
					Если (ВыборкаСтойки.Сотрудник2=Стр.Сотрудник) И (ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник2>0) Тогда
						СуммаНеЗабранного=СуммаНеЗабранного-ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник2;
						МенЗаписиСтойки=ВыборкаСтойки.ПолучитьМенеджерЗаписи();
						МенЗаписиСтойки.Прочитать();
						МенЗаписиСтойки.ДолженЗабратьДеньгиСотрудник2=0;
						МенЗаписиСтойки.Записать();
					КонецЕсли;
					Если (ВыборкаСтойки.Сотрудник3=Стр.Сотрудник) И (ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник3>0) Тогда
						СуммаНеЗабранного=СуммаНеЗабранного-ВыборкаСтойки.ДолженЗабратьДеньгиСотрудник3;
						МенЗаписиСтойки=ВыборкаСтойки.ПолучитьМенеджерЗаписи();
						МенЗаписиСтойки.Прочитать();
						МенЗаписиСтойки.ДолженЗабратьДеньгиСотрудник3=0;
						МенЗаписиСтойки.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
		Если Элемент.ТекущиеДанные.Период<НачалоДня(ТекущаяДата()-86400) Тогда
		Сообщить("Не заполнен правильно период!");
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Затрата.Пустая() Тогда
		Сообщить("Не заполнена затрата!");
		Отказ=Истина;                                                                         
		
		Возврат;
	КонецЕсли;
	
	Если Найти(Строка(Элемент.ТекущиеДанные.Затрата),"Зарплата")>0 Тогда
		Если Элемент.ТекущиеДанные.Сотрудник.Пустая() Тогда
			Сообщить("Не заполнен сотрудник!");
			Отказ=Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Найти(Строка(Элемент.ТекущиеДанные.Затрата),"Зарплата")>0 Тогда
		Если Элемент.ТекущиеДанные.Профессия.Пустая() Тогда
			Сообщить("Не заполнена профессия!");
			Отказ=Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;  
	
	ПередОкончаниемРедактированияНаСервере();		
	
КонецПроцедуры
&НаСервере
Процедура ПередОкончаниемРедактированияНаСервере()   
	
	Выборка = ЗапросОгр();
	Если Выборка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого сотрудник1 из ЭтотОбъект.Затраты Цикл
		Процент = ПолучитьПроцентВыработки(сотрудник1.Сотрудник, сотрудник1.Профессия);
		Для каждого сотрудник из Выборка Цикл 
			Если сотрудник.Исполнитель = сотрудник1.Сотрудник и сотрудник1.Сумма > сотрудник.Сумма * Процент /100 Тогда         
				сотрудник1.Сумма = сотрудник.Сумма * Процент /100;
				Сообщить("Вы указали зарплату выше максимальной!");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
КонецПроцедуры	
&НаКлиенте
Процедура ЗатратыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элемент.ТекущиеДанные.Период=ТекущаяДата(); 
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()

	лВыборка = ЗапросОгр();     
	Для каждого сотрудник из ЭтотОбъект.Затраты Цикл 
		Процент = ПолучитьПроцентВыработки(сотрудник.Сотрудник, сотрудник.Профессия);
		Для каждого сотрудник1 из лВыборка Цикл   
			Если сотрудник.Сотрудник = сотрудник1.Исполнитель Тогда 
				сотрудник.Сумма = сотрудник1.Сумма * Процент / 100;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроцентВыработки(сотрудник, должность)  
	
	Если должность.Наименование = "Шиномонтажник" Тогда   
		лТекст = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.ПроцентВыработки КАК ПроцентВыработки,
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.Период КАК Период
			|ИЗ
			|	РегистрСведений.ШМ_СменныйОкладШиномонтажника.СрезПоследних КАК ШМ_СменныйОкладШиномонтажникаСрезПоследних
			|ГДЕ
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.Сотрудник = &Сотрудник
			|
			|СГРУППИРОВАТЬ ПО
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.Сотрудник,
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.ПроцентВыработки,
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	ШМ_СменныйОкладШиномонтажникаСрезПоследних.Период УБЫВ
			|";

		лЗапрос = Новый Запрос(лТекст);
		лЗапрос.УстановитьПараметр("Сотрудник", сотрудник);
		лВыборка = лЗапрос.Выполнить().Выгрузить();  
					
	ИначеЕсли должность.Наименование = "Съемщик" Тогда  
		лТекст = "
			|ВЫБРАТЬ
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.ПроцентВыработки КАК ПроцентВыработки,
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.Период КАК Период
			|ИЗ
			|	РегистрСведений.ШМ_СменныйОкладСъемщика.СрезПоследних КАК ШМ_СменныйОкладСъемщикаСрезПоследних
			|ГДЕ
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.Сотрудник = &Сотрудник
			|
			|СГРУППИРОВАТЬ ПО
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.Сотрудник,
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.ПроцентВыработки,
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	ШМ_СменныйОкладСъемщикаСрезПоследних.Период УБЫВ
			|";

		лЗапрос = Новый Запрос(лТекст);
		лЗапрос.УстановитьПараметр("Сотрудник", сотрудник);
		лВыборка = лЗапрос.Выполнить().Выгрузить();

		
	ИначеЕсли должность.Наименование = "Правщик дисков" Тогда  
		лТекст = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.ПроцентВыработки КАК ПроцентВыработки,
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.Период КАК Период
			|ИЗ
			|	РегистрСведений.ШМ_СменныйОкладДископравщика.СрезПоследних КАК ШМ_СменныйОкладДископравщикаСрезПоследних
			|ГДЕ
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.Сотрудник = &Сотрудник
			|
			|СГРУППИРОВАТЬ ПО
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.Сотрудник,
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.ПроцентВыработки,
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	ШМ_СменныйОкладДископравщикаСрезПоследних.Период УБЫВ
			|";

		лЗапрос = Новый Запрос(лТекст);
		лЗапрос.УстановитьПараметр("Сотрудник", сотрудник);
		лВыборка = лЗапрос.Выполнить().Выгрузить();
		
	Иначе 
		Возврат 50
	КонецЕсли;
	
	//Если лВыборка.Количество() > 0 Тогда
	//	Процент = лВыборка[0].ПроцентВыработки; 
	//Иначе 
	//	Процент= 100;	
	//КонецЕсли;	

	Возврат 50

КонецФункции	
&НаСервере
Функция ЗапросОгр()
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = "ВЫБРАТЬ
	         |	ШМ_ИсполнителиРабот.Исполнитель КАК Исполнитель,
	         |	СУММА(ШМ_ИсполнителиРабот.Сумма) КАК Сумма,
	         |	ШМ_ИсполнителиРабот.Должность КАК Должность
	         |ИЗ
	         |	РегистрСведений.ШМ_ИсполнителиРабот КАК ШМ_ИсполнителиРабот
	         |ГДЕ
	         |	ШМ_ИсполнителиРабот.Реализация.ИмяКомпьютера = &ИмяКомпьютера
	         |	И ШМ_ИсполнителиРабот.Реализация.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ШМ_ИсполнителиРабот.Исполнитель,
	         |	ШМ_ИсполнителиРабот.Должность";

	НачалоПериода = НачалоСмены();
	КонецПериода = ТекущаяДата();
	
	Если НачалоПериода = Неопределено Тогда  
		Сообщить("Нет открытых смен, обратитесь в IT или к начальству!"); 
		Возврат Неопределено
	КонецЕсли;
	
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	лЗапрос.УстановитьПараметр("КонецПериода", КонецПериода); 
	лЗапрос.УстановитьПараметр("ИмяКомпьютера", МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента().Наименование);

	лВыборка = лЗапрос.Выполнить().Выгрузить();  
	
	возврат лВыборка
	
КонецФункции	

&НаСервере
Функция ПолучитьШМ_Затраты()   
	//получаем значения затрат по данному рабочему месту за данную смену
	лТекст = "
		|ВЫБРАТЬ
		|	ШМ_Затраты.Период КАК Период,
		|	ШМ_Затраты.Затрата КАК Затрата,
		|	ШМ_Затраты.Сотрудник КАК Сотрудник,
		|	ШМ_Затраты.Профессия КАК Профессия,
		|	ШМ_Затраты.Сумма КАК Сумма
		|ИЗ
		|	РегистрСведений.ШМ_Бригады.СрезПоследних КАК ШМ_БригадыСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШМ_Затраты КАК ШМ_Затраты
		|		ПО (НАЧАЛОПЕРИОДА(ШМ_БригадыСрезПоследних.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(ШМ_Затраты.Период, ДЕНЬ))
		|			И (ШМ_Затраты.Сотрудник = ШМ_БригадыСрезПоследних.Сотрудник)
		|			И (ШМ_БригадыСрезПоследних.Должность = ШМ_Затраты.Профессия)
		|ГДЕ
		|	ШМ_БригадыСрезПоследних.ИмяКомпьютера = &ИмяКомпьютера
		|
		|СГРУППИРОВАТЬ ПО
		|	ШМ_Затраты.Период,
		|	ШМ_Затраты.Затрата,
		|	ШМ_Затраты.Сотрудник,
		|	ШМ_Затраты.Профессия,
		|	ШМ_Затраты.Сумма
		|";

	лЗапрос = Новый Запрос(лТекст);

	ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	лЗапрос.УстановитьПараметр("ИмяКомпьютера", ТекущееРабочееМесто.Наименование);


	лВыборка = лЗапрос.Выполнить().Выгрузить(); 
	
	//создаем таблицу значений для выгрузки наших затрат за смену 
	Таб = Новый ТаблицаЗначений;   
	
	Таб.Колонки.Добавить("Период");
    Таб.Колонки.Добавить("Затрата");
    Таб.Колонки.Добавить("Профессия");  
	Таб.Колонки.Добавить("Сотрудник");
    Таб.Колонки.Добавить("Сумма");    
	
	Для Каждого стр из лВыборка Цикл 
		Если НЕ ЗначениеЗаполнено(стр.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;  
		НоваяСтр = Таб.Добавить();
		НоваяСтр.Период = стр.Период;
		НоваяСтр.Затрата = стр.Затрата;
		НоваяСтр.Профессия = стр.Профессия;
		НоваяСтр.Сотрудник = стр.Сотрудник;
		НоваяСтр.Сумма = стр.Сумма;
	КонецЦикла;  
	
	Возврат Таб;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

