
&НаСервере
Процедура ПриСозданииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_Стойка.ТочкаПродажи КАК ТочкаПродажи,
		|	ШМ_Стойка.Продано КАК Продано,
		|	ШМ_Стойка.Номенклатура КАК Номенклатура,
		|	ШМ_Стойка.НоменклатураТекст КАК НоменклатураТекст,
		|	ШМ_Стойка.ДатаПоступления КАК ДатаПоступления,
		|	ШМ_Стойка.Идентификатор КАК Идентификатор,
		|	ШМ_Стойка.ДатаПродажи КАК ДатаПродажи,
		|	ШМ_Стойка.Комплект КАК Комплект,
		|	ШМ_Стойка.Цена КАК Цена,
		|	ШМ_Стойка.ЦенаПродажи КАК ЦенаПродажи,
		|	ШМ_Стойка.Артикул КАК Артикул,
		|	ШМ_Стойка.Радиус КАК Радиус,
		|	ШМ_Стойка.Ширина КАК Ширина,
		|	ШМ_Стойка.Высота КАК Высота,
		|	ШМ_Стойка.Бренд КАК Бренд,
		|	ШМ_Стойка.Зимняя КАК Зимняя,
		|	ШМ_Стойка.Год КАК Год,
		|	ШМ_Стойка.ПродалСотрудник КАК ПродалСотрудник,
		|	ШМ_Стойка.Сотрудник1 КАК Сотрудник1,
		|	ШМ_Стойка.Сотрудник2 КАК Сотрудник2,
		|	ШМ_Стойка.Сотрудник3 КАК Сотрудник3
		|ИЗ
		|	РегистрСведений.ШМ_Стойка КАК ШМ_Стойка
		|ГДЕ
		|	ШМ_Стойка.Продано = ЛОЖЬ";                 
	
	//ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	//ТочкаПродажи = СтрРазделить(ТекущееРабочееМесто, " ");
	//Запрос.УстановитьПараметр("ТочкаПродажи", ТочкаПродажи[0]);
	Выборка = Запрос.Выполнить().Выгрузить();
	Выборка.Сортировать("Радиус,Артикул");
	Таб.Загрузить(Выборка);
	Для Каждого СтрокаТаб Из Таб Цикл
		СтрокаТаб.Номенклатура=Справочники.Номенклатура.НайтиПоКоду("00-00000734");
	КонецЦикла;
	
	РежимПроданные=Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	ОКНаСервере();
	ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОКНаСервере()
	
	////НаборЗаписей = РегистрыСведений.ШМ_Стойка.СоздатьНаборЗаписей();
	////НаборЗаписей.Записать();
	//
	////НовыйНаборЗаписей = РегистрыСведений.ШМ_Стойка.СоздатьНаборЗаписей();
	////НовыйНаборЗаписей.Отбор.Номенклатура.Установить(Стр.Номенклатура, Истина);
	//Сч=0;
	//Для каждого стр из Таб Цикл
	//	Сч=Сч+1;
	//	//НоваяЗаписьНабора = НовыйНаборЗаписей.Добавить();
	//	НоваяЗаписьНабора = РегистрыСведений.ШМ_Стойка.СоздатьМенеджерЗаписи();
	//	НоваяЗаписьНабора.Номенклатура = Справочники.Номенклатура.НайтиПоКоду("00-00000734");
	//	НоваяЗаписьНабора.НоменклатураТекст = Стр.НоменклатураТекст;
	//	НоваяЗаписьНабора.ДатаПоступления = Стр.ДатаПоступления;
	//	НоваяЗаписьНабора.ДатаПродажи = Стр.ДатаПродажи;
	//	НоваяЗаписьНабора.Цена = Стр.Цена;
	//	НоваяЗаписьНабора.Сотрудник1 = Стр.Сотрудник1;
	//	НоваяЗаписьНабора.Сотрудник2 = Стр.Сотрудник2;
	//	НоваяЗаписьНабора.Сотрудник3 = Стр.Сотрудник3;
	//	НоваяЗаписьНабора.Продано = Стр.Продано;
	//	НоваяЗаписьНабора.ЦенаПродажи = Стр.ЦенаПродажи;
	//	НоваяЗаписьНабора.Комплект=Стр.Комплект;
	//	НоваяЗаписьНабора.Артикул=Стр.Артикул;
	//	НоваяЗаписьНабора.Радиус=Стр.Радиус;
	//	НоваяЗаписьНабора.Ширина=Стр.Ширина;
	//	НоваяЗаписьНабора.Высота=Стр.Высота;
	//	НоваяЗаписьНабора.Бренд=Стр.Бренд;
	//	НоваяЗаписьНабора.Зимняя=Стр.Зимняя;
	//	НоваяЗаписьНабора.Год=Стр.Год;
	//	Если СтрДлина(СокрЛП(Стр.Идентификатор))=0 Тогда
	//		//НоваяЗаписьНабора.Идентификатор=Строка(Стр.Номенклатура)+"_"+Строка(Стр.ДатаПоступления)+"_"+Строка(Сч);
	//		НоваяЗаписьНабора.Идентификатор=Строка(Стр.Номенклатура)+"_"+Строка(Стр.ДатаПоступления)+"_"+Строка(Сч)+"_"+Строка(ТекущаяДата());
	//	Иначе
	//		НоваяЗаписьНабора.Идентификатор=Стр.Идентификатор;
	//	КонецЕсли;
	//	НоваяЗаписьНабора.Записать(Истина);
	//			
	//КонецЦикла;

	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабПередНачаломИзменения(Элемент, Отказ)
	
	Если СтрДлина(Строка(СокрЛП(Элемент.ТекущиеДанные.Сотрудник1)))<>0 ИЛИ
		СтрДлина(Строка(СокрЛП(Элемент.ТекущиеДанные.Сотрудник2)))<>0 ИЛИ
		СтрДлина(Строка(СокрЛП(Элемент.ТекущиеДанные.Сотрудник3)))<>0 Тогда
		Отказ=Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПродатьСоСтойкиНаСервере(Идентификатор)
	
	Идентиф = Идентификатор;
		
	ВыбОтложенных = РегистрыСведений.ШМ_Стойка.Выбрать();
	Пока ВыбОтложенных.Следующий() Цикл
		
		Если Идентиф = ВыбОтложенных.Идентификатор Тогда							
			МенЗаписиОтл = ВыбОтложенных.ПолучитьМенеджерЗаписи();
			МенЗаписиОтл.Восстановить = Истина;
			МенЗаписиОтл.Записать();
		КонецЕсли;
		
	КонецЦикла; 
	
	
	
	//Для Каждого СтрокаТО Из ТО Цикл
	//	
	//СтрокаТаб=Таб.НайтиПоИдентификатору(СтрокаТО);
	//Идентиф=СтрокаТаб.Идентификатор;
	//	
	//ВыбОтложенных=РегистрыСведений.ШМ_Стойка.Выбрать();
	//Пока ВыбОтложенных.Следующий() Цикл
	//	
	//	Если Идентиф=ВыбОтложенных.Идентификатор Тогда
	//		//Если СокрЛП(НомерМашиныОтложенногоЧека)=СокрЛП(ВыбОтложенных.НомерМашины) Тогда
	//							
	//			МенЗаписиОтл=ВыбОтложенных.ПолучитьМенеджерЗаписи();
	//			МенЗаписиОтл.Восстановить=Истина;
	//			МенЗаписиОтл.Записать();
	//
	//		//КонецЕсли;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//КонецЦикла;
	//
	
КонецПроцедуры  

// ++ Безроднов 15.01.2025 открывает форму после оповещения
&НаКлиенте
Процедура ПослеЗакрытияВопроса(РезультатВопроса, ПараметрыЗаписи) Экспорт
	ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
	ЭтаФорма.Закрыть();                
КонецПроцедуры
//-- Безроднов 15.01.2025

&НаКлиенте
Процедура ПродатьСоСтойки(Команда)
	//ТО = Элементы.ФТаб.ТекущиеДанные; 
	
//++ Безроднов 15.01.2025 запрет продавать колеса с другой стойки  

	ТО = Элементы.ФТаб.ВыделенныеСтроки;
	ТекТочка = СтрРазделить(Строка(МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента()), " ", Ложь);
	
	Для Каждого СтрокаТО Из ТО Цикл
		
		СтрокаТаб = Таб.НайтиПоИдентификатору(СтрокаТО);
		
		Если СтрокаТаб.ТочкаПродажи = ТекТочка[0] тогда 
			ПродатьСоСтойкиНаСервере(СтрокаТаб.Идентификатор); 
			ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
			ЭтаФорма.Закрыть();
		Иначе  
			ТекстСообщения = СтрШаблон("Номенклатура %1 находится на другой точке. Её продажа не возможна!", 
										СтрокаТаб.Бренд);
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);
			ПоказатьВопрос(Оповещение, ТекстСообщения , РежимДиалогаВопрос.ОК);
		КонецЕсли;
		
	КонецЦикла;
	
//-- Безроднов 15.01.2025 	
	
	////ТО = Элементы.ФТаб.ТекущиеДанные;
	//ТО = Элементы.ФТаб.ВыделенныеСтроки;
	////Попытка
	////ДатаОтложеногоЧека= ТО.ДатаЧека;
	////НомерМашиныОтложенногоЧека=ТО.НомерМашины;
	////Исключение
	////КонецПопытки;
	////ОКНаСервере(ДатаОтложеногоЧека,НомерМашиныОтложенногоЧека);
	//
	////ПродатьСоСтойкиНаСервере(ТО.Идентификатор);
	//ПродатьСоСтойкиНаСервере(ТО);
	//ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
	//ЭтаФорма.Закрыть();	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Попытка
	ОткрытьФорму("Обработка.Шиномонтаж.Форма.Форма");
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ТабПередУдалением(Элемент, Отказ)
	Если Найти(ИмяПользователя(),"Директор")=0 Тогда
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СортировкаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СортировкаПриИзменении(Элемент)
	Если Элемент.ТекстРедактирования="Нет сортировки" Тогда
		Таб.Сортировать("Радиус");
	ИначеЕсли Элемент.ТекстРедактирования="Продано" Тогда
		Таб.Сортировать("Продано");
	КонецЕсли;
	СортировкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоказатьНепроданныеНаСервере()
	
	Таб.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_Стойка.Продано КАК Продано,
		|	ШМ_Стойка.Номенклатура КАК Номенклатура,
		|	ШМ_Стойка.НоменклатураТекст КАК НоменклатураТекст,
		|	ШМ_Стойка.ДатаПоступления КАК ДатаПоступления,
		|	ШМ_Стойка.Идентификатор КАК Идентификатор,
		|	ШМ_Стойка.ДатаПродажи КАК ДатаПродажи,
		|	ШМ_Стойка.Комплект КАК Комплект,
		|	ШМ_Стойка.Цена КАК Цена,
		|	ШМ_Стойка.ЦенаПродажи КАК ЦенаПродажи,
		|	ШМ_Стойка.Артикул КАК Артикул,
		|	ШМ_Стойка.Радиус КАК Радиус,
		|	ШМ_Стойка.Ширина КАК Ширина,
		|	ШМ_Стойка.Высота КАК Высота,
		|	ШМ_Стойка.Бренд КАК Бренд,
		|	ШМ_Стойка.Зимняя КАК Зимняя,
		|	ШМ_Стойка.Год КАК Год,
		|	ШМ_Стойка.ПродалСотрудник КАК ПродалСотрудник,
		|	ШМ_Стойка.Сотрудник1 КАК Сотрудник1,
		|	ШМ_Стойка.Сотрудник2 КАК Сотрудник2,
		|	ШМ_Стойка.Сотрудник3 КАК Сотрудник3,
		|	ШМ_Стойка.ТочкаПродажи КАК ТочкаПродажи
		|ИЗ
		|	РегистрСведений.ШМ_Стойка КАК ШМ_Стойка
		|ГДЕ
		|	ШМ_Стойка.Продано = ЛОЖЬ";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	Выборка.Сортировать("Радиус,Артикул");
	Таб.Загрузить(Выборка);
	Для Каждого СтрокаТаб Из Таб Цикл
		СтрокаТаб.Номенклатура=Справочники.Номенклатура.НайтиПоКоду("00-00000734");
	КонецЦикла;
	
	РежимПроданные=Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНепроданные(Команда)
	ПоказатьНепроданныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоказатьПроданныеНаСервере()
	
	Таб.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_Стойка.Продано КАК Продано,
		|	ШМ_Стойка.Номенклатура КАК Номенклатура,
		|	ШМ_Стойка.НоменклатураТекст КАК НоменклатураТекст,
		|	ШМ_Стойка.ДатаПоступления КАК ДатаПоступления,
		|	ШМ_Стойка.Идентификатор КАК Идентификатор,
		|	ШМ_Стойка.ДатаПродажи КАК ДатаПродажи,
		|	ШМ_Стойка.Комплект КАК Комплект,
		|	ШМ_Стойка.Цена КАК Цена,
		|	ШМ_Стойка.ЦенаПродажи КАК ЦенаПродажи,
		|	ШМ_Стойка.Артикул КАК Артикул,
		|	ШМ_Стойка.Радиус КАК Радиус,
		|	ШМ_Стойка.Ширина КАК Ширина,
		|	ШМ_Стойка.Высота КАК Высота,
		|	ШМ_Стойка.Бренд КАК Бренд,
		|	ШМ_Стойка.Зимняя КАК Зимняя,
		|	ШМ_Стойка.Год КАК Год,
		|	ШМ_Стойка.ПродалСотрудник КАК ПродалСотрудник,
		|	ШМ_Стойка.Сотрудник1 КАК Сотрудник1,
		|	ШМ_Стойка.Сотрудник2 КАК Сотрудник2,
		|	ШМ_Стойка.Сотрудник3 КАК Сотрудник3,
		|	ШМ_Стойка.ТочкаПродажи КАК ТочкаПродажи
		|ИЗ
		|	РегистрСведений.ШМ_Стойка КАК ШМ_Стойка
		|ГДЕ
		|	ШМ_Стойка.Продано = ИСТИНА";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	Выборка.Сортировать("Радиус,Артикул");
	Таб.Загрузить(Выборка);
	Для Каждого СтрокаТаб Из Таб Цикл
		СтрокаТаб.Номенклатура=Справочники.Номенклатура.НайтиПоКоду("00-00000734");
	КонецЦикла;
	
	РежимПроданные=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПроданные(Команда)
	ПоказатьПроданныеНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ФТабПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	КопированиеСтроки=Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ФТабПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если КопированиеСтроки Тогда
		Элемент.ТекущиеДанные.Идентификатор="";
		КопированиеСтроки=Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КопированиеСтроки = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	ОткрытьФормуМодально("РегистрСведений.ШМ_Стойка.ФормаЗаписи",,ЭтаФорма);
	ПоказатьНепроданныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	
	Коприуемыепараметры = Новый Структура;
	Коприуемыепараметры.Вставить("ДатаПоступления",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.ДатаПоступления);
	Коприуемыепараметры.Вставить("Цена",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Цена);
	Коприуемыепараметры.Вставить("Сотрудник1",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Сотрудник1);
	Коприуемыепараметры.Вставить("Сотрудник2",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Сотрудник2);
	Коприуемыепараметры.Вставить("Сотрудник3",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Сотрудник3);
	Коприуемыепараметры.Вставить("Комплект",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Комплект);
	Коприуемыепараметры.Вставить("Артикул",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Артикул);
	Коприуемыепараметры.Вставить("Радиус",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Радиус);
	Коприуемыепараметры.Вставить("Ширина",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Ширина);
	Коприуемыепараметры.Вставить("Высота",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Высота);
	Коприуемыепараметры.Вставить("Бренд",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Бренд);
	Коприуемыепараметры.Вставить("Зимняя",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Зимняя);
	Коприуемыепараметры.Вставить("Год",ЭтаФорма.Элементы.ФТаб.ТекущиеДанные.Год);
	ОткрытьФормуМодально("РегистрСведений.ШМ_Стойка.ФормаЗаписи",Коприуемыепараметры,ЭтаФорма);
	ПоказатьНепроданныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоискПоРазмеруНаСервере(ПоискШирина,ПоискВысота,ПоискРадиус) Экспорт
	
	Запрос = Новый Запрос;
	
	Если РежимПроданные=Ложь Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_Стойка.Продано КАК Продано,
		|	ШМ_Стойка.Номенклатура КАК Номенклатура,
		|	ШМ_Стойка.НоменклатураТекст КАК НоменклатураТекст,
		|	ШМ_Стойка.ДатаПоступления КАК ДатаПоступления,
		|	ШМ_Стойка.Идентификатор КАК Идентификатор,
		|	ШМ_Стойка.ДатаПродажи КАК ДатаПродажи,
		|	ШМ_Стойка.Комплект КАК Комплект,
		|	ШМ_Стойка.Цена КАК Цена,
		|	ШМ_Стойка.ЦенаПродажи КАК ЦенаПродажи,
		|	ШМ_Стойка.Артикул КАК Артикул,
		|	ШМ_Стойка.Радиус КАК Радиус,
		|	ШМ_Стойка.Ширина КАК Ширина,
		|	ШМ_Стойка.Высота КАК Высота,
		|	ШМ_Стойка.Бренд КАК Бренд,
		|	ШМ_Стойка.Зимняя КАК Зимняя,
		|	ШМ_Стойка.Год КАК Год,
		|	ШМ_Стойка.ПродалСотрудник КАК ПродалСотрудник,
		|	ШМ_Стойка.Сотрудник1 КАК Сотрудник1,
		|	ШМ_Стойка.Сотрудник2 КАК Сотрудник2,
		|	ШМ_Стойка.Сотрудник3 КАК Сотрудник3,
		|	ШМ_Стойка.ТочкаПродажи КАК ТочкаПродажи
		|ИЗ
		|	РегистрСведений.ШМ_Стойка КАК ШМ_Стойка
		|ГДЕ
		|	ШМ_Стойка.Продано = ЛОЖЬ";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШМ_Стойка.Продано КАК Продано,
		|	ШМ_Стойка.Номенклатура КАК Номенклатура,
		|	ШМ_Стойка.НоменклатураТекст КАК НоменклатураТекст,
		|	ШМ_Стойка.ДатаПоступления КАК ДатаПоступления,
		|	ШМ_Стойка.Идентификатор КАК Идентификатор,
		|	ШМ_Стойка.ДатаПродажи КАК ДатаПродажи,
		|	ШМ_Стойка.Комплект КАК Комплект,
		|	ШМ_Стойка.Цена КАК Цена,
		|	ШМ_Стойка.ЦенаПродажи КАК ЦенаПродажи,
		|	ШМ_Стойка.Артикул КАК Артикул,
		|	ШМ_Стойка.Радиус КАК Радиус,
		|	ШМ_Стойка.Ширина КАК Ширина,
		|	ШМ_Стойка.Высота КАК Высота,
		|	ШМ_Стойка.Бренд КАК Бренд,
		|	ШМ_Стойка.Зимняя КАК Зимняя,
		|	ШМ_Стойка.Год КАК Год,
		|	ШМ_Стойка.ПродалСотрудник КАК ПродалСотрудник,
		|	ШМ_Стойка.Сотрудник1 КАК Сотрудник1,
		|	ШМ_Стойка.Сотрудник2 КАК Сотрудник2,
		|	ШМ_Стойка.Сотрудник3 КАК Сотрудник3,
		|	ШМ_Стойка.ТочкаПродажи КАК ТочкаПродажи
		|ИЗ
		|	РегистрСведений.ШМ_Стойка КАК ШМ_Стойка
		|ГДЕ
		|	ШМ_Стойка.Продано = ИСТИНА";
	КонецЕсли;
		
	СписокУдаляемыхСтрок = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаВыборка Из Выборка Цикл
		Если СтрДлина(СокрЛП(ПоискШирина))>0 Тогда
			Если Число(СокрЛП(ПоискШирина))<>СтрокаВыборка.Ширина Тогда
				СписокУдаляемыхСтрок.Добавить(СтрокаВыборка);
				//Выборка.Удалить(СтрокаВыборка);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если СтрДлина(СокрЛП(ПоискВысота))>0 Тогда
			Если Число(СокрЛП(ПоискВысота))<>СтрокаВыборка.Высота Тогда
				СписокУдаляемыхСтрок.Добавить(СтрокаВыборка);
				//Выборка.Удалить(СтрокаВыборка);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если СтрДлина(СокрЛП(ПоискРадиус))>0 Тогда
			Если СокрЛП(ПоискРадиус)<>СтрокаВыборка.Радиус Тогда
				СписокУдаляемыхСтрок.Добавить(СтрокаВыборка);
				//Выборка.Удалить(СтрокаВыборка);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если (ПоискЗимняя<>Ложь) Или (ПоискЛетняя<>Ложь) Тогда
			Если ПоискЗимняя<>СтрокаВыборка.Зимняя Тогда
				СписокУдаляемыхСтрок.Добавить(СтрокаВыборка);
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Для Каждого ЭлСписокУдаляемыхСтрок Из СписокУдаляемыхСтрок Цикл
		Выборка.Удалить(ЭлСписокУдаляемыхСтрок.Значение);
	КонецЦикла;
	
	Выборка.Сортировать("Радиус,Артикул");
	Таб.Загрузить(Выборка);
	Для Каждого СтрокаТаб Из Таб Цикл
		СтрокаТаб.Номенклатура=Справочники.Номенклатура.НайтиПоКоду("00-00000734");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоРазмеруПриИзменении(Элемент) Экспорт
	
	ПоискШирина=Лев(СтрокаПоискаПоРазмеру,Найти(СтрокаПоискаПоРазмеру,"/")-1);
	СтрокаПоискаПоРазмеруРедактируемая=СтрЗаменить(СтрокаПоискаПоРазмеру,ПоискШирина+"/","");
	ПоискВысота=Лев(СтрокаПоискаПоРазмеруРедактируемая,Найти(СтрокаПоискаПоРазмеруРедактируемая,"/")-1);
	ПоискРадиус=СтрЗаменить(СтрокаПоискаПоРазмеруРедактируемая,ПоискВысота+"/","");
	
	ПоискПоРазмеруНаСервере(ПоискШирина,ПоискВысота,ПоискРадиус);
	
	//СтрокаПоискаПоРазмеру="";

КонецПроцедуры

&НаСервере
Процедура ПолеЗимаПриИзмененииНаСервере()
	
	Если ПоискЗимняя = Истина Тогда
		ПоискЛетняя = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеЗимаПриИзменении(Элемент)
	ПолеЗимаПриИзмененииНаСервере();
	ПоискПоРазмеруПриИзменении(Элемент);
КонецПроцедуры

&НаСервере
Процедура ПолеЛетоПриИзмененииНаСервере()
	
	Если ПоискЛетняя = Истина Тогда
		ПоискЗимняя = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеЛетоПриИзменении(Элемент)
	ПолеЛетоПриИзмененииНаСервере();
	ПоискПоРазмеруПриИзменении(Элемент);
КонецПроцедуры
