#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	СоставНабораКонстантФормы    = ОбщегоНазначенияУТ.ПолучитьСтруктуруНабораКонстант(НаборКонстант);
	ВнешниеРодительскиеКонстанты = НастройкиСистемыПовтИсп.ПолучитьСтруктуруРодительскихКонстант(СоставНабораКонстантФормы);
	РежимРаботы = Новый Структура;
	
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьВерсионированиеОбъектов");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьСинхронизациюДанных");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьНесколькоСкладов");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьАвтоматическиеСкидкиВПродажах");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьСоглашенияСКлиентами");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьПроизводство");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьУправлениеСделками");
	ВнешниеРодительскиеКонстанты.Вставить("ВестиСведенияДляДекларацийАлкоВРознице");
	ВнешниеРодительскиеКонстанты.Вставить("ИспользоватьОбособленноеОбеспечениеЗаказов");
	ВнешниеРодительскиеКонстанты.Вставить("ФормироватьФинансовыйРезультат");
	
	
	РежимРаботы.Вставить("СоставНабораКонстантФормы",    Новый ФиксированнаяСтруктура(СоставНабораКонстантФормы));
	РежимРаботы.Вставить("ВнешниеРодительскиеКонстанты", Новый ФиксированнаяСтруктура(ВнешниеРодительскиеКонстанты));
	
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске
	УправлениеПредприятием = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	КомплекснаяАвтоматизация = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	Элементы.ГруппаИспользоватьПередачуНаОтветственноеХранение.Видимость = УправлениеПредприятием
																			Или КомплекснаяАвтоматизация;
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
	НастройкиСистемыЛокализация.ПриСозданииНаСервере_Продажи(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗначенияПоУмолчанию = Новый Структура;

	НастройкиСистемыЛокализация.ПриЧтенииНаСервере_Продажи(ЭтаФорма);
	ОбщегоНазначенияУТКлиентСервер.СохранитьЗначенияДоИзменения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Обработчик оповещения формы.
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // такие событие не обрабатываются
	КонецЕсли;
	
	// Если это изменена константа, расположенная в другой форме и влияющая на значения констант этой формы,
	// то прочитаем значения констант и обновим элементы этой формы.
	Если РежимРаботы.ВнешниеРодительскиеКонстанты.Свойство(Источник)
	 ИЛИ (ТипЗнч(Параметр) = Тип("Структура")
	 		И ОбщегоНазначенияУТКлиентСервер.ПолучитьОбщиеКлючиСтруктур(
	 			Параметр, РежимРаботы.ВнешниеРодительскиеКонстанты).Количество() > 0) Тогда
		
		ЭтаФорма.Прочитать();
		УстановитьДоступность();
		
	КонецЕсли;
	
	Если Источник = ЭтаФорма Тогда
		Если Параметр.Свойство("Элемент") Тогда
			Подключаемый_ПриИзмененииРеквизита(Параметр.Элемент, Истина, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользованиеСоглашенийСКлиентамиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеСоглашенийСКлиентамиОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказыКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКорректировкиРеализацийПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСчетаНаОплатуКлиентамПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВариантОбособленияТоваровВПродажахПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВариантОбособленияТоваровВПродажахОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРеализациюПоНесколькимЗаказамПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказамПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомиссиюПриПродажахПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтгрузкуБезПереходаПраваСобственностиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаявкиНаВозвратТоваровОтКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЗаказовКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеСоглашенийСКлиентамиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРозничныеПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоКассККМПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НазначатьСкидкиПоКнопкеРасчетВЧекеККМПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейХраненияОтложенныхЧековПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НеЗакрыватьЗаказыКлиентовБезПолнойОплатыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтатусыРеализацийТоваровУслугПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРасширенныеВозможностиЗаказаКлиентаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПричиныОтменыЗаказовКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкладыВТабличнойЧастиДокументовПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьТоваровПриОценкеРентабельностиПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НормативныйВидЦенПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПриЗакрытииКассовойСменыОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПриЗакрытииКассовойСменыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗапретОтгрузкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодарочныеСертификатыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМобильноеПриложение1СЗаказыКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыОРасхожденияхПослеОтгрузкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыОРасхожденияхПослеПриемкиПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеЭтаповОплатыВПродажахПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВедетсяРаботаЧерезТорговыхПредставителейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеЗаданийТорговымПредставителямПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеЗаданийТорговымПредставителямОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДетализироватьЗаданияТорговымПредставителямПоНоменклатуреПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыРасхожденийПослеОтгрузкиПоПередачамХранителюПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАктыРасхожденийПослеПриемкиПоПоступлениямТоваровОтХранителяПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура РежимИсполненияЗаказовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизита(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВерсионированиеЗаказовКлиентов(Команда)
	
	Результат = Новый Структура;
	СохранитьЗначениеРеквизита("ВключитьВерсионированиеЗаказовКлиентов", Результат);
	
	Если Результат.Свойство("ВерсионированиеЗаказовКлиентовВключено") Тогда
		
		Если Результат.ВерсионированиеЗаказовКлиентовВключено Тогда
			Пояснение = НСтр("ru = 'Для заказов клиентов установлен вариант версионирования ""Версионировать при проведении""'");
		Иначе
			Пояснение = НСтр("ru = 'Для заказов клиентов версионирование уже было включено'");
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),, Пояснение, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВерсионированиеЗаявокНаВозврат(Команда)
	
	Результат = Новый Структура;
	СохранитьЗначениеРеквизита("ВключитьВерсионированиеЗаявокНаВозврат", Результат);
	
	Если Результат.Свойство("ВерсионированиеЗаявокНаВозвратВключено") Тогда
		
		Если Результат.ВерсионированиеЗаявокНаВозвратВключено Тогда
			Пояснение = НСтр("ru = 'Для заявок на возврат установлен вариант версионирования ""Версионировать при проведении""'");
		Иначе
			Пояснение = НСтр("ru = 'Дляаявок на возврат версионирование уже было включено'");
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),, Пояснение, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВерсионированиеСоглашений(Команда)
	
	Результат = Новый Структура;
	СохранитьЗначениеРеквизита("ВключитьВерсионированиеСоглашений", Результат);
	
	Если Результат.Свойство("ВерсионированиеСоглашенийВключено") Тогда
		
		Если Результат.ВерсионированиеСоглашенийВключено Тогда
			Пояснение = НСтр("ru = 'Для соглашений с клиентами установлен вариант версионирования ""Версионировать при проведении""'");
		Иначе
			Пояснение = НСтр("ru = 'Для соглашений с клиентами версионирование уже было включено'");
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),, Пояснение, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВерсионированиеКоммерческихПредложений(Команда)
	
	Результат = Новый Структура;
	СохранитьЗначениеРеквизита("ВключитьВерсионированиеКоммерческихПредложений", Результат);
	
	Если Результат.Свойство("ВерсионированиеКоммерческихПредложенийВключено") Тогда
		
		Если Результат.ВерсионированиеКоммерческихПредложенийВключено Тогда
			Пояснение = НСтр("ru = 'Для коммерческих предложений установлен вариант версионирования ""Версионировать при проведении""'");
		Иначе
			Пояснение = НСтр("ru = 'Для коммерческих предложений версионирование уже было включено'");
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Версионирование включено'"),, Пояснение, БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.ИсполнителиРолиСОбъектомАдресации", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			Неопределено, 
			ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЛогистическиеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.ИсполнителиРолиСОбъектомАдресации", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			Неопределено, 
			ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийФинансовыеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.ИсполнителиРолиСОбъектомАдресации", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			Неопределено, 
			ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЦеновыеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.ИсполнителиРолиСОбъектомАдресации", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			Неопределено, 
			ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийЗаявкиНаВозвратТоваровОтКлиентов")));
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовПродажи(Команда)
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.Форма.ИсполнителиРолиСОбъектомАдресации", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			Неопределено, 
			ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласующийКоммерческиеУсловияПродаж")));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиPushУведомленийМобильногоПриложения1СЗаказы(Команда)
	ОткрытьФорму("ПланОбмена.МобильноеПриложениеЗаказыКлиентов.Форма.ФормаГлавногоУзла",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокУстройствСМобильнымПриложением1CЗаказы(Команда)
	ПараметрыФормы = Новый Структура("НеОтображатьЭтотУзел", Истина);
	ОткрытьФорму("ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПродавцов(Команда)
	
	ОткрытьФорму("Справочник.НастройкиПродажДляПользователей.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиСинхронизацииРеквизитовОбъектов1СЗаказы(Команда)
	ОткрытьФорму("ПланОбмена.МобильноеПриложениеЗаказыКлиентов.Форма.ФормаНастройкиРеквизитовОбмена",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПечатиОбъектов(Команда)
	ОткрытьФорму("РегистрСведений.НастройкиПечатиОбъектов.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныЭтикетокИЦенников(Команда)
	ОткрытьФорму("Справочник.ШаблоныЭтикетокИЦенников.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяКолонкаПечатныхФормДокументовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяКолонкаПечатныхФормДокументовОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьШтрихкодированиеПечатныхФормОбъектовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеДляПечатиВидовНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеСкидокВПечатныхФормахДокументовПродажи(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеСкидокВПечатныхФормахДокументовПродажиОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина, ВнешнееИзменение = Ложь)
	
	Если НЕ ВнешнееИзменение Тогда
		НастройкиСистемыЛокализацияКлиент.ПриИзмененииРеквизита_Продажи(
			Элемент,
			ЭтаФорма);
	КонецЕсли;
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаНавигационнойСсылкиФормы(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиСистемыЛокализацияКлиент.ОбработкаНавигационнойСсылкиФормы_Продажи(Элемент,
		НавигационнаяСсылкаФорматированнойСтроки, 
		СтандартнаяОбработка,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным,  Новый Структура);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
		Если РеквизитПутьКДанным = "ВключитьВерсионированиеЗаказовКлиентов"
			ИЛИ РеквизитПутьКДанным = "ВключитьВерсионированиеЗаявокНаВозврат"
			ИЛИ РеквизитПутьКДанным = "ВключитьВерсионированиеСоглашений"
			ИЛИ РеквизитПутьКДанным = "ВключитьВерсионированиеКоммерческихПредложений" Тогда
			
			НаборКонстант.ИспользоватьВерсионированиеОбъектов = Истина;
			КонстантаИмя = "ИспользоватьВерсионированиеОбъектов";
			
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "РежимИсполненияЗаказов" Тогда
			
			Если РежимИсполненияЗаказов = 1 Тогда
				Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Установить(Истина);
				Константы.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента.Установить(Ложь);
				НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента = Истина;
				НаборКонстант.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента = Ложь;
			ИначеЕсли РежимИсполненияЗаказов = 2 Тогда
				Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Установить(Истина);
				Константы.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента.Установить(Истина);
				НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента = Истина;
				НаборКонстант.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента = Истина;
			Иначе
				Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Установить(Ложь);
				Константы.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента.Установить(Ложь);
				НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента = Ложь;
				НаборКонстант.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента = Ложь;
			КонецЕсли;
			КонстантаИмя = "ИспользоватьРасширенныеВозможностиЗаказаКлиента";
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		Если НастройкиСистемыПовтИсп.ЕстьПодчиненныеКонстанты(КонстантаИмя, КонстантаЗначение) Тогда
			ЭтаФорма.Прочитать();
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "ВключитьВерсионированиеЗаказовКлиентов" Тогда
		
		ОбъектыДляВерсионирования = Новый Соответствие;
		Если НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов Тогда
			ОбъектыДляВерсионирования.Вставить("Документ.ЗаказКлиента", "ВерсионироватьПриПроведении");
		КонецЕсли;
		
		Результат.Вставить("ВерсионированиеЗаказовКлиентовВключено",
			ОбщегоНазначенияУТ.ВключитьВерсионированиеОбъектов(ОбъектыДляВерсионирования));
		УстановитьДоступностьВерсионированияЗаказовКлиентов();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "ВключитьВерсионированиеЗаявокНаВозврат" Тогда
		
		ОбъектыДляВерсионирования = Новый Соответствие;
		Если НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов Тогда
			ОбъектыДляВерсионирования.Вставить("Документ.ЗаявкаНаВозвратТоваровОтКлиента", "ВерсионироватьПриПроведении");
		КонецЕсли;
		
		Результат.Вставить("ВерсионированиеЗаявокНаВозвратВключено",
			ОбщегоНазначенияУТ.ВключитьВерсионированиеОбъектов(ОбъектыДляВерсионирования));
		УстановитьДоступностьВерсионированияЗаявокНаВозврат();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "ВключитьВерсионированиеСоглашений" Тогда
		
		ОбъектыДляВерсионирования = Новый Соответствие;
		Если НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами Тогда
			ОбъектыДляВерсионирования.Вставить("Справочник.СоглашенияСКлиентами", "ВерсионироватьПриЗаписи");
		КонецЕсли;
		
		Результат.Вставить("ВерсионированиеСоглашенийВключено",
			ОбщегоНазначенияУТ.ВключитьВерсионированиеОбъектов(ОбъектыДляВерсионирования));
		УстановитьДоступностьВерсионированияСоглашений();
	КонецЕсли;
		
	НастройкиСистемыЛокализация.СохранитьЗначениеРеквизита_Продажи(КонстантаИмя, КонстантаЗначение, ЭтаФорма);
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоСкладов;
		
		Элементы.ИспользоватьСкладыВТабличнойЧастиДокументовПродажи.Доступность = ЗначениеКонстанты;
		Элементы.ГруппаКомментарийИспользоватьСкладыВТабличнойЧастиДокументовПродажи.Видимость = НЕ ЗначениеКонстанты;
		Элементы.ГруппаСтраницыКомментарийСтоимостьТоваровПриОценкеРентабельностиПродажи.ТекущаяСтраница = Элементы.ГруппаКомментарийСтоимостьТоваровПриОценкеРентабельностиПродажи1;
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоВидовЦен;
		
		Элементы.СтоимостьТоваровПриОценкеРентабельностиПродажи1.Доступность = ЗначениеКонстанты;
		Элементы.СтоимостьТоваровПриОценкеРентабельностиПродажи2.Доступность = ЗначениеКонстанты;
		Элементы.ГруппаКомментарийСтоимостьТоваровПриОценкеРентабельностиПродажи.Видимость = Не ЗначениеКонстанты;
		
		ЗапрещеноОтключатьКоммерческиеПредложения = НаборКонстант.ИспользоватьУправлениеСделками;
		
		Элементы.ИспользоватьКоммерческиеПредложенияКлиентам.Доступность = НЕ ЗапрещеноОтключатьКоммерческиеПредложения;
		Элементы.КомментарийИспользоватьКоммерческиеПредложенияКлиентамОтключение.Видимость = ЗапрещеноОтключатьКоммерческиеПредложения;
		
		Элементы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Доступность =
			Константы.ИспользоватьАвтоматическиеСкидкиВПродажах.Получить()
			ИЛИ Константы.ИспользоватьРучныеСкидкиВПродажах.Получить();
		
		Элементы.ВариантОбособленияТоваровВПродажах.Видимость = Константы.ИспользоватьОбособленноеОбеспечениеЗаказов.Получить()
			И Не ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользованиеСоглашенийСКлиентами" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ИспользоватьСоглашенияСКлиентами;
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ИспользованиеСоглашенийСКлиентами,
			НаборКонстант.ИспользованиеСоглашенийСКлиентами <> Перечисления.ИспользованиеСоглашенийСКлиентами.НеИспользовать);
		Элементы.ИспользоватьСогласованиеСоглашенийСКлиентами.Доступность = ЗначениеКонстанты;
		Элементы.ИспользоватьКомиссиюПриПродажах.Доступность              = ЗначениеКонстанты;
		Элементы.ГруппаКомментарийИспользоватьКомиссиюПриПродажах.Видимость = Не ЗначениеКонстанты;
		
	КонецЕсли;
		
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаказыКлиентов" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты 						   = НаборКонстант.ИспользоватьЗаказыКлиентов;
		ЕстьОбменыСФормированиемДоговоровПоЗаказам =
			Константы.ИспользоватьСинхронизациюДанных.Получить() И ОбменДаннымиУТУП.ЕстьОбменыСФормированиемДоговоровПоЗаказам();
		
		Элементы.ИспользоватьРеализациюПоНесколькимЗаказам.Доступность 				  = ЗначениеКонстанты И НЕ ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		Элементы.ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам.Доступность 	  = ЗначениеКонстанты И НЕ ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		Элементы.ГруппаКомментарийИспользоватьРеализациюПоНесколькимЗаказам.Видимость = ЕстьОбменыСФормированиемДоговоровПоЗаказам;
	
		Использовать1СЗаказы = НаборКонстант.ИспользоватьМобильноеПриложение1СЗаказыКлиентов;
		ВедетсяРаботаЧерезТорговыхПредставителей = НаборКонстант.ВедетсяРаботаЧерезТорговыхПредставителей;
		
		Элементы.ИспользоватьЗаказыКлиентов.Доступность = 
			НЕ Использовать1СЗаказы И НЕ ВедетсяРаботаЧерезТорговыхПредставителей;
		Элементы.ГруппаКомментарийИспользоватьЗаказы.Видимость = ЗначениеКонстанты И (Использовать1СЗаказы ИЛИ ВедетсяРаботаЧерезТорговыхПредставителей);
		КомментарийИспользоватьЗаказы = НСтр("ru='Невозможно отключение заказов клиентов, так как'")
			+ ?(Использовать1СЗаказы И ВедетсяРаботаЧерезТорговыхПредставителей, ": ", " ")
			+ ?(Использовать1СЗаказы, НСтр("ru='включена синхронизация данных с мобильным приложением ""1С:Заказы""'"), "")
			+ ?(Использовать1СЗаказы И ВедетсяРаботаЧерезТорговыхПредставителей, ", ", ?(Использовать1СЗаказы,".", ""))
			+ ?(ВедетсяРаботаЧерезТорговыхПредставителей, НСтр("ru='включено ведение работы через торговых представителей.'"), "");
			
		Элементы.КомментарийИспользоватьЗаказы.Заголовок = КомментарийИспользоватьЗаказы;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаказыКлиентов"
	 ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов"
	 ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента" 
	 ИЛИ РеквизитПутьКДанным = "РежимИсполненияЗаказов"
	 ИЛИ РеквизитПутьКДанным = "" Тогда
	 
		ИспользоватьРасширенныеВозможностиЗаказаКлиента = НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента;
		
		Элементы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Доступность          = НаборКонстант.ИспользоватьЗаказыКлиентов 
																						ИЛИ НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;
		Элементы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Доступность = ИспользоватьРасширенныеВозможностиЗаказаКлиента 
																						И НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;
		Элементы.ИспользоватьСогласованиеЗаказовКлиентов.Доступность    			  = ИспользоватьРасширенныеВозможностиЗаказаКлиента
																						И НаборКонстант.ИспользоватьЗаказыКлиентов;
		
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Доступность				  = ИспользоватьРасширенныеВозможностиЗаказаКлиента;
		Элементы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Доступность				  = ИспользоватьРасширенныеВозможностиЗаказаКлиента;
		
		Элементы.ВариантОбособленияТоваровВПродажах.Доступность =
			(НаборКонстант.ИспользоватьЗаказыКлиентов Или НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов)
			И Константы.ФормироватьФинансовыйРезультат.Получить();
		
		Элементы.ИспользоватьПричиныОтменыЗаказовКлиентов.Доступность = ИспользоватьРасширенныеВозможностиЗаказаКлиента;
		Элементы.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента.Доступность = ИспользоватьРасширенныеВозможностиЗаказаКлиента;
		
		РежимИсполненияЗаказов = Число(НаборКонстант.ИспользоватьРасширенныеВозможностиЗаказаКлиента) + Число(НаборКонстант.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента);
		
		РежимИсполненияЗаказовДоступность = НаборКонстант.ИспользоватьЗаказыКлиентов ИЛИ НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов;
		Элементы.РежимИсполненияЗаказов.Доступность  = РежимИсполненияЗаказовДоступность;
		Элементы.РежимИсполненияЗаказов1.Доступность = РежимИсполненияЗаказовДоступность;
		Элементы.РежимИсполненияЗаказов2.Доступность = РежимИсполненияЗаказовДоступность;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов"
	 ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами"
	 ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов" ИЛИ РеквизитПутьКДанным = "" Тогда
		
	 	ДоступностьРеквизитовСогласования = 
	 		НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов 
			ИЛИ НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами
			ИЛИ НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		
		Элементы.НазначитьОтветственныхЗаСогласованиеЛогистическихУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеФинансовыхУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеЦеновыхУсловийДокументовПродажи.Доступность 		= ДоступностьРеквизитовСогласования;
		Элементы.НазначитьОтветственныхЗаСогласованиеКоммерческихУсловийДокументовПродажи.Доступность 	= ДоступностьРеквизитовСогласования;
				
		Элементы.НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат.Доступность = НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьВерсионированиеОбъектов" ИЛИ РеквизитПутьКДанным = "" Тогда
		УстановитьДоступностьВерсионированияДокументовПродажи();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.НазначитьОтветственныхЗаСогласованиеЗаявокНаВозврат.Доступность = НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользованиеСоглашенийСКлиентами"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами" Тогда
		УстановитьДоступностьВерсионированияСоглашений();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаказыКлиентов"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов" Тогда
		УстановитьДоступностьВерсионированияЗаказовКлиентов();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов" 
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов" Тогда
		УстановитьДоступностьВерсионированияЗаявокНаВозврат();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьРозничныеПродажи" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ИспользоватьРозничныеПродажи;
		
		Элементы.ОперацияПриЗакрытииКассовойСмены.Доступность      = ЗначениеКонстанты;
		Элементы.ИспользоватьПодарочныеСертификаты.Доступность     = ЗначениеКонстанты;
		Элементы.КоличествоДнейХраненияОтложенныхЧеков.Доступность = ЗначениеКонстанты;
		Элементы.ИспользоватьНесколькоКассККМ.Доступность          = ЗначениеКонстанты;
		Элементы.КоличествоДнейХраненияЗаархивированныхЧеков.Доступность = (ЗначениеКонстанты И НаборКонстант.ОперацияПриЗакрытииКассовойСмены = Перечисления.ОперацииПриЗакрытииКассовойСмены.АрхивацияЧековККМ);
		Элементы.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ.Доступность       = (ЗначениеКонстанты И Константы.ИспользоватьАвтоматическиеСкидкиВПродажах.Получить());
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.СтоимостьТоваровПриОценкеРентабельностиПродажи" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.СтоимостьТоваровПриОценкеРентабельностиПродажи;
		Если ЗначениеКонстанты = Перечисления.СтоимостьТоваровПриОценкеРентабельностиПродажи.ПоРасчетнойСебестоимости Тогда
			Элементы.ГруппаСтраницыНормативныйВидЦен.ТекущаяСтраница = Элементы.ГруппаНормативныйВидЦенГруппаПоРасчетнойСебестоимости;
		ИначеЕсли ЗначениеКонстанты = Перечисления.СтоимостьТоваровПриОценкеРентабельностиПродажи.ПоНормативномуВидуЦен Тогда
			Элементы.ГруппаСтраницыНормативныйВидЦен.ТекущаяСтраница = Элементы.ГруппаНормативныйВидЦенПоНормативномуВидуЦен;
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ОперацияПриЗакрытииКассовойСмены" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ОперацияПриЗакрытииКассовойСмены;
		ИспользоватьРозничныеПродажи = НаборКонстант.ИспользоватьРозничныеПродажи;
		Элементы.КоличествоДнейХраненияЗаархивированныхЧеков.Доступность = (ЗначениеКонстанты = Перечисления.ОперацииПриЗакрытииКассовойСмены.АрхивацияЧековККМ И ИспользоватьРозничныеПродажи);
	КонецЕсли;
		
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьМобильноеПриложение1СЗаказыКлиентов" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьМобильноеПриложение1СЗаказыКлиентов;
		Элементы.ОткрытьСписокУстройствСМобильнымПриложением1СЗаказы.Доступность = ЗначениеКонстанты;
		Элементы.ОткрытьНастройкиPushУведомленийМобильногоПриложения1СЗаказы.Доступность = ЗначениеКонстанты;
		Элементы.ОткрытьНастройкиСинхронизацииРеквизитовОбъектов1СЗаказы.Доступность = ЗначениеКонстанты;
		УстановитьДоступность("НаборКонстант.ИспользоватьЗаказыКлиентов");
	КонецЕсли;
	
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСтатусыРеализацийТоваровУслуг" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьСтатусыРеализацийТоваровУслуг;
		Элементы.ИспользоватьОтгрузкуБезПереходаПраваСобственности.Доступность = ЗначениеКонстанты;
		Элементы.ГруппаКомментарийИспользоватьОтгрузкуБезПереходаПраваСобственности.Видимость = Не ЗначениеКонстанты;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ВедетсяРаботаЧерезТорговыхПредставителей" ИЛИ РеквизитПутьКДанным = "" Тогда
		УстановитьДоступность("НаборКонстант.ИспользоватьЗаказыКлиентов");
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользованиеЗаданийТорговымПредставителям" ИЛИ РеквизитПутьКДанным = "" Тогда
		УстановитьДоступностьИспользованияЗаданий();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "РежимИсполненияЗаказов" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.РежимИсполненияЗаказов,  РежимИсполненияЗаказов > 0);
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.РежимИсполненияЗаказов1, РежимИсполненияЗаказов > 1)
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользованиеЭтаповОплатыВПродажах" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользованиеЭтаповОплатыВПродажах;
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.УпрощеннаяСхема, ЗначениеКонстанты <> Перечисления.ИспользованиеЭтаповОплаты.УпрощеннаяСхема);
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.РасширеннаяНастройка, ЗначениеКонстанты = Перечисления.ИспользованиеЭтаповОплаты.ГрафикиОплаты);
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоКассККМ" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоКассККМ;
		
		Если ЗначениеКонстанты Тогда
			Элементы.ГруппаСтраницыКассыККМ.ТекущаяСтраница = Элементы.ГруппаПояснениеНесколькоКассККМ;
		Иначе
			Элементы.ГруппаСтраницыКассыККМ.ТекущаяСтраница = Элементы.ГруппаПояснениеОднаКассаККМ;
		КонецЕсли;
		
	КонецЕсли;
	
	
	ОбменДаннымиУТУП.УстановитьДоступностьНастроекУзлаИнформационнойБазы(ЭтаФорма);
	
	ОтображениеПредупрежденияПриРедактировании(РеквизитПутьКДанным);
	
	НастройкиСистемыЛокализация.УстановитьДоступность_Продажи(РеквизитПутьКДанным, ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ОтображениеПредупрежденияПриРедактировании(РеквизитПутьКДанным)
	
	СтруктураКонстант = Новый Структура(
		"ИспользоватьДоговорыСКлиентами,
		|ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов,
		|ИспользоватьЗаказыКлиентов,
		|ИспользоватьКомиссиюПриПродажах,
		|ИспользоватьЗапретОтгрузки,
		|ИспользоватьПодарочныеСертификаты,
		|ИспользоватьРасширенныеВозможностиЗаказаКлиента,
		|ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента,
		|ИспользоватьСтатусыРеализацийТоваровУслуг,
		|ИспользоватьОтгрузкуБезПереходаПраваСобственности");
	
	НастройкиСистемыЛокализация.ОтображениеПредупрежденияПриРедактировании_Продажи(СтруктураКонстант);
	
	Для Каждого КлючИЗначение Из СтруктураКонстант Цикл
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы[КлючИЗначение.Ключ],
			НаборКонстант[КлючИЗначение.Ключ]);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочие

&НаСервере
Процедура УстановитьДоступностьВерсионированияДокументовПродажи()
	УстановитьДоступностьВерсионированияЗаказовКлиентов();
	УстановитьДоступностьВерсионированияЗаявокНаВозврат();
	УстановитьДоступностьВерсионированияСоглашений();
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВерсионированияЗаказовКлиентов()
	
	ИспользоватьВерсионированиеОбъекта = ОбщегоНазначенияУТ.ИспользоватьВерсионированиеОбъекта("Документ.ЗаказКлиента");
	Элементы.ВключитьВерсионированиеЗаказовКлиентов.Доступность =
		НаборКонстант.ИспользоватьСогласованиеЗаказовКлиентов
		И (НЕ НаборКонстант.ИспользоватьВерсионированиеОбъектов
			ИЛИ НЕ ИспользоватьВерсионированиеОбъекта);
			
	Если НЕ ИспользоватьВерсионированиеОбъекта Тогда
		Элементы.ВключитьВерсионированиеЗаказовКлиентов.Заголовок = НСтр("ru='Включить версионирование'");
	Иначе
		Элементы.ВключитьВерсионированиеЗаказовКлиентов.Заголовок = НСтр("ru='Версионирование включено'");
		Элементы.ВключитьВерсионированиеЗаказовКлиентов.Шрифт = Новый Шрифт();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВерсионированияЗаявокНаВозврат()
	
	ИспользоватьВерсионированиеОбъекта = ОбщегоНазначенияУТ.ИспользоватьВерсионированиеОбъекта("Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	Элементы.ВключитьВерсионированиеЗаявокНаВозврат.Доступность =
		НаборКонстант.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов
		И (НЕ НаборКонстант.ИспользоватьВерсионированиеОбъектов
			ИЛИ НЕ ИспользоватьВерсионированиеОбъекта);
			
	Если НЕ ИспользоватьВерсионированиеОбъекта Тогда
		Элементы.ВключитьВерсионированиеЗаявокНаВозврат.Заголовок = НСтр("ru='Включить версионирование'");
	Иначе
		Элементы.ВключитьВерсионированиеЗаявокНаВозврат.Заголовок = НСтр("ru='Версионирование включено'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВерсионированияСоглашений()
	
	ИспользоватьВерсионированиеОбъекта = ОбщегоНазначенияУТ.ИспользоватьВерсионированиеОбъекта("Справочник.СоглашенияСКлиентами");
	Элементы.ВключитьВерсионированиеСоглашений.Доступность =
		НаборКонстант.ИспользоватьСогласованиеСоглашенийСКлиентами
		И (НЕ НаборКонстант.ИспользоватьВерсионированиеОбъектов
			ИЛИ НЕ ИспользоватьВерсионированиеОбъекта);
			
	Если НЕ ИспользоватьВерсионированиеОбъекта Тогда
		Элементы.ВключитьВерсионированиеСоглашений.Заголовок = НСтр("ru='Включить версионирование'");
	Иначе
		Элементы.ВключитьВерсионированиеСоглашений.Заголовок = НСтр("ru='Версионирование включено'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИспользованияЗаданий()
	
	Элементы.ДетализироватьЗаданияТорговымПредставителямПоНоменклатуре.Доступность =
		НаборКонстант.ИспользованиеЗаданийТорговымПредставителям <> Перечисления.ИспользованиеЗаданийТорговымПредставителям.НеИспользуются;
			
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПродажуАгентскихУслугПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкаОМобильномПриложенииНажатие(Элемент)
	ПараметрыФормы = Новый Структура("ИмяМакетаОписания, НазваниеПриложения", 
		"ОписаниеМобильногоПриложенияЗаказы", НСтр("ru= '1С:Заказы'"));
	ОткрытьФорму("ОбщаяФорма.ОписаниеМобильногоПриложения", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
